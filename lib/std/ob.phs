/*!
 * This file is part of the PHS Standard Library
 * Copyright (c) 2014 The PHS Team
 * 
 * All rights reserved.
 * 
 * This library is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published 
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library.  If not, see <http://www.gnu.org/licenses/>.
 */

module std::ob;

use std::io::OStream;

public extern __global__ fn ob_clean;
public extern __global__ fn ob_end_clean;
public extern __global__ fn ob_end_flush;
public extern __global__ fn ob_flush;
public extern __global__ fn ob_get_clean;
public extern __global__ fn ob_get_contents;
public extern __global__ fn ob_get_flush;
public extern __global__ fn ob_get_length;
public extern __global__ fn ob_get_level;
public extern __global__ fn ob_get_status;
public extern __global__ fn ob_gzhandler;
public extern __global__ fn ob_implicit_flush;
public extern __global__ fn ob_list_handlers;
public extern __global__ fn ob_start;

public extern __global__ const PHP_OUTPUT_HANDLER_START;
public extern __global__ const PHP_OUTPUT_HANDLER_WRITE;
public extern __global__ const PHP_OUTPUT_HANDLER_FLUSH;
public extern __global__ const PHP_OUTPUT_HANDLER_CLEAN;
public extern __global__ const PHP_OUTPUT_HANDLER_FINAL;
public extern __global__ const PHP_OUTPUT_HANDLER_CONT;
public extern __global__ const PHP_OUTPUT_HANDLER_END;
public extern __global__ const PHP_OUTPUT_HANDLER_CLEANABLE;
public extern __global__ const PHP_OUTPUT_HANDLER_FLUSHABLE;
public extern __global__ const PHP_OUTPUT_HANDLER_REMOVABLE;
public extern __global__ const PHP_OUTPUT_HANDLER_STDFLAGS;

public use self::ob_clean as clean;
public use self::ob_end_clean as end_clean;
public use self::ob_end_flush as end_flush;
public use self::ob_flush as flush;
public use self::ob_get_clean as get_clean;
public use self::ob_get_contents as get_contents;
public use self::ob_get_flush as get_flush;
public use self::ob_get_length as get_length;
public use self::ob_get_level as get_level;
public use self::ob_get_status as get_status;
public use self::ob_gzhandler as gzhandler;
public use self::ob_implicit_flush as implicit_flush;
public use self::ob_list_handlers as list_handlers;
public use self::ob_start as start;

public fn stream(OStream out, int cs = 0, 
                 int flags = PHP_OUTPUT_HANDLER_STDFLAGS) =>
  start(fn (data) { out.write(data); }, cs, flags);
