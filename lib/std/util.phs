module std::util {
  private extern __global__ fn is_array;
  private extern __global__ fn is_object;
  private extern __global__ fn method_exists;
  
  fn iter(x) {
    if (is_object(x) && method_exists(x, 'iter'))
      return x.iter();
    
    if (is_array(x)) 
      return to_dict_or_list(x).iter();
    
    return [ x ].iter();
  }
  
  fn iter_as_list(Iterator it) {
    let l = [];
    for (i in it) l.push(i);
    return l;
  }
  
  fn to_dict_or_list(x) {
    let t = 0;
    for (k: v in x) 
      if (k is string) {
        t = 1;
        break;
      }
    if (t == 1)
      return Dict.from(x);
    return List.from(x);
  }
  
  extern class Map;
  extern class Set;
}

// global exports
public use std::util { Map, Set };
