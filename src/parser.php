<?php

/**
 * this parser-skeleton is based on the awesome
 * work of nikic (https://github.com/nikic)
 * with some extensions (error-recovery and location-tracking) 
 */

/**
 * This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *   the grammar file gen/parser.y
 *   the parser skeleton gen/kymacc.php.parser
 *
 * The skeleton for this parser was written by Moriyoshi Koizumi and is based on
 * the work by Masato Bito and is in the PUBLIC DOMAIN.
 */

namespace phs;


const YYERRTOK = 256;
const T_ARR = 257;
const T_YIELD = 258;
const T_APLUS = 259;
const T_AMINUS = 260;
const T_AMUL = 261;
const T_ADIV = 262;
const T_AMOD = 263;
const T_APOW = 264;
const T_ACONCAT = 265;
const T_ABIT_OR = 266;
const T_ABIT_AND = 267;
const T_ABIT_XOR = 268;
const T_ABOOL_OR = 269;
const T_ABOOL_AND = 270;
const T_ABOOL_XOR = 271;
const T_ASHIFT_L = 272;
const T_ASHIFT_R = 273;
const T_AREF = 274;
const T_RANGE = 275;
const T_BOOL_OR = 276;
const T_BOOL_XOR = 277;
const T_BOOL_AND = 278;
const T_EQ = 279;
const T_NEQ = 280;
const T_IN = 281;
const T_NIN = 282;
const T_IS = 283;
const T_NIS = 284;
const T_GTE = 285;
const T_LTE = 286;
const T_SL = 287;
const T_SR = 288;
const T_AS = 289;
const T_REST = 290;
const T_DEL = 291;
const T_INC = 292;
const T_DEC = 293;
const T_POW = 294;
const T_NEW = 295;
const T_DDDOT = 296;
const T_FN = 297;
const T_LET = 298;
const T_USE = 299;
const T_ENUM = 300;
const T_CLASS = 301;
const T_TRAIT = 302;
const T_IFACE = 303;
const T_MODULE = 304;
const T_REQUIRE = 305;
const T_IDENT = 306;
const T_LNUM = 307;
const T_DNUM = 308;
const T_SNUM = 309;
const T_STRING = 310;
const T_REGEXP = 311;
const T_TRUE = 312;
const T_FALSE = 313;
const T_NULL = 314;
const T_THIS = 315;
const T_SUPER = 316;
const T_SELF = 317;
const T_GET = 318;
const T_SET = 319;
const T_DO = 320;
const T_IF = 321;
const T_ELIF = 322;
const T_ELSE = 323;
const T_FOR = 324;
const T_TRY = 325;
const T_GOTO = 326;
const T_BREAK = 327;
const T_CONTINUE = 328;
const T_PRINT = 329;
const T_THROW = 330;
const T_CATCH = 331;
const T_FINALLY = 332;
const T_WHILE = 333;
const T_ASSERT = 334;
const T_SWITCH = 335;
const T_CASE = 336;
const T_DEFAULT = 337;
const T_RETURN = 338;
const T_CONST = 339;
const T_FINAL = 340;
const T_GLOBAL = 341;
const T_STATIC = 342;
const T_EXTERN = 343;
const T_PUBLIC = 344;
const T_PRIVATE = 345;
const T_PROTECTED = 346;
const T_SEALED = 347;
const T_INLINE = 348;
const T_UNSAFE = 349;
const T_NATIVE = 350;
const T_HIDDEN = 351;
const T_REWRITE = 352;
const T_PHP = 353;
const T_TEST = 354;
const T_NL = 355;
const T_SUBST = 356;
const T_TINT = 357;
const T_TBOOL = 358;
const T_TFLOAT = 359;
const T_TSTR = 360;
const T_TTUP = 361;
const T_TDEC = 362;
const T_TOBJ = 363;
const T_TCALLABLE = 364;
const T_CDIR = 365;
const T_CFILE = 366;
const T_CLINE = 367;
const T_CCOLN = 368;
const T_CFN = 369;
const T_CCLASS = 370;
const T_CTRAIT = 371;
const T_CMETHOD = 372;
const T_CMODULE = 373;
const T_INVL = 374;
const T_END = 375;

require_once 'ast.php';
require_once 'lexer.php';

use phs\ast;
use phs\ast\Node;

class Parser
{
  const TOKEN_NONE    = -1;
  const TOKEN_INVALID = 144;

  const TOKEN_MAP_SIZE = 376;

  const YYLAST       = 1900;
  const YY2TBLSTATE  = 627;
  const YYGLAST      = 957;
  const YYNLSTATES   = 727;
  const YYINTERRTOK  = 1;
  const YYUNEXPECTED = 32767;
  const YYDEFAULT    = -32766;
  
  // @var Session
  private $sess;

  /* @var array Map of token ids to their respective names */
  private static $terminals = [
    "EOF",
    "error",
    "','",
    "T_ARR",
    "T_YIELD",
    "T_APLUS",
    "T_AMINUS",
    "T_AMUL",
    "T_ADIV",
    "T_AMOD",
    "T_APOW",
    "T_ACONCAT",
    "T_ABIT_OR",
    "T_ABIT_AND",
    "T_ABIT_XOR",
    "T_ABOOL_OR",
    "T_ABOOL_AND",
    "T_ABOOL_XOR",
    "T_ASHIFT_L",
    "T_ASHIFT_R",
    "T_AREF",
    "'='",
    "T_RANGE",
    "'?'",
    "':'",
    "T_BOOL_OR",
    "T_BOOL_XOR",
    "T_BOOL_AND",
    "'|'",
    "'^'",
    "'&'",
    "T_EQ",
    "T_NEQ",
    "T_IN",
    "T_NIN",
    "T_IS",
    "T_NIS",
    "T_GTE",
    "T_LTE",
    "'>'",
    "'<'",
    "T_SL",
    "T_SR",
    "'+'",
    "'-'",
    "'~'",
    "'*'",
    "'/'",
    "'%'",
    "T_AS",
    "T_REST",
    "T_DEL",
    "T_INC",
    "T_DEC",
    "'!'",
    "T_POW",
    "T_NEW",
    "'.'",
    "'['",
    "']'",
    "'('",
    "')'",
    "T_DDDOT",
    "T_FN",
    "T_LET",
    "T_USE",
    "T_ENUM",
    "T_CLASS",
    "T_TRAIT",
    "T_IFACE",
    "T_MODULE",
    "T_REQUIRE",
    "T_IDENT",
    "T_LNUM",
    "T_DNUM",
    "T_SNUM",
    "T_STRING",
    "T_REGEXP",
    "T_TRUE",
    "T_FALSE",
    "T_NULL",
    "T_THIS",
    "T_SUPER",
    "T_SELF",
    "T_GET",
    "T_SET",
    "T_DO",
    "T_IF",
    "T_ELIF",
    "T_ELSE",
    "T_FOR",
    "T_TRY",
    "T_GOTO",
    "T_BREAK",
    "T_CONTINUE",
    "T_PRINT",
    "T_THROW",
    "T_CATCH",
    "T_FINALLY",
    "T_WHILE",
    "T_ASSERT",
    "T_SWITCH",
    "T_CASE",
    "T_DEFAULT",
    "T_RETURN",
    "T_CONST",
    "T_FINAL",
    "T_GLOBAL",
    "T_STATIC",
    "T_EXTERN",
    "T_PUBLIC",
    "T_PRIVATE",
    "T_PROTECTED",
    "T_SEALED",
    "T_INLINE",
    "T_UNSAFE",
    "T_NATIVE",
    "T_HIDDEN",
    "T_REWRITE",
    "T_PHP",
    "T_TEST",
    "T_SUBST",
    "T_TINT",
    "T_TBOOL",
    "T_TFLOAT",
    "T_TSTR",
    "T_TTUP",
    "T_TDEC",
    "T_TOBJ",
    "T_TCALLABLE",
    "T_CDIR",
    "T_CFILE",
    "T_CLINE",
    "T_CCOLN",
    "T_CFN",
    "T_CCLASS",
    "T_CTRAIT",
    "T_CMETHOD",
    "T_CMODULE",
    "T_END",
    "';'",
    "'{'",
    "'}'",
    "'$'"
    , "???"
  ];

  /* @var array Map which translates lexer tokens to internal tokens */
  private static $translate = [
        0,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,   54,  144,  144,  143,   48,   30,  144,
       60,   61,   46,   43,    2,   44,   57,   47,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,   24,  140,
       40,   21,   39,   23,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,   58,  144,   59,   29,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  141,   28,  142,   45,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,    1,    3,    4,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   20,   22,   25,   26,   27,   31,
       32,   33,   34,   35,   36,   37,   38,   41,   42,   49,
       50,   51,   52,   53,   55,   56,   62,   63,   64,   65,
       66,   67,   68,   69,   70,   71,   72,   73,   74,   75,
       76,   77,   78,   79,   80,   81,   82,   83,   84,   85,
       86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
       96,   97,   98,   99,  100,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
      116,  117,  118,  119,  120,  144,  121,  122,  123,  124,
      125,  126,  127,  128,  129,  130,  131,  132,  133,  134,
      135,  136,  137,  138,  144,  139
  ];

  private static $yyaction = [
     1331,  247,  248,  249,  295,  296,  297,  298,  432,  327,
      419,  420,  299,  300,  301,  302,  303,  304,  305,  306,
      307,  308,  309,  310,  421,  507,    0, 1151, 1152, 1336,
      311, 1335,   16,  149,  465,  112,  684,  250,  251,  252,
      416,  526,-32766, 1083, 1084, 1334,  253, 1333,   15,  146,
      806,  112, 1332,  632,  527,  528,  292,  293,  294, 1285,
     1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1238,-32766,
    -32766,-32766,-32766,  171, 1294, 1295, 1296, 1297, 1298, 1299,
     1239, 1240, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
     1308, 1318, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316,
     1317, 1319, 1320, 1328, 1321, 1322, 1323, 1324, 1325, 1326,
     1327,  452,  -95,   -7,  638, 1329, 1330,  151, 1337, 1338,
     1339, 1340, 1341, 1342, 1343,   17, 1344, 1345, 1346, 1347,
     1348, 1349, 1350, 1351, 1352, 1238,  313,  148,  655,  291,
      292,  293,  294,  152,  423,  636,  649, 1239, 1240,-32766,
      712,  698,  653,  465,  508,  488,  153,  154,  155,-32766,
      664,-32766,    2,  961,  424,  156,  157,  158,  697,  406,
    -32766,-32766,-32766,  527,  528,  518,  -40,  465,  407,  -40,
      -40,  -40,  -40,  401,  140, 1230, 1231, 1232, 1233, 1234,
     1235, 1236, 1237,  664,  512,  513,  514,  685, 1217,   25,
      607,  169,  516,  542,  608,  510,  470,  471,  150,  159,
     1262,  976,  609,  160,  610,  672,  619,  141,  771,  772,
      773,  774,  780,  640,  641,  777,  778,  779,  781,  782,
      783,  -94,  642,  536,   -4,  638,  429,  273,  151,-32767,
    -32767,-32767,-32767,-32767,-32767,-32767,-32767,  245,  246,  247,
      248,  249,  746,  977,    9,   -7,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,  152,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,  680,  980,-32766,-32766,  153,  154,  155,
      253,  436,   15,  146,  756,  424,  156,  157,  158,  421,
      406,  331, 1151, 1152,  405,  311, 1258,  -40,  465,  407,
      -40,  -40,  -40,  -40,  400,  140,  239,  240,  414,  415,
      241,  242,  243,  244,  245,  246,  247,  248,  249,  453,
       25,  607,  293,  294,  542,  608,  510,  470,  471,  150,
      159,  819,  930,  609,  160,  610,-32766,-32766,  141,  771,
      772,  773,  774,  780,  640,  641,  777,  778,  779,  781,
      782,  783,  638,  642,  536,  151,-32766,-32766,-32766,-32766,
      523,  264,-32767,-32767,-32767,-32767,-32767,-32767,   16,  149,
        2,  112,  818,  746,  977,    9,  308,  309,  310,  421,
      683,  152, 1151, 1152,  417,  311,  417, 1238,  506,  522,
      463,  720,  463,   13,  153,  154,  155,  212, -210, 1239,
     1240,  137,  424,  156,  157,  158,  324,  406,  898,  488,
      518,  433,  518, 1256,  -40,  465,  407,  -40,  -40,  -40,
      -40,  401,  140, -110,  665,  681,  330,  139,  875,  518,
      390,  329,  254,  893,  504,  633,-32766,   25,  607,  263,
      887,  542,  608,  510,  470,  471,  150,  159,-32766,-32766,
      609,  160,  610,  486,  147,  141,  771,  772,  773,  774,
      780,  640,  641,  777,  778,  779,  781,  782,  783,  638,
      642,  536,  151,  520,  267,-32766,-32766,  544,  618,  314,
      691,    5,    3,  212,  389, 1201, 1203,  849,  392,  889,
      746,  977,    9,  761,  786,  796,  590,  434,  152, 1256,
      317,  814,  502,  847,  589,  333,  332,  326,  319,  334,
      323,  153,  154,  155,  901,  896,  722,  269,   11,  424,
      156,  157,  158,  230,  406,  422,  294,  525,  402,  431,
      972,  -40,  465,  407,  -40,  -40,  -40,  -40,  401,  140,
      417,  316,  321,  270,  268,  315,  265,  318,  328,  971,
      169,  311,   20,  789,   25,  607,-32766,  523,  542,  608,
      510,  470,  471,  150,  159, 1271,  524,  609,  160,  610,
      312,  325,  141,  771,  772,  773,  774,  780,  640,  641,
      777,  778,  779,  781,  782,  783,  638,  642,  536,  151,
      267,   23,   22,  503,   19,  409,   21,  651,  624,  669,
     1104, 1036, 1105, 1197, 1173, 1263, 1264,  746,  977,    9,
      763, 1265, 1196, 1172, 1037,  152,  388,   24,  142,  387,
      599,  519,  505,  403, 1256, 1216,   33,   28,  153,  154,
      155,  705,  686,   31,  548,  888,  424,  156,  157,  158,
     1202,  406, 1200,  631, 1218,  637, 1220,   32,  -40,  465,
      407,  -40,  -40,  -40,  -40,  401,  140,  713, 1199, 1280,
      410,   18,    0,  592,   30,    0,  435,  499,  721,  724,
      170,   25,  607, 1103,    0,  542,  608,  510,  470,  471,
      150,  159,    0,    0,  609,  160,  610,    0,  617,  141,
      771,  772,  773,  774,  780,  640,  641,  777,  778,  779,
      781,  782,  783,  638,  642,  536,  151,  924,  678,    3,
        0,    0,  556,    0,    0,    0,  926,  941,  750,    0,
      751,    0,    0,    0,  746,  977,    9,  765,    0,    0,
        0,    0,  152,  928,  908,  699,    0,    0,    0,    0,
        0,    0,    0,  920,  979,  153,  154,  155,  934,  749,
      925,  876,  933,  424,  156,  157,  158,  760,  406,  869,
      927,  978,  878,  833,  936,  -40,  465,  407,  -40,  -40,
      -40,  -40,  401,  140,  831,    6,  931,  923,  868,  870,
      829,  759,  820,  835,    0,    9,  500,  394,   25,  607,
      533,  322,  542,  608,  510,  470,  471,  150,  159,  271,
      266,  609,  160,  610,  587,  272,  141,  771,  772,  773,
      774,  780,  640,  641,  777,  778,  779,  781,  782,  783,
        4,  642,  536,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,  746,  977,    9,  213,  214,  215,  216,  217,  218,
      219,  220,  221,  222,  223,  224,  225,  226,  227,  427,
      228,  229,  145,  975,  231,  232,  233,  234,  235,  236,
      237,  238,  239,  240,  414,  415,  241,  242,  243,  244,
      245,  246,  247,  248,  249,  250,  251,  252,  416, 1195,
     1171, 1083, 1084,  815,  253, 1257,   15,  146,  932,  112,
      172,  173,  174,  175,  176,  177,  178,  179,  180,  181,
      182,  183,  184,  185,  186,  426,  187,  188,  143,  255,
      189,  190,  191,  192,  193,  194,  195,  196,  197,  198,
      411,  412,  199,  200,  201,  202,  203,  204,  205,  206,
      207,  208,  209,  210,  413,  256,  638, 1015, 1016,  151,
      211,  919,   14,  144, 1035,  836,  795,  848,  257,  258,
      259,  846,  673,  790,  766,  255,  428,  260,  261,  262,
      762,  418,  764, 1272, 1273,  152,    0,    0,  468,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  153,  154,
      155,  256,    0,    0,    0,    0,  424,  156,  157,  158,
        0,  406,    0,    0,  257,  258,  259,    0,  -40,  465,
        0,    0,  428,  260,  261,  262,    0,  418,    0,    0,
        0,    0,    0,    0,  468,  466,    0,    0,    0,    0,
        0,   25,  607,    0,    0,  542,  608,  510,  470,  471,
      150,  159,    0,    0,  609,  160,  610, -241, -241,  141,
      771,  772,  773,  774,  780,  775,  776,  777,  778,  779,
      781,  782,  783,  161,  642,  536,  771,  772,  773,  774,
      780,  775,  776,  777,  778,  779,  781,  782,  783,    0,
        0,    0,    0,    0,    0,  977,    9, -241,    0,  162,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  981,  163,  164,  165,    0,  726,    0,    0,    0,
      425,  166,  167,  168,    0,  408,    0,  111,    0,  114,
        0,   17,  467,    0,    0,    0,    0,    0,    0,    0,
        0, 1238, 1259, 1260, 1261, 1256,    0, 1245, 1246, 1244,
     1241, 1242,  639, 1239, 1240,  274,  275,  276,  277,  278,
      279,  280,  281,  282,  283,  284,  285,  286,  287,  288,
      430,  289,  290,  148,  320,  291,  292,  293,  294,  638,
        0,    0,  151,    0,    0,    0,    0,    0,    0,    0,
        0, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1247,
     1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,  152,    0,
       12,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  153,  154,  155,    0,    0,    0,    0,    0,  424,
      156,  157,  158,    0,  406,    0,    0,    0,    0,    0,
        0,  -40,  465,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,    0,-32766,   25,  607,    0,    0,  542,  608,
      510,  470,  471,  150,  159,    0,    0,  609,  160,  610,
      314,  691,  141,  771,  772,  773,  774,  780,  775,  776,
      777,  778,  779,  781,  782,  783,  554,  642,  536,  151,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  977,    9,
        0,    0,    0,    0,    0,  152,    0,    0,    0, 1238,
        0,    0,    0,    0,    0,    0,    0,    0,  153,  154,
      155, 1239, 1240,    0,    0,    0,  424,  156,  157,  158,
        0,  406,    0,    0,    0,    0,    0,    0,  -40,  465,
        0,    0,  771,  772,  773,  774,  780,  775,  776,  777,
      778,  779,  781,  782,  783,    0,    0,    0,    0,    0,
        0,   25,  607,    0,    0,  542,  608,  510,  470,  471,
      150,  159,    0,    0,  609,  160,  610,    0,    0,  141,
      771,  772,  773,  774,  780,  775,  776,  777,  778,  779,
      781,  782,  783,  638,  642,  536,  151,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  977,    9,  973,    0,    0,
        0,    0,  152,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  153,  154,  155,    0,    0,
        0,    0,    0,  424,  156,  157,  158,    0,  406,    0,
        0,    0,    0,    0,    0,  -40,  465,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,   25,  607,
        0,    0,  542,  608,  510,  470,  471,  150,  159,    0,
        0,  609,  160,  610,    0,    0,  141,  771,  772,  773,
      774,  780,  775,  776,  777,  778,  779,  781,  782,  783,
      638,  642,  536,  151,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  977,    9,  974,    0,    0,    0,    0,  152,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  153,  154,  155,    0,    0,    0,    0,    0,
      424,  156,  157,  158,    0,  406,    0,    0,    0,    0,
        0,    0,  -40,  465,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   25,  607,    0,    0,  542,
      608,  510,  470,  471,  150,  159,    0,    0,  609,  160,
      610,    0,    0,  141,  771,  772,  773,  774,  780,  775,
      776,  777,  778,  779,  781,  782,  783,  638,  642,  536,
      151,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  977,
        9,    0,    0,    0,    0,    0,  152,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  153,
      154,  155,    0,    0,    0,    0,    0,  424,  156,  157,
      158,    0,  406,    0,    0,    0,    0,    0,    0,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,
    -32766,-32766,   25,  607,    0,    0,  542,  608,  510,  470,
      471,  150,  159,    0,    0,  609,  160,  610,    0,    0,
      141,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  642,  536,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  977,    9,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,    0,-32766,-32766,-32766,-32766,-32766,  274,
      275,  276,  277,  278,  279,  280,  281,  282,  283,  284,
      285,  286,  287,  288,  430,  289,  290,  148,    0,  291,
      292,  293,  294,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,    0,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,    0,-32766,-32766,-32766
  ];

  private static $yycheck = [
        4,   43,   44,   45,   29,   30,   31,   32,   20,   21,
       35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
       45,   46,   47,   48,   49,    2,    0,   52,   53,   33,
       55,   35,   57,   58,   64,   60,    1,   46,   47,   48,
       49,   49,   72,   52,   53,   49,   55,   51,   57,   58,
        1,   60,   56,   61,   84,   85,   26,   27,   28,   63,
       64,   65,   66,   67,   68,   69,   70,   71,   72,   29,
       30,   31,   32,    2,   78,   79,   80,   81,   82,   83,
       84,   85,   86,   87,   88,   89,   90,   91,   92,   93,
       94,   95,   96,   97,   98,   99,  100,  101,  102,  103,
      104,  105,  106,  107,  108,  109,  110,  111,  112,  113,
      114,   90,  142,    0,    1,  119,  120,    4,  122,  123,
      124,  125,  126,  127,  128,   62,  130,  131,  132,  133,
      134,  135,  136,  137,  138,   72,    2,   23,    1,   25,
       26,   27,   28,   30,    2,   51,   83,   84,   85,   62,
       56,    1,    1,   64,    2,   30,   43,   44,   45,   72,
       66,   72,  141,  140,   51,   52,   53,   54,    1,   56,
       83,   84,   85,   84,   85,   50,   63,   64,   65,   66,
       67,   68,   69,   70,   71,  122,  123,  124,  125,  126,
      127,  128,  129,   66,   67,   68,   69,    1,   61,   86,
       87,   50,   49,   90,   91,   92,   93,   94,   95,   96,
       59,  140,   99,  100,  101,    1,   24,  104,  105,  106,
      107,  108,  109,  110,  111,  112,  113,  114,  115,  116,
      117,  142,  119,  120,    0,    1,   20,   21,    4,   33,
       34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
       44,   45,  139,  140,  141,  142,   46,   47,   48,   29,
       30,   31,   32,   72,   30,   35,   36,   37,   38,   39,
       40,   41,   42,    1,  140,   84,   85,   43,   44,   45,
       55,   49,   57,   58,  142,   51,   52,   53,   54,   49,
       56,    3,   52,   53,  141,   55,   76,   63,   64,   65,
       66,   67,   68,   69,   70,   71,   33,   34,   35,   36,
       37,   38,   39,   40,   41,   42,   43,   44,   45,   90,
       86,   87,   27,   28,   90,   91,   92,   93,   94,   95,
       96,  140,  140,   99,  100,  101,   29,   30,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
      116,  117,    1,  119,  120,    4,   29,   30,   31,   32,
       50,  141,   35,   36,   37,   38,   39,   40,   57,   58,
      141,   60,  140,  139,  140,  141,   46,   47,   48,   49,
        1,   30,   52,   53,   24,   55,   24,   72,    2,   24,
       30,   81,   30,    2,   43,   44,   45,   60,   33,   84,
       85,    2,   51,   52,   53,   54,   21,   56,   23,   30,
       50,    2,   50,   76,   63,   64,   65,   66,   67,   68,
       69,   70,   71,   61,    1,    1,   21,    2,  140,   50,
        2,   21,    2,   23,    2,    2,   72,   86,   87,    2,
       61,   90,   91,   92,   93,   94,   95,   96,   84,   85,
       99,  100,  101,   57,   58,  104,  105,  106,  107,  108,
      109,  110,  111,  112,  113,  114,  115,  116,  117,    1,
      119,  120,    4,    2,   50,   57,   58,   97,   98,  102,
      103,  140,  141,   60,    2,   61,   61,  140,  141,   61,
      139,  140,  141,  142,   61,  140,  141,    2,   30,   76,
        3,  140,  141,  140,  141,    3,    3,    3,   21,   21,
       21,   43,   44,   45,   23,   23,   30,   24,   24,   51,
       52,   53,   54,   24,   56,   24,   28,   49,   45,   24,
       24,   63,   64,   65,   66,   67,   68,   69,   70,   71,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       50,   55,   62,   73,   86,   87,   29,   50,   90,   91,
       92,   93,   94,   95,   96,  142,   30,   99,  100,  101,
       33,   33,  104,  105,  106,  107,  108,  109,  110,  111,
      112,  113,  114,  115,  116,  117,    1,  119,  120,    4,
       50,   57,   57,   60,   62,   65,   57,   83,   88,   90,
       59,   59,   59,   59,   59,   59,   59,  139,  140,  141,
      142,   59,   59,   59,   59,   30,   60,   60,   60,   60,
       60,   60,   60,   60,   76,   61,   61,   61,   43,   44,
       45,   61,   61,   61,   61,   61,   51,   52,   53,   54,
       61,   56,   61,   61,   61,   61,   77,   61,   63,   64,
       65,   66,   67,   68,   69,   70,   71,   61,   61,   61,
       65,   62,   -1,   63,   89,   -1,   65,   65,   81,   81,
      119,   86,   87,  142,   -1,   90,   91,   92,   93,   94,
       95,   96,   -1,   -1,   99,  100,  101,   -1,   99,  104,
      105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
      115,  116,  117,    1,  119,  120,    4,  140,  118,  141,
       -1,   -1,  121,   -1,   -1,   -1,  140,  140,  140,   -1,
      140,   -1,   -1,   -1,  139,  140,  141,  142,   -1,   -1,
       -1,   -1,   30,  140,  140,  143,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,  140,  140,   43,   44,   45,  140,  140,
      140,  140,  140,   51,   52,   53,   54,  140,   56,  140,
      140,  140,  140,  140,  140,   63,   64,   65,   66,   67,
       68,   69,   70,   71,  140,  140,  140,  140,  140,  140,
      140,  140,  140,  140,   -1,  141,  141,  141,   86,   87,
      141,  141,   90,   91,   92,   93,   94,   95,   96,  141,
      141,   99,  100,  101,  141,  141,  104,  105,  106,  107,
      108,  109,  110,  111,  112,  113,  114,  115,  116,  117,
      141,  119,  120,    5,    6,    7,    8,    9,   10,   11,
       12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
       22,  139,  140,  141,    5,    6,    7,    8,    9,   10,
       11,   12,   13,   14,   15,   16,   17,   18,   19,   20,
       21,   22,   23,  142,   25,   26,   27,   28,   29,   30,
       31,   32,   33,   34,   35,   36,   37,   38,   39,   40,
       41,   42,   43,   44,   45,   46,   47,   48,   49,  142,
      142,   52,   53,  142,   55,  142,   57,   58,  142,   60,
        5,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   20,   21,   22,   23,    4,
       25,   26,   27,   28,   29,   30,   31,   32,   33,   34,
       35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
       45,   46,   47,   48,   49,   30,    1,   52,   53,    4,
       55,  142,   57,   58,  142,  142,  142,  142,   43,   44,
       45,  142,    1,  142,  142,    4,   51,   52,   53,   54,
      142,   56,  142,  142,  142,   30,   -1,   -1,   63,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   43,   44,
       45,   30,   -1,   -1,   -1,   -1,   51,   52,   53,   54,
       -1,   56,   -1,   -1,   43,   44,   45,   -1,   63,   64,
       -1,   -1,   51,   52,   53,   54,   -1,   56,   -1,   -1,
       -1,   -1,   -1,   -1,   63,   64,   -1,   -1,   -1,   -1,
       -1,   86,   87,   -1,   -1,   90,   91,   92,   93,   94,
       95,   96,   -1,   -1,   99,  100,  101,  102,  103,  104,
      105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
      115,  116,  117,    4,  119,  120,  105,  106,  107,  108,
      109,  110,  111,  112,  113,  114,  115,  116,  117,   -1,
       -1,   -1,   -1,   -1,   -1,  140,  141,  142,   -1,   30,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,  140,   43,   44,   45,   -1,   47,   -1,   -1,   -1,
       51,   52,   53,   54,   -1,   56,   -1,   58,   -1,   60,
       -1,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   72,   73,   74,   75,   76,   -1,   78,   79,   80,
       81,   82,   83,   84,   85,    5,    6,    7,    8,    9,
       10,   11,   12,   13,   14,   15,   16,   17,   18,   19,
       20,   21,   22,   23,   24,   25,   26,   27,   28,    1,
       -1,   -1,    4,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,  122,  123,  124,  125,  126,  127,  128,  129,  130,
      131,  132,  133,  134,  135,  136,  137,  138,   30,   -1,
      141,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   43,   44,   45,   -1,   -1,   -1,   -1,   -1,   51,
       52,   53,   54,   -1,   56,   -1,   -1,   -1,   -1,   -1,
       -1,   63,   64,    5,    6,    7,    8,    9,   10,   11,
       12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
       22,   23,   -1,   25,   86,   87,   -1,   -1,   90,   91,
       92,   93,   94,   95,   96,   -1,   -1,   99,  100,  101,
      102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,  113,  114,  115,  116,  117,    1,  119,  120,    4,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  140,  141,
       -1,   -1,   -1,   -1,   -1,   30,   -1,   -1,   -1,   72,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   43,   44,
       45,   84,   85,   -1,   -1,   -1,   51,   52,   53,   54,
       -1,   56,   -1,   -1,   -1,   -1,   -1,   -1,   63,   64,
       -1,   -1,  105,  106,  107,  108,  109,  110,  111,  112,
      113,  114,  115,  116,  117,   -1,   -1,   -1,   -1,   -1,
       -1,   86,   87,   -1,   -1,   90,   91,   92,   93,   94,
       95,   96,   -1,   -1,   99,  100,  101,   -1,   -1,  104,
      105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
      115,  116,  117,    1,  119,  120,    4,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,  140,  141,  142,   -1,   -1,
       -1,   -1,   30,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   43,   44,   45,   -1,   -1,
       -1,   -1,   -1,   51,   52,   53,   54,   -1,   56,   -1,
       -1,   -1,   -1,   -1,   -1,   63,   64,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   86,   87,
       -1,   -1,   90,   91,   92,   93,   94,   95,   96,   -1,
       -1,   99,  100,  101,   -1,   -1,  104,  105,  106,  107,
      108,  109,  110,  111,  112,  113,  114,  115,  116,  117,
        1,  119,  120,    4,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,  140,  141,  142,   -1,   -1,   -1,   -1,   30,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   43,   44,   45,   -1,   -1,   -1,   -1,   -1,
       51,   52,   53,   54,   -1,   56,   -1,   -1,   -1,   -1,
       -1,   -1,   63,   64,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   86,   87,   -1,   -1,   90,
       91,   92,   93,   94,   95,   96,   -1,   -1,   99,  100,
      101,   -1,   -1,  104,  105,  106,  107,  108,  109,  110,
      111,  112,  113,  114,  115,  116,  117,    1,  119,  120,
        4,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  140,
      141,   -1,   -1,   -1,   -1,   -1,   30,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   43,
       44,   45,   -1,   -1,   -1,   -1,   -1,   51,   52,   53,
       54,   -1,   56,   -1,   -1,   -1,   -1,   -1,   -1,   63,
        5,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   20,   21,   22,   23,   -1,
       25,   26,   86,   87,   -1,   -1,   90,   91,   92,   93,
       94,   95,   96,   -1,   -1,   99,  100,  101,   -1,   -1,
      104,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,  119,  120,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,  140,  141,    5,    6,
        7,    8,    9,   10,   11,   12,   13,   14,   15,   16,
       17,   18,   19,   20,   21,   22,   23,   -1,   25,   26,
       27,   28,   29,   30,    5,    6,    7,    8,    9,   10,
       11,   12,   13,   14,   15,   16,   17,   18,   19,   20,
       21,   22,   23,   -1,   25,   26,   27,   28,   29,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   20,   21,   22,   23,   -1,   25,
       26,   27,   28,    5,    6,    7,    8,    9,   10,   11,
       12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
       22,   23,   -1,   25,   26,   27,   28,    5,    6,    7,
        8,    9,   10,   11,   12,   13,   14,   15,   16,   17,
       18,   19,   20,   21,   22,   23,   -1,   25,   26,   27
  ];

  private static $yybase = [
      234,  113,  468,  351,  585,  702,  702,  945, 1168, 1285,
     1402, 1519,  423,  337,  659,  658,  650,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,  961, 1636, 1636, 1636, 1636, 1636,
     1636, 1636, 1636, 1636,  192,  499,  509,  641,  593,  612,
      520,  617,  597,  521,  542,  598,  523,  541,  553,  753,
      812,  531,  747,  524,  554,  586,  525,  619,  748,  596,
      622,  623,  643,  895,  839,  839,  839,  839,  839,  839,
      839,  839,  839,  839,  839,  839,  839,  839,  839,  839,
      839,  839,  839,  839,  839,  839,  839,  839,  839,  839,
      839,  839,  839,  839,  839,  839,  839,  839,  839,  839,
      839,  839,  839,  839,  839,  839,  839,  839,  839,  839,
      839,  151,  424, 1140,  137, 1824, 1824, 1824, 1824, 1824,
     1824, 1824, 1824, 1824, 1824, 1824, 1824, 1824, 1824, 1824,
     1824, 1824, 1824, 1824, 1824, 1824,  604,  500,  572,  540,
      551,  608,  214,  522,  272,  519,   35,  196,  518,  167,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059,  915,  915,  915,  915,  915,
      915,  915,  915, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059,  915,  915,  915,  915,  915,  915,
      915,  915,  915,  915,  915,  915,  915,  915,  915,  915,
      915,  915,  915,  915,  915,  915,  915,  915,  915,  915,
      915,  915,  915,  915,  915,  915,  915,  915,  915,  915,
      915,  915, 1059,  915, 1059, 1059, 1059, 1059, 1059, 1059,
      915,  915, 1059, 1059, 1059, 1059,  915,  915,  915, 1059,
      915, 1059, 1059, 1059, 1059,  818,  818,  818,  818,  818,
      818,  818,  818, 1228, 1228,  114,  114,  114,  114, 1695,
     1695, 1872, 1872,   30, 1848, 1848,  295, 1799, 1799,  498,
     1773, 1773,  -25,  527,  273,  273,  206,  206,  206,  206,
      206,  206,  273,  273,  206,  206,  206,  206,  206,  206,
      307,   40,   40,  327,  327,  327,  327,  362,  379,  360,
      125,   89,   89,   89,   89,  -30,  646,  536, 1247, 1247,
       21,  229,   49,  150,  191,   63,  514,   63,  514,   63,
       63,  514,  514,  514,  514,  514,  514,  514,  514,  514,
      514,  514,   63,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   63,   63,   63,  364,  -42,  -42,  -42,
      -42,  230,  230,   -9,   -9,   -9,   -9,   -9,   -9,  330,
      330,  330,   87,   87,  210,  210,  210,  210,  210,  210,
      240,  240,  240,  310,  127,  533,  562,  556,  556,  751,
      637,  610,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  664,  225,  507,  225,
      496,  496,  496,  496,  496,  496,  496,  496,   94,  315,
      315,  756,  315,  315,  315,  315,  315,  315,  315,  288,
      315,  396,  315,  315,  315,  396,  315,  315,  315,  315,
      315,  396,  315,  315,  315,  315,  315,  315,  315,  315,
      341,   -8,  361,  377,  380,  556,  548,  380,  497,  497,
      504,  504,  557,  591,  563,  503,  502,  634,  640,   71,
      396,  638,  153,  620,  721,  639,  220,  396,  571,  216,
      635,  365,  134,  568,  363,  396,  425,  428,  396,  142,
      396,  621,  636,   23,  809,  347,  385,  396,  570,  -12,
      396,  565,  433,  355,  410,  396,  232,  602,  510,  601,
      601,  516,  590,  516,  516,  516,  575,  516,  516,  592,
      516,  516,  516,  516,  516,  516,  516,  558,  644,  558,
      558,  418,  399,  430,  418,  556,  391,  558,  644,  548,
      548,  602,  505,  501,  558,  510,  418,  556,  152,  483,
      601,  644,  644,  592,  556,  556,  556,  644,  624,  599,
      530,  595,  663,   26,  532,  490,  494,  591,  569,  599,
      532,  599,  490,  552,  547,  583,  532,  609,  589,  603,
      567,  576,  649,  600,  645,  832,  591,  831,  493,  561,
      564,  830,  581,  566,  577,  537,  578,  580,  560,  532,
      555,  579,  517,  574,  543,  544,  487,  828,  594,  386,
      386,  506,  478,  679,  489,  538,  822,  545,  582,  480,
      611,  821,  532,  409,  491,  405,  532,  495,  819,  815,
      492,  584,  559,  546,  814,  813,  573,  482,  587,  486,
      539,  535,  588,  642,  534,  488,    0, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,   -4,
       -4,   -4,   -4,   -4,    0,    0,    0,    0,    0,    0,
        0, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059,  839,  839,  839,  839,  839,  839,  839,  839,  839,
      839,  839,  839,  839,  839,  839,  839,  839,  839,  839,
      839,  839,  839,  839,  839,  839,  839,  839,  839,  839,
      311,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1059, 1059,
      -25, 1059,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,
      -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,
      -25,  -25,  -25, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,    0,
     1059,    0,    0,    0,    0,    0,    0, 1059, 1059,    0,
        0,    0,    0, 1059, 1059, 1059,    0, 1059,    0,    0,
        0,    0,  839,  839,  839,  839,  839,  839,  839,  839,
      839,  839,  -25,  -25,  -25,  -25,  839,  839,  839,  839,
      -25,  839,  839,  -25,  839,  839,  -25,  839,  839,    0,
      -25,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,  -25,  -25,  -25,
      -25,  -25,  -25,  -25, 1247, 1247, 1247, 1247, 1247, 1247,
     1247, 1247, 1247, 1247, 1247,    0,    0,   63,   63,   63,
       63, 1247,    0,   63,    0,   63,    0,    0,   63,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   63,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1247,   -9,   -9,   -9,   -9,  -25,  -25,
        0,    0,    0,    0,    0,    0,  311,  311,  311,   63,
       63,   -9,   -9,   -9,   -9,   -9,   -9,  311,  311,  311,
      315,  600,  315,  315,  315,  315,  315,  315,  315,  311,
      311,  311,  311,  311,  311,  311,  311,  311,  311,  311,
      311,  311,  311,  315,  311,  315,  311,  311,  311,  311,
      311,  311,  311,  311,  311,  600,    0,    0,  377,    0,
        0,    0,    0,    0,    0,    0,  644,    0,  311,    0,
        0,    0,  311,    0,    0,    0,    0,    0,  311,    0,
        0,    0,    0,    0,    0,    0,    0,  532,  532,  532,
        0,    0,  516,  644,    0,  644,  644,  644,  644,  644,
      644,  644,  644,  644,  644,  644,    0,    0,  432,    0,
      437,  624,  432,    0,    0,  471,    0,  679,    0,    0,
      532,    0,    0,    0,    0,    0,    0,    0,  437,  591,
        0,  591,    0,    0,    0,  471,    0,    0,  437,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  311,    0,
        0,  311,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  311
  ];

  private static $yydefault = [
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,  555,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,  314,  543,32767,32767,32767,
      382,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,  255,  257,  542,  256,  292,  293,  294,
      295,  296,  297,  298,  299,  300,  301,  302,  303,  304,
      305,  306,  290,  479,  360,  361,  362,  363,  364,  365,
      366,  367,  368,  369,  370,  371,  372,  373,  374,  358,
      543,  258,  481,  550,  126,  480,  157,   67,  172,  167,
      116,32767,32767,  450,32767,  259,  428,  429,  430,  431,
      432,  433,  434,  435,  436,  437,  438,  439,  440,  441,
      442,  426,  260,  159,  131,  145,32767,  555,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,  555,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,  278,  346,  315,  312,  383,
      380,  311,  379,  276,  344,  416,  451,  448,  447,  277,
      345,  275,  343,  414,  269,  337,  415,  270,  338,  413,
      268,  336,  407,  408,  281,  282,  283,  284,  273,  274,
      272,  271,  349,  350,  351,  352,  341,  342,  339,  340,
      406,  419,  420,  411,  412,  409,  410,  177,32767,  177,
    32767,   40,   40,   40,   40,   40,   41,32767,   41,32767,
    32767,32767,32767,32767,   41,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,   40,  279,  280,  347,
      348,  417,  418,  261,  262,  267,  329,  330,  335,  399,
      400,  405,32767,32767,  263,  264,  265,  331,  332,  333,
      401,  402,  403,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,  319,  317,  316,  318,  321,  322,  320,  387,
      385,  384,  386,  389,  390,  388,32767,  266,32767,  334,
      455,  453,  452,  454,  457,  458,  456,  404,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,  555,32767,
    32767,  325,32767,32767,32767,  393,32767,32767,32767,32767,
    32767,  461,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,  188,  177,32767,  189,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
      327,32767,   27,32767,32767,32767,32767,  395,32767,  125,
    32767,  494,32767,32767,32767,  291,32767,32767,  359,32767,
      463,32767,32767,32767,32767,32767,  170,  127,32767,  130,
      427,32767,32767,32767,  165,  132,32767,  230,  215,   83,
       83,  177,   57,  177,  177,  177,  220,  177,  177,32767,
      177,  177,  177,  177,  177,  177,  177,32767,32767,32767,
    32767,  323,  554,  554,  391,32767,  554,32767,32767,32767,
    32767,  231,   70,   72,32767,  216,  459,32767,  554,   77,
       84,32767,32767,32767,32767,32767,32767,32767,32767,  516,
       48,   49,32767,32767,  485,32767,  494,  487,32767,32767,
      471,  502,  501,32767,32767,32767,   30,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,  552,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  499,
    32767,32767,  494,32767,32767,32767,32767,32767,32767,  144,
      146,32767,  237,32767,   66,32767,32767,32767,32767,32767,
    32767,32767,   76,   73,  173,32767,   82,   78,32767,32767,
      168,32767,32767,32767,32767,32767,32767,  111,32767,  178,
    32767,32767,32767,32767,32767,  115,  492
  ];

  private static $yygoto = [
       36,   83,  663,  663,  663,  663,  663,  970,  863,  863,
      863,  863,  863,  862,  862,  862,  862,  862,  736,  770,
      770,  770,  770,  709,  714,  715,  100,  770,   83,   37,
       39,   42,   43,   44,   46,   47,   48,   53,   54,   10,
       35,  472,  473,  474,  475,  476,  477,  478,   38,   34,
       40,  479,  480,  481,  482,  483,  484,  485,   65,   41,
       66,   67,   68,   69,   70,   71,   72,   73,   74,   75,
       76,   77,   78,   79,   80,   81,   82,  335,  343,  349,
      351,  354,  357,  360,  364,  365,  366,  367,  368,  369,
      370,  371,  437,  438,  443,  444,  445,  454,  455,  456,
      487,   45,   84,   85,   86,   87,   88,   89,   90,   91,
       92,   93,   94,   95,   96,   97,   98,   99,  336,  337,
      344,  350,  352,  355,  358,  361,  372,  373,  374,  375,
      376,  377,  378,  379,  439,  440,  446,  447,  448,  457,
      458,  459,  489,  101,  719, 1276,  719,  861,  666,  666,
      861,  758,  101,   49,  338,   50,  102,  339,  103,  340,
       51,   52,  104, 1055, 1055, 1055, 1055, 1055, 1055, 1055,
     1055, 1055, 1055, 1055, 1055, 1034, 1102, 1170, 1224, 1223,
     1225, 1222,  844,  725,  845, 1268, 1205, 1191, 1055, 1055,
     1055, 1055, 1055, 1055, 1055, 1055, 1055,  700,  611,  840,
      614,   55,  824,   56,  341,  105,  106,  342,   57,  808,
      626,   58,  107,  108,   59,  890,  551,  891,  109, 1040,
       60,   61,   62,  110,  646,  646,  646,  646,  646,  646,
      646,  646,  646,  646,  646,  646, 1283, 1283, 1283, 1283,
     1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283,  561,  798,
      689,  802,  816,  559,  578,  538,  576,  539,  851,  540,
      579,  399,  704,  902,  584,  541,  509,  903,  710, 1176,
      856, 1176, 1176, 1176, 1176, 1176, 1176, 1176, 1176, 1176,
     1176, 1176, 1176, 1176, 1176, 1176, 1176, 1176, 1176, 1176,
     1176, 1176,  963,  530,  563,  706,  531, 1192,  656,  650,
      656,  650,  656,  656,  679,  679,  679,  679,  679,  679,
      679,  650,  679,  679,  679,  702,  656,  650,  650,  650,
      650,  650,  650,  650,  702,  650,  702,  706,  532,  792,
      966,  918,  652,  951,  652,  393,  682,  652,  652,  652,
      652,  652,  652,  652,  652,  652,  652,  652,  865,  865,
      865,  865,  865, 1013, 1014, 1080, 1081, 1082,  906,  879,
     1148, 1149, 1150,  682,  881,  960,  658,  588,  929,  913,
      946,  949,  911,  910,  912,  788,  813,  945,  560,  693,
      671,  687,  696,  732,  733,    0,  498,  498,  498,  498,
      498,    0,  826,  826,  826,  826,  826,  825,  825,  825,
      825,  825,  864,  864,  864,  864,  864,  827,  827,  827,
      827,  827,  657,    0,  676,  677,    0,    0, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191,    0,    0,  753,    0,
        0,  529,    0,    0,    0,    0,    0, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191,    0, 1191,   27,  662,  670,
        0,    0, 1274, 1191, 1191,  688,  571,    0,  581, 1191,
     1191, 1191,   29, 1191,  701,    0,    0,    0,    0,    0,
      553, 1176, 1176, 1176, 1176,    0,    0,    0,    0, 1176,
        0,    0, 1176,    0,    0, 1176,    0,    0, 1176, 1176,
        0,    0,    0,    0,    0,    0,    0,    0, 1192, 1192,
     1192, 1192, 1192, 1192, 1192, 1192, 1176, 1176, 1176, 1176,
     1176, 1176, 1176,    0,    0,    0,    0, 1192, 1192, 1192,
     1192, 1192, 1192, 1192, 1192, 1192, 1192, 1192, 1192, 1192,
     1192, 1192, 1192, 1192, 1192, 1192, 1192, 1192, 1192, 1192,
     1192, 1192, 1192, 1192, 1192, 1192, 1192, 1192, 1192, 1192,
     1192, 1192, 1192, 1192, 1192,    0, 1192,    0,    0,    0,
        0,    0,    0, 1192, 1192,    0,    0, 1176, 1176, 1192,
     1192, 1192,    0, 1192,    0, 1176, 1176, 1176,    0,    0,
        0,  594,  594,  594,  594,    0, 1176, 1176, 1176,    0,
      591,  602,  591,  598,  397,  397,  397,  397,  396,  396,
      396,  396,  396,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  515,    0, 1176, 1176, 1176, 1176,
     1176, 1176, 1176, 1176,  521,    0,    0,    0,    0,    0,
      550,  557,  565,  568,  570,  577,  580, 1053,  585,    0,
        0, 1121,  543,  404,    0,    0,    0, 1189,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  600,    0,  591,
      598,  615,  627,  586,  660,  661,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1194,    0,  600,    0,    0,    0,    0,    0,    0,    0,
        0,  597,    0,  692,  694,    0,  586,  866,  591,  866,
      598,  692,  694,    0,  659,    0,  622,  564,  623,    0,
      755,  535,  601,  695,  867,    0,  938,  605,  606,  965,
      711,  634,  635,  723,    0,  572,  574,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 1051,    0,    0,
     1119,  113,  490,  491,  492,  493,  494,  495,  496,    0,
        0,    0, 1187,    0,    0,    0,    0,    0,  604,    0,
      116,  117,  118,  119,  120,  121,  122,  123,  124,  125,
      126,  127,  128,  129,  130,  131,  345,  353,  356,  359,
      362,  363,  380,  381,  382,  383,  384,  385,  386,  441,
      442,  449,  450,  451,  460,  461,  462,  497,  877,  132,
        0,    0,    0,    0,    0,    0,  346,  347,    0,    0,
        0,    0,  133,  134,  348,    0,  135,    0,    0,    0,
        0,    0,    0,    0,    0,  921,    0,  883,  883,  885,
      885,  914,  922,  952,  832,  834,  830,  828,  595,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      603,    0,    0,    0,    0,    0,    0,  545,  546,  547,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  534,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  956,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      955,  953,    0,    0,    0,    0,  954
  ];

  private static $yygcheck = [
       25,   25,   26,   26,   26,   26,   26,  101,   16,   16,
       16,   16,   16,   15,   15,   15,   15,   15,    8,   28,
       28,   28,   28,   39,   39,   39,   25,   28,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   66,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   59,  122,   59,   24,   86,   86,
       24,   24,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,   58,   58,   58,   58,   58,
       58,   58,   58,   58,   58,  119,  110,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,   57,  106,   55,
      106,   25,   50,   25,   25,   25,   25,   25,   25,   44,
      106,   25,   25,   25,   25,   56,   60,   56,   25,  105,
       25,   25,   25,   25,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   40,
       63,   40,   48,   57,   67,   57,   57,   57,   61,   57,
       57,   27,   57,   57,   57,   57,   57,   57,   57,  105,
       64,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,   98,    5,    5,    5,    5,  108,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,   35,
       99,   84,    6,   94,    6,   38,   23,    6,    6,    6,
        6,    6,    6,    6,    6,    6,    6,    6,   19,   19,
       19,   19,   19,   75,   75,   75,   75,   75,   75,   71,
       75,   75,   75,   23,   73,   96,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   32,   46,   92,    6,    6,
        4,    4,    4,    4,    4,   -1,   26,   26,   26,   26,
       26,   -1,   16,   16,   16,   16,   16,   15,   15,   15,
       15,   15,   18,   18,   18,   18,   18,   11,   11,   11,
       11,   11,   20,   -1,   20,   20,   -1,   -1,  107,  107,
      107,  107,  107,  107,  107,  107,   -1,   -1,   20,   -1,
       -1,   26,   -1,   -1,   -1,   -1,   -1,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,   -1,  107,   76,   76,   34,
       -1,   -1,   34,  107,  107,   76,   82,   -1,   82,  107,
      107,  107,   76,  107,   34,   -1,   -1,   -1,   -1,   -1,
       82,  105,  105,  105,  105,   -1,   -1,   -1,   -1,  105,
       -1,   -1,  105,   -1,   -1,  105,   -1,   -1,  105,  105,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  108,  108,
      108,  108,  108,  108,  108,  108,  105,  105,  105,  105,
      105,  105,  105,   -1,   -1,   -1,   -1,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,   -1,  108,   -1,   -1,   -1,
       -1,   -1,   -1,  108,  108,   -1,   -1,  105,  105,  108,
      108,  108,   -1,  108,   -1,  105,  105,  105,   -1,   -1,
       -1,   23,   23,   23,   23,   -1,  105,  105,  105,   -1,
       23,   23,   23,   23,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   62,   -1,  105,  105,  105,  105,
      105,  105,  105,  105,   62,   -1,   -1,   -1,   -1,   -1,
       62,   62,   62,   62,   62,   62,   62,  105,   62,   -1,
       -1,  105,   86,   27,   -1,   -1,   -1,  105,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   23,   -1,   23,
       23,   23,   23,   23,   23,   23,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       23,   -1,   23,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   53,   -1,   23,   23,   -1,   23,   23,   23,   23,
       23,   23,   23,   -1,   23,   -1,   23,   23,   23,   -1,
       23,   23,   23,   23,   23,   -1,   23,   23,   23,   23,
       23,   23,   23,   23,   -1,   86,   86,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,  105,   -1,   -1,
      105,   65,   65,   65,   65,   65,   65,   65,   65,   -1,
       -1,   -1,  105,   -1,   -1,   -1,   -1,   -1,   53,   -1,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   52,   65,
       -1,   -1,   -1,   -1,   -1,   -1,   65,   65,   -1,   -1,
       -1,   -1,   65,   65,   65,   -1,   65,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   52,   -1,   52,   52,   52,
       52,   52,   52,   52,   52,   52,   52,   52,   53,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       53,   -1,   -1,   -1,   -1,   -1,   -1,   53,   53,   53,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   52,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   52,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       52,   52,   -1,   -1,   -1,   -1,   52
  ];

  private static $yygbase = [
        0,    0,    0,    0,  378, -107,  -74,    0,   17,    0,
        0,   16,    0,    0,    0,    6,    1,    0,  395,  341,
        5,    0,    0,  224,  140, -111,   -5,  237, -377,    0,
        0,    0, -258,    0, -134, -179,    0,    0, -255, -369,
     -182,    0,    0,    0, -225,    0, -254,    0, -250,    0,
     -193,    0,  319,  253,    0, -190, -173, -338,  161, -243,
     -249, -246,  236, -216, -236,  516,   30, -251,    0,    0,
        0, -180,    0, -177,    0,  -59, -132,    0,    0,    0,
        0,    0,  350,    0, -206,    0,  136,    0,    0,    0,
        0,    0, -248,    0, -204,    0, -256,    0, -215, -203,
        0,   -1,    0,    0,    0,  156, -208,  163,  273,    0,
       47,    0,    0,    0,    0,    0,    0,    0,    0,   48,
        0,    0,  132,    0,    0
  ];

  private static $yygdefault = [
    -32768,  643,  728,  729,  730,  644,  645,    1,  735,  737,
      738,  739,  740,  741,  742,  743,  744,  745,  747,  748,
      752,  569,  552, 1221,  860,   64,  464,  398,  769,  517,
      785,  582,  787,  628, 1266,  791,  629,  583,  391,  708,
      801,  575,  703,  707,  807,  630,  812,  469,  817,  395,
      823,  716,  907,  593,  717,  839,  841,  718, 1278,  905,
      555,  850,  511,  690,  855,  115,    7,  558,  674,  874,
     1125,  880, 1193,  882,  567, 1012,   26,  596,  909,  675,
      136,  138,  613,  537,  917,  620,  647,  501,  935,  939,
      940,  625,  944,  948,  950,  621,  959,  573,  962,  967,
        8,  969,  549,  562,   63, 1108, 1227, 1123, 1124,  566,
     1204, 1209, 1210, 1211, 1213, 1215,  648,  654,  612, 1267,
      667,  616, 1275,  668, 1284
  ];

  private static $yylhs = [
        0,    1,    2,    2,    2,    3,    3,    4,    7,    7,
        8,    8,    8,    8,    8,    8,    8,    8,    8,    8,
        8,    8,   10,   10,   10,   21,   21,   20,   20,   20,
       22,   18,   17,   17,    9,    9,    9,    9,    9,    9,
       26,   26,   27,   27,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   29,   29,   30,
       31,   31,   32,   11,   33,   33,   35,   35,   12,   12,
       36,   36,   41,   41,   42,   42,   40,   37,   37,   37,
       43,   43,   44,   38,   38,   45,   45,   46,   46,   47,
       47,   48,   48,   48,   39,   39,   49,   49,   50,   50,
       50,   50,   50,   50,   50,   50,   50,   50,   50,   50,
       51,   51,   54,   54,   55,   55,   55,   55,   55,   13,
       13,   14,   14,   60,   60,   61,   61,   61,   63,   63,
       64,   64,   64,   66,   66,   24,   24,   24,   24,   67,
       67,   16,   16,   16,   68,   68,   68,   15,   15,   15,
       69,   69,   70,   70,   72,   72,   71,   71,   73,   73,
       53,   53,   53,   74,   74,   56,   56,   56,   56,   56,
       56,   56,   56,   56,   56,   56,   56,   57,   57,   59,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       79,   79,   81,   80,   80,   77,   77,   91,   91,   92,
       78,   78,   93,   83,   83,   94,   94,   94,   94,   84,
       85,   85,   95,   95,   96,   97,   97,   98,   98,   87,
       87,   99,  100,  100,  101,  101,   52,   52,   52,   88,
       88,   89,   89,   90,   90,  102,  102,   82,   82,  103,
      103,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   62,   62,   62,
       62,   62,   76,   76,  105,  105,  105,  109,  109,  110,
      110,  110,  107,  107,  107,  107,  107,  107,  107,  115,
      115,  115,  116,  112,    5,    5,    5,    5,    5,   75,
       75,  106,  106,    6,    6,    6,    6,    6,    6,    6,
        6,   23,   23,   23,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,   86,
       86,   86,  111,  111,  111,  113,  113,  113,  113,  117,
      118,  118,  119,  119,  108,  108,  108,  120,  121,  121,
      122,  123,  123,  123,   34,   34,   58,   58,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124
  ];

  private static $yylen = [
        1,    1,    1,    1,    0,    4,    5,    1,    1,    2,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    3,    4,    4,    1,    3,    1,    3,    4,
        1,    3,    3,    4,    4,    5,    3,    4,    5,    6,
        0,    1,    1,    2,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    0,    1,    4,
        1,    3,    2,    6,    1,    3,    1,    3,    9,    6,
        0,    2,    0,    2,    1,    3,    1,    0,    2,    2,
        1,    3,    1,    0,    1,    1,    2,    3,    5,    1,
        2,    2,    4,    5,    0,    1,    1,    2,    1,    1,
        1,    6,    6,    4,    4,    4,    6,    4,    6,    4,
        0,    1,    1,    3,    1,    4,    6,    4,    5,    7,
        4,    7,    5,    1,    3,    2,    4,    4,    1,    3,
        2,    4,    4,    1,    2,    1,    1,    1,    1,    1,
        3,    3,    7,    3,    2,    6,    2,    7,    7,    6,
        1,    3,    5,    4,    5,    4,    1,    2,    1,    2,
        2,    3,    3,    1,    3,    3,    4,    5,    4,    5,
        2,    3,    4,    3,    4,    3,    4,    0,    1,    2,
        1,    5,    5,    7,    6,    7,    5,    2,    2,    3,
        3,    4,    5,    3,    2,    3,    2,    3,    2,    3,
        3,    3,    3,    3,    5,    5,    3,    2,    1,    2,
        1,    3,    1,    1,    2,    0,    1,    1,    2,    3,
        0,    1,    2,    1,    2,    2,    5,    7,    5,    2,
        0,    1,    1,    2,    3,    1,    3,    1,    3,    1,
        2,    2,    1,    2,    3,    2,    2,    3,    3,    2,
        1,    2,    1,    2,    1,    1,    3,    1,    3,    1,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    2,    2,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    5,    4,
        4,    5,    4,    2,    2,    4,    2,    2,    2,    2,
        2,    2,    2,    2,    3,    2,    3,    2,    1,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    2,    2,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    5,    4,    4,    5,
        4,    2,    2,    4,    2,    2,    2,    2,    2,    2,
        2,    2,    3,    2,    3,    2,    1,    1,    1,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    2,    2,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    5,    4,    4,    5,    4,    2,
        2,    4,    2,    2,    2,    2,    2,    2,    2,    2,
        3,    2,    3,    2,    1,    1,    1,    3,    5,    4,
        4,    1,    3,    3,    2,    3,    3,    1,    3,    1,
        3,    2,    1,    1,    1,    1,    1,    1,    1,    4,
        2,    3,    0,    3,    1,    3,    3,    2,    3,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        5,    3,    1,    1,    1,    2,    9,    3,    3,    2,
        1,    3,    2,    1,    2,    3,    3,    2,    1,    3,
        3,    1,    1,    3,    0,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1
  ];
  
    
  private static $yytokformat = [
    'T_IDENT' => 'identifier',
    'T_LNUM' => 'integer',
    'T_DNUM' => 'floating-point number',
    'T_SNUM' => 'number with suffix',
    'T_STRING' => 'string',
    'T_REGEXP' => 'regular expression',
    'T_TRUE' => '`true`',
    'T_FALSE' => '`false`',
    'T_NULL' => '`null`'
  ];
    
  private $yyval;
  private $yyastk;
  private $yysstk;
  private $yysp;
  private $yystate;
  private $yyloc; // current location
  
  private $lex;
  private $invalid = false;
  
  // current directory, filename and line
  private $cdir;
  private $cfile;
  
  /**
   * constructor
   *
   * @param Session $sess
   */
  public function __construct(Session $sess)
  {
    $this->sess = $sess;
  }
  
  /**
   * returns the current location (last scanned token)
   * 
   * @return Location
   */
  public function loc()
  {
    if (!$this->yyloc)
      return new Location('<unknown>', new Position(0, 0));
    
    return $this->yyloc;
  }
  
  /**
   * consumes semicolons to avoid unnecessary empty-expressions 
   * 
   * @void
   */
  private function eat_semis()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_SEMI) {
      do {
        $this->lex->skip();
        $peek = $this->lex->peek();
      } while ($peek->type === T_SEMI);

    }
  }
  
  /**
   * consumes a T_END token
   * 
   * @void
   */
  private function eat_end()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_END) {
      $this->lex->skip();
    }
  }
  
  /**
   * reports an error
   *
   * @param  Location $loc
   * @param  string   $tok  error token
   * @param  int   $num  number of expected tokens
   * @param  array   $arr expected tokens
   */
  private function report_error(Location $loc, $tok, $num, $arr) 
  {
    $fmt = 'unexpected %s';
    
    if ($num > 0) {
      // filter out T_IDENT, T_GET and T_SET
      $hid = false;
      $tmp = [];
      
      foreach ($arr as $exp) {
        if ($hid && ($exp === 'T_GET' || $exp === 'T_SET')) {
          --$num;
          continue;
        }
        
        $hid = $exp === 'T_IDENT';
        
        if ($exp === 'T_SUBST')
          $exp = 'string-concatenation';
        
        $tmp[] = $exp;
      }
      
      $arr = $tmp;
      $fmt .= ', expected ';
      
      if ($num > 1) {
        $fmt .= rtrim(str_repeat('%s, ', $num - 1), ', ');
        $fmt .= ' or ';
      }
                      
      $fmt .= '%s';
    }
    
    $var = $arr ?: [];
    array_unshift($var, $tok);
    Logger::vlog_at($loc, \phs\LOG_LEVEL_ERROR, $fmt, $var);       
  }
  
  /**
   * parse function
   * 
   * @param  mixed  $lex
   * @return Node
   */
  public function parse($lex) 
  {
    $tokid = self::TOKEN_NONE;
    
    // lexer
    if (!($lex instanceof Lexer)) {
      assert($lex instanceof Source);
      $lex = new Lexer($lex);  
    }
    
    $this->lex = $lex;
    
    $file = $this->lex->get_file();
    $this->cdir = dirname($file);
    $this->cfile = $file;
    
    
    // location
    $this->yyloc = $this->lex->loc();
    
    // stacks
    $this->yysstk = [ 0 ]; 
    $this->yyastk = [];
    
    // current state
    $yystate = 0;
    
    // error flag
    $yyerrflag = 0;

    // stack position
    $this->yysp = 0;
    
    // location stack
    $yylstk = [];
    
    // ignore semicolons at the beginning
    $this->eat_semis();
    
    for (;;) {
      if (self::$yybase[$yystate] == 0)
        $yyn = self::$yydefault[$yystate];
      else {
        if ($tokid === self::TOKEN_NONE) {
          // Fetch the next token id from the lexer
          $token = $this->lex->next();
                    
          // invalid token (regexp-scan failed)
          if ($token->type === T_INVL) {
            Logger::error_at($token->loc, 'invalid source/regexp-literal');
            return null;
          }
          
          // map the lexer token id to the internally used token id's
          if ($token->type >= 0 && $token->type < self::TOKEN_MAP_SIZE)
            $tokid = self::$translate[$token->type];
          else {
            Logger::error_at($token->loc, 'invalid token %d -> %s', $token->type, $token->value);
            return null;
          }        
          
          $this->yyloc = $token->loc;
          
          // store location
          $yylstk[$this->yysp] = $this->yyloc;
          
        } 

        if ((($yyn = self::$yybase[$yystate] + $tokid) >= 0
          && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid
          || ($yystate < self::YY2TBLSTATE
            && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + $tokid) >= 0
            && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid))
          && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT
        ) {
          /*
           * >= YYNLSTATE: shift and reduce
           * > 0: shift
           * = 0: accept
           * < 0: reduce
           * = -YYUNEXPECTED: error
           */
          if ($yyn > 0) {
            /* shift */
            
            $this->yysp++;
            
            $this->yysstk[$this->yysp] = $yystate = $yyn;
            $this->yyastk[$this->yysp] = $token;
            
            // store location
            $yylstk[$this->yysp] = $this->yyloc;
            
            $tokid = self::TOKEN_NONE;
            
            if ($yyerrflag > 0)
              $yyerrflag--;
            
            if ($yyn < self::YYNLSTATES)
              continue;

            /* $yyn >= YYNLSTATES means shift-and-reduce */
            $yyn -= self::YYNLSTATES;
          } else
            $yyn = -$yyn;
        } else
          $yyn = self::$yydefault[$yystate];
      }
      
      for (;;) {
        /* reduce/error */
        if ($yyn == 0) {
          /* accept */
          return $this->yyval;
        } elseif ($yyn != self::YYUNEXPECTED) {
          /* reduce */

          $this->{'yyn' . $yyn}();
          
          /* Goto - shift nonterminal */
          $yylen = self::$yylen[$yyn];
          $yyloc = $yylstk[$this->yysp - $yylen];
          
          $this->yysp -= $yylen;
          
          $yyn = self::$yylhs[$yyn];
          
          if (($yyp = self::$yygbase[$yyn] + $this->yysstk[$this->yysp]) >= 0
            && $yyp < self::YYGLAST && self::$yygcheck[$yyp] == $yyn)
            $yystate = self::$yygoto[$yyp];
          else
            $yystate = self::$yygdefault[$yyn];
          
          $this->yysp++;
          
          $this->yysstk[$this->yysp] = $yystate;
          $this->yyastk[$this->yysp] = $this->yyval;
          
          // set location if a real node was produced by $yyn
          if ($this->yyval instanceof Node)
            $this->yyval->loc = $yyloc;
          
          // store position
          $yylstk[$this->yysp] = $this->yyloc;
          
        } else {
          /* error */
          $this->invalid = true;
                    
          switch ($yyerrflag) {
            case 0:              
              $expa = [];
              $expn = 0;
              $base = self::$yybase[$yystate];
              
              for ($i = 0; $i < self::TOKEN_MAP_SIZE; ++$i) {
                $n = $base + $i;
                if ($n >= 0 && $n < self::YYLAST && self::$yycheck[$n] == $i
                  || $yystate < self::YY2TBLSTATE
                  && ($n = self::$yybase[$yystate + self::YYNLSTATES] + $i)
                  && $n < self::YYLAST && ($n < 0 || self::$yycheck[$n] == $i)
                ) {
                  if ($n >= 0 && self::$yyaction[$n] != self::YYUNEXPECTED) {
                    if ($expn === 4) {
                      /* Too many expected tokens */
                      $expa = null;
                      $expn = 0;
                      break;
                    }

                    $expa[] = self::$terminals[$i];
                    $expn++;
                  }
                }
              }

              $this->report_error($this->yyloc, 
                self::$terminals[$tokid], $expn, $expa);       
            case 1:
            case 2:
              $yyerrflag = 3;  
              
              while (!(($yyn = self::$yybase[$yystate] + self::YYINTERRTOK) >= 0
                && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK
                || ($yystate < self::YY2TBLSTATE
                  && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + self::YYINTERRTOK) >= 0
                  && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK))
              ) {  
                if ($this->yysp <= 0) 
                  return null;
                
                $yystate = $this->yysstk[--$this->yysp];              
              }
              
              $yyn = self::$yyaction[$yyn];
              $this->yysstk[++$this->yysp] = $yystate = $yyn;
              break;
            
            case 3:
              if ($tokid === 0) 
                return null;
              
              $tokid = -1;
              break;
          }
        }

        if ($yystate < self::YYNLSTATES)
          break;
        
        /* >= YYNLSTATES means shift-and-reduce */
        $yyn = $yystate - self::YYNLSTATES;
      }
    }
  }


  private function yyn0() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn1() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn2() 
  {
     
      $this->yyval = new ast\Unit($this->yyastk[$this->yysp-(1-1)]); 
      $this->eat_end(); 
    
  }


  private function yyn3() 
  {
     
      $this->yyval = new ast\Unit($this->yyastk[$this->yysp-(1-1)]); 
      $this->eat_end(); 
    
  }


  private function yyn4() 
  {
    
      $this->yyval = new ast\Unit(null);
      $this->eat_end();
    
  }


  private function yyn5() 
  {
     
      $this->yyval = new ast\Module($this->yyastk[$this->yysp-(4-2)], null, $this->yyastk[$this->yysp-(4-4)]); 
      $this->eat_semis();
    
  }


  private function yyn6() 
  {
    
      $this->yyval = new ast\Module(null, $this->yyastk[$this->yysp-(5-3)]->type, $this->yyastk[$this->yysp-(5-5)]);
      $this->eat_semis();
    
  }


  private function yyn7() 
  {
     $this->yyval = new ast\Content($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn8() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn9() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn10() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn11() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn12() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn13() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn14() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn15() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn16() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn17() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn18() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn19() 
  {
     $this->yyval = null; 
  }


  private function yyn20() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn21() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn22() 
  {
     
      $this->yyval = new ast\UseDecl($this->yyastk[$this->yysp-(3-2)], false); 
      $this->eat_semis(); 
    
  }


  private function yyn23() 
  {
    
      $this->yyval = new ast\UseDecl($this->yyastk[$this->yysp-(4-3)], true);
      $this->eat_semis();
    
  }


  private function yyn24() 
  {
    
      $this->yyval = new ast\UseDecl($this->yyastk[$this->yysp-(4-3)], false); 
      $this->eat_semis(); 
    
  }


  private function yyn25() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn26() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn27() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn28() 
  {
     $this->yyval = new ast\UseAlias($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn29() 
  {
     $this->yyval = new ast\UseUnpack($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn30() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn31() 
  {
     $this->yyval = new ast\LabelDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn32() 
  {
     
      $this->yyval = new ast\RequireDecl(false, $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn33() 
  {
     
      $this->yyval = new ast\RequireDecl(true, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn34() 
  {
    
      $this->yyval = new ast\Module($this->yyastk[$this->yysp-(4-2)], null, null);
      $this->eat_semis();
    
  }


  private function yyn35() 
  {
     
      $this->yyval = new ast\Module($this->yyastk[$this->yysp-(5-2)], null, $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn36() 
  {
    
      $this->yyval = new ast\Module(null, null, null);
      $this->eat_semis();
    
  }


  private function yyn37() 
  {
     
      $this->yyval = new ast\Module(null, null, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn38() 
  {
    
      $this->yyval = new ast\Module(null, $this->yyastk[$this->yysp-(5-3)]->type, null);
      $this->eat_semis();
    
  }


  private function yyn39() 
  {
    
      $this->yyval = new ast\Module(null, $this->yyastk[$this->yysp-(6-3)]->type, $this->yyastk[$this->yysp-(6-5)]);
      $this->eat_semis();
    
  }


  private function yyn40() 
  {
     $this->yyval = null; 
  }


  private function yyn41() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn42() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn43() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn44() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn45() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn46() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn47() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn48() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn49() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn50() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn51() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn52() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn53() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn54() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn55() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn56() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn57() 
  {
     $this->yyval = null; 
  }


  private function yyn58() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn59() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn60() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn61() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn62() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn63() 
  {
     
      $this->yyval = new ast\EnumDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn64() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn65() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn66() 
  {
     $this->yyval = new ast\EnumVar($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn67() 
  {
     $this->yyval = new ast\EnumVar($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn68() 
  {
     
      $this->yyval = new ast\ClassDecl($this->yyastk[$this->yysp-(9-1)], $this->yyastk[$this->yysp-(9-3)], $this->yyastk[$this->yysp-(9-4)], $this->yyastk[$this->yysp-(9-5)], $this->yyastk[$this->yysp-(9-7)], $this->yyastk[$this->yysp-(9-8)]); 
      $this->eat_semis(); 
    
  }


  private function yyn69() 
  {
     
      $this->yyval = new ast\ClassDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-5)], null, null, true); 
      $this->eat_semis(); 
    
  }


  private function yyn70() 
  {
     $this->yyval = null; 
  }


  private function yyn71() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn72() 
  {
     $this->yyval = null; 
  }


  private function yyn73() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn74() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn75() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn76() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn77() 
  {
     $this->yyval = null; 
  }


  private function yyn78() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn79() 
  {
     $this->yyval = null; 
  }


  private function yyn80() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn81() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn82() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn83() 
  {
     $this->yyval = null; 
  }


  private function yyn84() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn85() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn86() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn87() 
  {
     
      $this->yyval = new ast\TraitUse($this->yyastk[$this->yysp-(3-2)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn88() 
  {
     
      $this->yyval = new ast\TraitUse($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis();
    
  }


  private function yyn89() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn90() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn91() 
  {
     
      $this->yyval = new ast\TraitItem($this->yyastk[$this->yysp-(2-1)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn92() 
  {
    
      $this->yyval = new ast\TraitItem($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null);
      $this->eat_semis();
    
  }


  private function yyn93() 
  {
     
      $this->yyval = new ast\TraitItem($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn94() 
  {
     $this->yyval = []; 
  }


  private function yyn95() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn96() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn97() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn98() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn99() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn100() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn101() 
  {
     $this->yyval = new ast\CtorDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn102() 
  {
     
      $this->yyval = new ast\CtorDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn103() 
  {
     $this->yyval = new ast\DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn104() 
  {
     
      $this->yyval = new ast\DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn105() 
  {
     $this->yyval = new ast\GetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn106() 
  {
     
      $this->yyval = new ast\GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn107() 
  {
     $this->yyval = new ast\SetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn108() 
  {
     
      $this->yyval = new ast\GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn109() 
  {
     $this->yyval = new ast\NestedMods($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn110() 
  {
     $this->yyval = []; 
  }


  private function yyn111() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn112() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn113() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn114() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn115() 
  {
     $this->yyval = new ast\ThisParam($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], null, false); 
  }


  private function yyn116() 
  {
     $this->yyval = new ast\ThisParam($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-6)], false); 
  }


  private function yyn117() 
  {
     $this->yyval = new ast\ThisParam(null, $this->yyastk[$this->yysp-(4-4)], null, true); 
  }


  private function yyn118() 
  {
     $this->yyval = new ast\ThisParam($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-5)], null, true); 
  }


  private function yyn119() 
  {
     
      $this->yyval = new ast\TraitDecl($this->yyastk[$this->yysp-(7-1)], $this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-6)]); 
      $this->eat_semis(); 
    
  }


  private function yyn120() 
  {
     
      $this->yyval = new ast\TraitDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null, null, true); 
      $this->eat_semis(); 
    
  }


  private function yyn121() 
  {
     
      $this->yyval = new ast\IfaceDecl($this->yyastk[$this->yysp-(7-1)], $this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-6)]); 
      $this->eat_semis(); 
    
  }


  private function yyn122() 
  {
     
      $this->yyval = new ast\IfaceDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], null, true); 
      $this->eat_semis(); 
    
  }


  private function yyn123() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn124() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn125() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn126() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn127() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], true); 
  }


  private function yyn128() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn129() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn130() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn131() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn132() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], true); 
  }


  private function yyn133() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn134() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn135() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn136() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn137() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn138() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn139() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn140() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn141() 
  {
     
      $this->yyval = new ast\VarDecl(null, $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn142() 
  {
    
      $this->yyval = new ast\VarList($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-6)]);
      $this->eat_semis();
    
  }


  private function yyn143() 
  {
     
      $this->yyval = new ast\VarDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn144() 
  {
     $this->yyval = new ast\VarDecl(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn145() 
  {
     $this->yyval = new ast\VarList($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn146() 
  {
     $this->yyval = new ast\VarDecl($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn147() 
  {
    
      $this->yyval = new ast\FnDecl($this->yyastk[$this->yysp-(7-1)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-6)], $this->yyastk[$this->yysp-(7-7)]); 
    
  }


  private function yyn148() 
  {
     
      $this->yyval = new ast\FnDecl($this->yyastk[$this->yysp-(7-1)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-6)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn149() 
  {
     
      $this->yyval = new ast\FnDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-5)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn150() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn151() 
  {
     
      $this->yyval = $this->yyastk[$this->yysp-(3-2)];
      $this->eat_semis(); 
    
  }


  private function yyn152() 
  {
     $this->yyval = new ast\FnExpr($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn153() 
  {
     $this->yyval = new ast\FnExpr(null, $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn154() 
  {
     $this->yyval = new ast\FnExpr($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn155() 
  {
     $this->yyval = new ast\FnExpr(null, $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn156() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn157() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn158() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn159() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn160() 
  {
     $this->yyval = null; 
  }


  private function yyn161() 
  {
     $this->yyval = null; 
  }


  private function yyn162() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn163() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn164() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn165() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn166() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null, true); 
  }


  private function yyn167() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], false); 
  }


  private function yyn168() 
  {
     $this->yyval = new ast\Param(true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)], null, false); 
  }


  private function yyn169() 
  {
     $this->yyval = new ast\Param(true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], null, true); 
  }


  private function yyn170() 
  {
     $this->yyval = new ast\Param(false, null, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn171() 
  {
     $this->yyval = new ast\Param(false, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn172() 
  {
     $this->yyval = new ast\Param(false, null, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn173() 
  {
     $this->yyval = new ast\Param(true, null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn174() 
  {
     $this->yyval = new ast\Param(true, null, $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null, true); 
  }


  private function yyn175() 
  {
     $this->yyval = new ast\RestParam($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn176() 
  {
     $this->yyval = new ast\RestParam($this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)], true); 
  }


  private function yyn177() 
  {
     $this->yyval = null; 
  }


  private function yyn178() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn179() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn180() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn181() 
  {
     $this->yyval = new ast\DoStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn182() 
  {
     $this->yyval = new ast\IfStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn183() 
  {
     $this->yyval = new ast\ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn184() 
  {
     $this->yyval = new ast\ForStmt($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], null, $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn185() 
  {
     $this->yyval = new ast\ForStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn186() 
  {
     $this->yyval = null; 
  }


  private function yyn187() 
  {
     $this->yyval = new ast\ForStmt(null, null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn188() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(2-2)], null, null); 
  }


  private function yyn189() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn190() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(3-2)], null, $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn191() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn192() 
  {
     $this->yyval = new ast\PhpStmt($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn193() 
  {
     $this->yyval = new ast\GotoStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn194() 
  {
     $this->yyval = new ast\TestStmt(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn195() 
  {
     $this->yyval = new ast\TestStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn196() 
  {
     $this->yyval = new ast\BreakStmt(null); 
  }


  private function yyn197() 
  {
     $this->yyval = new ast\BreakStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn198() 
  {
     $this->yyval = new ast\ContinueStmt(null); 
  }


  private function yyn199() 
  {
     $this->yyval = new ast\ContinueStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn200() 
  {
     $this->yyval = new ast\PrintStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn201() 
  {
     $this->yyval = new ast\ThrowStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn202() 
  {
     $this->yyval = new ast\WhileStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn203() 
  {
     $this->yyval = new ast\AssertStmt($this->yyastk[$this->yysp-(3-2)], null); 
  }


  private function yyn204() 
  {
     $this->yyval = new ast\AssertStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn205() 
  {
     $this->yyval = new ast\SwitchStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn206() 
  {
     $this->yyval = new ast\ReturnStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn207() 
  {
     $this->yyval = new ast\ReturnStmt(null); 
  }


  private function yyn208() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn209() 
  {
     $this->yyval = null; 
  }


  private function yyn210() 
  {
     $this->yyval = new ast\ForInPair(null, $this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn211() 
  {
     $this->yyval = new ast\ForInPair($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn212() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn213() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn214() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn215() 
  {
     $this->yyval = null; 
  }


  private function yyn216() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn217() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn218() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn219() 
  {
     $this->yyval = new ast\ElifItem($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn220() 
  {
     $this->yyval = null; 
  }


  private function yyn221() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn222() 
  {
     $this->yyval = new ast\ElseItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn223() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn224() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn225() 
  {
     $this->yyval = new ast\CatchItem(null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn226() 
  {
     $this->yyval = new ast\CatchItem($this->yyastk[$this->yysp-(5-3)], null, $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn227() 
  {
     $this->yyval = new ast\CatchItem($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn228() 
  {
     $this->yyval = null; 
  }


  private function yyn229() 
  {
     $this->yyval = new ast\FinallyItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn230() 
  {
     $this->yyval = null; 
  }


  private function yyn231() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn232() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn233() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn234() 
  {
     $this->yyval = new ast\PhpUse($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn235() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn236() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn237() 
  {
     $this->yyval = new ast\PhpUseItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn238() 
  {
     $this->yyval = new ast\PhpUseItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn239() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn240() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn241() 
  {
     $this->yyval = new ast\CaseItem($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn242() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn243() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn244() 
  {
     $this->yyval = new ast\CaseLabel($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn245() 
  {
     $this->yyval = new ast\CaseLabel(null); 
  }


  private function yyn246() 
  {
     $this->yyval = new ast\Block([]); 
  }


  private function yyn247() 
  {
     $this->yyval = new ast\Block($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn248() 
  {
     $this->yyval = null; 
  }


  private function yyn249() 
  {
     
      $this->yyval = new ast\ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
      $this->eat_semis(); 
    
  }


  private function yyn250() 
  {
     
      $this->yyval = new ast\ExprStmt(null); 
      $this->eat_semis(); 
    
  }


  private function yyn251() 
  {
     $this->yyval = new ast\ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn252() 
  {
     $this->yyval = new ast\ExprStmt(null); 
  }


  private function yyn253() 
  {
     $this->yyval = new ast\ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn254() 
  {
     $this->yyval = new ast\ExprStmt(null); 
  }


  private function yyn255() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn256() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn257() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn258() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn259() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn260() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn261() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn262() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn263() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn264() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn265() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn266() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn267() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn268() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn269() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn270() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn271() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn272() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn273() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn274() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn275() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn276() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn277() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn278() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn279() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn280() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn281() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn282() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn283() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn284() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn285() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn286() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn287() 
  {
     $this->yyval = new ast\CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn288() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn289() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn290() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn291() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn292() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn293() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn294() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn295() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn296() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn297() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn298() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn299() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn300() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn301() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn302() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn303() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn304() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn305() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn306() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn307() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn308() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)], true); 
  }


  private function yyn309() 
  {
     $this->yyval = new ast\OffsetExpr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn310() 
  {
     $this->yyval = null; 
  }


  private function yyn311() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn312() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn313() 
  {
     $this->yyval = new ast\CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn314() 
  {
     $this->yyval = new ast\YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn315() 
  {
     $this->yyval = new ast\YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn316() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn317() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn318() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn319() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn320() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn321() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn322() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn323() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn324() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn325() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn326() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn327() 
  {
     $this->yyval = new ast\DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn328() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn329() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn330() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn331() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn332() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn333() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn334() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn335() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn336() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn337() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn338() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn339() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn340() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn341() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn342() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn343() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn344() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn345() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn346() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn347() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn348() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn349() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn350() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn351() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn352() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn353() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn354() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn355() 
  {
     $this->yyval = new ast\CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn356() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn357() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn358() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn359() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn360() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn361() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn362() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn363() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn364() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn365() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn366() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn367() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn368() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn369() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn370() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn371() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn372() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn373() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn374() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn375() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn376() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)], true); 
  }


  private function yyn377() 
  {
     $this->yyval = new ast\OffsetExpr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn378() 
  {
     $this->yyval = null; 
  }


  private function yyn379() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn380() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn381() 
  {
     $this->yyval = new ast\CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn382() 
  {
     $this->yyval = new ast\YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn383() 
  {
     $this->yyval = new ast\YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn384() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn385() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn386() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn387() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn388() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn389() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn390() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn391() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn392() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn393() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn394() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn395() 
  {
     $this->yyval = new ast\DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn396() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn397() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn398() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn399() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn400() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn401() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn402() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn403() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn404() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn405() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn406() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn407() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn408() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn409() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn410() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn411() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn412() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn413() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn414() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn415() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn416() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn417() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn418() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn419() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn420() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn421() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn422() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn423() 
  {
     $this->yyval = new ast\CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn424() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn425() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn426() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn427() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn428() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn429() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn430() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn431() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn432() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn433() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn434() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn435() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn436() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn437() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn438() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn439() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn440() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn441() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn442() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn443() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn444() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)], true); 
  }


  private function yyn445() 
  {
     $this->yyval = new ast\OffsetExpr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn446() 
  {
     $this->yyval = null; 
  }


  private function yyn447() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn448() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn449() 
  {
     $this->yyval = new ast\CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn450() 
  {
     $this->yyval = new ast\YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn451() 
  {
     $this->yyval = new ast\YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn452() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn453() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn454() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn455() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn456() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn457() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn458() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn459() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn460() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn461() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn462() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn463() 
  {
     $this->yyval = new ast\DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn464() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn465() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn466() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn467() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn468() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)], true); 
  }


  private function yyn469() 
  {
     $this->yyval = new ast\OffsetExpr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn470() 
  {
     $this->yyval = null; 
  }


  private function yyn471() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn472() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn473() 
  {
     $this->yyval = null; 
  }


  private function yyn474() 
  {
     $this->yyval = null; 
  }


  private function yyn475() 
  {
     $this->yyval = null; 
  }


  private function yyn476() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn477() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn478() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn479() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn480() 
  {
     $this->yyval = new ast\NamedArg($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn481() 
  {
     $this->yyval = new ast\RestArg($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn482() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn483() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn484() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn485() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn486() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn487() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn488() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn489() 
  {
     
      if ($this->yyastk[$this->yysp-(4-2)] === null || (count($this->yyastk[$this->yysp-(4-2)]) === 1 && $this->yyastk[$this->yysp-(4-3)] === null))
        $this->yyval = new ast\ParenExpr($this->yyastk[$this->yysp-(4-2)][0]);
      else
        $this->yyval = new ast\TupleExpr($this->yyastk[$this->yysp-(4-2)]);
    
  }


  private function yyn490() 
  {
     $this->yyval = new ast\TupleExpr(null); 
  }


  private function yyn491() 
  {
     $this->yyval = null; 
  }


  private function yyn492() 
  {
     $this->lex->scan_regexp($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn493() 
  {
     $this->yyval = new ast\RegexpLit($this->yyastk[$this->yysp-(3-3)]->value); 
  }


  private function yyn494() 
  {
     $this->yyval = new ast\Name($this->yyastk[$this->yysp-(1-1)], false); 
  }


  private function yyn495() 
  {
     $this->yyval = new ast\Name($this->yyastk[$this->yysp-(3-3)], false, $this->yyastk[$this->yysp-(3-1)]->type); 
  }


  private function yyn496() 
  {
     $this->yyval = new ast\Name($this->yyastk[$this->yysp-(3-3)], false, $this->yyastk[$this->yysp-(3-1)]->type); 
  }


  private function yyn497() 
  {
     $this->yyval = new ast\Name($this->yyastk[$this->yysp-(2-2)], true); 
  }


  private function yyn498() 
  {
     $this->yyastk[$this->yysp-(3-1)]->add($this->yyastk[$this->yysp-(3-3)]); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn499() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn500() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn501() 
  {
     $this->yyval = new ast\TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn502() 
  {
     $this->yyval = new ast\SelfExpr; 
  }


  private function yyn503() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn504() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn505() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn506() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn507() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn508() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn509() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn510() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn511() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn512() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn513() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn514() 
  {
     $this->yyval = new ast\ThisExpr; 
  }


  private function yyn515() 
  {
     $this->yyval = new ast\SuperExpr; 
  }


  private function yyn516() 
  {
     $this->yyval = new ast\SelfExpr; 
  }


  private function yyn517() 
  {
     $this->yyval = new ast\NullLit; 
  }


  private function yyn518() 
  {
     $this->yyval = new ast\TrueLit; 
  }


  private function yyn519() 
  {
     $this->yyval = new ast\FalseLit; 
  }


  private function yyn520() 
  {
     $this->yyval = new ast\KStrLit($this->cdir); 
  }


  private function yyn521() 
  {
     $this->yyval = new ast\KStrLit($this->cfile); 
  }


  private function yyn522() 
  {
     $this->yyval = new ast\LNumLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->line); 
  }


  private function yyn523() 
  {
     $this->yyval = new ast\LNumLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->coln); 
  }


  private function yyn524() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn525() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn526() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn527() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn528() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn529() 
  {
     $this->yyval = new ast\StrLit($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn530() 
  {
     $this->yyastk[$this->yysp-(5-1)]->add($this->yyastk[$this->yysp-(5-4)]); $this->yyval = $this->yyastk[$this->yysp-(5-1)]; 
  }


  private function yyn531() 
  {
     $this->yyastk[$this->yysp-(3-1)]->add(new ast\StrLit($this->yyastk[$this->yysp-(3-3)])); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn532() 
  {
     $this->yyval = new ast\LNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn533() 
  {
     $this->yyval = new ast\DNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn534() 
  {
     $this->yyval = new ast\SNumLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->suffix); 
  }


  private function yyn535() 
  {
     $this->yyval = new ast\ArrLit(null); 
  }


  private function yyn536() 
  {
     $this->yyval = new ast\ArrGen($this->yyastk[$this->yysp-(9-2)], $this->yyastk[$this->yysp-(9-5)], $this->yyastk[$this->yysp-(9-7)]); 
  }


  private function yyn537() 
  {
     $this->yyval = new ast\ArrLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn538() 
  {
     $this->yyval = null; 
  }


  private function yyn539() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn540() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn541() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn542() 
  {
     $this->yyval = new ast\SpreadExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn543() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn544() 
  {
     $this->yyval = new ast\ObjLit(null); 
  }


  private function yyn545() 
  {
     $this->yyval = new ast\ObjLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn546() 
  {
     $this->yyval = null; 
  }


  private function yyn547() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn548() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn549() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn550() 
  {
     $this->yyval = new ast\ObjPair($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn551() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn552() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn553() 
  {
     $this->yyval = new ast\ObjKey($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn554() 
  {
     $this->yyval = null; 
  }


  private function yyn555() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn556() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn557() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn558() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn559() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn560() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn561() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn562() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn563() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn564() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn565() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn566() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn567() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn568() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn569() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn570() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn571() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn572() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn573() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn574() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn575() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn576() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn577() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn578() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn579() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn580() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn581() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn582() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn583() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn584() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn585() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn586() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn587() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn588() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn589() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn590() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn591() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn592() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn593() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn594() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn595() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn596() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn597() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn598() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn599() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn600() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn601() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn602() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn603() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn604() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn605() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn606() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn607() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn608() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn609() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn610() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn611() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn612() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn613() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn614() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn615() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn616() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn617() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn618() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn619() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn620() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn621() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn622() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn623() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn624() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn625() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }

}

