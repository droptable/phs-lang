<?php

/**
 * this parser-skeleton is based on the awesome
 * work of nikic (https://github.com/nikic)
 * with some extensions (error-recovery and location-tracking) 
 */

/**
 * This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *   the grammar file gen/parser.y
 *   the parser skeleton gen/kymacc.php.parser
 *
 * The skeleton for this parser was written by Moriyoshi Koizumi and is based on
 * the work by Masato Bito and is in the PUBLIC DOMAIN.
 */

namespace phs;


const YYERRTOK = 256;
const T_ARR = 257;
const T_YIELD = 258;
const T_APLUS = 259;
const T_AMINUS = 260;
const T_AMUL = 261;
const T_ADIV = 262;
const T_AMOD = 263;
const T_APOW = 264;
const T_ACONCAT = 265;
const T_ABIT_OR = 266;
const T_ABIT_AND = 267;
const T_ABIT_XOR = 268;
const T_ABOOL_OR = 269;
const T_ABOOL_AND = 270;
const T_ABOOL_XOR = 271;
const T_ASHIFT_L = 272;
const T_ASHIFT_R = 273;
const T_AREF = 274;
const T_RANGE = 275;
const T_BOOL_OR = 276;
const T_BOOL_XOR = 277;
const T_BOOL_AND = 278;
const T_EQ = 279;
const T_NEQ = 280;
const T_IN = 281;
const T_NIN = 282;
const T_IS = 283;
const T_NIS = 284;
const T_GTE = 285;
const T_LTE = 286;
const T_SL = 287;
const T_SR = 288;
const T_AS = 289;
const T_REST = 290;
const T_DEL = 291;
const T_INC = 292;
const T_DEC = 293;
const T_POW = 294;
const T_NEW = 295;
const T_DDDOT = 296;
const T_FN = 297;
const T_LET = 298;
const T_USE = 299;
const T_ENUM = 300;
const T_CLASS = 301;
const T_TRAIT = 302;
const T_IFACE = 303;
const T_MODULE = 304;
const T_REQUIRE = 305;
const T_IDENT = 306;
const T_LNUM = 307;
const T_DNUM = 308;
const T_SNUM = 309;
const T_STRING = 310;
const T_REGEXP = 311;
const T_TRUE = 312;
const T_FALSE = 313;
const T_NULL = 314;
const T_THIS = 315;
const T_SUPER = 316;
const T_SELF = 317;
const T_GET = 318;
const T_SET = 319;
const T_DO = 320;
const T_IF = 321;
const T_ELSIF = 322;
const T_ELSE = 323;
const T_FOR = 324;
const T_TRY = 325;
const T_GOTO = 326;
const T_BREAK = 327;
const T_CONTINUE = 328;
const T_PRINT = 329;
const T_THROW = 330;
const T_CATCH = 331;
const T_FINALLY = 332;
const T_WHILE = 333;
const T_ASSERT = 334;
const T_SWITCH = 335;
const T_CASE = 336;
const T_DEFAULT = 337;
const T_RETURN = 338;
const T_CONST = 339;
const T_FINAL = 340;
const T_GLOBAL = 341;
const T_STATIC = 342;
const T_EXTERN = 343;
const T_PUBLIC = 344;
const T_PRIVATE = 345;
const T_PROTECTED = 346;
const T_SEALED = 347;
const T_INLINE = 348;
const T_UNSAFE = 349;
const T_PHP = 350;
const T_TEST = 351;
const T_NL = 352;
const T_SUBST = 353;
const T_TINT = 354;
const T_TBOOL = 355;
const T_TFLOAT = 356;
const T_TSTRING = 357;
const T_CDIR = 358;
const T_CFILE = 359;
const T_CLINE = 360;
const T_CCOLN = 361;
const T_CFN = 362;
const T_CCLASS = 363;
const T_CTRAIT = 364;
const T_CMETHOD = 365;
const T_CMODULE = 366;
const T_INVL = 367;
const T_END = 368;

require_once 'ast.php';
require_once 'lexer.php';

use phs\ast;
use phs\ast\Node;

class Parser
{
  const TOKEN_NONE    = -1;
  const TOKEN_INVALID = 136;

  const TOKEN_MAP_SIZE = 369;

  const YYLAST       = 1700;
  const YY2TBLSTATE  = 617;
  const YYGLAST      = 1050;
  const YYNLSTATES   = 707;
  const YYINTERRTOK  = 1;
  const YYUNEXPECTED = 32767;
  const YYDEFAULT    = -32766;
  
  // @var Session
  private $sess;

  /* @var array Map of token ids to their respective names */
  private static $terminals = [
    "EOF",
    "error",
    "','",
    "T_ARR",
    "T_YIELD",
    "T_APLUS",
    "T_AMINUS",
    "T_AMUL",
    "T_ADIV",
    "T_AMOD",
    "T_APOW",
    "T_ACONCAT",
    "T_ABIT_OR",
    "T_ABIT_AND",
    "T_ABIT_XOR",
    "T_ABOOL_OR",
    "T_ABOOL_AND",
    "T_ABOOL_XOR",
    "T_ASHIFT_L",
    "T_ASHIFT_R",
    "T_AREF",
    "'='",
    "T_RANGE",
    "'?'",
    "':'",
    "T_BOOL_OR",
    "T_BOOL_XOR",
    "T_BOOL_AND",
    "'|'",
    "'^'",
    "'&'",
    "T_EQ",
    "T_NEQ",
    "T_IN",
    "T_NIN",
    "T_IS",
    "T_NIS",
    "T_GTE",
    "T_LTE",
    "'>'",
    "'<'",
    "T_SL",
    "T_SR",
    "'+'",
    "'-'",
    "'~'",
    "'*'",
    "'/'",
    "'%'",
    "T_AS",
    "T_REST",
    "T_DEL",
    "T_INC",
    "T_DEC",
    "'!'",
    "T_POW",
    "T_NEW",
    "'.'",
    "'['",
    "']'",
    "'('",
    "')'",
    "T_DDDOT",
    "T_FN",
    "T_LET",
    "T_USE",
    "T_ENUM",
    "T_CLASS",
    "T_TRAIT",
    "T_IFACE",
    "T_MODULE",
    "T_REQUIRE",
    "T_IDENT",
    "T_LNUM",
    "T_DNUM",
    "T_SNUM",
    "T_STRING",
    "T_REGEXP",
    "T_TRUE",
    "T_FALSE",
    "T_NULL",
    "T_THIS",
    "T_SUPER",
    "T_SELF",
    "T_GET",
    "T_SET",
    "T_DO",
    "T_IF",
    "T_ELSIF",
    "T_ELSE",
    "T_FOR",
    "T_TRY",
    "T_GOTO",
    "T_BREAK",
    "T_CONTINUE",
    "T_PRINT",
    "T_THROW",
    "T_CATCH",
    "T_FINALLY",
    "T_WHILE",
    "T_ASSERT",
    "T_SWITCH",
    "T_CASE",
    "T_DEFAULT",
    "T_RETURN",
    "T_CONST",
    "T_FINAL",
    "T_GLOBAL",
    "T_STATIC",
    "T_EXTERN",
    "T_PUBLIC",
    "T_PRIVATE",
    "T_PROTECTED",
    "T_SEALED",
    "T_INLINE",
    "T_UNSAFE",
    "T_PHP",
    "T_TEST",
    "T_SUBST",
    "T_TINT",
    "T_TBOOL",
    "T_TFLOAT",
    "T_TSTRING",
    "T_CDIR",
    "T_CFILE",
    "T_CLINE",
    "T_CCOLN",
    "T_CFN",
    "T_CCLASS",
    "T_CTRAIT",
    "T_CMETHOD",
    "T_CMODULE",
    "T_END",
    "';'",
    "'{'",
    "'}'"
    , "???"
  ];

  /* @var array Map which translates lexer tokens to internal tokens */
  private static $translate = [
        0,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,   54,  136,  136,  136,   48,   30,  136,
       60,   61,   46,   43,    2,   44,   57,   47,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,   24,  133,
       40,   21,   39,   23,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,   58,  136,   59,   29,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  134,   28,  135,   45,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,    1,    3,    4,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   20,   22,   25,   26,   27,   31,
       32,   33,   34,   35,   36,   37,   38,   41,   42,   49,
       50,   51,   52,   53,   55,   56,   62,   63,   64,   65,
       66,   67,   68,   69,   70,   71,   72,   73,   74,   75,
       76,   77,   78,   79,   80,   81,   82,   83,   84,   85,
       86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
       96,   97,   98,   99,  100,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
      116,  117,  136,  118,  119,  120,  121,  122,  123,  124,
      125,  126,  127,  128,  129,  130,  131,  136,  132
  ];

  private static $yyaction = [
     1304,  246,  247,  248,  295,  296,  297,  298,  325,  211,
      427,  428,  299,  300,  301,  302,  303,  304,  305,  306,
      307,  308,  309,  310,  429, 1229,  521, 1130, 1131, 1309,
      311, 1308,   11,  148,    0,  133,  532,  249,  250,  251,
      425,  456,  322, 1062, 1063, 1307,  252, 1306,   10,  145,
      447,  133, 1305,  147,  670,  291,  292,  293,  294, 1258,
     1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1211,-32766,
    -32766,-32766,-32766,  622, 1267, 1268, 1269, 1270, 1271, 1272,
     1212, 1213, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
     1281, 1291, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
     1290, 1292, 1293, 1301, 1294, 1295, 1296, 1297, 1298, 1299,
     1300,  443, 1302, 1303,   14, 1310, 1311, 1312, 1313, 1314,
     1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,   -6,  627,
      429,  138,  150, 1130, 1131,  636,  311,  664,  843,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,  151,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766, -153,  650,  517,  518,
      519,  152,  153,  154,  292,  293,  294,-32766,-32766,  448,
      155,  156,  157,  734,  418,  317,    2,  861,  682,  669,
     1182,  -36,  463,  444,  -36,  -36,  -36,  -36,  441,  139,
      238,  239,  423,  424,  240,  241,  242,  243,  244,  245,
      246,  247,  248,  658,   21,  597,  460,  170,  547,  598,
      514,  468,  469,  149,  158, -153,  787,  599,  159,  600,
      452,  254,  140,  747,  748,  749,  750,  756,  629,  752,
      753,  754,  755,  757,  630,  541,   -4,  627,   14,   14,
      150,  625, 1211,  384,  512,-32766,  695,-32766,-32766,-32766,
      725,  956,   12,   -6, 1212, 1213,  650,-32766,-32766,  638,
      636,-32766,-32766,-32766,-32766, -159,  151,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,  252,  609,   10,  145,  152,
      153,  154,   11,  148,  327,  133,  867,  448,  155,  156,
      157,  328,  418,  864,  313, 1206, 1207, 1208, 1209,  -36,
      463,  444,  -36,  -36,  -36,  -36,  440,  139,-32767,-32767,
    -32767,-32767,-32767,-32767,-32767,-32767,  244,  245,  246,  247,
      248,  681,   21,  597, -159,  385,  547,  598,  514,  468,
      469,  149,  158,  457,   14,  599,  159,  600,  955,  665,
      140,  747,  748,  749,  750,  756,  629,  752,  753,  754,
      755,  757,  630,  541,  627,  638,  651,  150,  308,  309,
      310,  429,  293,  294, 1130, 1131,  641,  311,  725,  956,
       12,-32766,-32766,-32766,-32766,  940,  523,-32767,-32767,-32767,
    -32767,-32767,-32767,  151,  857,  909,  458,   14,  267,  408,
      263, 1206, 1207, 1208, 1209,  774,  152,  153,  154, 1180,
      321,  531,  460,  525,  448,  155,  156,  157,  636,  418,
      526,  331, -209,  870,  253,  211,  -36,  463,  444,  -36,
      -36,  -36,  -36,  441,  139,  959, 1196,-32766,-32766,  513,
      463, 1229,  704,  -98,   14,  484,  146,  511,-32766,   21,
      597,  701,    7,  547,  598,  514,  468,  469,  149,  158,
      533,  534,  599,  159,  600,  638,   14,  140,  747,  748,
      749,  750,  756,  629,  752,  753,  754,  755,  757,  630,
      541,  627, 1231,  786,  150,  463,  508,  636,-32766,-32766,
      549,  608,  136,-32766,  334,  725,  956,   12,  739,  333,
     1244, 1206, 1207, 1208, 1209,  533,  534,  314,  676,  269,
      151,  -83,  817,  394,  764,  595,    4,    3,  782,  506,
      815,  594,  332,  152,  153,  154,  319,  876,  326,  335,
      294,  448,  155,  156,  157,  878,  418,  880,  882,-32766,
      264,  330,  950,  -36,  463,  444,  -36,  -36,  -36,  -36,
      441,  139,  270,  315,   20,  268,  -82,  951,  229,  265,
      446,  455,  271,  323,  316, 1211,   21,  597,  318,  439,
      547,  598,  514,  468,  469,  149,  158, 1212, 1213,  599,
      159,  600,  497,  530,  140,  747,  748,  749,  750,  756,
      629,  752,  753,  754,  755,  757,  630,  541,  747,  748,
      749,  750,  756,  751,  752,  753,  754,  755,  757,  461,
      312,  329,  725,  956,   12,  741,  212,  213,  214,  215,
      216,  217,  218,  219,  220,  221,  222,  223,  224,  225,
      226,  451,  227,  228,  144,  529,  230,  231,  232,  233,
      234,  235,  236,  237,  238,  239,  423,  424,  240,  241,
      242,  243,  244,  245,  246,  247,  248,  249,  250,  251,
      425,  639,  627, 1062, 1063,  150,  252,  168,   10,  145,
      267,  133,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,  151,-32766,-32766,-32766,-32766,-32766,  528,  526,  531,
      311,   18, 1236,   19,  152,  153,  154,   17, 1229,  702,
      168, 1152,  448,  155,  156,  157, 1238,  418, 1237, 1235,
       16, 1176, 1084, 1016,  -36,  463,  444,  -36,  -36,  -36,
      -36,  441,  139, 1151, 1175, 1083, 1015,  503,  509,  507,
      442,  383,  364,  141,  522,   30, 1199,   21,  597,  554,
      621,  547,  598,  514,  468,  469,  149,  158,   28,  696,
      599,  159,  600, 1178, 1253,  140,  747,  748,  749,  750,
      756,  629,  752,  753,  754,  755,  757,  630,  541,   27,
      688,   29, 1197, 1195, 1179, 1181,  856,   24,  626,  671,
       26,   15,  614,  725,  956,   12,  171,  172,  173,  174,
      175,  176,  177,  178,  179,  180,  181,  182,  183,  184,
      185,  450,  186,  187,  142,  516,  188,  189,  190,  191,
      192,  193,  194,  195,  196,  197,  420,  421,  198,  199,
      200,  201,  202,  203,  204,  205,  206,  207,  208,  209,
      422,  459,  627,  994,  995,  150,  210,  445,    9,  143,
      655,  169,  607,    0,  563,    0,    0,    0,    0,  659,
        0,    0,  255,  788,  915,  799,  797,  903,    0,    0,
      907,  151,  912,  738,  837,  737,  904,  902,  729,  906,
      957,  920,  728,  846,  152,  153,  154,  844,  256,  958,
      913,  801,  448,  155,  156,  157,  836,  418,  838,  803,
      899,  257,  258,  259,  -36,  463,  910,  486,  887,  453,
      260,  261,  262,  905,  426,  396,    0,  324,  272,  266,
        3,  466,  464,  592,  539,    0,  504,   21,  597,   12,
      273,  547,  598,  514,  468,  469,  149,  158,  898,   14,
      599,  159,  600, -240, -240,  140,  747,  748,  749,  750,
      756,  751,  752,  753,  754,  755,  757,  630,  541,  627,
      638,  911,  150,  747,  748,  749,  750,  756,  751,  752,
      753,  754,  755,  757,  956,   12, -240,  783,  954, 1150,
     1174, 1082, 1014, 1230,  804,  763,  816,  814,  151,  758,
      740,  960,  742,    0, 1245, 1246, 1206, 1207, 1208, 1209,
        0,  152,  153,  154,    0,    0,    0,    0,    0,  448,
      155,  156,  157,    0,  418,    0,    0,    0,    0,    0,
        0,  -36,  463,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,    0,-32766,   21,  597,    0,    0,  547,  598,
      514,  468,  469,  149,  158,    0,    0,  599,  159,  600,
      314,  676,  140,  747,  748,  749,  750,  756,  751,  752,
      753,  754,  755,  757,  630,  541,  561,    0,    0,  150,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  956,   12,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  151,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  152,  153,
      154,    0,    0,    0,    0,    0,  448,  155,  156,  157,
        0,  418,    0,    0,    0,    0,    0,    0,  -36,  463,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,    0,
        0,   21,  597,    0,    0,  547,  598,  514,  468,  469,
      149,  158,    0,    0,  599,  159,  600,    0,    0,  140,
      747,  748,  749,  750,  756,  751,  752,  753,  754,  755,
      757,  630,  541,  627,    0,    0,  150,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  956,   12,
      952,    0,  255,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  151,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  152,  153,  154,  256,    0,
        0,  527,    0,  448,  155,  156,  157,    0,  418,    0,
        0,  257,  258,  259,    0,  -36,  463,    0,    0,  453,
      260,  261,  262,    0,  426,    0,    0,    0,    0,    0,
        0,  466,    0,   14,    0,    0,    0,    0,   21,  597,
        0,    0,  547,  598,  514,  468,  469,  149,  158,    0,
        0,  599,  159,  600,  638,    0,  140,  747,  748,  749,
      750,  756,  751,  752,  753,  754,  755,  757,  630,  541,
      627,    0,    0,  150,    0,  667,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  956,   12,  953,    0,    0,
     1206, 1207, 1208, 1209,    0,    0,    0,    0,    0,  151,
        0,    0,    0,    0,  486,    0,    0,    0,    0,    0,
        0,    0,  152,  153,  154,    0,    0,    0,    0,    0,
      448,  155,  156,  157, -176,  418,    0,    0,    0,    0,
        0,    0,  -36,  463,    0,  855,   14,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   21,  597,  638,    0,  547,
      598,  514,  468,  469,  149,  158,  160,    0,  599,  159,
      600,    0,    0,  140,  747,  748,  749,  750,  756,  751,
      752,  753,  754,  755,  757,  630,  541,    0,    0,    0,
        0,    0,  161, 1206, 1207, 1208, 1209,    0,    0,    0,
        0,    0,  956,   12,    0,  162,  163,  164,    0,  706,
        0,    0,    0,  449,  165,  166,  167,    0,  419,    0,
      132,    0,  134,    0,   14,  465,    0,    0,    0,    0,
        0,    0,    0,    0, 1211, 1232, 1233, 1234, 1229,    0,
     1218, 1219, 1217, 1214, 1215,  628, 1212, 1213,    0,    0,
        0,    0,    0,    0,    0,  627,    0,    0,  150,    0,
      274,  275,  276,  277,  278,  279,  280,  281,  282,  283,
      284,  285,  286,  287,  288,  454,  289,  290,  147,  320,
      291,  292,  293,  294,  151, 1220, 1221, 1222, 1223, 1224,
     1225, 1226, 1227, 1228,    0,    0,    5,  152,  153,  154,
        0,    0,    0,    0,    0,  448,  155,  156,  157,    0,
      418,    0,    0,    0,    0,    0,    0,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,-32766,-32766,
       21,  597,    0,    0,  547,  598,  514,  468,  469,  149,
      158,    0,    0,  599,  159,  600,    0,    0,  140,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      630,  541,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  956,   12,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,-32766,
    -32766,-32766,-32766,  274,  275,  276,  277,  278,  279,  280,
      281,  282,  283,  284,  285,  286,  287,  288,  454,  289,
      290,  147,    0,  291,  292,  293,  294,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,    0,-32766,-32766,-32766
  ];

  private static $yycheck = [
        4,   43,   44,   45,   29,   30,   31,   32,    3,   60,
       35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
       45,   46,   47,   48,   49,   76,   49,   52,   53,   33,
       55,   35,   57,   58,    0,   60,   24,   46,   47,   48,
       49,   20,   21,   52,   53,   49,   55,   51,   57,   58,
        2,   60,   56,   23,    1,   25,   26,   27,   28,   63,
       64,   65,   66,   67,   68,   69,   70,   71,   72,   29,
       30,   31,   32,   61,   78,   79,   80,   81,   82,   83,
       84,   85,   86,   87,   88,   89,   90,   91,   92,   93,
       94,   95,   96,   97,   98,   99,  100,  101,  102,  103,
      104,  105,  106,  107,  108,  109,  110,  111,  112,  113,
      114,  134,  116,  117,   62,  119,  120,  121,  122,  123,
      124,  125,  126,  127,  128,  129,  130,  131,    0,    1,
       49,    2,    4,   52,   53,   83,   55,    1,  133,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   20,   21,   22,   23,   30,   25,
       26,   27,   28,   29,   30,   72,    2,   66,   67,   68,
       69,   43,   44,   45,   26,   27,   28,   84,   85,   51,
       52,   53,   54,  135,   56,   21,  134,   23,    1,    1,
       61,   63,   64,   65,   66,   67,   68,   69,   70,   71,
       33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
       43,   44,   45,    1,   86,   87,   30,    2,   90,   91,
       92,   93,   94,   95,   96,   61,  133,   99,  100,  101,
       20,   21,  104,  105,  106,  107,  108,  109,  110,  111,
      112,  113,  114,  115,  116,  117,    0,    1,   62,   62,
        4,   51,   72,    2,    2,   72,   56,   46,   47,   48,
      132,  133,  134,  135,   84,   85,   66,   84,   85,   83,
       83,   29,   30,   31,   32,    2,   30,   35,   36,   37,
       38,   39,   40,   41,   42,   55,   24,   57,   58,   43,
       44,   45,   57,   58,   21,   60,   23,   51,   52,   53,
       54,   21,   56,   23,    2,  119,  120,  121,  122,   63,
       64,   65,   66,   67,   68,   69,   70,   71,   33,   34,
       35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
       45,    1,   86,   87,   61,    2,   90,   91,   92,   93,
       94,   95,   96,    2,   62,   99,  100,  101,  133,    1,
      104,  105,  106,  107,  108,  109,  110,  111,  112,  113,
      114,  115,  116,  117,    1,   83,    1,    4,   46,   47,
       48,   49,   27,   28,   52,   53,    1,   55,  132,  133,
      134,   29,   30,   31,   32,  133,    2,   35,   36,   37,
       38,   39,   40,   30,   61,  133,    2,   62,   50,   49,
        2,  119,  120,  121,  122,    1,   43,   44,   45,   61,
        3,   50,   30,   24,   51,   52,   53,   54,   83,   56,
       50,   21,   33,   23,    2,   60,   63,   64,   65,   66,
       67,   68,   69,   70,   71,  133,   61,   29,   30,    2,
       64,   76,   81,   61,   62,   57,   58,    2,   72,   86,
       87,   81,    2,   90,   91,   92,   93,   94,   95,   96,
       84,   85,   99,  100,  101,   83,   62,  104,  105,  106,
      107,  108,  109,  110,  111,  112,  113,  114,  115,  116,
      117,    1,   76,  133,    4,   64,    2,   83,   57,   58,
       97,   98,    2,   72,    3,  132,  133,  134,  135,    3,
      135,  119,  120,  121,  122,   84,   85,  102,  103,    3,
       30,  135,  133,  134,  133,  134,  133,  134,  133,  134,
      133,  134,   21,   43,   44,   45,   21,   23,   21,   21,
       28,   51,   52,   53,   54,   23,   56,   23,   23,   29,
      134,   24,   24,   63,   64,   65,   66,   67,   68,   69,
       70,   71,   24,   24,   24,   24,  135,   24,   24,   24,
       24,   24,   24,   24,   24,   72,   86,   87,   24,   45,
       90,   91,   92,   93,   94,   95,   96,   84,   85,   99,
      100,  101,   30,   30,  104,  105,  106,  107,  108,  109,
      110,  111,  112,  113,  114,  115,  116,  117,  105,  106,
      107,  108,  109,  110,  111,  112,  113,  114,  115,   30,
       33,   33,  132,  133,  134,  135,    5,    6,    7,    8,
        9,   10,   11,   12,   13,   14,   15,   16,   17,   18,
       19,   20,   21,   22,   23,   49,   25,   26,   27,   28,
       29,   30,   31,   32,   33,   34,   35,   36,   37,   38,
       39,   40,   41,   42,   43,   44,   45,   46,   47,   48,
       49,    1,    1,   52,   53,    4,   55,   50,   57,   58,
       50,   60,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   20,   21,   22,
       23,   30,   25,   26,   27,   28,   29,   50,   50,   50,
       55,   57,   59,   57,   43,   44,   45,   57,   76,   81,
       50,   59,   51,   52,   53,   54,   59,   56,   59,   59,
       62,   59,   59,   59,   63,   64,   65,   66,   67,   68,
       69,   70,   71,   59,   59,   59,   59,   65,   60,   60,
       60,   60,   60,   60,   60,   60,   77,   86,   87,   61,
       61,   90,   91,   92,   93,   94,   95,   96,   61,   61,
       99,  100,  101,   61,   61,  104,  105,  106,  107,  108,
      109,  110,  111,  112,  113,  114,  115,  116,  117,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       89,   62,   88,  132,  133,  134,    5,    6,    7,    8,
        9,   10,   11,   12,   13,   14,   15,   16,   17,   18,
       19,   20,   21,   22,   23,   63,   25,   26,   27,   28,
       29,   30,   31,   32,   33,   34,   35,   36,   37,   38,
       39,   40,   41,   42,   43,   44,   45,   46,   47,   48,
       49,   65,    1,   52,   53,    4,   55,   65,   57,   58,
       90,  116,   99,   -1,  118,   -1,   -1,   -1,   -1,    1,
       -1,   -1,    4,  133,  133,  133,  133,  133,   -1,   -1,
      133,   30,  133,  133,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  133,   43,   44,   45,  133,   30,  133,
      133,  133,   51,   52,   53,   54,  133,   56,  133,  133,
      133,   43,   44,   45,   63,   64,  133,   30,  133,   51,
       52,   53,   54,  133,   56,  134,   -1,  134,  134,  134,
      134,   63,   64,  134,  134,   -1,  134,   86,   87,  134,
      134,   90,   91,   92,   93,   94,   95,   96,  135,   62,
       99,  100,  101,  102,  103,  104,  105,  106,  107,  108,
      109,  110,  111,  112,  113,  114,  115,  116,  117,    1,
       83,  135,    4,  105,  106,  107,  108,  109,  110,  111,
      112,  113,  114,  115,  133,  134,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,   30,  135,
      135,  133,  135,   -1,  135,  135,  119,  120,  121,  122,
       -1,   43,   44,   45,   -1,   -1,   -1,   -1,   -1,   51,
       52,   53,   54,   -1,   56,   -1,   -1,   -1,   -1,   -1,
       -1,   63,   64,    5,    6,    7,    8,    9,   10,   11,
       12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
       22,   23,   -1,   25,   86,   87,   -1,   -1,   90,   91,
       92,   93,   94,   95,   96,   -1,   -1,   99,  100,  101,
      102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,  113,  114,  115,  116,  117,    1,   -1,   -1,    4,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,  133,  134,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   30,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   43,   44,
       45,   -1,   -1,   -1,   -1,   -1,   51,   52,   53,   54,
       -1,   56,   -1,   -1,   -1,   -1,   -1,   -1,   63,   64,
        5,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   20,   21,   22,   -1,   -1,
       -1,   86,   87,   -1,   -1,   90,   91,   92,   93,   94,
       95,   96,   -1,   -1,   99,  100,  101,   -1,   -1,  104,
      105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
      115,  116,  117,    1,   -1,   -1,    4,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  133,  134,
      135,   -1,    4,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   30,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   43,   44,   45,   30,   -1,
       -1,   30,   -1,   51,   52,   53,   54,   -1,   56,   -1,
       -1,   43,   44,   45,   -1,   63,   64,   -1,   -1,   51,
       52,   53,   54,   -1,   56,   -1,   -1,   -1,   -1,   -1,
       -1,   63,   -1,   62,   -1,   -1,   -1,   -1,   86,   87,
       -1,   -1,   90,   91,   92,   93,   94,   95,   96,   -1,
       -1,   99,  100,  101,   83,   -1,  104,  105,  106,  107,
      108,  109,  110,  111,  112,  113,  114,  115,  116,  117,
        1,   -1,   -1,    4,   -1,    1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,  133,  134,  135,   -1,   -1,
      119,  120,  121,  122,   -1,   -1,   -1,   -1,   -1,   30,
       -1,   -1,   -1,   -1,   30,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   43,   44,   45,   -1,   -1,   -1,   -1,   -1,
       51,   52,   53,   54,   50,   56,   -1,   -1,   -1,   -1,
       -1,   -1,   63,   64,   -1,   61,   62,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   86,   87,   83,   -1,   90,
       91,   92,   93,   94,   95,   96,    4,   -1,   99,  100,
      101,   -1,   -1,  104,  105,  106,  107,  108,  109,  110,
      111,  112,  113,  114,  115,  116,  117,   -1,   -1,   -1,
       -1,   -1,   30,  119,  120,  121,  122,   -1,   -1,   -1,
       -1,   -1,  133,  134,   -1,   43,   44,   45,   -1,   47,
       -1,   -1,   -1,   51,   52,   53,   54,   -1,   56,   -1,
       58,   -1,   60,   -1,   62,   63,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   72,   73,   74,   75,   76,   -1,
       78,   79,   80,   81,   82,   83,   84,   85,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,    1,   -1,   -1,    4,   -1,
        5,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   20,   21,   22,   23,   24,
       25,   26,   27,   28,   30,  123,  124,  125,  126,  127,
      128,  129,  130,  131,   -1,   -1,  134,   43,   44,   45,
       -1,   -1,   -1,   -1,   -1,   51,   52,   53,   54,   -1,
       56,   -1,   -1,   -1,   -1,   -1,   -1,   63,    5,    6,
        7,    8,    9,   10,   11,   12,   13,   14,   15,   16,
       17,   18,   19,   20,   21,   22,   23,   -1,   25,   26,
       86,   87,   -1,   -1,   90,   91,   92,   93,   94,   95,
       96,   -1,   -1,   99,  100,  101,   -1,   -1,  104,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
      116,  117,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,  133,  134,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   20,   21,   22,   23,   -1,   25,
       26,   27,   28,    5,    6,    7,    8,    9,   10,   11,
       12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
       22,   23,   -1,   25,   26,   27,   28,    5,    6,    7,
        8,    9,   10,   11,   12,   13,   14,   15,   16,   17,
       18,   19,   20,   21,   22,   23,   -1,   25,   26,   27
  ];

  private static $yybase = [
      246,  128,  480,  363,  661,  365,  841,  -51,  958,  785,
      784,  783, 1075, 1192,   -4,   -4,   -4,   -4,   -4,   -4,
     1309, 1494, 1494, 1494, 1494, 1494, 1494, 1494, 1494, 1494,
      858,  262,  534,  760,  742,  737,  739,  531,  740,  702,
      529,  677,  703,  544,  676,  675,  848,  847,  846,  845,
      517,  674,  697,  518,  741,  844,  750,  698,  758,  766,
      791,  611,  611,  611,  611,  611,  611,  611,  611,  611,
      611,  611,  611,  611,  611,  611,  611,  611,  611,  611,
      611,  611,  611,  611,  611,  611,  611,  611,  611,  611,
      611,  611,  611,  611,  611,  611,  611,  611,  611,  611,
      611,  611,  611,  611,  611,  611,  611,  611,  611,  611,
     1495, 1648, 1648, 1648, 1648, 1648, 1648, 1648, 1648, 1648,
     1648, 1648, 1648, 1648, 1648, 1648, 1648, 1648, 1648, 1648,
     1648, 1648,  660,  348,  375,  756,  617,  718,  620,  735,
      757,  212,  535,  136,  538,  188,   53,  539,  330, 1402,
     1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402,
     1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402,
     1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402,
     1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402,
     1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402,
     1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402,
     1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402,
     1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402,
     1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402,
     1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402,
     1402, 1402, 1402, 1402, 1402, 1208, 1208, 1208, 1208, 1208,
     1208, 1208, 1208, 1402, 1402, 1402, 1402, 1402, 1402, 1402,
     1402, 1402, 1402, 1402, 1208, 1208, 1208, 1208, 1208, 1208,
     1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208,
     1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208,
     1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208,
     1208, 1208, 1402, 1208, 1402, 1402, 1402, 1402, 1402, 1402,
     1208, 1208, 1208, 1208, 1402, 1402, 1402, 1402, 1402, 1402,
     1208, 1402, 1208, 1402, 1402, 1402, 1135, 1135, 1135, 1135,
     1135, 1135, 1135, 1135, 1018, 1018,   30,   30,   30,   30,
     1553, 1553, 1672, 1672,  148, 1624, 1624,  345,  667,  667,
      502,  134,  134,  -25, 1314,  510,  167,  167,  285,  285,
      285,  285,  285,  285,  167,  167,  285,  285,  285,  285,
      285,  285,  408,  382,  186,  877, 1211,   40,   40,  352,
      352,  352,  352,  421,  421,  421,  421,  376,  781,  493,
      493,  -42,  -42,  -42,  -42,  242,  242,   93,  183,   -9,
       -9,   -9,   -9,   -9,   -9,  322,  322,  322,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      211,  211,  211,  211,  211,  211,   81,   81,   81,  404,
       52,   52,  187,  335,  335,  335,  335,  335,  335,  335,
      335,  335,  335,  335,  335,  335,  335,  335,  335,  335,
      370,  361,  101,  679,  678,  682,  682,  842,  744,  743,
      230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
      230,  230,  230,  230,  796,  230,  648,  552,  230,  645,
      645,  645,  645,  645,  645,  645,  553,  649,  645,  579,
      164,  273,  200,  180,  180,  826,  180,  180,  180,  180,
        5,  180,  180,  180,  180,  388,  180,  180,  180,  180,
      388,  180,  180,  180,  388,  180,  180,  180,  180,  180,
      180,  180,  180,  180,  180,  180,  383,   12,  385,  405,
      393,  632,  506,  393,  506,  407,  407,  685,  736,  680,
      754,  496,  491,  732,  733,  215,  388,  210,  763,  -23,
      746,  843,  765,  406,  388,  728,  389,  302,  786,  387,
      388,  129,  333,  388,  388,   48,  388,   21,  747,  773,
      252,  803,  379,  280,  719,  388,  720,  381,  400,  388,
      350,  628,  672,  704,  776,  776,  701,  683,  795,  683,
      683,  431,  490,  422,  431,  682,  450,  683,  795,  632,
      632,  672,  537,  536,  683,  704,  431,  682,  437,  524,
      776,  795,  795,  682,  682,  682,  795,  731,  729,  782,
      789,   34,  658,  530,  736,  669,  729,  658,  729,  657,
      659,  721,  658,  749,  753,  767,  734,  780,  790,  752,
      792,  860,  736,  859,  528,  684,  722,  857,  723,  726,
      748,  577,  745,  658,  664,  724,  540,  725,  647,  663,
      662,  505,  855,  775,  445,  445,  533,  586,  507,  504,
      578,  652,  689,  854,  658,  341,  514,  512,  501,  658,
      394,  852,  851,  515,  727,  681,  643,  850,  849,  688,
      251,  650,  644,  730,  646,  508,    0, 1402, 1402, 1402,
     1402, 1402,   -4, 1402,   -4, 1402,   -4,   -4,   -4, 1402,
     1402,    0,    0,    0,    0,    0,    0, 1402, 1402, 1402,
     1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402,  611,  611,
      611,  611,  611,  611,  611,  611,  611,  611,  611,  611,
      611,  611,  611,  611,  611,  611,  611,  611,  611,  611,
      611,  611,  611,  611,  611,  611,  611,  235,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  -25,  -25,  -25,
      -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,
      -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25, 1402,
     1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402,
     1402, 1402, 1402, 1402, 1402, 1402,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402,
     1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402,
     1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402,
     1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402,    0,
     1402,    0,    0,    0,    0,    0,    0, 1402, 1402, 1402,
     1402,    0,    0,    0,    0,    0,    0, 1402,    0, 1402,
        0,    0,    0,  611,  611,  611,  611,  611,  611,  611,
      611,  611,  611,  -25,  -25,  -25,  -25,  611,  611,  611,
      611,  -25,  611,  611,  -25,  611,  611,  -25,  611,  611,
        0,  493,  -25,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,  -25,
      493,  493,  493,  493,  -25,  -25,  -25,  -25,  -25,  -25,
      493,  493,  493,  493,  493,  493,    0,    0,   -9,   -9,
       -9,   -9,  -25,  -25,  493,  493,    0,    0,    0,    0,
        0,    0,  235,  235,  235,  180,  180,  180,  180,  180,
      180,  180,  180,  180,  180,  180,  180,   -9,   -9,   -9,
       -9,   -9,   -9,  235,  235,  235,  180,  180,  180,  180,
      180,  180,  180,  180,  180,  180,  180,  180,  180,  180,
      180,  180,  180,  180,  180,  180,  180,  180,  180,  752,
      180,  180,  180,  180,  180,  180,  180,  235,  235,  235,
      235,  235,  235,  235,  235,  235,  235,  235,  235,  235,
      235,  180,  235,  180,  180,  235,  235,  235,  235,  235,
      235,  235,  235,  180,  180,  235,  180,    0,    0,  752,
        0,    0,  405,    0,    0,    0,    0,  795,    0,    0,
        0,    0,  235,    0,    0,    0,    0,  235,    0,    0,
        0,  235,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  658,  658,  658,    0,    0,  795,  795,
        0,  795,  795,  795,  795,  795,  795,  682,  795,  795,
      795,  795,    0,    0,    0,  484,    0,  398,  731,  484,
        0,    0,  384,    0,    0,  658,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  398,  736,    0,  736,    0,
        0,  384,    0,  398,    0,    0,    0,    0,  647,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  235,    0,
        0,  235,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  235
  ];

  private static $yydefault = [
    32767,32767,32767,32767,32767,32767,32767,  548,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,  313,  536,32767,32767,32767,  381,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
      254,  256,  535,  255,  291,  292,  293,  294,  295,  296,
      297,  298,  299,  300,  301,  302,  303,  304,  305,  289,
      478,  359,  360,  361,  362,  363,  364,  365,  366,  367,
      368,  369,  370,  371,  372,  373,  357,  536,  257,  114,
      480,  145,  543,  479,  155,   55,  161,  158,  164,  104,
      449,  258,  427,  428,  429,  430,  431,  432,  433,  434,
      435,  436,  437,  438,  439,  440,  441,  425,  259,  147,
      119,  133,32767,32767,32767,32767,  548,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,  548,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,  277,  345,  314,  311,
      382,  379,  310,  378,  275,  343,  415,  450,  447,  446,
      276,  344,  274,  342,  413,  268,  336,  414,  269,  337,
      412,  267,  335,  406,32767,  407,  280,  281,  282,  283,
      272,  273,  271,  270,  348,  349,  350,  351,  340,  341,
      338,  339,  405,  176,  176,  176,32767,  418,  419,  410,
      411,  408,  409,   36,   36,   36,   36,   36,   37,   37,
    32767,  278,  279,  346,  347,  416,  417,   37,   36,  260,
      261,  266,  328,  329,  334,  398,  399,  404,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
      262,  263,  264,  330,  331,  332,  400,  401,  402,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
      318,  316,  315,  317,  320,  321,  319,  386,  384,  383,
      385,  388,  389,  387,32767,  265,32767,  177,  333,  454,
      452,  451,  453,  456,  457,  455,32767,32767,  403,  177,
      493,  493,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,  548,32767,  324,32767,32767,32767,32767,
      392,32767,32767,32767,  460,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
      187,32767,32767,  188,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,  326,  113,32767,   25,
    32767,32767,32767,32767,  394,32767,  493,32767,32767,32767,
      290,32767,32767,  358,  115,32767,  462,  118,32767,32767,
    32767,32767,32767,  156,32767,  426,32767,32767,  162,  120,
    32767,32767,  229,  214,   71,   71,  219,32767,32767,32767,
    32767,  322,  547,  547,  390,32767,  547,32767,32767,32767,
    32767,  230,   58,   60,32767,  215,  458,32767,  547,   65,
       72,32767,32767,32767,32767,32767,32767,32767,  509,   44,
    32767,32767,  484,  493,  486,32767,32767,  470,  503,32767,
    32767,32767,   28,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,  545,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,  497,32767,32767,  493,32767,32767,32767,
    32767,32767,32767,32767,  132,  134,32767,  236,   54,  168,
    32767,32767,32767,32767,   64,   61,  172,  170,32767,   70,
       66,32767,32767,  174,32767,32767,32767,32767,32767,32767,
       99,32767,32767,32767,32767,  103,  491
  ];

  private static $yygoto = [
       33,   80,  656,  715,   97, 1247,   80,   34,   36,   39,
       40,   41,   43,   44,   45,   50,   51,  683,   32,  470,
      471,  472,  473,  474,  475,  476,   35,   31,   37,  477,
      478,  479,  480,  481,  482,  483,   62,   38,   63,   64,
       65,   66,   67,   68,   69,   70,   71,   72,   73,   74,
       75,   76,   77,   78,   79,  336,  344,  350,  352,  355,
      358,  361,  366,  367,  368,  369,  370,  371,  372,  373,
      401,  402,  409,  410,  411,  430,  431,  432,  485,   42,
       81,   82,   83,   84,   85,   86,   87,   88,   89,   90,
       91,   92,   93,   94,   95,   96,  337,  338,  345,  351,
      353,  356,  359,  362,  374,  375,  376,  377,  378,  379,
      380,  381,  403,  404,  412,  413,  414,  433,  434,  435,
      488,   98,   99,  643,  662,  400,  731,  766, 1171,  770,
     1249,   98,   46,  339,   47,  100,  340,  101,  102,  341,
       48,   49,  633,  633,  633,  633,  633, 1256,  633, 1256,
      633, 1256, 1256, 1256,  633,  633, 1256, 1256, 1256, 1256,
     1256, 1256,  633,  795,  795,  795,  795,  795, 1013, 1081,
     1149,  949,  566, 1202, 1201, 1203,  812,  705,  813,  668,
       52,   13,   53,  342,  103,  104,  343,   54, 1241,  545,
      601,  604,   55,   56,  105,  106,  107,   57,  616,  108,
      668,   58,   59,  109,  110,  489,  490,  491,  492,  493,
      494,  495,  991,  992,  993, 1059, 1060, 1061, 1184, 1127,
     1128, 1129,  808,  112,  113,  114,  115,  116,  117,  118,
      119,  120,  121,  122,  123,  124,  125,  126,  127,  346,
      354,  357,  360,  363,  365,  382,  387,  388,  389,  390,
      391,  392,  405,  406,  415,  416,  417,  436,  437,  438,
      498,  652,  128,  652,  487,  657,  672,  712,  792,  347,
      129,  130,  348,  510,  776,  666,  833,  558,  833,  349,
      666,  131,  833,  833,  674,  487,  496,  692,  697,  698,
      833,  644,  593,  908,  892,  925,  928,  890,  889,  891,
      831,  520,  831,  746,   23,  648,  831,  831,  524,  784,
      819,  829,  673,  584,  831,  746,  746,  746,  829,   25,
      824,  858,  942,  945,  746,  736,  760,  578,  544,  586,
      556,  564,  570,  573,  574,  576,  585,  832,  589,  832,
      546,  560,  859,  832,  832,  847,  551,  552,  553,  930,
      897,  832,  395, 1171, 1171, 1171, 1171, 1171, 1171, 1171,
     1171,  939,  924,  849,  781,    0,    0,    0,    0,    0,
        0,    0, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171,
     1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171,
     1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171,
     1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171,
        0, 1171,    0,    0,    0,    0,    0,    0, 1171, 1171,
     1171, 1171,    0, 1034, 1034, 1034, 1034, 1034, 1171, 1034,
     1171, 1034,    0,    0,    0, 1034, 1034,    0,    0,    0,
        0,    0,    0, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1170,  649,    0,  649,    0,    0,  386,
      649,  649,    0,    0,    0,    0,    0,    0,  649,    0,
        0,    0,    0,    0,    0,    0,    0,  845,  386,  386,
      386,    0,    0,    0,    0,    0,    0,    0,  398,  398,
      398,  398,  398, 1019,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  407,    0,    0,  500,    0,  900,  851,
        0,  851,  853,  853,  893,  901,  931,    0,  800,  802,
      798,  796,    0,    0,    0,  500,  500,  500,  501,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      557,  557,  577, 1155, 1155, 1155, 1155, 1155, 1155, 1155,
     1155, 1155, 1155, 1155, 1155, 1155, 1155, 1155, 1155, 1155,
     1155, 1155, 1155, 1155, 1155,  540,    0,    0,    0,    0,
        0,  830,    0,  830,    0,  935,    0,  830,  830,    0,
        0,    0,    0,    0,    0,  830,    0,    0,  934,  932,
        0,    0,    0,  933,    0,    0,    0,    0,    0,    0,
        0,    0,  679,  687,    0,  557,  577,  605,  617,  590,
      646,  647,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 1173,    0,  679,  583,
        0,    0,    0,    0,    0,    0,    0,    0,  588,  687,
        0,  583,    0,    0,    0,  677,  678,    0,  590,  834,
      557,  834,    0,  577,  677,  678,  645,    0,  550,  612,
      569,  613,    0,  733,  680,  835,    0,  917,  874,  686,
      872,  944,  693,  873,  694,  623,  624,  703, 1170, 1170,
     1170, 1170, 1170, 1170, 1170, 1170,    0,  794,  794,  794,
      794,  794,    0,    0,    0,    0,    0, 1170, 1170, 1170,
     1170, 1170, 1170, 1170, 1170, 1170, 1170, 1170, 1170, 1170,
     1170, 1170, 1170, 1170, 1170, 1170, 1170, 1170, 1170, 1170,
     1170, 1170, 1170, 1170, 1170, 1170, 1170, 1170, 1170, 1170,
     1170, 1170, 1170, 1170, 1170,    0, 1170,    0,    0,    0,
        0,    0,    0, 1170, 1170, 1170, 1170,    0,    0,    0,
        0,    0,    0, 1170,    0, 1170,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 1155,
     1155, 1155, 1155,    0,    0,    0,    0, 1155,    0,    0,
     1155,    0,    0, 1155,    0,    0, 1155,  548, 1155,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1155,    0,    0,    0,    0,
     1155, 1155, 1155, 1155, 1155, 1155,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1155, 1155,
        0,  502,  502,  502,  502,  502,    0,    0, 1155, 1155,
     1155,    0,    0,    0,    0,    0,  535,    0,    0,    0,
        0,    0,    0,    0,    0,  579,  581,    0,    0, 1155,
     1155, 1155,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  663,    0,    0,    0,    0,    0,    0,
        0,    0, 1155, 1155, 1155, 1155, 1155, 1155, 1155,    0,
        0, 1155,  663,  663,  663,  663,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1032,    0,
        0,    0,    0, 1100,    0,    0,    0, 1168,  793,  793,
      793,  793,  793,    0,    0,    0,    0,  637,  637,  663,
      663,  663,  663,  663,  663,  637,  663,  663,  663,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  689,  536,
      568,  537,  642,  642,  642,  684,  642,  637,  637,  637,
      637,  637,  637,  637,  684,  637,  684,  689,  538,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1030,    0,    0, 1098,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 1166
  ];

  private static $yygcheck = [
       24,   24,   29,    7,   24,   29,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   29,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   19,   19,   26,   19,   35,  103,   35,
      117,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   10,   10,   10,   10,   10,   53,   53,
       53,   96,   22,   53,   53,   53,   53,   53,   53,   52,
       24,   61,   24,   24,   24,   24,   24,   24,  114,   48,
      101,  101,   24,   24,   24,   24,   24,   24,  101,   24,
       52,   24,   24,   24,   60,   60,   60,   60,   60,   60,
       60,   60,   70,   70,   70,   70,   70,   70,  105,   70,
       70,   70,   50,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   81,   60,   81,   54,    4,    4,    4,   45,   60,
       60,   60,   60,   48,   39,   22,   18,   55,   18,   60,
       22,   60,   18,   18,   58,   54,   54,   34,   34,   34,
       18,   18,   18,   18,   18,   18,   18,   18,   18,   18,
       15,   57,   15,   27,   71,   71,   15,   15,   57,   43,
       56,   23,   71,   62,   15,   27,   27,   27,   23,   71,
       59,   51,   93,   94,   27,   23,   30,   77,   48,   77,
       57,   57,   57,   57,   57,   57,   57,   17,   57,   17,
       48,   77,   51,   17,   17,   66,   48,   48,   48,   89,
       79,   17,   33,  103,  103,  103,  103,  103,  103,  103,
      103,   91,   87,   68,   41,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
       -1,  103,   -1,   -1,   -1,   -1,   -1,   -1,  103,  103,
      103,  103,   -1,  102,  102,  102,  102,  102,  103,  102,
      103,  102,   -1,   -1,   -1,  102,  102,   -1,   -1,   -1,
       -1,   -1,   -1,  102,  102,  102,  102,  102,  102,  102,
      102,  102,  102,  102,   25,   -1,   25,   -1,   -1,   26,
       25,   25,   -1,   -1,   -1,   -1,   -1,   -1,   25,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   47,   26,   26,
       26,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   26,   26,
       26,   26,   26,  100,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   26,   -1,   -1,   22,   -1,   47,   47,
       -1,   47,   47,   47,   47,   47,   47,   -1,   47,   47,
       47,   47,   -1,   -1,   -1,   22,   22,   22,   22,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       22,   22,   22,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,   47,   -1,   -1,   -1,   -1,
       -1,   14,   -1,   14,   -1,   47,   -1,   14,   14,   -1,
       -1,   -1,   -1,   -1,   -1,   14,   -1,   -1,   47,   47,
       -1,   -1,   -1,   47,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   22,   22,   -1,   22,   22,   22,   22,   22,
       22,   22,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   22,   -1,   22,   22,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   22,   22,
       -1,   22,   -1,   -1,   -1,   22,   22,   -1,   22,   22,
       22,   22,   -1,   22,   22,   22,   22,   -1,   22,   22,
       22,   22,   -1,   22,   22,   22,   -1,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,  102,  102,
      102,  102,  102,  102,  102,  102,   -1,   15,   15,   15,
       15,   15,   -1,   -1,   -1,   -1,   -1,  102,  102,  102,
      102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
      102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
      102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
      102,  102,  102,  102,  102,   -1,  102,   -1,   -1,   -1,
       -1,   -1,   -1,  102,  102,  102,  102,   -1,   -1,   -1,
       -1,   -1,   -1,  102,   -1,  102,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  100,
      100,  100,  100,   -1,   -1,   -1,   -1,  100,   -1,   -1,
      100,   -1,   -1,  100,   -1,   -1,  100,   81,  100,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,  100,   -1,   -1,   -1,   -1,
      100,  100,  100,  100,  100,  100,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  100,  100,
       -1,   25,   25,   25,   25,   25,   -1,   -1,  100,  100,
      100,   -1,   -1,   -1,   -1,   -1,   25,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   81,   81,   -1,   -1,  100,
      100,  100,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,    5,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,  100,  100,  100,  100,  100,  100,  100,   -1,
       -1,  100,    5,    5,    5,    5,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  100,   -1,
       -1,   -1,   -1,  100,   -1,   -1,   -1,  100,   14,   14,
       14,   14,   14,   -1,   -1,   -1,   -1,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,  100,   -1,   -1,  100,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  100
  ];

  private static $yygbase = [
        0,    0,    0,    0,  263,  549,    0,    2,    0,    0,
     -230,    0,    0,    0,  565,  294,    0,  331,  270, -321,
        0,    0,  142,  305, -132,  448,   95,  -83,    0, -601,
     -187,    0,    0, -243, -107, -328,    0,    0,    0, -184,
        0, -256,    0, -197,    0, -129,    0,  -33, -277,    0,
     -162,  -43, -185,  159, -100, -186, -198, -118, -180, -191,
      -51,  169, -196,    0,    0,    0, -199,    0, -183,    0,
     -208, -295,    0,    0,    0,    0,    0,  192,    0, -193,
        0,  256,    0,    0,    0,    0,    0, -253,    0, -194,
        0, -250,    0, -190, -216,    0,  163,    0,    0,    0,
      433, -228,  423,   98,    0,   80,    0,    0,    0,    0,
        0,    0,    0,    0,   52,    0,    0,  123,    0,    0
  ];

  private static $yygdefault = [
    -32768,  631,  708,  709,  710,  632,    1,  714,  716,  717,
      718,  719,  720,  721,  722,  723,  724,  726,  727,  730,
      575,  559, 1200,  828,   61,  462,  399,  745,  618, 1239,
      759,  619,  587,  393,  691,  769,  582,  685,  690,  775,
      620,  780,  467,  785,  397,  791,  699,  886,  542,  700,
      807,  809,  591, 1251,  499,  562,  818,  515,  675,  823,
      111,    6,  565,  660,  842, 1104,  848, 1172,  850,  572,
      885,   22,  596,  888,  661,  135,  137,  603,  543,  896,
      610,  634,  505,  914,  918,  919,  615,  923,  927,  929,
      611,  938,  580,  941,  946,    8,  948,  555,  567,   60,
     1087, 1205, 1102, 1103,  571, 1183, 1188, 1189, 1190, 1192,
     1194,  635,  640,  602, 1240,  653,  606, 1248,  654, 1257
  ];

  private static $yylhs = [
        0,    1,    2,    2,    2,    3,    4,    6,    6,    7,
        7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
        7,    9,    9,   20,   20,   19,   19,   19,   21,   17,
       16,   16,    8,    8,    8,    8,   25,   25,   26,   26,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   10,   28,   28,   30,   30,   11,   11,   31,   31,
       36,   36,   37,   37,   35,   32,   32,   32,   38,   38,
       39,   33,   33,   40,   40,   41,   41,   42,   42,   43,
       43,   43,   34,   34,   44,   44,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   46,   46,
       49,   49,   50,   50,   50,   50,   50,   12,   12,   13,
       13,   55,   55,   56,   56,   56,   58,   58,   59,   59,
       59,   61,   61,   23,   23,   23,   23,   62,   62,   15,
       15,   15,   63,   63,   63,   14,   14,   14,   64,   64,
       65,   65,   67,   67,   66,   66,   68,   68,   48,   48,
       48,   69,   69,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   52,   52,   54,   18,
       18,   18,   18,   18,   18,   18,   18,   18,   18,   18,
       18,   18,   18,   18,   18,   18,   18,   18,   18,   18,
       18,   18,   18,   18,   18,   18,   18,   18,   18,   74,
       74,   76,   75,   75,   72,   72,   86,   86,   87,   73,
       73,   88,   78,   78,   89,   89,   89,   89,   79,   80,
       80,   90,   90,   91,   92,   92,   93,   93,   82,   82,
       94,   95,   95,   96,   96,   47,   47,   47,   83,   83,
       84,   84,   85,   85,   97,   97,   77,   77,   98,   98,
       99,   99,   99,   99,   99,   99,   99,   99,   99,   99,
       99,   99,   99,   99,   99,   99,   99,   99,   99,   99,
       99,   99,   99,   99,   99,   99,   99,   99,   99,   99,
       99,   99,   99,   99,   99,   99,   99,   99,   99,   99,
       99,   99,   99,   99,   99,   99,   99,   99,   99,   99,
       99,   99,   99,   99,   99,   99,   99,   99,   99,   99,
       99,   99,   99,   99,   99,   99,   99,   99,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   57,   57,   57,   57,
       57,   71,   71,  100,  100,  100,  104,  104,  105,  105,
      105,  102,  102,  102,  102,  102,  102,  102,  110,  110,
      110,  111,  107,    5,    5,    5,    5,   70,   70,  101,
      101,  101,  101,  101,   22,   22,   22,  109,  109,  109,
      109,  109,  109,  109,  109,  109,  109,  109,  109,  109,
      109,  109,   81,   81,   81,  106,  106,  106,  108,  108,
      108,  108,  112,  113,  113,  114,  114,  103,  103,  103,
      115,  116,  116,  117,  118,  118,  118,   29,   29,   53,
       53,  119,  119,  119,  119,  119,  119,  119,  119,  119,
      119,  119,  119,  119,  119,  119,  119,  119,  119,  119,
      119,  119,  119,  119,  119,  119,  119,  119,  119,  119,
      119,  119,  119,  119,  119,  119,  119,  119,  119,  119,
      119,  119,  119,  119,  119,  119,  119,  119,  119,  119,
      119,  119,  119,  119,  119,  119,  119,  119,  119,  119,
      119,  119,  119,  119,  119,  119
  ];

  private static $yylen = [
        1,    1,    1,    1,    0,    4,    1,    1,    2,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    3,    4,    1,    3,    1,    3,    4,    1,    3,
        3,    4,    4,    5,    3,    4,    0,    1,    1,    2,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    6,    1,    3,    1,    3,    9,    6,    0,    2,
        0,    2,    1,    3,    1,    0,    2,    2,    1,    3,
        1,    0,    1,    1,    2,    3,    5,    1,    2,    2,
        4,    5,    0,    1,    1,    2,    1,    1,    1,    6,
        6,    4,    4,    4,    6,    4,    6,    4,    0,    1,
        1,    3,    1,    4,    6,    4,    5,    7,    4,    7,
        5,    1,    3,    1,    3,    3,    1,    3,    1,    3,
        3,    1,    2,    1,    1,    1,    1,    1,    3,    3,
        7,    3,    2,    6,    2,    5,    5,    4,    1,    3,
        4,    3,    4,    3,    1,    2,    1,    2,    2,    3,
        3,    1,    3,    1,    2,    3,    2,    3,    4,    2,
        3,    4,    3,    4,    5,    3,    4,    3,    2,    3,
        3,    4,    3,    4,    4,    5,    0,    1,    1,    1,
        5,    5,    7,    6,    7,    5,    2,    2,    3,    3,
        4,    5,    3,    2,    3,    2,    3,    2,    3,    3,
        3,    3,    3,    5,    5,    3,    2,    1,    2,    1,
        3,    1,    1,    2,    0,    1,    1,    2,    3,    0,
        1,    2,    1,    2,    2,    5,    7,    5,    2,    0,
        1,    1,    2,    3,    1,    3,    1,    3,    1,    2,
        2,    1,    2,    3,    2,    2,    3,    3,    2,    1,
        2,    1,    2,    1,    1,    3,    1,    3,    1,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    2,    2,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    5,    4,    4,
        5,    4,    2,    2,    4,    2,    2,    2,    2,    2,
        2,    2,    2,    3,    2,    3,    2,    1,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    2,    2,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    5,    4,    4,    5,    4,
        2,    2,    4,    2,    2,    2,    2,    2,    2,    2,
        2,    3,    2,    3,    2,    1,    1,    1,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    2,    2,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    5,    4,    4,    5,    4,    2,    2,
        4,    2,    2,    2,    2,    2,    2,    2,    2,    3,
        2,    3,    2,    1,    1,    1,    3,    5,    4,    4,
        1,    3,    3,    2,    3,    3,    1,    3,    1,    3,
        2,    1,    1,    1,    1,    1,    1,    1,    4,    2,
        3,    0,    3,    1,    3,    2,    3,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    5,    3,    1,    1,    1,    2,    9,
        3,    3,    2,    1,    3,    2,    1,    2,    3,    3,
        2,    1,    3,    3,    1,    1,    3,    0,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1
  ];
  
    
  private static $yytokformat = [
    'T_IDENT' => 'identifier',
    'T_LNUM' => 'integer',
    'T_DNUM' => 'floating-point number',
    'T_SNUM' => 'number with suffix',
    'T_STRING' => 'string',
    'T_REGEXP' => 'regular expression',
    'T_TRUE' => '`true`',
    'T_FALSE' => '`false`',
    'T_NULL' => '`null`'
  ];
    
  private $yyval;
  private $yyastk;
  private $yysstk;
  private $yysp;
  private $yystate;
  private $yyloc; // current location
  
  private $lex;
  private $invalid = false;
  
  // current directory, filename and line
  private $cdir;
  private $cfile;
  
  /**
   * constructor
   *
   * @param Session $sess
   */
  public function __construct(Session $sess)
  {
    $this->sess = $sess;
  }
  
  /**
   * returns the current location (last scanned token)
   * 
   * @return Location
   */
  public function loc()
  {
    if (!$this->yyloc)
      return new Location('<unknown>', new Position(0, 0));
    
    return $this->yyloc;
  }
  
  /**
   * consumes semicolons to avoid unnecessary empty-expressions 
   * 
   * @void
   */
  private function eat_semis()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_SEMI) {
      do {
        $this->lex->skip();
        $peek = $this->lex->peek();
      } while ($peek->type === T_SEMI);

    }
  }
  
  /**
   * consumes a T_END token
   * 
   * @void
   */
  private function eat_end()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_END) {
      $this->lex->skip();
    }
  }
  
  /**
   * reports an error
   *
   * @param  Location $loc
   * @param  string   $tok  error token
   * @param  int   $num  number of expected tokens
   * @param  array   $arr expected tokens
   */
  private function report_error(Location $loc, $tok, $num, $arr) 
  {
    $fmt = 'unexpected %s';
    
    if ($num > 0) {
      // filter out T_IDENT, T_GET and T_SET
      $hid = false;
      $tmp = [];
      
      foreach ($arr as $exp) {
        if ($hid && ($exp === 'T_GET' || $exp === 'T_SET')) {
          --$num;
          continue;
        }
        
        $hid = $exp === 'T_IDENT';
        
        if ($exp === 'T_SUBST')
          $exp = 'string-concatenation';
        
        $tmp[] = $exp;
      }
      
      $arr = $tmp;
      $fmt .= ', expected ';
      
      if ($num > 1) {
        $fmt .= rtrim(str_repeat('%s, ', $num - 1), ', ');
        $fmt .= ' or ';
      }
                      
      $fmt .= '%s';
    }
    
    $var = $arr ?: [];
    array_unshift($var, $tok);
    Logger::vlog_at($loc, \phs\LOG_LEVEL_ERROR, $fmt, $var);       
  }
  
  /**
   * parse function
   * 
   * @param  mixed  $lex
   * @return Node
   */
  public function parse($lex) 
  {
    $tokid = self::TOKEN_NONE;
    
    // lexer
    if (!($lex instanceof Lexer)) {
      assert($lex instanceof Source);
      $lex = new Lexer($lex);  
    }
    
    $this->lex = $lex;
    
    $file = $this->lex->get_file();
    $this->cdir = dirname($file);
    $this->cfile = $file;
    
    
    // location
    $this->yyloc = $this->lex->loc();
    
    // stacks
    $this->yysstk = [ 0 ]; 
    $this->yyastk = [];
    
    // current state
    $yystate = 0;
    
    // error flag
    $yyerrflag = 0;

    // stack position
    $this->yysp = 0;
    
    // location stack
    $yylstk = [];
    
    // ignore semicolons at the beginning
    $this->eat_semis();
    
    for (;;) {
      if (self::$yybase[$yystate] == 0)
        $yyn = self::$yydefault[$yystate];
      else {
        if ($tokid === self::TOKEN_NONE) {
          // Fetch the next token id from the lexer
          $token = $this->lex->next();
                    
          // invalid token (regexp-scan failed)
          if ($token->type === T_INVL) {
            Logger::error_at($token->loc, 'invalid source/regexp-literal');
            return null;
          }
          
          // map the lexer token id to the internally used token id's
          if ($token->type >= 0 && $token->type < self::TOKEN_MAP_SIZE)
            $tokid = self::$translate[$token->type];
          else {
            Logger::error_at($token->loc, 'invalid token %d -> %s', $token->type, $token->value);
            return null;
          }        
          
          $this->yyloc = $token->loc;
          
          // store location
          $yylstk[$this->yysp] = $this->yyloc;
          
        } 

        if ((($yyn = self::$yybase[$yystate] + $tokid) >= 0
          && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid
          || ($yystate < self::YY2TBLSTATE
            && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + $tokid) >= 0
            && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid))
          && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT
        ) {
          /*
           * >= YYNLSTATE: shift and reduce
           * > 0: shift
           * = 0: accept
           * < 0: reduce
           * = -YYUNEXPECTED: error
           */
          if ($yyn > 0) {
            /* shift */
            
            $this->yysp++;
            
            $this->yysstk[$this->yysp] = $yystate = $yyn;
            $this->yyastk[$this->yysp] = $token;
            
            // store location
            $yylstk[$this->yysp] = $this->yyloc;
            
            $tokid = self::TOKEN_NONE;
            
            if ($yyerrflag > 0)
              $yyerrflag--;
            
            if ($yyn < self::YYNLSTATES)
              continue;

            /* $yyn >= YYNLSTATES means shift-and-reduce */
            $yyn -= self::YYNLSTATES;
          } else
            $yyn = -$yyn;
        } else
          $yyn = self::$yydefault[$yystate];
      }
      
      for (;;) {
        /* reduce/error */
        if ($yyn == 0) {
          /* accept */
          return $this->yyval;
        } elseif ($yyn != self::YYUNEXPECTED) {
          /* reduce */

          $this->{'yyn' . $yyn}();
          
          /* Goto - shift nonterminal */
          $yylen = self::$yylen[$yyn];
          $yyloc = $yylstk[$this->yysp - $yylen];
          
          $this->yysp -= $yylen;
          
          $yyn = self::$yylhs[$yyn];
          
          if (($yyp = self::$yygbase[$yyn] + $this->yysstk[$this->yysp]) >= 0
            && $yyp < self::YYGLAST && self::$yygcheck[$yyp] == $yyn)
            $yystate = self::$yygoto[$yyp];
          else
            $yystate = self::$yygdefault[$yyn];
          
          $this->yysp++;
          
          $this->yysstk[$this->yysp] = $yystate;
          $this->yyastk[$this->yysp] = $this->yyval;
          
          // set location if a real node was produced by $yyn
          if ($this->yyval instanceof Node)
            $this->yyval->loc = $yyloc;
          
          // store position
          $yylstk[$this->yysp] = $this->yyloc;
          
        } else {
          /* error */
          $this->invalid = true;
                    
          switch ($yyerrflag) {
            case 0:              
              $expa = [];
              $expn = 0;
              $base = self::$yybase[$yystate];
              
              for ($i = 0; $i < self::TOKEN_MAP_SIZE; ++$i) {
                $n = $base + $i;
                if ($n >= 0 && $n < self::YYLAST && self::$yycheck[$n] == $i
                  || $yystate < self::YY2TBLSTATE
                  && ($n = self::$yybase[$yystate + self::YYNLSTATES] + $i)
                  && $n < self::YYLAST && ($n < 0 || self::$yycheck[$n] == $i)
                ) {
                  if ($n >= 0 && self::$yyaction[$n] != self::YYUNEXPECTED) {
                    if ($expn === 4) {
                      /* Too many expected tokens */
                      $expa = null;
                      $expn = 0;
                      break;
                    }

                    $expa[] = self::$terminals[$i];
                    $expn++;
                  }
                }
              }

              $this->report_error($this->yyloc, 
                self::$terminals[$tokid], $expn, $expa);       
            case 1:
            case 2:
              $yyerrflag = 3;  
              
              while (!(($yyn = self::$yybase[$yystate] + self::YYINTERRTOK) >= 0
                && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK
                || ($yystate < self::YY2TBLSTATE
                  && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + self::YYINTERRTOK) >= 0
                  && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK))
              ) {  
                if ($this->yysp <= 0) 
                  return null;
                
                $yystate = $this->yysstk[--$this->yysp];              
              }
              
              $yyn = self::$yyaction[$yyn];
              $this->yysstk[++$this->yysp] = $yystate = $yyn;
              break;
            
            case 3:
              if ($tokid === 0) 
                return null;
              
              $tokid = -1;
              break;
          }
        }

        if ($yystate < self::YYNLSTATES)
          break;
        
        /* >= YYNLSTATES means shift-and-reduce */
        $yyn = $yystate - self::YYNLSTATES;
      }
    }
  }


  private function yyn0() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn1() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn2() 
  {
     
      $this->yyval = new ast\Unit($this->yyastk[$this->yysp-(1-1)]); 
      $this->eat_end(); 
    
  }


  private function yyn3() 
  {
     
      $this->yyval = new ast\Unit($this->yyastk[$this->yysp-(1-1)]); 
      $this->eat_end(); 
    
  }


  private function yyn4() 
  {
    
      $this->yyval = new ast\Unit(null);
      $this->eat_end();
    
  }


  private function yyn5() 
  {
     
      $this->yyval = new ast\Module($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
      $this->eat_semis();
    
  }


  private function yyn6() 
  {
     $this->yyval = new ast\Content($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn7() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn8() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn9() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn10() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn11() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn12() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn13() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn14() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn15() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn16() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn17() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn18() 
  {
     $this->yyval = null; 
  }


  private function yyn19() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn20() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn21() 
  {
     
      $this->yyval = new ast\UseDecl($this->yyastk[$this->yysp-(3-2)], false); 
      $this->eat_semis(); 
    
  }


  private function yyn22() 
  {
    
      $this->yyval = new ast\UseDecl($this->yyastk[$this->yysp-(4-3)], true);
      $this->eat_semis();
    
  }


  private function yyn23() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn24() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn25() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn26() 
  {
     $this->yyval = new ast\UseAlias($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn27() 
  {
     $this->yyval = new ast\UseUnpack($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn28() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn29() 
  {
     $this->yyval = new ast\LabelDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn30() 
  {
     
      $this->yyval = new ast\RequireDecl(false, $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn31() 
  {
     
      $this->yyval = new ast\RequireDecl(true, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn32() 
  {
    
      $this->yyval = new ast\Module($this->yyastk[$this->yysp-(4-2)], null);
      $this->eat_semis();
    
  }


  private function yyn33() 
  {
     
      $this->yyval = new ast\Module($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn34() 
  {
    
      $this->yyval = new ast\Module(null, null);
      $this->eat_semis();
    
  }


  private function yyn35() 
  {
     
      $this->yyval = new ast\Module(null, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn36() 
  {
     $this->yyval = null; 
  }


  private function yyn37() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn38() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn39() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn40() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn41() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn42() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn43() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn44() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn45() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn46() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn47() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn48() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn49() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn50() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn51() 
  {
     
      $this->yyval = new ast\EnumDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn52() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn53() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn54() 
  {
     $this->yyval = new ast\EnumVar($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn55() 
  {
     $this->yyval = new ast\EnumVar($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn56() 
  {
     
      $this->yyval = new ast\ClassDecl($this->yyastk[$this->yysp-(9-1)], $this->yyastk[$this->yysp-(9-3)], $this->yyastk[$this->yysp-(9-4)], $this->yyastk[$this->yysp-(9-5)], $this->yyastk[$this->yysp-(9-7)], $this->yyastk[$this->yysp-(9-8)]); 
      $this->eat_semis(); 
    
  }


  private function yyn57() 
  {
     
      $this->yyval = new ast\ClassDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-5)], null, null, true); 
      $this->eat_semis(); 
    
  }


  private function yyn58() 
  {
     $this->yyval = null; 
  }


  private function yyn59() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn60() 
  {
     $this->yyval = null; 
  }


  private function yyn61() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn62() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn63() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn64() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn65() 
  {
     $this->yyval = null; 
  }


  private function yyn66() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn67() 
  {
     $this->yyval = null; 
  }


  private function yyn68() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn69() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn70() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn71() 
  {
     $this->yyval = null; 
  }


  private function yyn72() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn73() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn74() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn75() 
  {
     
      $this->yyval = new ast\TraitUse($this->yyastk[$this->yysp-(3-2)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn76() 
  {
     
      $this->yyval = new ast\TraitUse($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis();
    
  }


  private function yyn77() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn78() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn79() 
  {
     
      $this->yyval = new ast\TraitItem($this->yyastk[$this->yysp-(2-1)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn80() 
  {
    
      $this->yyval = new ast\TraitItem($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null);
      $this->eat_semis();
    
  }


  private function yyn81() 
  {
     
      $this->yyval = new ast\TraitItem($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn82() 
  {
     $this->yyval = []; 
  }


  private function yyn83() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn84() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn85() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn86() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn87() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn88() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn89() 
  {
     $this->yyval = new ast\CtorDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn90() 
  {
     
      $this->yyval = new ast\CtorDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn91() 
  {
     $this->yyval = new ast\DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn92() 
  {
     
      $this->yyval = new ast\DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn93() 
  {
     $this->yyval = new ast\GetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn94() 
  {
     
      $this->yyval = new ast\GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn95() 
  {
     $this->yyval = new ast\SetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn96() 
  {
     
      $this->yyval = new ast\GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn97() 
  {
     $this->yyval = new ast\NestedMods($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn98() 
  {
     $this->yyval = []; 
  }


  private function yyn99() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn100() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn101() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn102() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn103() 
  {
     $this->yyval = new ast\ThisParam($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], null, false); 
  }


  private function yyn104() 
  {
     $this->yyval = new ast\ThisParam($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-6)], false); 
  }


  private function yyn105() 
  {
     $this->yyval = new ast\ThisParam(null, $this->yyastk[$this->yysp-(4-4)], null, true); 
  }


  private function yyn106() 
  {
     $this->yyval = new ast\ThisParam($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-5)], null, true); 
  }


  private function yyn107() 
  {
     
      $this->yyval = new ast\TraitDecl($this->yyastk[$this->yysp-(7-1)], $this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-6)]); 
      $this->eat_semis(); 
    
  }


  private function yyn108() 
  {
     
      $this->yyval = new ast\TraitDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null, null, true); 
      $this->eat_semis(); 
    
  }


  private function yyn109() 
  {
     
      $this->yyval = new ast\IfaceDecl($this->yyastk[$this->yysp-(7-1)], $this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-6)]); 
      $this->eat_semis(); 
    
  }


  private function yyn110() 
  {
     
      $this->yyval = new ast\IfaceDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], null, true); 
      $this->eat_semis(); 
    
  }


  private function yyn111() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn112() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn113() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn114() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn115() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], true); 
  }


  private function yyn116() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn117() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn118() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn119() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn120() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], true); 
  }


  private function yyn121() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn122() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn123() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn124() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn125() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn126() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn127() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn128() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn129() 
  {
     
      $this->yyval = new ast\VarDecl(null, $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn130() 
  {
    
      $this->yyval = new ast\VarList($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-6)]);
      $this->eat_semis();
    
  }


  private function yyn131() 
  {
     
      $this->yyval = new ast\VarDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn132() 
  {
     $this->yyval = new ast\VarDecl(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn133() 
  {
     $this->yyval = new ast\VarList($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn134() 
  {
     $this->yyval = new ast\VarDecl($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn135() 
  {
    
      $this->yyval = new ast\FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
    
  }


  private function yyn136() 
  {
     
      $this->yyval = new ast\FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn137() 
  {
     
      $this->yyval = new ast\FnDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn138() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn139() 
  {
     
      $this->yyval = $this->yyastk[$this->yysp-(3-2)];
      $this->eat_semis(); 
    
  }


  private function yyn140() 
  {
     $this->yyval = new ast\FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn141() 
  {
     $this->yyval = new ast\FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn142() 
  {
     $this->yyval = new ast\FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn143() 
  {
     $this->yyval = new ast\FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn144() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn145() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn146() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn147() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn148() 
  {
     $this->yyval = null; 
  }


  private function yyn149() 
  {
     $this->yyval = null; 
  }


  private function yyn150() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn151() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn152() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn153() 
  {
     $this->yyval = new ast\Param(false, null, null, $this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn154() 
  {
     $this->yyval = new ast\Param(false, null, null, $this->yyastk[$this->yysp-(2-1)], null, true); 
  }


  private function yyn155() 
  {
     $this->yyval = new ast\Param(false, null, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn156() 
  {
     $this->yyval = new ast\Param(false, null, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn157() 
  {
     $this->yyval = new ast\Param(false, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn158() 
  {
     $this->yyval = new ast\Param(false, null, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn159() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(2-1)], null, $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn160() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(3-1)], null, $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn161() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn162() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn163() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null, true); 
  }


  private function yyn164() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], false); 
  }


  private function yyn165() 
  {
     $this->yyval = new ast\RestParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn166() 
  {
     $this->yyval = new ast\RestParam($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], true); 
  }


  private function yyn167() 
  {
     $this->yyval = new ast\RestParam(null, $this->yyastk[$this->yysp-(3-3)], true); 
  }


  private function yyn168() 
  {
     $this->yyval = new ast\Param(true, null, null, $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn169() 
  {
     $this->yyval = new ast\Param(true, null, null, $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn170() 
  {
     $this->yyval = new ast\Param(true, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn171() 
  {
     $this->yyval = new ast\Param(true, null, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null, true); 
  }


  private function yyn172() 
  {
     $this->yyval = new ast\Param(true, $this->yyastk[$this->yysp-(3-1)], null, $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn173() 
  {
     $this->yyval = new ast\Param(true, $this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-3)], null, true); 
  }


  private function yyn174() 
  {
     $this->yyval = new ast\Param(true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], null, false); 
  }


  private function yyn175() 
  {
     $this->yyval = new ast\Param(true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], null, true); 
  }


  private function yyn176() 
  {
     $this->yyval = null; 
  }


  private function yyn177() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn178() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn179() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn180() 
  {
     $this->yyval = new ast\DoStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn181() 
  {
     $this->yyval = new ast\IfStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn182() 
  {
     $this->yyval = new ast\ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn183() 
  {
     $this->yyval = new ast\ForStmt($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], null, $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn184() 
  {
     $this->yyval = new ast\ForStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn185() 
  {
     $this->yyval = null; 
  }


  private function yyn186() 
  {
     $this->yyval = new ast\ForStmt(null, null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn187() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(2-2)], null, null); 
  }


  private function yyn188() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn189() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(3-2)], null, $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn190() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn191() 
  {
     $this->yyval = new ast\PhpStmt($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn192() 
  {
     $this->yyval = new ast\GotoStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn193() 
  {
     $this->yyval = new ast\TestStmt(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn194() 
  {
     $this->yyval = new ast\TestStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn195() 
  {
     $this->yyval = new ast\BreakStmt(null); 
  }


  private function yyn196() 
  {
     $this->yyval = new ast\BreakStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn197() 
  {
     $this->yyval = new ast\ContinueStmt(null); 
  }


  private function yyn198() 
  {
     $this->yyval = new ast\ContinueStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn199() 
  {
     $this->yyval = new ast\PrintStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn200() 
  {
     $this->yyval = new ast\ThrowStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn201() 
  {
     $this->yyval = new ast\WhileStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn202() 
  {
     $this->yyval = new ast\AssertStmt($this->yyastk[$this->yysp-(3-2)], null); 
  }


  private function yyn203() 
  {
     $this->yyval = new ast\AssertStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn204() 
  {
     $this->yyval = new ast\SwitchStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn205() 
  {
     $this->yyval = new ast\ReturnStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn206() 
  {
     $this->yyval = new ast\ReturnStmt(null); 
  }


  private function yyn207() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn208() 
  {
     $this->yyval = null; 
  }


  private function yyn209() 
  {
     $this->yyval = new ast\ForInPair(null, $this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn210() 
  {
     $this->yyval = new ast\ForInPair($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn211() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn212() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn213() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn214() 
  {
     $this->yyval = null; 
  }


  private function yyn215() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn216() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn217() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn218() 
  {
     $this->yyval = new ast\ElsifItem($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn219() 
  {
     $this->yyval = null; 
  }


  private function yyn220() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn221() 
  {
     $this->yyval = new ast\ElseItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn222() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn223() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn224() 
  {
     $this->yyval = new ast\CatchItem(null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn225() 
  {
     $this->yyval = new ast\CatchItem($this->yyastk[$this->yysp-(5-3)], null, $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn226() 
  {
     $this->yyval = new ast\CatchItem($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn227() 
  {
     $this->yyval = null; 
  }


  private function yyn228() 
  {
     $this->yyval = new ast\FinallyItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn229() 
  {
     $this->yyval = null; 
  }


  private function yyn230() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn231() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn232() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn233() 
  {
     $this->yyval = new ast\PhpUse($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn234() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn235() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn236() 
  {
     $this->yyval = new ast\PhpUseItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn237() 
  {
     $this->yyval = new ast\PhpUseItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn238() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn239() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn240() 
  {
     $this->yyval = new ast\CaseItem($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn241() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn242() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn243() 
  {
     $this->yyval = new ast\CaseLabel($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn244() 
  {
     $this->yyval = new ast\CaseLabel(null); 
  }


  private function yyn245() 
  {
     $this->yyval = new ast\Block([]); 
  }


  private function yyn246() 
  {
     $this->yyval = new ast\Block($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn247() 
  {
     $this->yyval = null; 
  }


  private function yyn248() 
  {
     
      $this->yyval = new ast\ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
      $this->eat_semis(); 
    
  }


  private function yyn249() 
  {
     
      $this->yyval = new ast\ExprStmt(null); 
      $this->eat_semis(); 
    
  }


  private function yyn250() 
  {
     $this->yyval = new ast\ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn251() 
  {
     $this->yyval = new ast\ExprStmt(null); 
  }


  private function yyn252() 
  {
     $this->yyval = new ast\ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn253() 
  {
     $this->yyval = new ast\ExprStmt(null); 
  }


  private function yyn254() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn255() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn256() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn257() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn258() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn259() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn260() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn261() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn262() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn263() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn264() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn265() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn266() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn267() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn268() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn269() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn270() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn271() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn272() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn273() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn274() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn275() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn276() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn277() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn278() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn279() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn280() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn281() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn282() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn283() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn284() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn285() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn286() 
  {
     $this->yyval = new ast\CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn287() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn288() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn289() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn290() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn291() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn292() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn293() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn294() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn295() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn296() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn297() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn298() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn299() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn300() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn301() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn302() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn303() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn304() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn305() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn306() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn307() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)], true); 
  }


  private function yyn308() 
  {
     $this->yyval = new ast\OffsetExpr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn309() 
  {
     $this->yyval = null; 
  }


  private function yyn310() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn311() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn312() 
  {
     $this->yyval = new ast\CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn313() 
  {
     $this->yyval = new ast\YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn314() 
  {
     $this->yyval = new ast\YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn315() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn316() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn317() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn318() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn319() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn320() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn321() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn322() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn323() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn324() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn325() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn326() 
  {
     $this->yyval = new ast\DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn327() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn328() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn329() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn330() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn331() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn332() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn333() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn334() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn335() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn336() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn337() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn338() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn339() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn340() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn341() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn342() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn343() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn344() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn345() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn346() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn347() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn348() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn349() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn350() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn351() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn352() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn353() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn354() 
  {
     $this->yyval = new ast\CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn355() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn356() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn357() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn358() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn359() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn360() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn361() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn362() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn363() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn364() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn365() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn366() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn367() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn368() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn369() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn370() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn371() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn372() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn373() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn374() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn375() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)], true); 
  }


  private function yyn376() 
  {
     $this->yyval = new ast\OffsetExpr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn377() 
  {
     $this->yyval = null; 
  }


  private function yyn378() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn379() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn380() 
  {
     $this->yyval = new ast\CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn381() 
  {
     $this->yyval = new ast\YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn382() 
  {
     $this->yyval = new ast\YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn383() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn384() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn385() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn386() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn387() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn388() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn389() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn390() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn391() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn392() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn393() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn394() 
  {
     $this->yyval = new ast\DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn395() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn396() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn397() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn398() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn399() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn400() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn401() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn402() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn403() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn404() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn405() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn406() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn407() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn408() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn409() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn410() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn411() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn412() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn413() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn414() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn415() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn416() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn417() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn418() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn419() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn420() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn421() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn422() 
  {
     $this->yyval = new ast\CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn423() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn424() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn425() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn426() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn427() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn428() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn429() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn430() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn431() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn432() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn433() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn434() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn435() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn436() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn437() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn438() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn439() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn440() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn441() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn442() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn443() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)], true); 
  }


  private function yyn444() 
  {
     $this->yyval = new ast\OffsetExpr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn445() 
  {
     $this->yyval = null; 
  }


  private function yyn446() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn447() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn448() 
  {
     $this->yyval = new ast\CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn449() 
  {
     $this->yyval = new ast\YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn450() 
  {
     $this->yyval = new ast\YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn451() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn452() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn453() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn454() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn455() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn456() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn457() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn458() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn459() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn460() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn461() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn462() 
  {
     $this->yyval = new ast\DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn463() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn464() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn465() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn466() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn467() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)], true); 
  }


  private function yyn468() 
  {
     $this->yyval = new ast\OffsetExpr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn469() 
  {
     $this->yyval = null; 
  }


  private function yyn470() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn471() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn472() 
  {
     $this->yyval = null; 
  }


  private function yyn473() 
  {
     $this->yyval = null; 
  }


  private function yyn474() 
  {
     $this->yyval = null; 
  }


  private function yyn475() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn476() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn477() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn478() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn479() 
  {
     $this->yyval = new ast\NamedArg($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn480() 
  {
     $this->yyval = new ast\RestArg($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn481() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn482() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn483() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn484() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn485() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn486() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn487() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn488() 
  {
     
      if ($this->yyastk[$this->yysp-(4-2)] === null || (count($this->yyastk[$this->yysp-(4-2)]) === 1 && $this->yyastk[$this->yysp-(4-3)] === null))
        $this->yyval = new ast\ParenExpr($this->yyastk[$this->yysp-(4-2)][0]);
      else
        $this->yyval = new ast\TupleExpr($this->yyastk[$this->yysp-(4-2)]);
    
  }


  private function yyn489() 
  {
     $this->yyval = new ast\TupleExpr(null); 
  }


  private function yyn490() 
  {
     $this->yyval = null; 
  }


  private function yyn491() 
  {
     $this->lex->scan_regexp($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn492() 
  {
     $this->yyval = new ast\RegexpLit($this->yyastk[$this->yysp-(3-3)]->value); 
  }


  private function yyn493() 
  {
     $this->yyval = new ast\Name($this->yyastk[$this->yysp-(1-1)], false, false); 
  }


  private function yyn494() 
  {
     $this->yyval = new ast\Name($this->yyastk[$this->yysp-(3-3)], false, true); 
  }


  private function yyn495() 
  {
     $this->yyval = new ast\Name($this->yyastk[$this->yysp-(2-2)], true, false); 
  }


  private function yyn496() 
  {
     $this->yyastk[$this->yysp-(3-1)]->add($this->yyastk[$this->yysp-(3-3)]); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn497() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn498() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn499() 
  {
     $this->yyval = new ast\TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn500() 
  {
     $this->yyval = new ast\TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn501() 
  {
     $this->yyval = new ast\TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn502() 
  {
     $this->yyval = new ast\TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn503() 
  {
     $this->yyval = new ast\SelfExpr; 
  }


  private function yyn504() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn505() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn506() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn507() 
  {
     $this->yyval = new ast\ThisExpr; 
  }


  private function yyn508() 
  {
     $this->yyval = new ast\SuperExpr; 
  }


  private function yyn509() 
  {
     $this->yyval = new ast\SelfExpr; 
  }


  private function yyn510() 
  {
     $this->yyval = new ast\NullLit; 
  }


  private function yyn511() 
  {
     $this->yyval = new ast\TrueLit; 
  }


  private function yyn512() 
  {
     $this->yyval = new ast\FalseLit; 
  }


  private function yyn513() 
  {
     $this->yyval = new ast\KStrLit($this->cdir); 
  }


  private function yyn514() 
  {
     $this->yyval = new ast\KStrLit($this->cfile); 
  }


  private function yyn515() 
  {
     $this->yyval = new ast\LNumLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->line); 
  }


  private function yyn516() 
  {
     $this->yyval = new ast\LNumLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->coln); 
  }


  private function yyn517() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn518() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn519() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn520() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn521() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn522() 
  {
     $this->yyval = new ast\StrLit($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn523() 
  {
     $this->yyastk[$this->yysp-(5-1)]->add($this->yyastk[$this->yysp-(5-4)]); $this->yyval = $this->yyastk[$this->yysp-(5-1)]; 
  }


  private function yyn524() 
  {
     $this->yyastk[$this->yysp-(3-1)]->add(new ast\StrLit($this->yyastk[$this->yysp-(3-3)])); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn525() 
  {
     $this->yyval = new ast\LNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn526() 
  {
     $this->yyval = new ast\DNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn527() 
  {
     $this->yyval = new ast\SNumLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->suffix); 
  }


  private function yyn528() 
  {
     $this->yyval = new ast\ArrLit(null); 
  }


  private function yyn529() 
  {
     $this->yyval = new ast\ArrGen($this->yyastk[$this->yysp-(9-2)], $this->yyastk[$this->yysp-(9-5)], $this->yyastk[$this->yysp-(9-7)]); 
  }


  private function yyn530() 
  {
     $this->yyval = new ast\ArrLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn531() 
  {
     $this->yyval = null; 
  }


  private function yyn532() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn533() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn534() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn535() 
  {
     $this->yyval = new ast\SpreadExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn536() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn537() 
  {
     $this->yyval = new ast\ObjLit(null); 
  }


  private function yyn538() 
  {
     $this->yyval = new ast\ObjLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn539() 
  {
     $this->yyval = null; 
  }


  private function yyn540() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn541() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn542() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn543() 
  {
     $this->yyval = new ast\ObjPair($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn544() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn545() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn546() 
  {
     $this->yyval = new ast\ObjKey($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn547() 
  {
     $this->yyval = null; 
  }


  private function yyn548() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn549() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn550() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn551() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn552() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn553() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn554() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn555() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn556() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn557() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn558() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn559() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn560() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn561() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn562() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn563() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn564() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn565() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn566() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn567() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn568() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn569() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn570() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn571() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn572() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn573() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn574() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn575() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn576() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn577() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn578() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn579() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn580() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn581() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn582() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn583() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn584() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn585() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn586() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn587() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn588() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn589() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn590() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn591() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn592() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn593() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn594() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn595() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn596() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn597() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn598() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn599() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn600() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn601() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn602() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn603() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn604() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn605() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn606() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn607() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn608() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn609() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn610() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn611() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn612() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn613() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn614() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn615() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }

}

