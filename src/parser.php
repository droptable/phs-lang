<?php

/**
 * this parser-skeleton is based on the awesome
 * work of nikic (https://github.com/nikic)
 * with some extensions (error-recovery and location-tracking) 
 */

/**
 * This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *   the grammar file gen/parser.y
 *   the parser skeleton gen/kymacc.php.parser
 *
 * The skeleton for this parser was written by Moriyoshi Koizumi and is based on
 * the work by Masato Bito and is in the PUBLIC DOMAIN.
 */

namespace phs;


const YYERRTOK = 256;
const T_ARR = 257;
const T_YIELD = 258;
const T_APLUS = 259;
const T_AMINUS = 260;
const T_AMUL = 261;
const T_ADIV = 262;
const T_AMOD = 263;
const T_APOW = 264;
const T_ACONCAT = 265;
const T_ABIT_OR = 266;
const T_ABIT_AND = 267;
const T_ABIT_XOR = 268;
const T_ABOOL_OR = 269;
const T_ABOOL_AND = 270;
const T_ABOOL_XOR = 271;
const T_ASHIFT_L = 272;
const T_ASHIFT_R = 273;
const T_AREF = 274;
const T_RANGE = 275;
const T_BOOL_OR = 276;
const T_BOOL_XOR = 277;
const T_BOOL_AND = 278;
const T_EQ = 279;
const T_NEQ = 280;
const T_IN = 281;
const T_NIN = 282;
const T_IS = 283;
const T_NIS = 284;
const T_GTE = 285;
const T_LTE = 286;
const T_SL = 287;
const T_SR = 288;
const T_AS = 289;
const T_REST = 290;
const T_DEL = 291;
const T_INC = 292;
const T_DEC = 293;
const T_POW = 294;
const T_NEW = 295;
const T_DDDOT = 296;
const T_FN = 297;
const T_LET = 298;
const T_USE = 299;
const T_ENUM = 300;
const T_TYPE = 301;
const T_CLASS = 302;
const T_TRAIT = 303;
const T_IFACE = 304;
const T_MODULE = 305;
const T_REQUIRE = 306;
const T_IDENT = 307;
const T_LNUM = 308;
const T_DNUM = 309;
const T_SNUM = 310;
const T_STRING = 311;
const T_REGEXP = 312;
const T_TRUE = 313;
const T_FALSE = 314;
const T_NULL = 315;
const T_THIS = 316;
const T_SUPER = 317;
const T_SELF = 318;
const T_GET = 319;
const T_SET = 320;
const T_DO = 321;
const T_IF = 322;
const T_ELIF = 323;
const T_ELSE = 324;
const T_FOR = 325;
const T_TRY = 326;
const T_GOTO = 327;
const T_BREAK = 328;
const T_CONTINUE = 329;
const T_PRINT = 330;
const T_THROW = 331;
const T_CATCH = 332;
const T_FINALLY = 333;
const T_WHILE = 334;
const T_ASSERT = 335;
const T_SWITCH = 336;
const T_CASE = 337;
const T_DEFAULT = 338;
const T_RETURN = 339;
const T_CONST = 340;
const T_FINAL = 341;
const T_GLOBAL = 342;
const T_STATIC = 343;
const T_EXTERN = 344;
const T_PUBLIC = 345;
const T_PRIVATE = 346;
const T_PROTECTED = 347;
const T_SEALED = 348;
const T_INLINE = 349;
const T_UNSAFE = 350;
const T_NATIVE = 351;
const T_HIDDEN = 352;
const T_REWRITE = 353;
const T_PHP = 354;
const T_TEST = 355;
const T_NL = 356;
const T_SUBST = 357;
const T_TINT = 358;
const T_TBOOL = 359;
const T_TFLOAT = 360;
const T_TSTR = 361;
const T_TTUP = 362;
const T_TDEC = 363;
const T_TANY = 364;
const T_CDIR = 365;
const T_CFILE = 366;
const T_CLINE = 367;
const T_CCOLN = 368;
const T_CFN = 369;
const T_CCLASS = 370;
const T_CTRAIT = 371;
const T_CMETHOD = 372;
const T_CMODULE = 373;
const T_INVL = 374;
const T_END = 375;

require_once 'ast.php';
require_once 'lexer.php';

use phs\ast;
use phs\ast\Node;

class Parser
{
  const TOKEN_NONE    = -1;
  const TOKEN_INVALID = 144;

  const TOKEN_MAP_SIZE = 376;

  const YYLAST       = 1752;
  const YY2TBLSTATE  = 641;
  const YYGLAST      = 930;
  const YYNLSTATES   = 739;
  const YYINTERRTOK  = 1;
  const YYUNEXPECTED = 32767;
  const YYDEFAULT    = -32766;
  
  // @var Session
  private $sess;

  /* @var array Map of token ids to their respective names */
  private static $terminals = [
    "EOF",
    "error",
    "','",
    "T_ARR",
    "T_YIELD",
    "T_APLUS",
    "T_AMINUS",
    "T_AMUL",
    "T_ADIV",
    "T_AMOD",
    "T_APOW",
    "T_ACONCAT",
    "T_ABIT_OR",
    "T_ABIT_AND",
    "T_ABIT_XOR",
    "T_ABOOL_OR",
    "T_ABOOL_AND",
    "T_ABOOL_XOR",
    "T_ASHIFT_L",
    "T_ASHIFT_R",
    "T_AREF",
    "'='",
    "T_RANGE",
    "'?'",
    "':'",
    "T_BOOL_OR",
    "T_BOOL_XOR",
    "T_BOOL_AND",
    "'|'",
    "'^'",
    "'&'",
    "T_EQ",
    "T_NEQ",
    "T_IN",
    "T_NIN",
    "T_IS",
    "T_NIS",
    "T_GTE",
    "T_LTE",
    "'>'",
    "'<'",
    "T_SL",
    "T_SR",
    "'+'",
    "'-'",
    "'~'",
    "'*'",
    "'/'",
    "'%'",
    "T_AS",
    "T_REST",
    "T_DEL",
    "T_INC",
    "T_DEC",
    "'!'",
    "T_POW",
    "T_NEW",
    "'.'",
    "'['",
    "']'",
    "'('",
    "')'",
    "T_DDDOT",
    "T_FN",
    "T_LET",
    "T_USE",
    "T_ENUM",
    "T_TYPE",
    "T_CLASS",
    "T_TRAIT",
    "T_IFACE",
    "T_MODULE",
    "T_REQUIRE",
    "T_IDENT",
    "T_LNUM",
    "T_DNUM",
    "T_SNUM",
    "T_STRING",
    "T_REGEXP",
    "T_TRUE",
    "T_FALSE",
    "T_NULL",
    "T_THIS",
    "T_SUPER",
    "T_SELF",
    "T_GET",
    "T_SET",
    "T_DO",
    "T_IF",
    "T_ELIF",
    "T_ELSE",
    "T_FOR",
    "T_TRY",
    "T_GOTO",
    "T_BREAK",
    "T_CONTINUE",
    "T_PRINT",
    "T_THROW",
    "T_CATCH",
    "T_FINALLY",
    "T_WHILE",
    "T_ASSERT",
    "T_SWITCH",
    "T_CASE",
    "T_DEFAULT",
    "T_RETURN",
    "T_CONST",
    "T_FINAL",
    "T_GLOBAL",
    "T_STATIC",
    "T_EXTERN",
    "T_PUBLIC",
    "T_PRIVATE",
    "T_PROTECTED",
    "T_SEALED",
    "T_INLINE",
    "T_UNSAFE",
    "T_NATIVE",
    "T_HIDDEN",
    "T_REWRITE",
    "T_PHP",
    "T_TEST",
    "T_SUBST",
    "T_TINT",
    "T_TBOOL",
    "T_TFLOAT",
    "T_TSTR",
    "T_TTUP",
    "T_TDEC",
    "T_TANY",
    "T_CDIR",
    "T_CFILE",
    "T_CLINE",
    "T_CCOLN",
    "T_CFN",
    "T_CCLASS",
    "T_CTRAIT",
    "T_CMETHOD",
    "T_CMODULE",
    "T_END",
    "';'",
    "'{'",
    "'}'",
    "'$'"
    , "???"
  ];

  /* @var array Map which translates lexer tokens to internal tokens */
  private static $translate = [
        0,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,   54,  144,  144,  143,   48,   30,  144,
       60,   61,   46,   43,    2,   44,   57,   47,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,   24,  140,
       40,   21,   39,   23,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,   58,  144,   59,   29,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  141,   28,  142,   45,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,    1,    3,    4,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   20,   22,   25,   26,   27,   31,
       32,   33,   34,   35,   36,   37,   38,   41,   42,   49,
       50,   51,   52,   53,   55,   56,   62,   63,   64,   65,
       66,   67,   68,   69,   70,   71,   72,   73,   74,   75,
       76,   77,   78,   79,   80,   81,   82,   83,   84,   85,
       86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
       96,   97,   98,   99,  100,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
      116,  117,  118,  119,  120,  121,  144,  122,  123,  124,
      125,  126,  127,  128,  129,  130,  131,  132,  133,  134,
      135,  136,  137,  138,  144,  139
  ];

  private static $yyaction = [
     1368,  243,  244,  245,  292,  293,  294,  295,-32766,-32766,
      423,  424,  296,  297,  298,  299,  300,  301,  302,  303,
      304,  305,  306,  307,  425,  208,  310, 1186, 1187, 1373,
      308, 1372,   12,  145,  454,  130,    0,  246,  247,  248,
      422,  528, 1293, 1116, 1117, 1371,  249, 1370,   11,  142,
     -229,  130, 1369,  144,  710,  288,  289,  290,  291, 1322,
     1323, 1324, 1325,  835, 1326, 1327, 1328, 1329, 1330, 1275,
      679,  416,  517,  518,  519, 1331, 1332, 1333, 1334, 1335,
     1336, 1276, 1277, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
     1344, 1345, 1355, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
     1353, 1354, 1356, 1357, 1365, 1358, 1359, 1360, 1361, 1362,
     1363, 1364,  521,  668,   -6,  655, 1366, 1367,  147, 1374,
     1375, 1376, 1377, 1378, 1379,  689, 1380, 1381, 1382, 1383,
     1384, 1385, 1386, 1387, 1388,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766, 1275,  148,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766, 1295,   15, 1276, 1277,  149,  150,  151,
      327,  696,  165,  413, 1011,  456,  152,  153,  154,  425,
      409, 1299, 1186, 1187,  768,  308,  665,  -38,  469,  451,
      -38,  -38,  -38,  -38,  -38,  447,  136,-32767,-32767,-32767,
    -32767,-32767,-32767,-32767,-32767,  241,  242,  243,  244,  245,
     1273,   21,  620, 1274,  450,  550,  621,  515,  474,  475,
      146,  155,  822,  529,  622,  156,  623,  261,  511,  137,
      781,  782,  783,  784,  790,  657,  658,  787,  788,  789,
      791,  792,  793,    2,  659,  544,   -4,  655,  400,  468,
      147,-32766,-32766,-32766,-32766,  735,  698,-32767,-32767,-32767,
    -32767,-32767,-32767,  758, 1008,   13,   -6, 1275,  414,  524,
      699,  305,  306,  307,  425,  512,  148, 1186, 1187,  926,
      308,  653,  249,   15,   11,  142,  727,  167,  931,  149,
      150,  151, 1275,  289,  290,  291,  679,  456,  152,  153,
      154,  732,  409,-32766,-32766,  665,  632,  890,  711,  -38,
      469,  451,  -38,  -38,  -38,  -38,  -38,  446,  136,  235,
      236,  420,  421,  237,  238,  239,  240,  241,  242,  243,
      244,  245,  401,   21,  620,  390,  386,  550,  621,  515,
      474,  475,  146,  155,  684,  329,  622,  156,  623, 1276,
     1277,  137,  781,  782,  783,  784,  790,  657,  658,  787,
      788,  789,  791,  792,  793,  655,  659,  544,  147,   15,
      781,  782,  783,  784,  790,  785,  786,  787,  788,  789,
      791,  792,  793,   15,  637,  758, 1008,   13,  670,  469,
       15,  665,  466,  250,  148,   12,  145,  530,  130,  492,
    -32766,-32766,-32766,  513, 1238,  667,  465,  149,  150,  151,
      534,  535,  665,  992,  532,  456,  152,  153,  154,  524,
      409,  251,  961,  834,  133, 1007,  649,  -38,  469,  451,
      -38,  -38,  -38,  -38,  -38,  447,  136,  650,  260,  680,
     1275,  469, 1275,  134, 1267, 1268, 1269, 1270, 1254, 1271,
     1272,   21,  620,  533,  387,  550,  621,  515,  474,  475,
      146,  155,  534,  535,  622,  156,  623,  -99,  697,  137,
      781,  782,  783,  784,  790,  657,  658,  787,  788,  789,
      791,  792,  793,  655,  659,  544,  147,  415,  400,  320,
      809,  913,  325,    7,  908,  526,  796,  492,  208,   15,
      637,  508, 1240,  758, 1008,   13,  775,  911,  414,  398,
      461,  270,  148,  904,  313, 1293,  328,  524,  322,  -98,
      916,  667,  464,  323,  933,  149,  150,  151,  902,  319,
      290,  291,  408,  456,  152,  153,  154,  326,  409,  330,
     1275,-32766,-32766,-32766,-32766,  -38,  469,  451,  -38,  -38,
      -38,  -38,  -38,  447,  136,  490,  143,-32766,-32766,  315,
     1267, 1268, 1269, 1270,  265, 1271, 1272,  266,  927,   21,
      620,-32766,-32766,  550,  621,  515,  474,  475,  146,  155,
     1308,  262,  622,  156,  623,  552,  631,  137,  781,  782,
      783,  784,  790,  657,  658,  787,  788,  789,  791,  792,
      793,  655,  659,  544,  147,    4,    3,  311,  705,  830,
      506, 1002,  807,  600,   15,  637,  864,  389,  862,  599,
      317,  758, 1008,   13,  773, 1275,  269,  314,  312,  264,
      148,  226,  411,  455,  463,   19,  667,  324, 1003,  309,
      291,  510,  445,  149,  150,  151,-32766,  531,  321,  308,
       17,  456,  152,  153,  154,  426,  409,    9, 1275,  130,
      799,   15, 1257,  -38,  469,  451,  -38,  -38,  -38,  -38,
      -38,  447,  136,  250,  529, 1267, 1268, 1269, 1270,  165,
     1271, 1272,   18,  667,   16, 1067, 1302,   21,  620, 1301,
     1137,  550,  621,  515,  474,  475,  146,  155, 1234, 1208,
      622,  156,  623, 1300, 1233,  137,  781,  782,  783,  784,
      790,  657,  658,  787,  788,  789,  791,  792,  793, 1068,
      659,  544, 1267, 1268, 1269, 1270, 1138, 1271, 1272, 1207,
     1239,  385,  525,  509,   20,  138,  384,  507,  448,  758,
     1008,   13,  209,  210,  211,  212,  213,  214,  215,  216,
      217,  218,  219,  220,  221,  222,  223,  459,  224,  225,
      141,  609,  227,  228,  229,  230,  231,  232,  233,  234,
      235,  236,  420,  421,  237,  238,  239,  240,  241,  242,
      243,  244,  245,  246,  247,  248,  422,  397,  602, 1116,
     1117, 1255,  249,   27,   11,  142,   28,  130,  168,  169,
      170,  171,  172,  173,  174,  175,  176,  177,  178,  179,
      180,  181,  182,  458,  183,  184,  139,  729,  185,  186,
      187,  188,  189,  190,  191,  192,  193,  194,  417,  418,
      195,  196,  197,  198,  199,  200,  201,  202,  203,  204,
      205,  206,  419, 1236,  655, 1046, 1047,  147,  207, 1317,
       10,  140,  654,  648,  452,  557,   24,   29,  700,  716,
     1253,  690, 1237,  903,  252,  453,  638, 1293,  467,  503,
       26,  630,  686,  148,  695,  565,  959,  166,  771,  965,
      967,  805,  972,  956,  964,  891,  149,  150,  151,  761,
      253,  958, 1009,  712,  456,  152,  153,  154,  847,  409,
     1010,  939,  763,  254,  255,  256,  -38,  469,  762,  772,
      884,  460,  257,  258,  259,  893,  412,  504,  951,  883,
        0,    0,    0,  472,  470,  885,  849,  962,    0,    0,
       21,  620,    0,    0,  550,  621,  515,  474,  475,  146,
      155,    0,    0,  622,  156,  623, -260, -260,  137,  781,
      782,  783,  784,  790,  785,  786,  787,  788,  789,  791,
      792,  793,  655,  659,  544,  147,  781,  782,  783,  784,
      790,  785,  786,  787,  788,  789,  791,  792,  793,  954,
      845,  836,  955, 1008,   13, -260,  851,  957,    0,  541,
      268,  148,  597,  318,  267,  263,    3,   13,    0,  950,
     1012,  963,    0,  831,  149,  150,  151, 1006, 1206, 1232,
     1136, 1066,  456,  152,  153,  154, 1294,  409,  806,  852,
      863,  861,  800,  774,  -38,  469,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,  776,-32766,-32766,   21,  620,
     1309, 1310,  550,  621,  515,  474,  475,  146,  155,    0,
        0,  622,  156,  623,  311,  705,  137,  781,  782,  783,
      784,  790,  785,  786,  787,  788,  789,  791,  792,  793,
      563,  659,  544,  147,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1008,   13,    0,    0,    0,    0,    0,    0,  148,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  149,  150,  151,    0,    0,    0,    0,    0,
      456,  152,  153,  154,    0,  409,    0,    0,    0,    0,
        0,    0,  -38,  469,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,    0,-32766,    0,   21,  620,    0,    0,
      550,  621,  515,  474,  475,  146,  155,    0,    0,  622,
      156,  623,    0,    0,  137,  781,  782,  783,  784,  790,
      785,  786,  787,  788,  789,  791,  792,  793,  655,  659,
      544,  147,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 1008,
       13, 1004,    0,    0,    0,    0,    0,  148,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      149,  150,  151,    0,    0,    0,    0,    0,  456,  152,
      153,  154,    0,  409,    0,    0,    0,    0,    0,    0,
      -38,  469,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
        0,    0,    0,    0,   21,  620,    0,    0,  550,  621,
      515,  474,  475,  146,  155,    0,    0,  622,  156,  623,
        0,    0,  137,  781,  782,  783,  784,  790,  785,  786,
      787,  788,  789,  791,  792,  793,  655,  659,  544,  147,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   15,
        0,    0,    0,    0,    0,  252,    0, 1008,   13, 1005,
        0,    0,    0,    0,    0,  148,    0,    0,    0,    0,
        0,  667,    0,    0,    0,    0,    0,    0,  149,  150,
      151,  253,    0,    0,    0,    0,  456,  152,  153,  154,
        0,  409,    0,    0,  254,  255,  256,    0,  -38,  469,
        0,    0,  460,  257,  258,  259,    0,  412,    0,    0,
     1267, 1268, 1269, 1270,  472, 1271, 1272,    0,    0,    0,
        0,    0,   21,  620,    0,    0,  550,  621,  515,  474,
      475,  146,  155,    0,    0,  622,  156,  623,  157,    0,
      137,  781,  782,  783,  784,  790,  785,  786,  787,  788,
      789,  791,  792,  793,    0,  659,  544,    0,    0,    0,
        0,    0,    0,    0,  158,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1008,   13,  159,  160,  161,
        0,  738,    0,    0,    0,  457,  162,  163,  164,    0,
      410,    0,  129,    0,  131,  655,   15,  471,  147,    0,
        0,    0,    0,    0,    0,    0,    0, 1275, 1296, 1297,
     1298, 1293,    0, 1282, 1283, 1281, 1278, 1279,  656, 1276,
     1277,    0,    0,    0,  148,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  149,  150,  151,
        0,    0,    0,    0,    0,  456,  152,  153,  154,    0,
      409,    0,    0,    0,    0,    0,    0,-32766,    0,    0,
        0,    0,    0,    0, 1284, 1285, 1286, 1287, 1288, 1289,
     1290, 1291, 1292,    0,    0,    5,    0,    0,    0,    0,
        0,   21,  620,    0,    0,  550,  621,  515,  474,  475,
      146,  155,    0,    0,  622,  156,  623,    0,    0,  137,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  659,  544,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1008,   13,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,    0,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,    0,-32766,-32766,-32766,-32766,-32766,  271,  272,  273,
      274,  275,  276,  277,  278,  279,  280,  281,  282,  283,
      284,  285,  462,  286,  287,  144,  316,  288,  289,  290,
      291,  271,  272,  273,  274,  275,  276,  277,  278,  279,
      280,  281,  282,  283,  284,  285,  462,  286,  287,  144,
        0,  288,  289,  290,  291,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,    0,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,-32766,
    -32766,-32766
  ];

  private static $yycheck = [
        4,   43,   44,   45,   29,   30,   31,   32,   85,   86,
       35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
       45,   46,   47,   48,   49,   60,    2,   52,   53,   33,
       55,   35,   57,   58,    2,   60,    0,   46,   47,   48,
       49,   24,   77,   52,   53,   49,   55,   51,   57,   58,
       33,   60,   56,   23,    1,   25,   26,   27,   28,   63,
       64,   65,   66,  140,   68,   69,   70,   71,   72,   73,
       66,   67,   68,   69,   70,   79,   80,   81,   82,   83,
       84,   85,   86,   87,   88,   89,   90,   91,   92,   93,
       94,   95,   96,   97,   98,   99,  100,  101,  102,  103,
      104,  105,  106,  107,  108,  109,  110,  111,  112,  113,
      114,  115,   49,    1,    0,    1,  120,  121,    4,  123,
      124,  125,  126,  127,  128,    1,  130,  131,  132,  133,
      134,  135,  136,  137,  138,   29,   30,   31,   32,   29,
       30,   31,   32,   73,   30,   35,   36,   37,   38,   39,
       40,   41,   42,   77,   62,   85,   86,   43,   44,   45,
        3,    1,   50,    2,  140,   51,   52,   53,   54,   49,
       56,   59,   52,   53,  142,   55,   84,   63,   64,   65,
       66,   67,   68,   69,   70,   71,   72,   33,   34,   35,
       36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
       39,   87,   88,   42,  141,   91,   92,   93,   94,   95,
       96,   97,    1,   50,  100,  101,  102,  141,    2,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
      116,  117,  118,  141,  120,  121,    0,    1,   30,   30,
        4,   29,   30,   31,   32,   82,    1,   35,   36,   37,
       38,   39,   40,  139,  140,  141,  142,   73,   50,   50,
        1,   46,   47,   48,   49,    2,   30,   52,   53,   61,
       55,   51,   55,   62,   57,   58,   56,    2,   23,   43,
       44,   45,   73,   26,   27,   28,   66,   51,   52,   53,
       54,   82,   56,   85,   86,   84,   24,  140,    1,   63,
       64,   65,   66,   67,   68,   69,   70,   71,   72,   33,
       34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
       44,   45,   49,   87,   88,  141,    2,   91,   92,   93,
       94,   95,   96,   97,    1,    3,  100,  101,  102,   85,
       86,  105,  106,  107,  108,  109,  110,  111,  112,  113,
      114,  115,  116,  117,  118,    1,  120,  121,    4,   62,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
      116,  117,  118,   62,   63,  139,  140,  141,    1,   64,
       62,   84,    2,   50,   30,   57,   58,   30,   60,   30,
       46,   47,   48,    2,   61,   84,    2,   43,   44,   45,
       85,   86,   84,  140,   49,   51,   52,   53,   54,   50,
       56,    2,  140,  140,    2,  140,   61,   63,   64,   65,
       66,   67,   68,   69,   70,   71,   72,    2,    2,    1,
       73,   64,   73,    2,  123,  124,  125,  126,   61,  128,
      129,   87,   88,    2,    2,   91,   92,   93,   94,   95,
       96,   97,   85,   86,  100,  101,  102,  142,    1,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
      116,  117,  118,    1,  120,  121,    4,   50,   30,   21,
       39,   23,   21,    2,   23,    2,   61,   30,   60,   62,
       63,    2,   61,  139,  140,  141,  142,   23,   50,    2,
       20,   21,   30,   61,    3,   77,    3,   50,    3,  142,
       23,   84,   20,   21,   23,   43,   44,   45,   61,   21,
       27,   28,   40,   51,   52,   53,   54,   21,   56,   21,
       73,   29,   30,   85,   86,   63,   64,   65,   66,   67,
       68,   69,   70,   71,   72,   57,   58,   57,   58,   21,
      123,  124,  125,  126,   24,  128,  129,   24,   61,   87,
       88,   85,   86,   91,   92,   93,   94,   95,   96,   97,
      142,   24,  100,  101,  102,   98,   99,  105,  106,  107,
      108,  109,  110,  111,  112,  113,  114,  115,  116,  117,
      118,    1,  120,  121,    4,  140,  141,  103,  104,  140,
      141,   24,  140,  141,   62,   63,  140,  141,  140,  141,
       24,  139,  140,  141,  142,   73,   24,   24,   24,   24,
       30,   24,   24,   24,   24,   24,   84,   24,   24,   33,
       28,   40,   45,   43,   44,   45,   29,   49,   33,   55,
       57,   51,   52,   53,   54,   35,   56,   62,   73,   60,
       74,   62,   78,   63,   64,   65,   66,   67,   68,   69,
       70,   71,   72,   50,   50,  123,  124,  125,  126,   50,
      128,  129,   57,   84,   62,   59,   59,   87,   88,   59,
       59,   91,   92,   93,   94,   95,   96,   97,   59,   59,
      100,  101,  102,   59,   59,  105,  106,  107,  108,  109,
      110,  111,  112,  113,  114,  115,  116,  117,  118,   59,
      120,  121,  123,  124,  125,  126,   59,  128,  129,   59,
       61,   60,   60,   60,   60,   60,   60,   60,   60,  139,
      140,  141,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   20,   21,   22,
       23,   60,   25,   26,   27,   28,   29,   30,   31,   32,
       33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
       43,   44,   45,   46,   47,   48,   49,   60,   63,   52,
       53,   61,   55,   61,   57,   58,   61,   60,    5,    6,
        7,    8,    9,   10,   11,   12,   13,   14,   15,   16,
       17,   18,   19,   20,   21,   22,   23,   61,   25,   26,
       27,   28,   29,   30,   31,   32,   33,   34,   35,   36,
       37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
       47,   48,   49,   61,    1,   52,   53,    4,   55,   61,
       57,   58,   61,   61,   65,   61,   61,   61,   61,   61,
       61,    1,   61,   61,    4,   65,   89,   77,   65,   65,
       90,  100,   91,   30,  119,  122,  140,  120,  140,  140,
      140,  140,  140,  140,  140,  140,   43,   44,   45,  140,
       30,  140,  140,  143,   51,   52,   53,   54,  140,   56,
      140,  140,  140,   43,   44,   45,   63,   64,  140,  140,
      140,   51,   52,   53,   54,  140,   56,  141,  140,  140,
       -1,   -1,   -1,   63,   64,  140,  140,  140,   -1,   -1,
       87,   88,   -1,   -1,   91,   92,   93,   94,   95,   96,
       97,   -1,   -1,  100,  101,  102,  103,  104,  105,  106,
      107,  108,  109,  110,  111,  112,  113,  114,  115,  116,
      117,  118,    1,  120,  121,    4,  106,  107,  108,  109,
      110,  111,  112,  113,  114,  115,  116,  117,  118,  140,
      140,  140,  140,  140,  141,  142,  140,  140,   -1,  141,
      141,   30,  141,  141,  141,  141,  141,  141,   -1,  142,
      140,  142,   -1,  142,   43,   44,   45,  142,  142,  142,
      142,  142,   51,   52,   53,   54,  142,   56,  142,  142,
      142,  142,  142,  142,   63,   64,    5,    6,    7,    8,
        9,   10,   11,   12,   13,   14,   15,   16,   17,   18,
       19,   20,   21,   22,   23,  142,   25,   26,   87,   88,
      142,  142,   91,   92,   93,   94,   95,   96,   97,   -1,
       -1,  100,  101,  102,  103,  104,  105,  106,  107,  108,
      109,  110,  111,  112,  113,  114,  115,  116,  117,  118,
        1,  120,  121,    4,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,  140,  141,   -1,   -1,   -1,   -1,   -1,   -1,   30,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   43,   44,   45,   -1,   -1,   -1,   -1,   -1,
       51,   52,   53,   54,   -1,   56,   -1,   -1,   -1,   -1,
       -1,   -1,   63,   64,    5,    6,    7,    8,    9,   10,
       11,   12,   13,   14,   15,   16,   17,   18,   19,   20,
       21,   22,   23,   -1,   25,   -1,   87,   88,   -1,   -1,
       91,   92,   93,   94,   95,   96,   97,   -1,   -1,  100,
      101,  102,   -1,   -1,  105,  106,  107,  108,  109,  110,
      111,  112,  113,  114,  115,  116,  117,  118,    1,  120,
      121,    4,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  140,
      141,  142,   -1,   -1,   -1,   -1,   -1,   30,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       43,   44,   45,   -1,   -1,   -1,   -1,   -1,   51,   52,
       53,   54,   -1,   56,   -1,   -1,   -1,   -1,   -1,   -1,
       63,   64,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   20,   21,   22,
       -1,   -1,   -1,   -1,   87,   88,   -1,   -1,   91,   92,
       93,   94,   95,   96,   97,   -1,   -1,  100,  101,  102,
       -1,   -1,  105,  106,  107,  108,  109,  110,  111,  112,
      113,  114,  115,  116,  117,  118,    1,  120,  121,    4,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   62,
       -1,   -1,   -1,   -1,   -1,    4,   -1,  140,  141,  142,
       -1,   -1,   -1,   -1,   -1,   30,   -1,   -1,   -1,   -1,
       -1,   84,   -1,   -1,   -1,   -1,   -1,   -1,   43,   44,
       45,   30,   -1,   -1,   -1,   -1,   51,   52,   53,   54,
       -1,   56,   -1,   -1,   43,   44,   45,   -1,   63,   64,
       -1,   -1,   51,   52,   53,   54,   -1,   56,   -1,   -1,
      123,  124,  125,  126,   63,  128,  129,   -1,   -1,   -1,
       -1,   -1,   87,   88,   -1,   -1,   91,   92,   93,   94,
       95,   96,   97,   -1,   -1,  100,  101,  102,    4,   -1,
      105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
      115,  116,  117,  118,   -1,  120,  121,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   30,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,  140,  141,   43,   44,   45,
       -1,   47,   -1,   -1,   -1,   51,   52,   53,   54,   -1,
       56,   -1,   58,   -1,   60,    1,   62,   63,    4,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   73,   74,   75,
       76,   77,   -1,   79,   80,   81,   82,   83,   84,   85,
       86,   -1,   -1,   -1,   30,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   43,   44,   45,
       -1,   -1,   -1,   -1,   -1,   51,   52,   53,   54,   -1,
       56,   -1,   -1,   -1,   -1,   -1,   -1,   63,   -1,   -1,
       -1,   -1,   -1,   -1,  130,  131,  132,  133,  134,  135,
      136,  137,  138,   -1,   -1,  141,   -1,   -1,   -1,   -1,
       -1,   87,   88,   -1,   -1,   91,   92,   93,   94,   95,
       96,   97,   -1,   -1,  100,  101,  102,   -1,   -1,  105,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,  120,  121,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,  140,  141,    5,    6,    7,    8,
        9,   10,   11,   12,   13,   14,   15,   16,   17,   18,
       19,   20,   21,   22,   23,   -1,   25,   26,   27,   28,
       29,   30,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   20,   21,   22,
       23,   -1,   25,   26,   27,   28,   29,    5,    6,    7,
        8,    9,   10,   11,   12,   13,   14,   15,   16,   17,
       18,   19,   20,   21,   22,   23,   24,   25,   26,   27,
       28,    5,    6,    7,    8,    9,   10,   11,   12,   13,
       14,   15,   16,   17,   18,   19,   20,   21,   22,   23,
       -1,   25,   26,   27,   28,    5,    6,    7,    8,    9,
       10,   11,   12,   13,   14,   15,   16,   17,   18,   19,
       20,   21,   22,   23,   -1,   25,   26,   27,   28,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   20,   21,   22,   23,   -1,   25,
       26,   27
  ];

  private static $yybase = [
      236,  114,  354,  472,  590,  428,  833,  -35,  951,  482,
      844,  843,  842, 1069, 1187,   -4,   -4,   -4,   -4, 1305,
      850, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
      272,  597,  771,  728,  726,  734,  595,  759,  772,  594,
      616,  778,  593,  621,  635,  864,  859,  858,  857,  603,
      660,  725,  577,  760,  856,  746,  765,  776,  836,  783,
      727,  727,  727,  727,  727,  727,  727,  727,  727,  727,
      727,  727,  727,  727,  727,  727,  727,  727,  727,  727,
      727,  727,  727,  727,  727,  727,  727,  727,  727,  727,
      727,  727,  727,  727,  727,  727,  727,  727,  727,  727,
      727,  727,  727,  727,  727,  727,  727, 1652, 1676, 1676,
     1676, 1676, 1676, 1676, 1676, 1676, 1676, 1676, 1676, 1676,
     1676, 1676, 1676, 1676, 1676, 1676, 1676, 1676, 1676,  112,
      333,  377,  750,  619,  613,  722,  747,  729,  124,  547,
      160,  533,  245,  259,  586,   53, 1404, 1404, 1404, 1404,
     1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404,
     1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404,
     1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404,
     1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404,
     1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404,
     1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404,
     1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404,
     1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404,
     1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404,
     1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404,
     1404, 1404, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404,
     1404, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1404,
     1321, 1404, 1404, 1404, 1404, 1404, 1321, 1321, 1404, 1404,
     1404, 1404, 1321, 1321, 1321, 1404, 1321, 1404, 1404, 1404,
     1404, 1247, 1247, 1247, 1247, 1247, 1247, 1247, 1247, 1129,
     1129,   30,   30,   30,   30, 1011, 1011, 1724, 1724,  257,
     1700, 1700,  493, 1627, 1627,  602,  542, 1601, 1601,  -25,
      607,  276,  276,  154,  154,  154,  154,  154,  154,  276,
      276,  154,  154,  154,  154,  154,  154,  502,  106,  106,
      212,  212,  212,  212,  457,  209,  209,  359,  367,  367,
      367,  367,  315,  184,  357,  575,  575,  208,  448,  -77,
      427,  476,  -42,  -42,  -42,  -42,  110,  110,  311,  589,
      589,  311,  589,  311,  311,  311, 1257, 1257, 1257, 1257,
     1257, 1257, 1257, 1257, 1257, 1257, 1257,   -9,   -9,   -9,
       -9,   -9,   -9,  215,  215,  215,  344,  344,  344,  344,
      344,  344,  120,  120,  120,  211,   92,   92,  297,    4,
      318,  318,  318,  318,  318,  318,  318,  318,  318,  318,
      318,  318,  318,  318,  318,  318,  318,  318,  163,  667,
      663,  666,  666,  851,  829,  733,  217,  217,  217,  217,
      217,  217,  217,  217,  217,  217,  217,  217,  217,  217,
      839,  217,  614,  217,  584,  584,  584,  584,  584,  584,
      584,  584,  220,   70,   70,  849,   70,   70,   70,   70,
       70,   70,   70,   70,  157,   70,  488,   70,   70,   70,
      488,   70,   70,   70,   70,   70,   70,  488,   70,   70,
       70,   70,   70,   70,   70,   70,   70,  455,  161,  355,
      459,  494,  477,  598,  780,  477,  501,  501,  505,  505,
      664,  743,  668,  482,  503,  332,  748,  830,  275,  488,
      769,   63,  741,  855,  775,   76,  488,  431,  787,  480,
       17,   24,  845,  468,  488,  442,  488,   32,  488,  742,
      777,  263,  847,  458,  488,  788,  492,  488,  786,  425,
      441,  466,  461,  497,  462,  488,  273,  794,  767,  793,
      793,  598,  745,  598,  598,  598,  770,  598,  598,  740,
      598,  598,  598,  598,  598,  598,  598,  598,  598,  598,
      665,  846,  665,  665,  490,  412,  409,  490,  666,  481,
      665,  846,  780,  780,  794,  591,  591,  717,  665,  767,
      490,  666,  591,  391,  600,  599,  587,  793,  846,  846,
      740,  666,  666,  666,  846,  730,  612,  779,  790,  841,
       36,  585,  601,  743,  574,  612,  585,  612,  617,  620,
      720,  585,  739,  761,  768,  832,  837,  838,  715,  766,
      899,  743,  898,  530,  659,  592,  662,  789,  893,  791,
      785,  732,  596,  758,  752,  691,  650,  792,  657,  629,
      528,  871,  751,  216,  216,  604,  588,  498,  731,  605,
      630,  782,  576,  870,  610,  487,  506,  735,  585,  869,
      394,  474,  491,  255,  781,  585,  380,  661,  868,  634,
      867,  866,  583,  784,  324,  615,  831,  508,    0, 1404,
     1404, 1404, 1404, 1404,   -4, 1404,   -4, 1404,   -4,   -4,
       -4,   -4, 1404, 1404,    0,    0,    0,    0, 1404, 1404,
     1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404,  727,
      727,  727,  727,  727,  727,  727,  727,  727,  727,  727,
      727,  727,  727,  727,  727,  727,  727,  727,  727,  727,
      727,  727,  727,  727,  727,  727,  727,  727,  328,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  -25,  -25,  -25,  -25,
      -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,
      -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25, 1404, 1404,
     1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404,
     1404, 1404, 1404, 1404, 1404,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404,
     1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404,
     1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404,
     1404, 1404, 1404, 1404, 1404, 1404, 1404, 1404,    0, 1404,
        0,    0,    0,    0,    0, 1404, 1404,    0,    0,    0,
        0, 1404, 1404, 1404,    0, 1404,    0,    0,    0,    0,
      727,  727,  727,  727,  727,  727,  727,  727,  727,  727,
      -25,  -25,  -25,  -25,  727,  727,  727,  727,  -25,  727,
      727,  -25,  727,  727,  -25,  254,  727,  727,    0,  -25,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,  -25,  -25,  -25,  -25,
      -25,  -25,  -25,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,   70,
      254,   -9,   -9,   -9,   -9,  -25,  -25,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,    0,    0,    0,    0,
        0,    0,  328,  328,  328,   -9,   -9,   -9,   -9,   -9,
       -9,  328,  328,  328,   70,   70,   70,   70,  715,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,  328,  328,  328,  328,  328,
      328,  328,  328,  328,  328,  328,  328,  328,  328,   70,
      328,   70,  328,  328,  328,  328,  328,  328,  328,  328,
      328,  715,    0,    0,  494,    0,    0,    0,    0,    0,
        0,    0,    0,  846,    0,  328,    0,    0,    0,  328,
        0,    0,    0,    0,    0,    0,  328,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  585,    0,  585,  585,
        0,    0,  666,  846,    0,  846,  846,  846,  846,  846,
      846,  846,  585,  846,  846,  846,  846,    0,    0,  489,
        0,  426,  730,  489,    0,    0,    0,  483,    0,    0,
        0,  585,    0,    0,    0,    0,    0,    0,  426,  743,
        0,  743,    0,    0,  483,    0,    0,  426,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  328,    0,    0,  328,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  328
  ];

  private static $yydefault = [
    32767,32767,32767,32767,32767,32767,32767,  580,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,  333,  568,32767,32767,32767,  403,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  274,
      276,  504,  567,  275,  311,  312,  313,  314,  315,  316,
      317,  318,  319,  320,  321,  322,  323,  324,  325,  309,
      381,  382,  383,  384,  385,  386,  387,  388,  389,  390,
      391,  392,  393,  394,  395,  379,  506,  568,  277,  575,
      505,  129,  160,   65,  175,  170,  120,  473,  278,  451,
      452,  453,  454,  455,  456,  457,  458,  459,  460,  461,
      462,  463,  464,  465,  449,  279,  162,  134,  148,32767,
    32767,32767,32767,  580,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,  580,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,  297,  367,  334,  331,  404,  401,  330,  400,  295,
      365,  439,  474,  471,  470,  296,  366,  294,  364,  437,
      288,  358,  438,  289,  359,  436,32767,  287,  357,  430,
      431,  300,  301,  302,  303,  292,  293,  291,  290,  370,
      371,  372,  373,  362,  363,  360,  361,  429,  442,  443,
      434,  435,  432,  433,32767,  114,32767,32767,   38,   38,
       38,   38,   38,   39,32767,   39,32767,32767,32767,   39,
    32767,   38,  298,  299,  368,  369,  440,  441,32767,  347,
      417,32767,  487,32767,  195,  197,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,  280,  281,  286,
      350,  351,  356,  422,  423,  428,  282,  283,  284,  352,
      353,  354,  424,  425,  426,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,  338,  336,  335,  337,
      340,  341,  339,  408,  406,  405,  407,  410,  411,  409,
    32767,  285,32767,  355,  478,  476,  475,  477,  480,  481,
      479,  427,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,  580,32767,32767,  344,32767,32767,32767,
      414,32767,32767,32767,32767,32767,32767,  484,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,  207,  180,32767,  208,32767,32767,32767,32767,
    32767,32767,32767,  524,32767,32767,32767,32767,32767,  348,
    32767,   27,32767,32767,32767,32767,  418,32767,32767,  128,
      519,32767,32767,32767,  310,32767,  380,32767,  488,32767,
    32767,32767,32767,  173,  130,32767,  133,  450,32767,32767,
    32767,32767,  168,32767,32767,  135,32767,  249,  234,   87,
       87,  180,   55,  180,  180,  180,  239,  180,  180,32767,
      180,  180,  180,  180,  180,  180,  180,  180,  180,  180,
    32767,32767,32767,32767,  342,  579,  579,  412,32767,  579,
    32767,32767,32767,32767,  250,   69,   69,32767,32767,  235,
      482,32767,   69,  579,   74,   76,   81,   88,32767,32767,
    32767,32767,32767,32767,32767,32767,  541,   46,   47,32767,
    32767,  510,  519,  512,32767,32767,  496,  527,32767,32767,
    32767,   30,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,  577,32767,32767,32767,  519,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,  147,  149,32767,  256,   64,32767,32767,
    32767,32767,32767,32767,   71,  176,32767,32767,   80,32767,
       77,  171,  193,  191,32767,   86,   82,32767,32767,32767,
    32767,32767,32767,32767,  115,32767,32767,  119,  517
  ];

  private static $yygoto = [
       32,   61,  747,  905,   97,   61,  906,   33,   35,   38,
       39,   40,   42,   43,   44,   49,   50, 1313,   31,  476,
      477,  478,  479,  480,  481,  482,   34,   30,   36,  483,
      484,  485,  486,  487,  488,  489,   62,   37,   63,   64,
       65,   66,   67,   68,   69,   70,   71,   72,   73,   74,
       75,   76,   77,   78,   79,  331,  339,  345,  347,  350,
      353,  357,  361,  362,  363,  364,  365,  366,  367,  368,
      402,  403,  427,  428,  429,  436,  437,  438,  491,   41,
       80,   81,   82,   83,   84,   85,   86,   87,   88,   89,
       90,   91,   92,   93,   94,   95,  332,  333,  340,  346,
      348,  351,  354,  358,  369,  370,  371,  372,  373,  374,
      375,  376,  404,  405,  430,  431,  432,  439,  440,  441,
      493,   96,   98,  681,  645,  681,  814,  520,  818,  527,
      543,   98,   45,  334,   46,  335,   99,  336,   47,   48,
      100,  101, 1088, 1088, 1088, 1088, 1088, 1001, 1088,  396,
     1088,  672,  693,  694,  765, 1088, 1088,  624,  627,   14,
      640, 1088, 1228, 1088, 1088, 1088, 1088, 1088, 1088, 1088,
     1088, 1088, 1305,  559,  566,  574,  576,  578,  584,  587,
       51,  595,   52,  337,  102,  338,   53, 1071, 1242,   54,
      103,  104,   55,  688,  701,  744,  105,  856,   56,   57,
       58,  106,  662,  662,  662,  662,  662, 1320,  662, 1320,
      662, 1320, 1320, 1320, 1320,  662,  662, 1320, 1320, 1320,
     1320,  662,  570,  523, 1043, 1044, 1045, 1113, 1114, 1115,
     1183, 1184, 1185,  811,  840, 1211, 1211, 1211, 1211, 1211,
     1211, 1211, 1211, 1211, 1211, 1211, 1211, 1211, 1211, 1211,
     1211, 1211, 1211, 1211, 1211, 1211, 1211,  107,  494,  495,
      496,  497,  498,  499,  500, 1261, 1065, 1135, 1205,  824,
      929, 1260, 1259,  618,  619,  560,  109,  110,  111,  112,
      113,  114,  115,  116,  117,  118,  119,  120,  121,  122,
      123,  124,  341,  349,  352,  355,  359,  360,  377,  378,
      379,  380,  381,  382,  383,  406,  407,  433,  434,  435,
      442,  443,  444,  501,  703,  125,  832,  878,  585,  878,
      607,  342,  343,  687,  878,  878, 1311,  126,  127,  344,
      878,  128,  685,  728,  730,  731,  685,  866,  871,  569,
      713,  546,  583,  547,  892,  548,  586,  994,  715,  917,
      592,  925,  549,  918,  721,  514,  737,  860,  678,  802,
      678,  997,  879,  982,  879,  678,  678,  780,  949,  879,
      879,  678,  894,  896,  952,  879,  898,  898,  900,  900,
      945,  953,  983,  391,  848,  850,  846,  844,  991,  579,
     1264,  617,  588,  829, 1228, 1228, 1228, 1228, 1228, 1228,
     1228, 1228,  976,  562,  780,  780,  780,  780,  798,    0,
      780,    0,    0, 1228, 1228, 1228, 1228, 1228, 1228, 1228,
     1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228,
     1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228,
     1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228,
     1228,  542, 1228,  843,  843,  843,  843,  843, 1228, 1228,
        0,  987,    0,    0, 1228, 1228, 1228,    0, 1228, 1211,
     1211, 1211, 1211,  876,    0,    0,  605, 1211,  986,  984,
     1211,  876,  722, 1211,  985,    0,  770, 1211, 1211,  614,
      922,    0,    0,  921,    0,  923,  935,  937,    0,  554,
      555,  556,    0,    0,    0, 1211, 1211, 1211, 1211, 1211,
     1211, 1211,    0,  394,  394,  394,  394,  393,  393,  393,
      393,  393,    0,    0, 1229,    0,  356,  356,   23,  677,
      399,    0,    0,    0, 1211, 1211,  702, 1085, 1155,    0,
     1225,    0,    0,  877,   25,  877,    0,    0,    0,    0,
      877,  877,    0,    0,    0,    0,  877,    0,    0,    0,
        0, 1211, 1211, 1211,    0,    0,    0,    0,    0,    0,
     1211, 1211, 1211,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  604,  604,  604,  604,
        0,    0,  880,    0,  880,  601,  612,  601,  608,  880,
      880,    0,    0,    0,    0,  880,    0,  673,  598,  960,
      944,  977,  980,  942,  941,  943,    0,    0,    0,    0,
        0,    0, 1211, 1211, 1211, 1211, 1211, 1211, 1211, 1211,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1084,    0,    0,    0, 1154,    0,
        0,    0,    0,    0,    0, 1224,    0,    0,    0,    0,
        0,    0,  551,    0,    0,    0,    0,    0,    0,    0,
      610,  601,  608,  628,  641,  596,  675,  676,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1231,    0,  610,    0,    0,    0,    0,  842,
      842,  842,  842,  842,    0,  706,  707,    0,  596,  881,
      601,  881,  714,  608,  706,  707,    0,  674,    0,  635,
      573,  636,    0,  767,  642,  708,  611,  709,  882,    0,
      969,  615,  616,  996,  724,  812,  651,  652,  736,    0,
      502,  502,  502,  502,  502,    0,    0,    0,    0,    0,
      580,  582, 1082,  536,    0, 1152, 1229, 1229, 1229, 1229,
     1229, 1229, 1229, 1229,    0,    0,    0,    0, 1222,    0,
        0,    0,    0,    0,    0, 1229, 1229, 1229, 1229, 1229,
     1229, 1229, 1229, 1229, 1229, 1229, 1229, 1229, 1229, 1229,
     1229, 1229, 1229, 1229, 1229, 1229, 1229, 1229, 1229, 1229,
     1229, 1229, 1229, 1229, 1229, 1229, 1229, 1229, 1229, 1229,
     1229, 1229, 1229,  553, 1229,    0,    0,    0,    0,    0,
     1229, 1229,    0,    0,    0,    0, 1229, 1229, 1229,    0,
     1229,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  553,    0,    0,
        0,    0,    0,    0,    0,  553,  666,  666,  553,  666,
      553,  553,  553,  553,  553,  553,  553,  553,  553,  553,
      553,  553,  553,  553,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  725,  537,  572,  539,    0,  671,  671,  671,
      671,  671,  718,  666,  666,  666,  666,  666,  666,  666,
      718,  666,  718,  725,  540,  841,  841,  841,  841,  841
  ];

  private static $yygcheck = [
       25,   25,    7,   59,   25,   25,   59,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,  130,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   93,   37,   93,   43,   64,   43,   64,
       37,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,  114,  114,  114,  114,  114,  108,  114,   27,
      114,   20,   20,   20,   20,  114,  114,  113,  113,   68,
      113,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  127,   64,   64,   64,   64,   64,   64,   64,
       25,   64,   25,   25,   25,   25,   25,  112,  117,   25,
       25,   25,   25,    4,    4,    4,   25,   58,   25,   25,
       25,   25,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   36,   36,   36,   36,   36,   36,   36,
       36,   36,   36,   36,   53,  112,  112,  112,  112,  112,
      112,  112,  112,  112,  112,  112,  112,  112,  112,  112,
      112,  112,  112,  112,  112,  112,  112,   67,   67,   67,
       67,   67,   67,   67,   67,   60,   60,   60,   60,   47,
       82,   60,   60,   60,   60,   62,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   65,   67,   51,   16,   69,   16,
       56,   67,   67,   34,   16,   16,   34,   67,   67,   67,
       16,   67,   23,   41,   41,   41,   23,   63,   66,   61,
       34,   61,   61,   61,   55,   61,   61,  105,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   26,   35,
       26,  106,   18,  101,   18,   26,   26,   28,   91,   18,
       18,   26,   73,   75,   55,   18,   55,   55,   55,   55,
       55,   55,   55,   40,   55,   55,   55,   55,  103,   89,
      124,   56,   89,   49,  114,  114,  114,  114,  114,  114,
      114,  114,   99,   89,   28,   28,   28,   28,   32,   -1,
       28,   -1,   -1,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,   55,  114,   10,   10,   10,   10,   10,  114,  114,
       -1,   55,   -1,   -1,  114,  114,  114,   -1,  114,  112,
      112,  112,  112,   24,   -1,   -1,   56,  112,   55,   55,
      112,   24,   78,  112,   55,   -1,   24,  112,  112,   56,
       78,   -1,   -1,   78,   -1,   78,   78,   78,   -1,   56,
       56,   56,   -1,   -1,   -1,  112,  112,  112,  112,  112,
      112,  112,   -1,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   -1,   -1,  115,   -1,   27,   27,   83,   83,
       27,   -1,   -1,   -1,  112,  112,   83,  112,  112,   -1,
      112,   -1,   -1,   15,   83,   15,   -1,   -1,   -1,   -1,
       15,   15,   -1,   -1,   -1,   -1,   15,   -1,   -1,   -1,
       -1,  112,  112,  112,   -1,   -1,   -1,   -1,   -1,   -1,
      112,  112,  112,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   23,   23,   23,   23,
       -1,   -1,   19,   -1,   19,   23,   23,   23,   23,   19,
       19,   -1,   -1,   -1,   -1,   19,   -1,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   -1,   -1,   -1,   -1,
       -1,   -1,  112,  112,  112,  112,  112,  112,  112,  112,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,  112,   -1,   -1,   -1,  112,   -1,
       -1,   -1,   -1,   -1,   -1,  112,   -1,   -1,   -1,   -1,
       -1,   -1,   93,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       23,   23,   23,   23,   23,   23,   23,   23,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   23,   -1,   23,   -1,   -1,   -1,   -1,   16,
       16,   16,   16,   16,   -1,   23,   23,   -1,   23,   23,
       23,   23,   23,   23,   23,   23,   -1,   23,   -1,   23,
       23,   23,   -1,   23,   23,   23,   23,   23,   23,   -1,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   -1,
       26,   26,   26,   26,   26,   -1,   -1,   -1,   -1,   -1,
       93,   93,  112,   26,   -1,  112,  115,  115,  115,  115,
      115,  115,  115,  115,   -1,   -1,   -1,   -1,  112,   -1,
       -1,   -1,   -1,   -1,   -1,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,    5,  115,   -1,   -1,   -1,   -1,   -1,
      115,  115,   -1,   -1,   -1,   -1,  115,  115,  115,   -1,
      115,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,    5,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,    5,    5,    5,    5,   -1,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,   15,   15,   15,   15,   15
  ];

  private static $yygbase = [
        0,    0,    0,    0,  191,  457,    0,    1,    0,    0,
       65,    0,    0,    0,    0,  537,  311,    0,  356,  586,
     -300,    0,    0,  202,  467, -129,  352,  129,   11,    0,
        0,    0, -242,    0, -303, -154, -193, -512,    0,    0,
     -217,  -56,    0, -337,    0,    0,    0, -197,    0, -254,
        0, -190,    0, -158,    0, -170, -152,    0, -189, -381,
      256, -262, -194, -171, -283, -156, -173,    5,  146, -191,
        0,    0,    0, -175,    0, -176,    0,    0,   82,    0,
        0,    0, -128,  -94,    0,    0,    0,    0,    0,  257,
        0, -177,    0,  118,    0,    0,    0,    0,    0, -237,
        0, -182,    0, -246,    0, -165, -180,    0,  139,    0,
        0,    0,  128, -252,  142,  504,    0,   54,    0,    0,
        0,    0,    0,    0, -163,    0,    0,   39,    0,    0,
       10,    0,    0
  ];

  private static $yygdefault = [
    -32768,  660,  740,  741,  742,  661,    1,  746,  748,  749,
      750,  751,  752,  753,  754,  755,  756,  757,  759,  760,
      764,  577,  561, 1258,  875,   60,  449,  395,  779,  522,
      795,  589,  797,  643, 1303,  801,  924,  644,  646,  594,
      388,  719,  590,  817,  591,  720,  726,  823,  647,  828,
      473,  833,  392,  839,  733,  938,  603,  734,  855,  857,
     1315,  717,  564,  865,  516,  704,  870,  108,    6,  568,
      691,  889, 1160,  895, 1230,  897,  575,  920,  723,  538,
      613,  593,  928,   22,  606,  940,  692,  132,  135,  626,
      545,  948,  633,  663,  505,  966,  970,  971,  639,  975,
      979,  981,  634,  990,  581,  993,  998,    8, 1000,  558,
      571,   59, 1141, 1265, 1158, 1159,  567, 1241, 1246, 1247,
     1248, 1250, 1252,  664, 1262,  669,  625, 1304,  682,  629,
     1312,  683, 1321
  ];

  private static $yylhs = [
        0,    1,    2,    2,    2,    3,    4,    6,    6,    7,
        7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
        7,    7,    9,    9,    9,   21,   21,   20,   20,   20,
       22,   18,   17,   17,    8,    8,    8,    8,   26,   26,
       27,   27,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   29,   29,   30,   31,   31,
       32,   10,   33,   33,   35,   35,   11,   12,   12,   37,
       37,   42,   42,   42,   38,   38,   44,   44,   45,   45,
       43,   39,   39,   39,   46,   46,   47,   40,   40,   48,
       48,   49,   49,   50,   50,   51,   51,   51,   41,   41,
       52,   52,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   54,   54,   57,   57,   58,   58,
       58,   58,   13,   13,   14,   14,   62,   62,   63,   63,
       63,   65,   65,   66,   66,   66,   68,   68,   24,   24,
       24,   24,   69,   69,   16,   16,   16,   70,   70,   70,
       15,   15,   15,   71,   71,   72,   72,   74,   74,   73,
       73,   75,   75,   56,   56,   56,   76,   76,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       61,   61,   77,   79,   79,   78,   78,   80,   80,   81,
       81,   82,   82,   82,   82,   82,   82,   82,   82,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   86,
       86,   88,   87,   87,   84,   84,   98,   98,   99,   85,
       85,  100,   90,   90,  101,  101,  101,  101,   91,   92,
       92,  102,  102,  103,  104,  104,  105,  105,   94,   94,
      106,  107,  107,  108,  108,   55,   55,   55,   95,   95,
       96,   96,   97,   97,  109,  109,   89,   89,  110,  110,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   64,   64,   64,   64,   64,   83,   83,  112,
      112,  112,  116,  116,  117,  117,  117,  114,  114,  114,
      114,  114,  114,  114,  122,  122,  122,  123,  119,    5,
        5,    5,    5,    5,   36,   36,   36,  113,  113,  113,
      113,  113,  113,  113,  124,  124,   23,   23,   23,  121,
      121,  121,  121,  121,  121,  121,  121,  121,  121,  121,
      121,  121,  121,  121,   93,   93,   93,  118,  118,  118,
      120,  120,  120,  120,  125,  126,  126,  127,  127,  115,
      115,  115,  128,  129,  129,  130,  131,  131,  131,   34,
       34,   60,   60,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132
  ];

  private static $yylen = [
        1,    1,    1,    1,    0,    4,    1,    1,    2,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    3,    4,    4,    1,    3,    1,    3,    4,
        1,    3,    3,    4,    4,    5,    3,    4,    0,    1,
        1,    2,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    0,    1,    4,    1,    3,
        2,    6,    1,    3,    1,    3,    5,   10,    7,    0,
        3,    1,    3,    3,    0,    2,    0,    2,    1,    3,
        1,    0,    2,    2,    1,    3,    1,    0,    1,    1,
        2,    3,    5,    1,    2,    2,    4,    5,    0,    1,
        1,    2,    1,    1,    1,    6,    6,    4,    4,    4,
        6,    4,    6,    4,    0,    1,    1,    3,    1,    4,
        6,    5,    7,    4,    8,    6,    1,    3,    2,    4,
        4,    1,    3,    2,    4,    4,    1,    2,    1,    1,
        1,    1,    1,    3,    3,    7,    3,    2,    6,    2,
        8,    8,    7,    1,    3,    5,    4,    5,    4,    1,
        2,    1,    2,    2,    3,    3,    1,    3,    3,    4,
        5,    4,    5,    2,    3,    4,    3,    4,    3,    4,
        0,    1,    2,    1,    3,    1,    3,    2,    3,    1,
        3,    2,    3,    2,    3,    1,    2,    2,    3,    1,
        5,    5,    7,    6,    7,    5,    2,    2,    3,    3,
        4,    5,    3,    2,    3,    2,    3,    2,    3,    3,
        3,    3,    3,    5,    5,    3,    2,    1,    2,    1,
        3,    1,    1,    2,    0,    1,    1,    2,    3,    0,
        1,    2,    1,    2,    2,    5,    7,    5,    2,    0,
        1,    1,    2,    3,    1,    3,    1,    3,    1,    2,
        2,    1,    2,    3,    2,    2,    3,    3,    2,    1,
        2,    1,    2,    1,    1,    3,    1,    3,    1,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    2,    2,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    5,    4,    4,
        5,    4,    2,    2,    4,    2,    2,    2,    2,    2,
        2,    2,    2,    3,    2,    3,    2,    1,    2,    1,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    2,    2,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    5,    4,    4,
        5,    4,    2,    2,    4,    2,    2,    2,    2,    2,
        2,    2,    2,    3,    2,    3,    2,    1,    2,    1,
        1,    1,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    2,    2,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    5,    4,    4,
        5,    4,    2,    2,    4,    2,    2,    2,    2,    2,
        2,    2,    2,    3,    2,    3,    2,    1,    2,    1,
        1,    1,    3,    5,    4,    4,    1,    3,    3,    2,
        3,    3,    1,    3,    1,    3,    2,    1,    1,    1,
        1,    1,    1,    1,    4,    2,    3,    0,    3,    1,
        3,    2,    3,    3,    1,    2,    1,    1,    1,    1,
        1,    1,    1,    1,    3,    3,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    5,    3,    1,    1,    1,
        2,    9,    3,    3,    2,    1,    3,    2,    1,    2,
        3,    3,    2,    1,    3,    3,    1,    1,    3,    0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1
  ];
  
  private static $yyproduction = [
    "start : start",
    "start : unit",
    "unit : module",
    "unit : content",
    "unit : /* empty */",
    "module : T_MODULE name ';' content",
    "content : toplvl",
    "toplvl : topex",
    "toplvl : toplvl topex",
    "topex : module_nst",
    "topex : use_decl",
    "topex : enum_decl",
    "topex : type_decl",
    "topex : class_decl",
    "topex : trait_decl",
    "topex : iface_decl",
    "topex : fn_decl",
    "topex : var_decl",
    "topex : require_decl",
    "topex : T_END",
    "topex : label_decl",
    "topex : stmt",
    "use_decl : T_USE use_item ';'",
    "use_decl : T_PUBLIC T_USE use_item ';'",
    "use_decl : T_PRIVATE T_USE use_item ';'",
    "use_items : use_item",
    "use_items : use_items ',' use_item",
    "use_item : use_name",
    "use_item : use_name T_AS ident",
    "use_item : use_name '{' use_items '}'",
    "use_name : name",
    "label_decl : ident ':' comp",
    "require_decl : T_REQUIRE rxpr ';'",
    "require_decl : T_REQUIRE T_PHP rxpr ';'",
    "module_nst : T_MODULE name '{' '}'",
    "module_nst : T_MODULE name '{' content '}'",
    "module_nst : T_MODULE '{' '}'",
    "module_nst : T_MODULE '{' content '}'",
    "mods_opt : /* empty */",
    "mods_opt : mods",
    "mods : mod",
    "mods : mods mod",
    "mod : T_CONST",
    "mod : T_FINAL",
    "mod : T_GLOBAL",
    "mod : T_STATIC",
    "mod : T_PUBLIC",
    "mod : T_PRIVATE",
    "mod : T_PROTECTED",
    "mod : T_SEALED",
    "mod : T_INLINE",
    "mod : T_EXTERN",
    "mod : T_UNSAFE",
    "mod : T_NATIVE",
    "mod : T_HIDDEN",
    "rewrite_opt : /* empty */",
    "rewrite_opt : rewrite",
    "rewrite : T_REWRITE '(' rewrite_args ')'",
    "rewrite_args : rewrite_arg",
    "rewrite_args : rewrite_args ',' rewrite_arg",
    "rewrite_arg : '$' T_LNUM",
    "enum_decl : mods_opt T_ENUM '{' enum_vars comma_opt '}'",
    "enum_vars : enum_var",
    "enum_vars : enum_vars ',' enum_var",
    "enum_var : ident",
    "enum_var : ident '=' rxpr",
    "type_decl : mods_opt T_TYPE type_name ident ';'",
    "class_decl : mods_opt T_CLASS ident gen_defs_opt ext_opt impl_opt '{' trait_uses_opt members_opt '}'",
    "class_decl : mods_opt T_CLASS ident gen_defs_opt ext_opt impl_opt ';'",
    "gen_defs_opt : /* empty */",
    "gen_defs_opt : '<' gen_defs '>'",
    "gen_defs : ident",
    "gen_defs : ident T_IS type_name",
    "gen_defs : gen_defs ',' ident",
    "ext_opt : /* empty */",
    "ext_opt : ':' ext",
    "exts_opt : /* empty */",
    "exts_opt : ':' exts",
    "exts : ext",
    "exts : exts ',' ext",
    "ext : name",
    "impl_opt : /* empty */",
    "impl_opt : '~' impls",
    "impl_opt : '~' error",
    "impls : impl",
    "impls : impls ',' impl",
    "impl : name",
    "trait_uses_opt : /* empty */",
    "trait_uses_opt : trait_uses",
    "trait_uses : trait_use",
    "trait_uses : trait_uses trait_use",
    "trait_use : T_USE name ';'",
    "trait_use : T_USE name '{' trait_use_items '}'",
    "trait_use_items : trait_use_item",
    "trait_use_items : trait_use_items trait_use_item",
    "trait_use_item : ident ';'",
    "trait_use_item : ident T_AS mods ';'",
    "trait_use_item : ident T_AS mods_opt ident ';'",
    "members_opt : /* empty */",
    "members_opt : members",
    "members : member",
    "members : members member",
    "member : fn_decl",
    "member : var_decl",
    "member : enum_decl",
    "member : mods_opt T_NEW '(' ctor_params_opt ')' block",
    "member : mods_opt T_NEW '(' ctor_params_opt ')' ';'",
    "member : mods_opt T_DEL pparams block",
    "member : mods_opt T_DEL pparams ';'",
    "member : T_GET ident pparams block",
    "member : T_GET ident pparams T_ARR rxpr ';'",
    "member : T_SET ident pparams block",
    "member : T_SET ident pparams T_ARR rxpr ';'",
    "member : mods '{' members_opt '}'",
    "ctor_params_opt : /* empty */",
    "ctor_params_opt : ctor_params",
    "ctor_params : ctor_param",
    "ctor_params : ctor_params ',' ctor_param",
    "ctor_param : param",
    "ctor_param : T_THIS '.' aid hint_opt",
    "ctor_param : T_THIS '.' aid hint_opt '=' rxpr",
    "ctor_param : '&' T_THIS '.' aid hint_opt",
    "trait_decl : mods_opt T_TRAIT ident '{' trait_uses_opt members_opt '}'",
    "trait_decl : mods_opt T_TRAIT ident ';'",
    "iface_decl : mods_opt T_IFACE ident gen_defs_opt exts_opt '{' members_opt '}'",
    "iface_decl : mods_opt T_IFACE ident gen_defs_opt exts_opt ';'",
    "vars : var",
    "vars : vars ',' var",
    "var : ident hint_opt",
    "var : ident hint_opt '=' rxpr",
    "var : ident hint_opt T_AREF nxpr",
    "vars_noin : var_noin",
    "vars_noin : vars_noin ',' var_noin",
    "var_noin : ident hint_opt",
    "var_noin : ident hint_opt '=' rxpr_noin",
    "var_noin : ident hint_opt T_AREF nxpr",
    "inner : comp",
    "inner : inner comp",
    "comp : fn_decl",
    "comp : var_decl",
    "comp : label_decl",
    "comp : stmt",
    "var_list : ident",
    "var_list : var_list ',' ident",
    "var_decl : T_LET vars ';'",
    "var_decl : T_LET '(' var_list ')' '=' rxpr ';'",
    "var_decl : mods vars ';'",
    "var_decl_noin_nosemi : T_LET vars_noin",
    "var_decl_noin_nosemi : T_LET '(' var_list ')' '=' rxpr_noin",
    "var_decl_noin_nosemi : mods vars_noin",
    "fn_decl : mods_opt T_FN rewrite_opt ident gen_defs_opt pparams hint_opt fn_decl_body",
    "fn_decl : mods_opt T_FN rewrite_opt ident gen_defs_opt pparams hint_opt ';'",
    "fn_decl : mods_opt T_FN rewrite_opt ident gen_defs_opt hint_opt ';'",
    "fn_decl_body : block",
    "fn_decl_body : T_ARR rxpr ';'",
    "fn_expr : T_FN ident pparams hint_opt fn_expr_body",
    "fn_expr : T_FN pparams hint_opt fn_expr_body",
    "fn_expr_noin : T_FN ident pparams hint_opt fn_expr_body_noin",
    "fn_expr_noin : T_FN pparams hint_opt fn_expr_body_noin",
    "fn_expr_body : block",
    "fn_expr_body : T_ARR rxpr",
    "fn_expr_body_noin : block",
    "fn_expr_body_noin : T_ARR rxpr_noin",
    "pparams : '(' ')'",
    "pparams : '(' error ')'",
    "pparams : '(' params ')'",
    "params : param",
    "params : params ',' param",
    "param : mods ident hint_opt",
    "param : mods ident hint_opt '?'",
    "param : mods ident hint_opt '=' rxpr",
    "param : mods '&' ident hint_opt",
    "param : mods '&' ident hint_opt '?'",
    "param : ident hint_opt",
    "param : ident hint_opt '?'",
    "param : ident hint_opt '=' rxpr",
    "param : '&' ident hint_opt",
    "param : '&' ident hint_opt '?'",
    "param : T_REST ident hint_opt",
    "param : '&' T_REST ident hint_opt",
    "hint_opt : /* empty */",
    "hint_opt : hint",
    "hint : ':' hint_type",
    "hint_types : hint_type",
    "hint_types : hint_types ',' hint_type",
    "hint_type : type_name",
    "hint_type : T_FN hint_pparams hint_opt",
    "hint_pparams : '(' ')'",
    "hint_pparams : '(' hint_params ')'",
    "hint_params : hint_param",
    "hint_params : hint_params ',' hint_param",
    "hint_param : mods hint_type",
    "hint_param : mods hint_type '?'",
    "hint_param : '&' hint_type",
    "hint_param : '&' hint_type '?'",
    "hint_param : T_REST",
    "hint_param : T_REST hint_type",
    "hint_param : '&' T_REST",
    "hint_param : '&' T_REST hint_type",
    "stmt : block",
    "stmt : T_DO stmt T_WHILE pxpr ';'",
    "stmt : T_IF pxpr stmt elifs_opt else_opt",
    "stmt : T_FOR '(' for_in_pair T_IN rxpr ')' stmt",
    "stmt : T_FOR '(' for_expr_noin for_expr ')' stmt",
    "stmt : T_FOR '(' for_expr_noin for_expr rseq ')' stmt",
    "stmt : T_FOR '(' error ')' stmt",
    "stmt : T_FOR block",
    "stmt : T_TRY block",
    "stmt : T_TRY block catches",
    "stmt : T_TRY block finally",
    "stmt : T_TRY block catches finally",
    "stmt : T_PHP '{' php_usage_opt str '}'",
    "stmt : T_GOTO ident ';'",
    "stmt : T_TEST block",
    "stmt : T_TEST str block",
    "stmt : T_BREAK ';'",
    "stmt : T_BREAK ident ';'",
    "stmt : T_CONTINUE ';'",
    "stmt : T_CONTINUE ident ';'",
    "stmt : T_PRINT rseq ';'",
    "stmt : T_THROW rxpr ';'",
    "stmt : T_WHILE pxpr stmt",
    "stmt : T_ASSERT rxpr ';'",
    "stmt : T_ASSERT rxpr ':' str ';'",
    "stmt : T_SWITCH pxpr '{' cases '}'",
    "stmt : T_RETURN rxpr ';'",
    "stmt : T_RETURN ';'",
    "stmt : lxpr_stmt",
    "stmt : error ';'",
    "for_in_pair : ident",
    "for_in_pair : ident ':' ident",
    "for_expr : rxpr_stmt",
    "for_expr_noin : rxpr_stmt_noin",
    "for_expr_noin : var_decl_noin_nosemi ';'",
    "elifs_opt : /* empty */",
    "elifs_opt : elifs",
    "elifs : elif",
    "elifs : elifs elif",
    "elif : T_ELIF pxpr stmt",
    "else_opt : /* empty */",
    "else_opt : else",
    "else : T_ELSE stmt",
    "catches : catch",
    "catches : catches catch",
    "catch : T_CATCH block",
    "catch : T_CATCH '(' name ')' block",
    "catch : T_CATCH '(' name T_AS ident ')' block",
    "catch : T_CATCH '(' error ')' block",
    "finally : T_FINALLY block",
    "php_usage_opt : /* empty */",
    "php_usage_opt : php_usage",
    "php_usage : php_use",
    "php_usage : php_usage php_use",
    "php_use : T_USE php_use_items ';'",
    "php_use_items : php_use_item",
    "php_use_items : php_use_items ',' php_use_item",
    "php_use_item : ident",
    "php_use_item : ident T_AS ident",
    "cases : case",
    "cases : cases case",
    "case : casels inner",
    "casels : casel",
    "casels : casels casel",
    "casel : T_CASE rxpr ':'",
    "casel : T_DEFAULT ':'",
    "block : '{' '}'",
    "block : '{' inner '}'",
    "block : '{' error '}'",
    "lxpr_stmt : lseq ';'",
    "lxpr_stmt : ';'",
    "rxpr_stmt : rseq ';'",
    "rxpr_stmt : ';'",
    "rxpr_stmt_noin : rseq_noin ';'",
    "rxpr_stmt_noin : ';'",
    "lseq : lxpr",
    "lseq : lseq ',' rxpr",
    "rseq : rxpr",
    "rseq : rseq ',' rxpr",
    "rseq_noin : rxpr_noin",
    "rseq_noin : rseq_noin ',' rxpr_noin",
    "lxpr : lxpr '+' rxpr",
    "lxpr : lxpr '-' rxpr",
    "lxpr : lxpr '*' rxpr",
    "lxpr : lxpr '/' rxpr",
    "lxpr : lxpr '%' rxpr",
    "lxpr : lxpr T_POW rxpr",
    "lxpr : lxpr '~' rxpr",
    "lxpr : lxpr '&' rxpr",
    "lxpr : lxpr '|' rxpr",
    "lxpr : lxpr '^' rxpr",
    "lxpr : lxpr '<' rxpr",
    "lxpr : lxpr '>' rxpr",
    "lxpr : lxpr T_GTE rxpr",
    "lxpr : lxpr T_LTE rxpr",
    "lxpr : lxpr T_BOOL_AND rxpr",
    "lxpr : lxpr T_BOOL_OR rxpr",
    "lxpr : lxpr T_BOOL_XOR rxpr",
    "lxpr : lxpr T_RANGE rxpr",
    "lxpr : lxpr T_SL rxpr",
    "lxpr : lxpr T_SR rxpr",
    "lxpr : lxpr T_EQ rxpr",
    "lxpr : lxpr T_NEQ rxpr",
    "lxpr : lxpr T_IN rxpr",
    "lxpr : lxpr T_NIN rxpr",
    "lxpr : lxpr T_IS type_name",
    "lxpr : lxpr T_NIS type_name",
    "lxpr : lxpr T_AS type_name",
    "lxpr : lxpr T_INC",
    "lxpr : lxpr T_DEC",
    "lxpr : lxpr '=' rxpr",
    "lxpr : lxpr T_AREF nxpr",
    "lxpr : lxpr T_APLUS rxpr",
    "lxpr : lxpr T_AMINUS rxpr",
    "lxpr : lxpr T_AMUL rxpr",
    "lxpr : lxpr T_ADIV rxpr",
    "lxpr : lxpr T_AMOD rxpr",
    "lxpr : lxpr T_APOW rxpr",
    "lxpr : lxpr T_ACONCAT rxpr",
    "lxpr : lxpr T_ABIT_OR rxpr",
    "lxpr : lxpr T_ABIT_AND rxpr",
    "lxpr : lxpr T_ABIT_XOR rxpr",
    "lxpr : lxpr T_ABOOL_OR rxpr",
    "lxpr : lxpr T_ABOOL_AND rxpr",
    "lxpr : lxpr T_ABOOL_XOR rxpr",
    "lxpr : lxpr T_ASHIFT_L rxpr",
    "lxpr : lxpr T_ASHIFT_R rxpr",
    "lxpr : lxpr '.' aid",
    "lxpr : lxpr '.' '{' rxpr '}'",
    "lxpr : lxpr '[' rxpr ']'",
    "lxpr : lxpr '[' error ']'",
    "lxpr : lxpr '?' rxpr ':' rxpr",
    "lxpr : lxpr '?' ':' rxpr",
    "lxpr : lxpr pargs",
    "lxpr : T_YIELD rxpr",
    "lxpr : T_YIELD rxpr ':' rxpr",
    "lxpr : '-' rxpr",
    "lxpr : '+' rxpr",
    "lxpr : '~' rxpr",
    "lxpr : '&' rxpr",
    "lxpr : '!' rxpr",
    "lxpr : T_INC rxpr",
    "lxpr : T_DEC rxpr",
    "lxpr : T_NEW type_id",
    "lxpr : T_NEW type_id pargs",
    "lxpr : T_NEW nxpr",
    "lxpr : T_NEW nxpr pargs",
    "lxpr : T_NEW pargs",
    "lxpr : T_NEW",
    "lxpr : T_DEL nxpr",
    "lxpr : atom",
    "rxpr : rxpr '+' rxpr",
    "rxpr : rxpr '-' rxpr",
    "rxpr : rxpr '*' rxpr",
    "rxpr : rxpr '/' rxpr",
    "rxpr : rxpr '%' rxpr",
    "rxpr : rxpr T_POW rxpr",
    "rxpr : rxpr '~' rxpr",
    "rxpr : rxpr '&' rxpr",
    "rxpr : rxpr '|' rxpr",
    "rxpr : rxpr '^' rxpr",
    "rxpr : rxpr '>' rxpr",
    "rxpr : rxpr '<' rxpr",
    "rxpr : rxpr T_GTE rxpr",
    "rxpr : rxpr T_LTE rxpr",
    "rxpr : rxpr T_BOOL_AND rxpr",
    "rxpr : rxpr T_BOOL_OR rxpr",
    "rxpr : rxpr T_BOOL_XOR rxpr",
    "rxpr : rxpr T_RANGE rxpr",
    "rxpr : rxpr T_SL rxpr",
    "rxpr : rxpr T_SR rxpr",
    "rxpr : rxpr T_EQ rxpr",
    "rxpr : rxpr T_NEQ rxpr",
    "rxpr : rxpr T_IN rxpr",
    "rxpr : rxpr T_NIN rxpr",
    "rxpr : rxpr T_IS type_name",
    "rxpr : rxpr T_NIS type_name",
    "rxpr : rxpr T_AS type_name",
    "rxpr : rxpr T_INC",
    "rxpr : rxpr T_DEC",
    "rxpr : rxpr '=' rxpr",
    "rxpr : rxpr T_AREF nxpr",
    "rxpr : rxpr T_APLUS rxpr",
    "rxpr : rxpr T_AMINUS rxpr",
    "rxpr : rxpr T_AMUL rxpr",
    "rxpr : rxpr T_ADIV rxpr",
    "rxpr : rxpr T_AMOD rxpr",
    "rxpr : rxpr T_APOW rxpr",
    "rxpr : rxpr T_ACONCAT rxpr",
    "rxpr : rxpr T_ABIT_OR rxpr",
    "rxpr : rxpr T_ABIT_AND rxpr",
    "rxpr : rxpr T_ABIT_XOR rxpr",
    "rxpr : rxpr T_ABOOL_OR rxpr",
    "rxpr : rxpr T_ABOOL_AND rxpr",
    "rxpr : rxpr T_ABOOL_XOR rxpr",
    "rxpr : rxpr T_ASHIFT_L rxpr",
    "rxpr : rxpr T_ASHIFT_R rxpr",
    "rxpr : rxpr '.' aid",
    "rxpr : rxpr '.' '{' rxpr '}'",
    "rxpr : rxpr '[' rxpr ']'",
    "rxpr : rxpr '[' error ']'",
    "rxpr : rxpr '?' rxpr ':' rxpr",
    "rxpr : rxpr '?' ':' rxpr",
    "rxpr : rxpr pargs",
    "rxpr : T_YIELD rxpr",
    "rxpr : T_YIELD rxpr ':' rxpr",
    "rxpr : '-' rxpr",
    "rxpr : '+' rxpr",
    "rxpr : '~' rxpr",
    "rxpr : '&' rxpr",
    "rxpr : '!' rxpr",
    "rxpr : T_INC rxpr",
    "rxpr : T_DEC rxpr",
    "rxpr : T_NEW type_id",
    "rxpr : T_NEW type_id pargs",
    "rxpr : T_NEW nxpr",
    "rxpr : T_NEW nxpr pargs",
    "rxpr : T_NEW pargs",
    "rxpr : T_NEW",
    "rxpr : T_DEL nxpr",
    "rxpr : atom",
    "rxpr : obj",
    "rxpr : fn_expr",
    "rxpr_noin : rxpr_noin '+' rxpr_noin",
    "rxpr_noin : rxpr_noin '-' rxpr_noin",
    "rxpr_noin : rxpr_noin '*' rxpr_noin",
    "rxpr_noin : rxpr_noin '/' rxpr_noin",
    "rxpr_noin : rxpr_noin '%' rxpr_noin",
    "rxpr_noin : rxpr_noin T_POW rxpr_noin",
    "rxpr_noin : rxpr_noin '~' rxpr_noin",
    "rxpr_noin : rxpr_noin '&' rxpr_noin",
    "rxpr_noin : rxpr_noin '|' rxpr_noin",
    "rxpr_noin : rxpr_noin '^' rxpr_noin",
    "rxpr_noin : rxpr_noin '>' rxpr_noin",
    "rxpr_noin : rxpr_noin '<' rxpr_noin",
    "rxpr_noin : rxpr_noin T_GTE rxpr_noin",
    "rxpr_noin : rxpr_noin T_LTE rxpr_noin",
    "rxpr_noin : rxpr_noin T_BOOL_AND rxpr_noin",
    "rxpr_noin : rxpr_noin T_BOOL_OR rxpr_noin",
    "rxpr_noin : rxpr_noin T_BOOL_XOR rxpr_noin",
    "rxpr_noin : rxpr_noin T_RANGE rxpr_noin",
    "rxpr_noin : rxpr_noin T_SL rxpr_noin",
    "rxpr_noin : rxpr_noin T_SR rxpr_noin",
    "rxpr_noin : rxpr_noin T_EQ rxpr_noin",
    "rxpr_noin : rxpr_noin T_NEQ rxpr_noin",
    "rxpr_noin : rxpr_noin T_IS type_name",
    "rxpr_noin : rxpr_noin T_NIS type_name",
    "rxpr_noin : rxpr_noin T_AS type_name",
    "rxpr_noin : rxpr_noin T_INC",
    "rxpr_noin : rxpr_noin T_DEC",
    "rxpr_noin : rxpr_noin '=' rxpr_noin",
    "rxpr_noin : rxpr_noin T_AREF nxpr",
    "rxpr_noin : rxpr_noin T_APLUS rxpr_noin",
    "rxpr_noin : rxpr_noin T_AMINUS rxpr_noin",
    "rxpr_noin : rxpr_noin T_AMUL rxpr_noin",
    "rxpr_noin : rxpr_noin T_ADIV rxpr_noin",
    "rxpr_noin : rxpr_noin T_AMOD rxpr_noin",
    "rxpr_noin : rxpr_noin T_APOW rxpr_noin",
    "rxpr_noin : rxpr_noin T_ACONCAT rxpr_noin",
    "rxpr_noin : rxpr_noin T_ABIT_OR rxpr_noin",
    "rxpr_noin : rxpr_noin T_ABIT_AND rxpr_noin",
    "rxpr_noin : rxpr_noin T_ABIT_XOR rxpr_noin",
    "rxpr_noin : rxpr_noin T_ABOOL_OR rxpr_noin",
    "rxpr_noin : rxpr_noin T_ABOOL_AND rxpr_noin",
    "rxpr_noin : rxpr_noin T_ABOOL_XOR rxpr_noin",
    "rxpr_noin : rxpr_noin T_ASHIFT_L rxpr_noin",
    "rxpr_noin : rxpr_noin T_ASHIFT_R rxpr_noin",
    "rxpr_noin : rxpr_noin '.' aid",
    "rxpr_noin : rxpr_noin '.' '{' rxpr '}'",
    "rxpr_noin : rxpr_noin '[' rxpr ']'",
    "rxpr_noin : rxpr_noin '[' error ']'",
    "rxpr_noin : rxpr_noin '?' rxpr ':' rxpr_noin",
    "rxpr_noin : rxpr_noin '?' ':' rxpr_noin",
    "rxpr_noin : rxpr_noin pargs",
    "rxpr_noin : T_YIELD rxpr_noin",
    "rxpr_noin : T_YIELD rxpr_noin ':' rxpr_noin",
    "rxpr_noin : '-' rxpr_noin",
    "rxpr_noin : '+' rxpr_noin",
    "rxpr_noin : '~' rxpr_noin",
    "rxpr_noin : '&' rxpr_noin",
    "rxpr_noin : '!' rxpr_noin",
    "rxpr_noin : T_INC rxpr_noin",
    "rxpr_noin : T_DEC rxpr_noin",
    "rxpr_noin : T_NEW type_id",
    "rxpr_noin : T_NEW type_id pargs",
    "rxpr_noin : T_NEW nxpr",
    "rxpr_noin : T_NEW nxpr pargs",
    "rxpr_noin : T_NEW pargs",
    "rxpr_noin : T_NEW",
    "rxpr_noin : T_DEL nxpr",
    "rxpr_noin : atom",
    "rxpr_noin : obj",
    "rxpr_noin : fn_expr_noin",
    "nxpr : nxpr '.' ident",
    "nxpr : nxpr '.' '{' rxpr '}'",
    "nxpr : nxpr '[' rxpr ']'",
    "nxpr : nxpr '[' error ']'",
    "nxpr : name",
    "pxpr : '(' rxpr ')'",
    "pxpr : '(' error ')'",
    "pargs : '(' ')'",
    "pargs : '(' error ')'",
    "pargs : '(' args ')'",
    "args : arg",
    "args : args ',' arg",
    "arg : rxpr",
    "arg : ident ':' rxpr",
    "arg : T_REST rxpr",
    "atom : num",
    "atom : reg",
    "atom : arr",
    "atom : name",
    "atom : kwc",
    "atom : str",
    "atom : tup",
    "tup : '(' rseq comma_opt ')'",
    "tup : '(' ')'",
    "tup : '(' error ')'",
    "@1 : /* empty */",
    "reg : '/' @1 T_REGEXP",
    "name : ident",
    "name : T_SELF T_DDDOT aid",
    "name : T_DDDOT aid",
    "name : name T_DDDOT aid",
    "name : name T_DDDOT gen_args",
    "type_name : name",
    "type_name : name gen_args",
    "type_name : type_id",
    "type_id : T_SELF",
    "type_id : T_TINT",
    "type_id : T_TBOOL",
    "type_id : T_TFLOAT",
    "type_id : T_TSTR",
    "type_id : T_TDEC",
    "type_id : T_TANY",
    "gen_args : '<' hint_types '>'",
    "gen_args : '<' hint_types T_SR",
    "ident : T_IDENT",
    "ident : T_GET",
    "ident : T_SET",
    "kwc : T_THIS",
    "kwc : T_SUPER",
    "kwc : T_SELF",
    "kwc : T_NULL",
    "kwc : T_TRUE",
    "kwc : T_FALSE",
    "kwc : T_CDIR",
    "kwc : T_CFILE",
    "kwc : T_CLINE",
    "kwc : T_CCOLN",
    "kwc : T_CFN",
    "kwc : T_CCLASS",
    "kwc : T_CTRAIT",
    "kwc : T_CMETHOD",
    "kwc : T_CMODULE",
    "str : T_STRING",
    "str : str T_SUBST '{' rxpr '}'",
    "str : str T_SUBST T_STRING",
    "num : T_LNUM",
    "num : T_DNUM",
    "num : T_SNUM",
    "arr : '[' ']'",
    "arr : '[' rxpr T_FOR '(' ident T_IN rxpr ')' ']'",
    "arr : '[' arr_vals ']'",
    "arr : '[' error ']'",
    "arr_vals : arr_vals_cs comma_opt",
    "arr_vals_cs : arr_val",
    "arr_vals_cs : arr_vals_cs ',' arr_val",
    "arr_val : T_REST rxpr",
    "arr_val : rxpr",
    "obj : '{' '}'",
    "obj : '{' obj_pairs '}'",
    "obj : '{' error '}'",
    "obj_pairs : obj_pairs_cs comma_opt",
    "obj_pairs_cs : obj_pair",
    "obj_pairs_cs : obj_pairs_cs ',' obj_pair",
    "obj_pair : obj_key ':' rxpr",
    "obj_key : aid",
    "obj_key : str",
    "obj_key : '(' rxpr ')'",
    "comma_opt : /* empty */",
    "comma_opt : ','",
    "aid : ident",
    "aid : rid",
    "rid : T_FN",
    "rid : T_LET",
    "rid : T_USE",
    "rid : T_ENUM",
    "rid : T_CLASS",
    "rid : T_TRAIT",
    "rid : T_IFACE",
    "rid : T_MODULE",
    "rid : T_REQUIRE",
    "rid : T_TRUE",
    "rid : T_FALSE",
    "rid : T_NULL",
    "rid : T_THIS",
    "rid : T_SUPER",
    "rid : T_SELF",
    "rid : T_DO",
    "rid : T_IF",
    "rid : T_ELIF",
    "rid : T_ELSE",
    "rid : T_FOR",
    "rid : T_TRY",
    "rid : T_GOTO",
    "rid : T_BREAK",
    "rid : T_CONTINUE",
    "rid : T_THROW",
    "rid : T_CATCH",
    "rid : T_FINALLY",
    "rid : T_WHILE",
    "rid : T_ASSERT",
    "rid : T_SWITCH",
    "rid : T_CASE",
    "rid : T_DEFAULT",
    "rid : T_RETURN",
    "rid : T_PRINT",
    "rid : T_CONST",
    "rid : T_FINAL",
    "rid : T_STATIC",
    "rid : T_EXTERN",
    "rid : T_PUBLIC",
    "rid : T_PRIVATE",
    "rid : T_PROTECTED",
    "rid : T_SEALED",
    "rid : T_INLINE",
    "rid : T_GLOBAL",
    "rid : T_PHP",
    "rid : T_TEST",
    "rid : T_YIELD",
    "rid : T_NEW",
    "rid : T_DEL",
    "rid : T_AS",
    "rid : T_IS",
    "rid : T_IN",
    "rid : T_TINT",
    "rid : T_TBOOL",
    "rid : T_TFLOAT",
    "rid : T_TSTR",
    "rid : T_TTUP",
    "rid : T_TDEC",
    "rid : T_CDIR",
    "rid : T_CFILE",
    "rid : T_CLINE",
    "rid : T_CCOLN",
    "rid : T_CFN",
    "rid : T_CCLASS",
    "rid : T_CTRAIT",
    "rid : T_CMETHOD",
    "rid : T_CMODULE"
  ];
    
  private static $yytokformat = [
    'T_IDENT' => 'identifier',
    'T_LNUM' => 'integer',
    'T_DNUM' => 'floating-point number',
    'T_SNUM' => 'number with suffix',
    'T_STRING' => 'string',
    'T_REGEXP' => 'regular expression',
    'T_TRUE' => '`true`',
    'T_FALSE' => '`false`',
    'T_NULL' => '`null`'
  ];
    
  private $yyval;
  private $yyastk;
  private $yysstk;
  private $yysp;
  private $yystate;
  private $yyloc; // current location
  
  private $lex;
  private $invalid = false;
  
  // current directory, filename and line
  private $cdir;
  private $cfile;
  
  /**
   * constructor
   *
   * @param Session $sess
   */
  public function __construct(Session $sess)
  {
    $this->sess = $sess;
  }
  
  /**
   * returns the current location (last scanned token)
   * 
   * @return Location
   */
  public function loc()
  {
    if (!$this->yyloc)
      return new Location('<unknown>', new Position(0, 0));
    
    return $this->yyloc;
  }
  
  /**
   * consumes semicolons to avoid unnecessary empty-expressions 
   * 
   * @void
   */
  private function eat_semis()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_SEMI) {
      $num = 0;
      do {
        ++$num;
        $this->lex->skip();
        $peek = $this->lex->peek();
      } while ($peek->type === T_SEMI);

      Logger::debug('%% Consumed %d semicolon(s)', $num);
    }
  }
  
  /**
   * consumes a T_END token
   * 
   * @void
   */
  private function eat_end()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_END) {
      $this->lex->skip();
      Logger::debug('%% Consumed T_END');
    }
  }
  
  /**
   * reports an error
   *
   * @param  Location $loc
   * @param  string   $tok  error token
   * @param  int   $num  number of expected tokens
   * @param  array   $arr expected tokens
   */
  private function report_error(Location $loc, $tok, $num, $arr) 
  {
    $fmt = 'unexpected %s';
    
    if ($num > 0) {
      // filter out T_IDENT, T_GET and T_SET
      $hid = false;
      $tmp = [];
      
      foreach ($arr as $exp) {
        if ($hid && ($exp === 'T_GET' || $exp === 'T_SET')) {
          --$num;
          continue;
        }
        
        $hid = $exp === 'T_IDENT';
        
        if ($exp === 'T_SUBST')
          $exp = 'string-concatenation';
        
        $tmp[] = $exp;
      }
      
      $arr = $tmp;
      $fmt .= ', expected ';
      
      if ($num > 1) {
        $fmt .= rtrim(str_repeat('%s, ', $num - 1), ', ');
        $fmt .= ' or ';
      }
                      
      $fmt .= '%s';
    }
    
    $var = $arr ?: [];
    array_unshift($var, $tok);
    Logger::vlog_at($loc, \phs\LOG_LEVEL_ERROR, $fmt, $var);       
  }
  
  /**
   * parse function
   * 
   * @param  mixed  $lex
   * @return Node
   */
  public function parse($lex) 
  {
    $tokid = self::TOKEN_NONE;
    
    // lexer
    if (!($lex instanceof Lexer)) {
      assert($lex instanceof Source);
      $lex = new Lexer($lex);  
    }
    
    $this->lex = $lex;
    
    $file = $this->lex->get_file();
    $this->cdir = dirname($file);
    $this->cfile = $file;
    
    Logger::debug('%% Parse %s', $file);
    
    // location
    $this->yyloc = $this->lex->loc();
    
    // stacks
    $this->yysstk = [ 0 ]; 
    $this->yyastk = [];
    
    // current state
    $yystate = 0;
    
    // error flag
    $yyerrflag = 0;

    // stack position
    $this->yysp = 0;
    
    // location stack
    $yylstk = [];
    
    // ignore semicolons at the beginning
    $this->eat_semis();
    
    for (;;) {
      Logger::debug('%% State %d, Lookahead \\', $yystate);
      
      if ($tokid === self::TOKEN_NONE)
        Logger::debug('--none--');
      else
        Logger::debug(self::$terminals[$tokid]);
      if (self::$yybase[$yystate] == 0)
        $yyn = self::$yydefault[$yystate];
      else {
        if ($tokid === self::TOKEN_NONE) {
          // Fetch the next token id from the lexer
          $token = $this->lex->next();
                    
          // invalid token (regexp-scan failed)
          if ($token->type === T_INVL) {
            Logger::error_at($token->loc, 'invalid source/regexp-literal');
            return null;
          }
          
          // map the lexer token id to the internally used token id's
          if ($token->type >= 0 && $token->type < self::TOKEN_MAP_SIZE)
            $tokid = self::$translate[$token->type];
          else {
            Logger::error_at($token->loc, 'invalid token %d -> %s', $token->type, $token->value);
            return null;
          }        
          
          $this->yyloc = $token->loc;
          
          // store location
          $yylstk[$this->yysp] = $this->yyloc;
          
          Logger::debug('%% Reading %s', self::$terminals[$tokid]);
        } 

        if ((($yyn = self::$yybase[$yystate] + $tokid) >= 0
          && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid
          || ($yystate < self::YY2TBLSTATE
            && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + $tokid) >= 0
            && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid))
          && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT
        ) {
          /*
           * >= YYNLSTATE: shift and reduce
           * > 0: shift
           * = 0: accept
           * < 0: reduce
           * = -YYUNEXPECTED: error
           */
          if ($yyn > 0) {
            /* shift */
            Logger::debug('%% Shift %s', self::$terminals[$tokid]);
            
            $this->yysp++;
            
            $this->yysstk[$this->yysp] = $yystate = $yyn;
            $this->yyastk[$this->yysp] = $token;
            
            // store location
            $yylstk[$this->yysp] = $this->yyloc;
            
            $tokid = self::TOKEN_NONE;
            
            if ($yyerrflag > 0)
              $yyerrflag--;
            
            if ($yyn < self::YYNLSTATES)
              continue;

            /* $yyn >= YYNLSTATES means shift-and-reduce */
            $yyn -= self::YYNLSTATES;
          } else
            $yyn = -$yyn;
        } else
          $yyn = self::$yydefault[$yystate];
      }
      
      for (;;) {
        /* reduce/error */
        if ($yyn == 0) {
          /* accept */
          Logger::debug('%% Accepted.');
          return $this->yyval;
        } elseif ($yyn != self::YYUNEXPECTED) {
          /* reduce */
          Logger::debug('%% Reduce by (%d) %s', $yyn, self::$yyproduction[$yyn]);

          $this->{'yyn' . $yyn}();
          
          /* Goto - shift nonterminal */
          $yylen = self::$yylen[$yyn];
          $yyloc = $yylstk[$this->yysp - $yylen];
          
          $this->yysp -= $yylen;
          
          $yyn = self::$yylhs[$yyn];
          
          if (($yyp = self::$yygbase[$yyn] + $this->yysstk[$this->yysp]) >= 0
            && $yyp < self::YYGLAST && self::$yygcheck[$yyp] == $yyn)
            $yystate = self::$yygoto[$yyp];
          else
            $yystate = self::$yygdefault[$yyn];
          
          $this->yysp++;
          
          $this->yysstk[$this->yysp] = $yystate;
          $this->yyastk[$this->yysp] = $this->yyval;
          
          // set location if a real node was produced by $yyn
          if ($this->yyval instanceof Node)
            $this->yyval->loc = $yyloc;
          
          // store position
          $yylstk[$this->yysp] = $this->yyloc;
          
        } else {
          /* error */
          $this->invalid = true;
                    
          switch ($yyerrflag) {
            case 0:              
              $expa = [];
              $expn = 0;
              $base = self::$yybase[$yystate];
              
              for ($i = 0; $i < self::TOKEN_MAP_SIZE; ++$i) {
                $n = $base + $i;
                if ($n >= 0 && $n < self::YYLAST && self::$yycheck[$n] == $i
                  || $yystate < self::YY2TBLSTATE
                  && ($n = self::$yybase[$yystate + self::YYNLSTATES] + $i)
                  && $n < self::YYLAST && ($n < 0 || self::$yycheck[$n] == $i)
                ) {
                  if ($n >= 0 && self::$yyaction[$n] != self::YYUNEXPECTED) {
                    if ($expn === 4) {
                      /* Too many expected tokens */
                      $expa = null;
                      $expn = 0;
                      break;
                    }

                    $expa[] = self::$terminals[$i];
                    $expn++;
                  }
                }
              }

              $this->report_error($this->yyloc, 
                self::$terminals[$tokid], $expn, $expa);       
            case 1:
            case 2:
              $yyerrflag = 3;  
              
              while (!(($yyn = self::$yybase[$yystate] + self::YYINTERRTOK) >= 0
                && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK
                || ($yystate < self::YY2TBLSTATE
                  && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + self::YYINTERRTOK) >= 0
                  && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK))
              ) {  
                if ($this->yysp <= 0) 
                  return null;
                
                $yystate = $this->yysstk[--$this->yysp];              
                Logger::debug('%% Recovering, uncovers state %d', $yystate);
              }
              
              $yyn = self::$yyaction[$yyn];
              Logger::debug('%% Shift %s', self::$terminals[self::YYINTERRTOK]);
              $this->yysstk[++$this->yysp] = $yystate = $yyn;
              break;
            
            case 3:
              Logger::debug('%% Discard %s', self::$terminals[$tokid]);
              if ($tokid === 0) 
                return null;
              
              $tokid = -1;
              break;
          }
        }

        if ($yystate < self::YYNLSTATES)
          break;
        
        /* >= YYNLSTATES means shift-and-reduce */
        $yyn = $yystate - self::YYNLSTATES;
      }
    }
  }


  private function yyn0() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn1() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn2() 
  {
     
      $this->yyval = new ast\Unit($this->yyastk[$this->yysp-(1-1)]); 
      $this->eat_end(); 
    
  }


  private function yyn3() 
  {
     
      $this->yyval = new ast\Unit($this->yyastk[$this->yysp-(1-1)]); 
      $this->eat_end(); 
    
  }


  private function yyn4() 
  {
    
      $this->yyval = new ast\Unit(null);
      $this->eat_end();
    
  }


  private function yyn5() 
  {
     
      $this->yyval = new ast\Module($this->yyastk[$this->yysp-(4-2)], null, $this->yyastk[$this->yysp-(4-4)]); 
      $this->eat_semis();
    
  }


  private function yyn6() 
  {
     $this->yyval = new ast\Content($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn7() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn8() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn9() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn10() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn11() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn12() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn13() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn14() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn15() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn16() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn17() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn18() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn19() 
  {
     $this->yyval = null; 
  }


  private function yyn20() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn21() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn22() 
  {
     
      $this->yyval = new ast\UseDecl($this->yyastk[$this->yysp-(3-2)], false); 
      $this->eat_semis(); 
    
  }


  private function yyn23() 
  {
    
      $this->yyval = new ast\UseDecl($this->yyastk[$this->yysp-(4-3)], true);
      $this->eat_semis();
    
  }


  private function yyn24() 
  {
    
      $this->yyval = new ast\UseDecl($this->yyastk[$this->yysp-(4-3)], false); 
      $this->eat_semis(); 
    
  }


  private function yyn25() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn26() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn27() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn28() 
  {
     $this->yyval = new ast\UseAlias($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn29() 
  {
     $this->yyval = new ast\UseUnpack($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn30() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn31() 
  {
     $this->yyval = new ast\LabelDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn32() 
  {
     
      $this->yyval = new ast\RequireDecl(false, $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn33() 
  {
     
      $this->yyval = new ast\RequireDecl(true, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn34() 
  {
    
      $this->yyval = new ast\Module($this->yyastk[$this->yysp-(4-2)], null, null);
      $this->eat_semis();
    
  }


  private function yyn35() 
  {
     
      $this->yyval = new ast\Module($this->yyastk[$this->yysp-(5-2)], null, $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn36() 
  {
    
      $this->yyval = new ast\Module(null, null, null);
      $this->eat_semis();
    
  }


  private function yyn37() 
  {
     
      $this->yyval = new ast\Module(null, null, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn38() 
  {
     $this->yyval = null; 
  }


  private function yyn39() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn40() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn41() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn42() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn43() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn44() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn45() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn46() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn47() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn48() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn49() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn50() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn51() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn52() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn53() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn54() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn55() 
  {
     $this->yyval = null; 
  }


  private function yyn56() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn57() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn58() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn59() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn60() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn61() 
  {
     
      $this->yyval = new ast\EnumDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn62() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn63() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn64() 
  {
     $this->yyval = new ast\EnumVar($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn65() 
  {
     $this->yyval = new ast\EnumVar($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn66() 
  {
     $this->yyval = null; 
  }


  private function yyn67() 
  {
     
      $this->yyval = new ast\ClassDecl($this->yyastk[$this->yysp-(10-1)], $this->yyastk[$this->yysp-(10-3)], $this->yyastk[$this->yysp-(10-4)], $this->yyastk[$this->yysp-(10-5)], $this->yyastk[$this->yysp-(10-6)], $this->yyastk[$this->yysp-(10-8)], $this->yyastk[$this->yysp-(10-9)]); 
      $this->eat_semis(); 
    
  }


  private function yyn68() 
  {
     
      $this->yyval = new ast\ClassDecl($this->yyastk[$this->yysp-(7-1)], $this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-6)], null, null, true); 
      $this->eat_semis(); 
    
  }


  private function yyn69() 
  {
     $this->yyval = null; 
  }


  private function yyn70() 
  {
     $this->yyval = null; 
  }


  private function yyn71() 
  {
     $this->yyval = null; 
  }


  private function yyn72() 
  {
     $this->yyval = null; 
  }


  private function yyn73() 
  {
     $this->yyval = null; 
  }


  private function yyn74() 
  {
     $this->yyval = null; 
  }


  private function yyn75() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn76() 
  {
     $this->yyval = null; 
  }


  private function yyn77() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn78() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn79() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn80() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn81() 
  {
     $this->yyval = null; 
  }


  private function yyn82() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn83() 
  {
     $this->yyval = null; 
  }


  private function yyn84() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn85() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn86() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn87() 
  {
     $this->yyval = null; 
  }


  private function yyn88() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn89() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn90() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn91() 
  {
     
      $this->yyval = new ast\TraitUse($this->yyastk[$this->yysp-(3-2)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn92() 
  {
     
      $this->yyval = new ast\TraitUse($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis();
    
  }


  private function yyn93() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn94() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn95() 
  {
     
      $this->yyval = new ast\TraitItem($this->yyastk[$this->yysp-(2-1)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn96() 
  {
    
      $this->yyval = new ast\TraitItem($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null);
      $this->eat_semis();
    
  }


  private function yyn97() 
  {
     
      $this->yyval = new ast\TraitItem($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn98() 
  {
     $this->yyval = []; 
  }


  private function yyn99() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn100() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn101() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn102() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn103() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn104() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn105() 
  {
     $this->yyval = new ast\CtorDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn106() 
  {
     
      $this->yyval = new ast\CtorDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn107() 
  {
     $this->yyval = new ast\DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn108() 
  {
     
      $this->yyval = new ast\DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn109() 
  {
     $this->yyval = new ast\GetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn110() 
  {
     
      $this->yyval = new ast\GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn111() 
  {
     $this->yyval = new ast\SetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn112() 
  {
     
      $this->yyval = new ast\GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn113() 
  {
     $this->yyval = new ast\NestedMods($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn114() 
  {
     $this->yyval = []; 
  }


  private function yyn115() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn116() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn117() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn118() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn119() 
  {
     $this->yyval = new ast\ThisParam($this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)], null, false); 
  }


  private function yyn120() 
  {
     $this->yyval = new ast\ThisParam($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-6)], false); 
  }


  private function yyn121() 
  {
     $this->yyval = new ast\ThisParam($this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)], null, true); 
  }


  private function yyn122() 
  {
     
      $this->yyval = new ast\TraitDecl($this->yyastk[$this->yysp-(7-1)], $this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-6)]); 
      $this->eat_semis(); 
    
  }


  private function yyn123() 
  {
     
      $this->yyval = new ast\TraitDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null, null, true); 
      $this->eat_semis(); 
    
  }


  private function yyn124() 
  {
     
      $this->yyval = new ast\IfaceDecl($this->yyastk[$this->yysp-(8-1)], $this->yyastk[$this->yysp-(8-3)], $this->yyastk[$this->yysp-(8-4)], $this->yyastk[$this->yysp-(8-5)], $this->yyastk[$this->yysp-(8-7)]); 
      $this->eat_semis(); 
    
  }


  private function yyn125() 
  {
     
      $this->yyval = new ast\IfaceDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-5)], null, true); 
      $this->eat_semis(); 
    
  }


  private function yyn126() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn127() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn128() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn129() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn130() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], true); 
  }


  private function yyn131() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn132() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn133() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn134() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn135() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], true); 
  }


  private function yyn136() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn137() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn138() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn139() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn140() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn141() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn142() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn143() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn144() 
  {
     
      $this->yyval = new ast\VarDecl(null, $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn145() 
  {
    
      $this->yyval = new ast\VarList($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-6)]);
      $this->eat_semis();
    
  }


  private function yyn146() 
  {
     
      $this->yyval = new ast\VarDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn147() 
  {
     $this->yyval = new ast\VarDecl(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn148() 
  {
     $this->yyval = new ast\VarList($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn149() 
  {
     $this->yyval = new ast\VarDecl($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn150() 
  {
    
      $this->yyval = new ast\FnDecl($this->yyastk[$this->yysp-(8-1)], $this->yyastk[$this->yysp-(8-4)], $this->yyastk[$this->yysp-(8-6)], $this->yyastk[$this->yysp-(8-7)], $this->yyastk[$this->yysp-(8-8)]); 
    
  }


  private function yyn151() 
  {
     
      $this->yyval = new ast\FnDecl($this->yyastk[$this->yysp-(8-1)], $this->yyastk[$this->yysp-(8-4)], $this->yyastk[$this->yysp-(8-6)], $this->yyastk[$this->yysp-(8-7)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn152() 
  {
     
      $this->yyval = new ast\FnDecl($this->yyastk[$this->yysp-(7-1)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-6)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn153() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn154() 
  {
     
      $this->yyval = $this->yyastk[$this->yysp-(3-2)];
      $this->eat_semis(); 
    
  }


  private function yyn155() 
  {
     $this->yyval = new ast\FnExpr($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn156() 
  {
     $this->yyval = new ast\FnExpr(null, $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn157() 
  {
     $this->yyval = new ast\FnExpr($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn158() 
  {
     $this->yyval = new ast\FnExpr(null, $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn159() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn160() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn161() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn162() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn163() 
  {
     $this->yyval = null; 
  }


  private function yyn164() 
  {
     $this->yyval = null; 
  }


  private function yyn165() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn166() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn167() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn168() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn169() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null, true); 
  }


  private function yyn170() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], false); 
  }


  private function yyn171() 
  {
     $this->yyval = new ast\Param(true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)], null, false); 
  }


  private function yyn172() 
  {
     $this->yyval = new ast\Param(true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], null, true); 
  }


  private function yyn173() 
  {
     $this->yyval = new ast\Param(false, null, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn174() 
  {
     $this->yyval = new ast\Param(false, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn175() 
  {
     $this->yyval = new ast\Param(false, null, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn176() 
  {
     $this->yyval = new ast\Param(true, null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn177() 
  {
     $this->yyval = new ast\Param(true, null, $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null, true); 
  }


  private function yyn178() 
  {
     $this->yyval = new ast\RestParam($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn179() 
  {
     $this->yyval = new ast\RestParam($this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)], true); 
  }


  private function yyn180() 
  {
     $this->yyval = null; 
  }


  private function yyn181() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn182() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn183() 
  {
     $this->yyval = null; 
  }


  private function yyn184() 
  {
     $this->yyval = null; 
  }


  private function yyn185() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn186() 
  {
     $this->yyval = null; 
  }


  private function yyn187() 
  {
     $this->yyval = null; 
  }


  private function yyn188() 
  {
     $this->yyval = null; 
  }


  private function yyn189() 
  {
     $this->yyval = null; 
  }


  private function yyn190() 
  {
     $this->yyval = null; 
  }


  private function yyn191() 
  {
     $this->yyval = null; 
  }


  private function yyn192() 
  {
     $this->yyval = null; 
  }


  private function yyn193() 
  {
     $this->yyval = null; 
  }


  private function yyn194() 
  {
     $this->yyval = null; 
  }


  private function yyn195() 
  {
     $this->yyval = null; 
  }


  private function yyn196() 
  {
     $this->yyval = null; 
  }


  private function yyn197() 
  {
     $this->yyval = null; 
  }


  private function yyn198() 
  {
     $this->yyval = null; 
  }


  private function yyn199() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn200() 
  {
     $this->yyval = new ast\DoStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn201() 
  {
     $this->yyval = new ast\IfStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn202() 
  {
     $this->yyval = new ast\ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn203() 
  {
     $this->yyval = new ast\ForStmt($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], null, $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn204() 
  {
     $this->yyval = new ast\ForStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn205() 
  {
     $this->yyval = null; 
  }


  private function yyn206() 
  {
     $this->yyval = new ast\ForStmt(null, null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn207() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(2-2)], null, null); 
  }


  private function yyn208() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn209() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(3-2)], null, $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn210() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn211() 
  {
     $this->yyval = new ast\PhpStmt($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn212() 
  {
     $this->yyval = new ast\GotoStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn213() 
  {
     $this->yyval = new ast\TestStmt(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn214() 
  {
     $this->yyval = new ast\TestStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn215() 
  {
     $this->yyval = new ast\BreakStmt(null); 
  }


  private function yyn216() 
  {
     $this->yyval = new ast\BreakStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn217() 
  {
     $this->yyval = new ast\ContinueStmt(null); 
  }


  private function yyn218() 
  {
     $this->yyval = new ast\ContinueStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn219() 
  {
     $this->yyval = new ast\PrintStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn220() 
  {
     $this->yyval = new ast\ThrowStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn221() 
  {
     $this->yyval = new ast\WhileStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn222() 
  {
     $this->yyval = new ast\AssertStmt($this->yyastk[$this->yysp-(3-2)], null); 
  }


  private function yyn223() 
  {
     $this->yyval = new ast\AssertStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn224() 
  {
     $this->yyval = new ast\SwitchStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn225() 
  {
     $this->yyval = new ast\ReturnStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn226() 
  {
     $this->yyval = new ast\ReturnStmt(null); 
  }


  private function yyn227() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn228() 
  {
     $this->yyval = null; 
  }


  private function yyn229() 
  {
     $this->yyval = new ast\ForInPair(null, $this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn230() 
  {
     $this->yyval = new ast\ForInPair($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn231() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn232() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn233() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn234() 
  {
     $this->yyval = null; 
  }


  private function yyn235() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn236() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn237() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn238() 
  {
     $this->yyval = new ast\ElifItem($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn239() 
  {
     $this->yyval = null; 
  }


  private function yyn240() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn241() 
  {
     $this->yyval = new ast\ElseItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn242() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn243() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn244() 
  {
     $this->yyval = new ast\CatchItem(null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn245() 
  {
     $this->yyval = new ast\CatchItem($this->yyastk[$this->yysp-(5-3)], null, $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn246() 
  {
     $this->yyval = new ast\CatchItem($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn247() 
  {
     $this->yyval = null; 
  }


  private function yyn248() 
  {
     $this->yyval = new ast\FinallyItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn249() 
  {
     $this->yyval = null; 
  }


  private function yyn250() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn251() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn252() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn253() 
  {
     $this->yyval = new ast\PhpUse($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn254() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn255() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn256() 
  {
     $this->yyval = new ast\PhpUseItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn257() 
  {
     $this->yyval = new ast\PhpUseItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn258() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn259() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn260() 
  {
     $this->yyval = new ast\CaseItem($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn261() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn262() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn263() 
  {
     $this->yyval = new ast\CaseLabel($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn264() 
  {
     $this->yyval = new ast\CaseLabel(null); 
  }


  private function yyn265() 
  {
     $this->yyval = new ast\Block([]); 
  }


  private function yyn266() 
  {
     $this->yyval = new ast\Block($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn267() 
  {
     $this->yyval = null; 
  }


  private function yyn268() 
  {
     
      $this->yyval = new ast\ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
      $this->eat_semis(); 
    
  }


  private function yyn269() 
  {
     
      $this->yyval = new ast\ExprStmt(null); 
      $this->eat_semis(); 
    
  }


  private function yyn270() 
  {
     $this->yyval = new ast\ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn271() 
  {
     $this->yyval = new ast\ExprStmt(null); 
  }


  private function yyn272() 
  {
     $this->yyval = new ast\ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn273() 
  {
     $this->yyval = new ast\ExprStmt(null); 
  }


  private function yyn274() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn275() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn276() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn277() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn278() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn279() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn280() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn281() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn282() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn283() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn284() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn285() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn286() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn287() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn288() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn289() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn290() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn291() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn292() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn293() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn294() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn295() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn296() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn297() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn298() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn299() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn300() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn301() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn302() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn303() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn304() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn305() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn306() 
  {
     $this->yyval = new ast\CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn307() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn308() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn309() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn310() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn311() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn312() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn313() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn314() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn315() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn316() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn317() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn318() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn319() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn320() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn321() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn322() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn323() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn324() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn325() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn326() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn327() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)], true); 
  }


  private function yyn328() 
  {
     $this->yyval = new ast\OffsetExpr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn329() 
  {
     $this->yyval = null; 
  }


  private function yyn330() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn331() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn332() 
  {
     $this->yyval = new ast\CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn333() 
  {
     $this->yyval = new ast\YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn334() 
  {
     $this->yyval = new ast\YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn335() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn336() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn337() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn338() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn339() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn340() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn341() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn342() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn343() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn344() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn345() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn346() 
  {
     $this->yyval = null; 
  }


  private function yyn347() 
  {
     $this->yyval = null; 
  }


  private function yyn348() 
  {
     $this->yyval = new ast\DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn349() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn350() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn351() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn352() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn353() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn354() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn355() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn356() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn357() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn358() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn359() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn360() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn361() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn362() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn363() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn364() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn365() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn366() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn367() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn368() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn369() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn370() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn371() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn372() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn373() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn374() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn375() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn376() 
  {
     $this->yyval = new ast\CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn377() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn378() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn379() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn380() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn381() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn382() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn383() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn384() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn385() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn386() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn387() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn388() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn389() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn390() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn391() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn392() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn393() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn394() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn395() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn396() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn397() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)], true); 
  }


  private function yyn398() 
  {
     $this->yyval = new ast\OffsetExpr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn399() 
  {
     $this->yyval = null; 
  }


  private function yyn400() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn401() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn402() 
  {
     $this->yyval = new ast\CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn403() 
  {
     $this->yyval = new ast\YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn404() 
  {
     $this->yyval = new ast\YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn405() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn406() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn407() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn408() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn409() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn410() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn411() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn412() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn413() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn414() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn415() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn416() 
  {
     $this->yyval = null; 
  }


  private function yyn417() 
  {
     $this->yyval = null; 
  }


  private function yyn418() 
  {
     $this->yyval = new ast\DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn419() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn420() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn421() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn422() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn423() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn424() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn425() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn426() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn427() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn428() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn429() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn430() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn431() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn432() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn433() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn434() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn435() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn436() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn437() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn438() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn439() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn440() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn441() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn442() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn443() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn444() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn445() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn446() 
  {
     $this->yyval = new ast\CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn447() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn448() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn449() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn450() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn451() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn452() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn453() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn454() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn455() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn456() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn457() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn458() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn459() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn460() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn461() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn462() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn463() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn464() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn465() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn466() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn467() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)], true); 
  }


  private function yyn468() 
  {
     $this->yyval = new ast\OffsetExpr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn469() 
  {
     $this->yyval = null; 
  }


  private function yyn470() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn471() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn472() 
  {
     $this->yyval = new ast\CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn473() 
  {
     $this->yyval = new ast\YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn474() 
  {
     $this->yyval = new ast\YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn475() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn476() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn477() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn478() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn479() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn480() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn481() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn482() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn483() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn484() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn485() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn486() 
  {
     $this->yyval = null; 
  }


  private function yyn487() 
  {
     $this->yyval = null; 
  }


  private function yyn488() 
  {
     $this->yyval = new ast\DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn489() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn490() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn491() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn492() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn493() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)], true); 
  }


  private function yyn494() 
  {
     $this->yyval = new ast\OffsetExpr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn495() 
  {
     $this->yyval = null; 
  }


  private function yyn496() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn497() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn498() 
  {
     $this->yyval = null; 
  }


  private function yyn499() 
  {
     $this->yyval = null; 
  }


  private function yyn500() 
  {
     $this->yyval = null; 
  }


  private function yyn501() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn502() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn503() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn504() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn505() 
  {
     $this->yyval = new ast\NamedArg($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn506() 
  {
     $this->yyval = new ast\RestArg($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn507() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn508() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn509() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn510() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn511() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn512() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn513() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn514() 
  {
     
      if ($this->yyastk[$this->yysp-(4-2)] === null || (count($this->yyastk[$this->yysp-(4-2)]) === 1 && $this->yyastk[$this->yysp-(4-3)] === null))
        $this->yyval = new ast\ParenExpr($this->yyastk[$this->yysp-(4-2)][0]);
      else
        $this->yyval = new ast\TupleExpr($this->yyastk[$this->yysp-(4-2)]);
    
  }


  private function yyn515() 
  {
     $this->yyval = new ast\TupleExpr(null); 
  }


  private function yyn516() 
  {
     $this->yyval = null; 
  }


  private function yyn517() 
  {
     $this->lex->scan_regexp($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn518() 
  {
     $this->yyval = new ast\RegexpLit($this->yyastk[$this->yysp-(3-3)]->value); 
  }


  private function yyn519() 
  {
     $this->yyval = new ast\Name($this->yyastk[$this->yysp-(1-1)], false); 
  }


  private function yyn520() 
  {
     $this->yyval = new ast\Name($this->yyastk[$this->yysp-(3-3)], false, $this->yyastk[$this->yysp-(3-1)]->type); 
  }


  private function yyn521() 
  {
     $this->yyval = new ast\Name($this->yyastk[$this->yysp-(2-2)], true); 
  }


  private function yyn522() 
  {
     $this->yyastk[$this->yysp-(3-1)]->add($this->yyastk[$this->yysp-(3-3)]); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn523() 
  {
     $this->yyval = null; 
  }


  private function yyn524() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn525() 
  {
     $this->yyval = null; 
  }


  private function yyn526() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn527() 
  {
     $this->yyval = new ast\SelfExpr; 
  }


  private function yyn528() 
  {
     $this->yyval = new ast\TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn529() 
  {
     $this->yyval = new ast\TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn530() 
  {
     $this->yyval = new ast\TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn531() 
  {
     $this->yyval = new ast\TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn532() 
  {
     $this->yyval = new ast\TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn533() 
  {
     $this->yyval = new ast\TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn534() 
  {
     $this->yyval = null; 
  }


  private function yyn535() 
  {
     
      $tok = new Token(T_GT, '>');
      $tok->loc = $this->yyastk[$this->yysp-(3-3)]->loc;
      $tok->loc->pos->coln += 1;
      $this->lex->push($tok);
      $this->yyval = null;
    
  }


  private function yyn536() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn537() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn538() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn539() 
  {
     $this->yyval = new ast\ThisExpr; 
  }


  private function yyn540() 
  {
     $this->yyval = new ast\SuperExpr; 
  }


  private function yyn541() 
  {
     $this->yyval = new ast\SelfExpr; 
  }


  private function yyn542() 
  {
     $this->yyval = new ast\NullLit; 
  }


  private function yyn543() 
  {
     $this->yyval = new ast\TrueLit; 
  }


  private function yyn544() 
  {
     $this->yyval = new ast\FalseLit; 
  }


  private function yyn545() 
  {
     $this->yyval = new ast\KStrLit($this->cdir); 
  }


  private function yyn546() 
  {
     $this->yyval = new ast\KStrLit($this->cfile); 
  }


  private function yyn547() 
  {
     $this->yyval = new ast\LNumLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->line); 
  }


  private function yyn548() 
  {
     $this->yyval = new ast\LNumLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->coln); 
  }


  private function yyn549() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn550() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn551() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn552() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn553() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn554() 
  {
     $this->yyval = new ast\StrLit($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn555() 
  {
     $this->yyastk[$this->yysp-(5-1)]->add($this->yyastk[$this->yysp-(5-4)]); $this->yyval = $this->yyastk[$this->yysp-(5-1)]; 
  }


  private function yyn556() 
  {
     $this->yyastk[$this->yysp-(3-1)]->add(new ast\StrLit($this->yyastk[$this->yysp-(3-3)])); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn557() 
  {
     $this->yyval = new ast\LNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn558() 
  {
     $this->yyval = new ast\DNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn559() 
  {
     $this->yyval = new ast\SNumLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->suffix); 
  }


  private function yyn560() 
  {
     $this->yyval = new ast\ArrLit(null); 
  }


  private function yyn561() 
  {
     $this->yyval = new ast\ArrGen($this->yyastk[$this->yysp-(9-2)], $this->yyastk[$this->yysp-(9-5)], $this->yyastk[$this->yysp-(9-7)]); 
  }


  private function yyn562() 
  {
     $this->yyval = new ast\ArrLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn563() 
  {
     $this->yyval = null; 
  }


  private function yyn564() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn565() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn566() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn567() 
  {
     $this->yyval = new ast\SpreadExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn568() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn569() 
  {
     $this->yyval = new ast\ObjLit(null); 
  }


  private function yyn570() 
  {
     $this->yyval = new ast\ObjLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn571() 
  {
     $this->yyval = null; 
  }


  private function yyn572() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn573() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn574() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn575() 
  {
     $this->yyval = new ast\ObjPair($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn576() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn577() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn578() 
  {
     $this->yyval = new ast\ObjKey($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn579() 
  {
     $this->yyval = null; 
  }


  private function yyn580() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn581() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn582() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn583() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn584() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn585() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn586() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn587() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn588() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn589() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn590() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn591() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn592() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn593() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn594() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn595() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn596() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn597() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn598() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn599() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn600() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn601() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn602() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn603() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn604() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn605() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn606() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn607() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn608() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn609() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn610() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn611() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn612() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn613() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn614() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn615() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn616() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn617() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn618() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn619() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn620() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn621() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn622() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn623() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn624() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn625() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn626() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn627() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn628() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn629() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn630() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn631() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn632() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn633() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn634() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn635() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn636() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn637() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn638() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn639() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn640() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn641() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn642() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn643() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn644() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn645() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn646() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn647() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn648() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn649() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }

}

