<?php

/* this parser-skeleton is based on the awesome 
   work of nikic (https://github.com/nikic) 
   with some extensions (error-recovery and location-tracking) */

/**
 * This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *   the grammar file gen/yy-parser-tpl.y
 *   the parser skeleton gen/kymacc.php.parser
 *
 * The skeleton for this parser was written by Moriyoshi Koizumi and is based on
 * the work by Masato Bito and is in the PUBLIC DOMAIN.
 */

namespace phs;


const YYERRTOK = 256;
const T_APLUS = 257;
const T_AMINUS = 258;
const T_AMUL = 259;
const T_ADIV = 260;
const T_AMOD = 261;
const T_APOW = 262;
const T_ABIT_NOT = 263;
const T_ABIT_OR = 264;
const T_ABIT_AND = 265;
const T_ABIT_XOR = 266;
const T_ABOOL_OR = 267;
const T_ABOOL_AND = 268;
const T_ABOOL_XOR = 269;
const T_ASHIFT_L = 270;
const T_ASHIFT_R = 271;
const T_RANGE = 272;
const T_YIELD = 273;
const T_BOOL_OR = 274;
const T_BOOL_XOR = 275;
const T_BOOL_AND = 276;
const T_EQ = 277;
const T_NEQ = 278;
const T_IN = 279;
const T_IS = 280;
const T_ISNT = 281;
const T_GTE = 282;
const T_LTE = 283;
const T_SL = 284;
const T_SR = 285;
const T_POW = 286;
const T_AS = 287;
const T_ARR = 288;
const T_REST = 289;
const T_DEL = 290;
const T_INC = 291;
const T_DEC = 292;
const T_NEW = 293;
const T_DDDOT = 294;
const T_FN = 295;
const T_LET = 296;
const T_USE = 297;
const T_ENUM = 298;
const T_CLASS = 299;
const T_TRAIT = 300;
const T_IFACE = 301;
const T_MODULE = 302;
const T_REQUIRE = 303;
const T_IDENT = 304;
const T_LNUM = 305;
const T_DNUM = 306;
const T_SNUM = 307;
const T_STRING = 308;
const T_REGEXP = 309;
const T_TRUE = 310;
const T_FALSE = 311;
const T_NULL = 312;
const T_THIS = 313;
const T_SUPER = 314;
const T_GET = 315;
const T_SET = 316;
const T_DO = 317;
const T_IF = 318;
const T_ELSIF = 319;
const T_ELSE = 320;
const T_FOR = 321;
const T_TRY = 322;
const T_GOTO = 323;
const T_BREAK = 324;
const T_CONTINUE = 325;
const T_THROW = 326;
const T_CATCH = 327;
const T_FINALLY = 328;
const T_WHILE = 329;
const T_ASSERT = 330;
const T_SWITCH = 331;
const T_CASE = 332;
const T_DEFAULT = 333;
const T_RETURN = 334;
const T_CONST = 335;
const T_FINAL = 336;
const T_GLOBAL = 337;
const T_STATIC = 338;
const T_EXTERN = 339;
const T_PUBLIC = 340;
const T_PRIVATE = 341;
const T_PROTECTED = 342;
const T_SEALED = 343;
const T_INLINE = 344;
const T_PHP = 345;
const T_TEST = 346;
const T_CFILE = 347;
const T_CLINE = 348;
const T_CCOLN = 349;
const T_CFN = 350;
const T_CCLASS = 351;
const T_CMETHOD = 352;
const T_CMODULE = 353;
const T_NL = 354;
const T_TINT = 355;
const T_TBOOL = 356;
const T_TFLOAT = 357;
const T_TSTRING = 358;
const T_TREGEXP = 359;
const T_INVL = 360;
const T_END = 361;
const T_SYNC = 362;

require_once 'context.php';
require_once 'parser_base.php';

require_once 'ast.php';
require_once 'glob.php';
require_once 'lexer.php';

use phs\ast\Node;
use phs\ast\Unit;
use phs\ast\Module;
use phs\ast\Program;
use phs\ast\RequireDecl;
use phs\ast\AttrDecl;
use phs\ast\CompAttr;
use phs\ast\TopexAttr;
use phs\ast\AttrDef;
use phs\ast\AttrVal;
use phs\ast\UseDecl;
use phs\ast\UseAlias;
use phs\ast\UseUnpack;
use phs\ast\EnumDecl;
use phs\ast\VarItem;
use phs\ast\ArrDestr;
use phs\ast\ObjDestr;
use phs\ast\ClassDecl;
use phs\ast\CtorDecl;
use phs\ast\DtorDecl;
use phs\ast\GetterDecl;
use phs\ast\SetterDecl;
use phs\ast\NestedMods;
use phs\ast\TraitUse;
use phs\ast\TraitItem;
use phs\ast\TraitDecl;
use phs\ast\IfaceDecl;
use phs\ast\LetDecl;
use phs\ast\VarDecl;
use phs\ast\FnDecl;
use phs\ast\FnExpr;
use phs\ast\Param;
use phs\ast\ThisParam;
use phs\ast\RestParam;
use phs\ast\DoStmt;
use phs\ast\IfStmt;
use phs\ast\ForInStmt;
use phs\ast\ForStmt;
use phs\ast\TryStmt;
use phs\ast\PhpStmt;
use phs\ast\GotoStmt;
use phs\ast\TestStmt;
use phs\ast\BreakStmt;
use phs\ast\ContinueStmt;
use phs\ast\ThrowStmt;
use phs\ast\WhileStmt;
use phs\ast\YieldStmt;
use phs\ast\AssertStmt;
use phs\ast\SwitchStmt;
use phs\ast\ReturnStmt;
use phs\ast\LabeledStmt;
use phs\ast\ElsifItem;
use phs\ast\ElseItem;
use phs\ast\CatchItem;
use phs\ast\FinallyItem;
use phs\ast\PhpUse;
use phs\ast\PhpUseItem;
use phs\ast\CaseItem;
use phs\ast\CaseLabel;
use phs\ast\Block;
use phs\ast\ExprStmt;
use phs\ast\BinExpr;
use phs\ast\CheckExpr;
use phs\ast\CastExpr;
use phs\ast\UpdateExpr;
use phs\ast\AssignExpr;
use phs\ast\MemberExpr;
use phs\ast\CondExpr;
use phs\ast\CallExpr;
use phs\ast\UnaryExpr;
use phs\ast\NewExpr;
use phs\ast\DelExpr;
use phs\ast\YieldExpr;
use phs\ast\NamedArg;
use phs\ast\RestArg;
use phs\ast\RegexpLit;
use phs\ast\Name;
use phs\ast\TypeId;
use phs\ast\Ident;
use phs\ast\ThisExpr;
use phs\ast\SuperExpr;
use phs\ast\NullLit;
use phs\ast\TrueLit;
use phs\ast\FalseLit;
use phs\ast\StrLit;
use phs\ast\EngineConst;
use phs\ast\LNumLit;
use phs\ast\DNumLit;
use phs\ast\SNumLit;
use phs\ast\ArrayLit;
use phs\ast\ArrayGen;
use phs\ast\SpreadExpr;
use phs\ast\ObjectLit;
use phs\ast\ObjectPair;


class Parser extends ParserBase
{
  const TOKEN_NONE    = -1;
  const TOKEN_INVALID = 132;

  const TOKEN_MAP_SIZE = 363;

  const YYLAST       = 1554;
  const YY2TBLSTATE  = 568;
  const YYGLAST      = 1103;
  const YYNLSTATES   = 646;
  const YYINTERRTOK  = 1;
  const YYUNEXPECTED = 32767;
  const YYDEFAULT    = -32766;

  /* @var array Map of token ids to their respective names */
  private static $terminals = [
    "EOF",
    "error",
    "','",
    "T_APLUS",
    "T_AMINUS",
    "T_AMUL",
    "T_ADIV",
    "T_AMOD",
    "T_APOW",
    "T_ABIT_NOT",
    "T_ABIT_OR",
    "T_ABIT_AND",
    "T_ABIT_XOR",
    "T_ABOOL_OR",
    "T_ABOOL_AND",
    "T_ABOOL_XOR",
    "T_ASHIFT_L",
    "T_ASHIFT_R",
    "'='",
    "T_RANGE",
    "T_YIELD",
    "'?'",
    "':'",
    "T_BOOL_OR",
    "T_BOOL_XOR",
    "T_BOOL_AND",
    "'|'",
    "'^'",
    "'&'",
    "T_EQ",
    "T_NEQ",
    "T_IN",
    "T_IS",
    "T_ISNT",
    "T_GTE",
    "T_LTE",
    "'>'",
    "'<'",
    "T_SL",
    "T_SR",
    "'+'",
    "'-'",
    "'*'",
    "'/'",
    "'%'",
    "T_POW",
    "T_AS",
    "T_ARR",
    "T_REST",
    "T_DEL",
    "'!'",
    "'~'",
    "T_INC",
    "T_DEC",
    "T_NEW",
    "'.'",
    "T_DDDOT",
    "'['",
    "']'",
    "'('",
    "')'",
    "T_FN",
    "T_LET",
    "T_USE",
    "T_ENUM",
    "T_CLASS",
    "T_TRAIT",
    "T_IFACE",
    "T_MODULE",
    "T_REQUIRE",
    "T_IDENT",
    "T_LNUM",
    "T_DNUM",
    "T_SNUM",
    "T_STRING",
    "T_REGEXP",
    "T_TRUE",
    "T_FALSE",
    "T_NULL",
    "T_THIS",
    "T_SUPER",
    "T_GET",
    "T_SET",
    "T_DO",
    "T_IF",
    "T_ELSIF",
    "T_ELSE",
    "T_FOR",
    "T_TRY",
    "T_GOTO",
    "T_BREAK",
    "T_CONTINUE",
    "T_THROW",
    "T_CATCH",
    "T_FINALLY",
    "T_WHILE",
    "T_ASSERT",
    "T_SWITCH",
    "T_CASE",
    "T_DEFAULT",
    "T_RETURN",
    "T_CONST",
    "T_FINAL",
    "T_GLOBAL",
    "T_STATIC",
    "T_EXTERN",
    "T_PUBLIC",
    "T_PRIVATE",
    "T_PROTECTED",
    "T_SEALED",
    "T_INLINE",
    "T_PHP",
    "T_TEST",
    "T_CFILE",
    "T_CLINE",
    "T_CCOLN",
    "T_CFN",
    "T_CCLASS",
    "T_CMETHOD",
    "T_CMODULE",
    "T_NL",
    "T_TINT",
    "T_TBOOL",
    "T_TFLOAT",
    "T_TSTRING",
    "T_TREGEXP",
    "T_END",
    "T_SYNC",
    "';'",
    "'{'",
    "'}'",
    "'@'"
    , "???"
  ];

  /* @var array Map which translates lexer tokens to internal tokens */
  private static $translate = [
        0,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,   50,  132,  132,  132,   44,   28,  132,
       59,   60,   42,   40,    2,   41,   55,   43,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,   22,  128,
       37,   18,   36,   21,  131,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,   57,  132,   58,   27,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  129,   26,  130,   51,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,    1,    3,    4,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   19,   20,   23,   24,   25,   29,   30,   31,
       32,   33,   34,   35,   38,   39,   45,   46,   47,   48,
       49,   52,   53,   54,   56,   61,   62,   63,   64,   65,
       66,   67,   68,   69,   70,   71,   72,   73,   74,   75,
       76,   77,   78,   79,   80,   81,   82,   83,   84,   85,
       86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
       96,   97,   98,   99,  100,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
      116,  117,  118,  119,  120,  121,  122,  123,  124,  125,
      132,  126,  127
  ];

  private static $yyaction = [
     1256,  219,  220,  221,  222,  484,  393,  394,  223,  224,
      225,  226,  227,  228,  229,  230,  231,  232,  233,  234,
      395,  217,  218,-32766,-32766,  235, 1045, 1046,-32766,   14,
    -32766,   83,    0,   71,-32767,-32767,  567,  143,  611,   81,
     1114, 1216, 1217, 1231, 1244, 1234, 1235, 1236, 1232, 1255,
     1114, 1115, 1116,  581, 1187,  606, 1221, 1222, 1223, 1237,
     1253, 1115, 1116, 1249, 1224, 1225, 1226, 1247, 1227, 1254,
     1250, 1251, 1228, 1229, 1230, 1248, 1220, 1245, 1246, 1159,
     1252, 1239, 1240, 1257, 1238, 1233, 1241, 1242, 1243, 1263,
     1264, 1218, 1219, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
      101, 1258, 1259, 1260, 1261, 1262,-32766,-32766,-32766,-32766,
     1197,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,  467,
     1118, 1119, 1133, 1146, 1136, 1137, 1138, 1134, 1158,   82,
      236,  215,  216,  217,  218, 1123, 1124, 1125, 1139, 1156,
      487,  596, 1152, 1126, 1127, 1128, 1150, 1129, 1157, 1153,
     1154, 1130, 1131, 1132, 1151, 1122, 1147, 1148, 1149, 1155,
     1141, 1142, 1160, 1140, 1135, 1143, 1144, 1145, 1166, 1167,
     1120, 1121, 1168, 1169, 1170, 1171, 1172, 1173, 1174,  603,
     1161, 1162, 1163, 1164, 1165,   -8,  515,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,  559,   84,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,  759,  381,  583,   85,   86,  847,-32766,-32766,
    -32766,-32766,-32766,  631,  469,   87,   88,   89,   90,  384,
    -32766,-32766,-32766,-32766,  470,  868,  -45,  -45,  450,  -45,
      -45,  471,  472,  478,   76,  169,  389,  390,  170,  171,
      172,  173,  174,  175,  176,  177,  237,  592,   16,  547,
     1206,  583,  502,  548,  473,  459,  460,   91,   -1,  515,
      549,   92,  550,  251,   11,   93,  695,  696,  697,  698,
      704,  699,  700,  701,  702,  703,  575,  500,   84,-32766,
    -32766,-32766,-32766,  103,-32766,-32766,-32766,-32766,-32766,-32766,
      838,  670,  607,  884,    8,   -8,  454,    2,   85,   86,
      174,  175,  176,  177,  216,  217,  218,  469,   87,   88,
       89,   90,  384,  470,  449,  682,  445,  435,  490,  -45,
      -45,  450,  -45,  -45,  471,  472,  436,   76,  695,  696,
      697,  698,  704,  699,  700,  701,  702,  703,  431,  193,
      451,   16,  547,  848,  786,  502,  548,  473,  459,  460,
       91, 1087,  737,  549,   92,  550,  573,  452,   93,  695,
      696,  697,  698,  704,  699,  700,  701,  702,  703,  575,
      500, 1109, 1110, 1111, 1112, 1113,  382,  434, 1109, 1110,
     1111, 1112, 1113,  428,  670,  432,  884,    8,  485,  454,
      144,  145,  146,  147,  148,  149,  150,  151,  152,  153,
      154,  155,  156,  157,  158,  159,  160,  470,   80,  883,
      161,  162,  163,  164,  165,  166,  167,  168,  169,  389,
      390,  170,  171,  172,  173,  174,  175,  176,  177,  178,
      179,  180,  181,  391,  515,  428,  184,   73,  182,  982,
      983,  458,   14,  238,   81,  214,   71,   82, 1114,  215,
      216,  217,  218,   84,  453,  429,  185,  186,  764,  488,
      489,-32766,-32766,-32766,  632,  479,  187,  188,  189,  190,
      392,  447,  239,   85,   86,   69,  570,  457,  250,  428,
        5,  571,  469,   87,   88,   89,   90,  384,  605,   13,
       75,  594, 1114,  256,  -45,  -45,  450,  -45,  -45,  471,
      472,  436,   76, 1115, 1116,-32766,-32766,  429,  -95,  231,
      232,  233,  234,  395,  342,  616,   16,  547,  235,  470,
      502,  548,  473,  459,  460,   91,  609,  515,  549,   92,
      550,  633,  195,   93,  695,  696,  697,  698,  704,  699,
      700,  701,  702,  703,  575,  500,   84,  428, 1089, 1045,
     1046,  343,   14,  446,   83,  468,   71,  234,  395,  670,
     1114,  884,    8,  235,  454,  242,   85,   86,  448,  887,
      470, 1115, 1116, -164,  191,  469,   87,   88,   89,   90,
      384,  470,  458,  248,  458,  796,  470,  -45,  -45,  450,
      -45,  -45,  471,  472,  252,   76,  776,  805,-32766,  882,
      481,  482,  481,  482, -164,  430,  176,  177,  878,   16,
      547,  798,  241,  502,  548,  473,  459,  460,   91,  429,
      192,  549,   92,  550,-32767,-32767,   93,  695,  696,  697,
      698,  704,  699,  700,  701,  702,  703,  575,  500,  476,
      426,  594,  477,  505,  558,  240,  623,  196,  249,  -96,
      245,  -95,  670,  255,  884,    8,  879,  454,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
      116,  117,  118,  119,  120,  218,   78,  247,  121,  122,
      123,  124,  125,  126,  127,  128,  129,  386,  387,  130,
      131,  132,  133,  134,  135,  136,  137,  138,  139,  140,
      141,  388,  524,  723,  363,  486,  142,  921,  922,  769,
      362,  258,   79,  178,  179,  180,  181,  391, -155,    4,
        3,   84,  182,  982,  983,  244,   14,  194,   81,  254,
       71,  767,  361,  257,  243,  101,  193,  802,  443,  470,
      433,   85,   86,  235,  396, 1103,  475,  464, 1187, 1002,
      469,   87,   88,   89,   90,  384, 1215, 1198,  941,  427,
     1199, 1200,  -45,  -45,  716, 1065, 1064, 1001,  940,  102,
      197,   77,   71,   64,-32767,  524, -155,  466,  562,  797,
     1086,  731,  574,  572,   16,  547,  246,   19,  502,  548,
      473,  459,  460,   91,   84,  678,  549,   92,  550, -229,
     -229,   93,  695,  696,  697,  698,  704,  699,  700,  701,
      702,  703,  575,  500,   85,   86,  183,  727,  681,  730,
      726,   26, 1088,  469,   87,   88,   89,   90,  384,  884,
        8, -229,  456,   23,   21,  -45,  -45,   24,   25,  643,
     1085,   22,  599,    0,  557,  658,  425,    0,  524,   12,
      775,  674,  885,    0,    0,  669,    0,   16,  547,  776,
        0,  502,  548,  473,  459,  460,   91,   84,  837,  549,
       92,  550,  240,  623,   93,  695,  696,  697,  698,  704,
      699,  700,  701,  702,  703,  575,  500,   85,   86,    0,
        0,  672,  781,  780,  835,  844,  469,   87,   88,   89,
       90,  384,  884,    8,  886,  456,    0,    0,  -45,  -45,
      833,  828,  832,  834,  787,  683,  673,  785,  755,  757,
      841,  495,  831,  765,  760,  750,  752,  839,  814,    0,
       16,  547,  498,  542,  502,  548,  473,  459,  460,   91,
       84,    8,  549,   92,  550,  717,  684,   93,  695,  696,
      697,  698,  704,  699,  700,  701,  702,  703,  575,  500,
       85,   86,  689,  840,  761,  722,  758,  768,  705,  469,
       87,   88,   89,   90,  384,  884,    8,  881,  456,  827,
      652,  -45,  -45,  766,  653, 1207, 1208,    0,    0,    0,
        0,    0,    0,    0,  524,    0,    0,    0,    0,    0,
        0,    0,    0,   16,  547,    0,    0,  502,  548,  473,
      459,  460,   91,   84,    0,  549,   92,  550,    0,    0,
       93,  695,  696,  697,  698,  704,  699,  700,  701,  702,
      703,  575,  500,   85,   86,    0,    0,    0,    0,    0,
        0,    0,  469,   87,   88,   89,   90,  384,  884,    8,
      880,  456,    0,    0,  -45,  -45,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,   16,  547,    0,    0,
      502,  548,  473,  459,  460,   91,    0,    0,  549,   92,
      550,    0,    0,   93,  695,  696,  697,  698,  704,  699,
      700,  701,  702,  703,  575,  500,   94,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  884,    8,    0,  456,    0,   95,   96,    0,  645,
      586,    0,    0,    0,    0,  474,   97,   98,   99,  100,
      385,    0,  470,   70,    0,   68,    0,  455,    0,   84,
        0,    0,    0,    0,    0,    0, 1114, 1188, 1189, 1190,
     1187,    0, 1178, 1179, 1177, 1175, 1176, 1115, 1116,   85,
       86,    0,    0,    0,    0,    0,    0,    0,  469,   87,
       88,   89,   90,  384,    0,    0,    0,    0,    0,    0,
    -32766,    0,    0,    0,    0,  601,    0,    0,    0, 1180,
     1181, 1182, 1183, 1184, 1185, 1186,    0,    0,    0,    0,
        0,    0,   16,  547,  184,   10,  502,  548,  473,  459,
      460,   91,    0,    0,  549,   92,  550,    0,    0,   93,
        0,    0,    0,    0,  185,  186,    0,    0,    0,    0,
      575,  500,    0,  479,  187,  188,  189,  190,  392,    0,
        0,    0,    0,   69,    0,  457,  -45,  884,    8,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,    0,-32766,    0,-32766,
    -32766,-32766,-32766,-32766,-32766,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  695,  696,  697,  698,  704,
      699,  700,  701,  702,  703,  198,  199,  200,  201,  202,
      203,  204,  205,  206,  207,  208,  209,  210,  211,  212,
      213,  214,  888,   82,    0,  215,  216,  217,  218,    0,
        0,    0,    0,  253,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,    0,-32766,    0,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,    0,-32766,    0,-32766,
    -32766,-32766,-32766,  198,  199,  200,  201,  202,  203,  204,
      205,  206,  207,  208,  209,  210,  211,  212,  213,  214,
        0,   82,    0,  215,  216,  217,  218,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,    0,-32766,    0,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,-32766,    0,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,
    -32766,-32766,-32766,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,-32766,-32766,    0,    0,    0,    0,    0,    0,    0,
    -32766,-32766,-32766,-32766,-32766,-32766,    0,-32766,    0,    0,
    -32766,    0,-32766,    0,    0,    0,    0,    0,    0,    0,
        0,-32766,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,-32766,-32766
  ];

  private static $yycheck = [
       20,   27,   28,   29,   30,   48,   32,   33,   34,   35,
       36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
       46,   25,   26,   52,   53,   51,   52,   53,   57,   55,
       59,   57,    0,   59,   52,   53,   79,   57,    1,   57,
       70,   61,   62,   63,   64,   65,   66,   67,   68,   69,
       70,   81,   82,    1,   74,    1,   76,   77,   78,   79,
       80,   81,   82,   83,   84,   85,   86,   87,   88,   89,
       90,   91,   92,   93,   94,   95,   96,   97,   98,   20,
      100,  101,  102,  103,  104,  105,  106,  107,  108,  109,
      110,  111,  112,  113,  114,  115,  116,  117,  118,  119,
       48,  121,  122,  123,  124,  125,   27,   28,   29,   30,
       58,   32,   33,   34,   35,   36,   37,   38,   39,    2,
       61,   62,   63,   64,   65,   66,   67,   68,   69,   21,
       31,   23,   24,   25,   26,   76,   77,   78,   79,   80,
       46,    1,   83,   84,   85,   86,   87,   88,   89,   90,
       91,   92,   93,   94,   95,   96,   97,   98,   99,  100,
      101,  102,  103,  104,  105,  106,  107,  108,  109,  110,
      111,  112,  113,  114,  115,  116,  117,  118,  119,    1,
      121,  122,  123,  124,  125,    0,    1,    3,    4,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   22,   20,    3,    4,    5,    6,
        7,    8,    9,   10,   11,   12,   13,   14,   15,   16,
       17,   18,  128,  129,    1,   40,   41,  128,   42,   43,
       44,   45,   46,    1,   49,   50,   51,   52,   53,   54,
       27,   28,   29,   30,   56,  128,   61,   62,   63,   64,
       65,   66,   67,   46,   69,   31,   32,   33,   34,   35,
       36,   37,   38,   39,   40,   41,   31,    1,   83,   84,
      130,    1,   87,   88,   89,   90,   91,   92,    0,    1,
       95,   96,   97,   47,   22,  100,  101,  102,  103,  104,
      105,  106,  107,  108,  109,  110,  111,  112,   20,   27,
       28,   29,   30,    2,   32,   33,   34,   35,   36,   37,
      128,  126,    1,  128,  129,  130,  131,  129,   40,   41,
       38,   39,   40,   41,   24,   25,   26,   49,   50,   51,
       52,   53,   54,   56,    2,  128,  129,    2,   22,   61,
       62,   63,   64,   65,   66,   67,   68,   69,  101,  102,
      103,  104,  105,  106,  107,  108,  109,  110,    2,   48,
       22,   83,   84,  128,  128,   87,   88,   89,   90,   91,
       92,   60,    1,   95,   96,   97,   60,    2,  100,  101,
      102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,  121,  122,  123,  124,  125,   46,   59,  121,  122,
      123,  124,  125,   57,  126,    2,  128,  129,   46,  131,
        3,    4,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   56,   21,  128,
       23,   24,   25,   26,   27,   28,   29,   30,   31,   32,
       33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
       43,   44,   45,   46,    1,   57,   20,    2,   51,   52,
       53,   63,   55,    2,   57,   19,   59,   21,   70,   23,
       24,   25,   26,   20,    2,  129,   40,   41,  128,   81,
       82,   42,   43,   44,    1,   49,   50,   51,   52,   53,
       54,  129,   31,   40,   41,   59,   49,   61,    2,   57,
      120,   54,   49,   50,   51,   52,   53,   54,  128,    2,
        2,   64,   70,   18,   61,   62,   63,   64,   65,   66,
       67,   68,   69,   81,   82,   27,   28,  129,  130,   42,
       43,   44,   45,   46,   18,    1,   83,   84,   51,   56,
       87,   88,   89,   90,   91,   92,    1,    1,   95,   96,
       97,    1,   22,  100,  101,  102,  103,  104,  105,  106,
      107,  108,  109,  110,  111,  112,   20,   57,   60,   52,
       53,  129,   55,    2,   57,   59,   59,   45,   46,  126,
       70,  128,  129,   51,  131,   22,   40,   41,   22,  128,
       56,   81,   82,   48,   18,   49,   50,   51,   52,   53,
       54,   56,   63,   18,   63,   60,   56,   61,   62,   63,
       64,   65,   66,   67,   18,   69,  127,   21,   27,  130,
       81,   82,   81,   82,   79,   59,   40,   41,   22,   83,
       84,   60,   22,   87,   88,   89,   90,   91,   92,  129,
       22,   95,   96,   97,   52,   53,  100,  101,  102,  103,
      104,  105,  106,  107,  108,  109,  110,  111,  112,   61,
       62,   64,   65,   93,   94,   98,   99,   22,   22,  130,
       22,  130,  126,   22,  128,  129,   22,  131,    3,    4,
        5,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   26,   21,   47,   23,   24,
       25,   26,   27,   28,   29,   30,   31,   32,   33,   34,
       35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
       45,   46,    1,  128,  129,   46,   51,   52,   53,  128,
      129,   47,   57,   42,   43,   44,   45,   46,    2,  128,
      129,   20,   51,   52,   53,   47,   55,   47,   57,   47,
       59,  128,  129,   47,   18,   48,   48,   21,   59,   56,
       51,   40,   41,   51,   59,   75,   56,   63,   74,   58,
       49,   50,   51,   52,   53,   54,   58,   58,   58,   62,
       58,   58,   61,   62,   58,   58,   58,   58,   58,  111,
       59,   59,   59,   59,   59,    1,   60,   59,   85,   60,
       60,   60,   60,   60,   83,   84,   60,   60,   87,   88,
       89,   90,   91,   92,   20,   60,   95,   96,   97,   98,
       99,  100,  101,  102,  103,  104,  105,  106,  107,  108,
      109,  110,  111,  112,   40,   41,   60,   60,   60,   60,
       60,   60,   60,   49,   50,   51,   52,   53,   54,  128,
      129,  130,  131,   60,   86,   61,   62,   60,   60,   60,
       60,   60,   87,   -1,   95,  120,  129,   -1,    1,  120,
      120,  120,  128,   -1,   -1,  127,   -1,   83,   84,  127,
       -1,   87,   88,   89,   90,   91,   92,   20,  128,   95,
       96,   97,   98,   99,  100,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,   40,   41,   -1,
       -1,  128,  128,  128,  128,  128,   49,   50,   51,   52,
       53,   54,  128,  129,  128,  131,   -1,   -1,   61,   62,
      128,  128,  128,  128,  128,  128,  128,  128,  128,  128,
      128,    1,  128,  128,  128,  128,  128,  128,  128,   -1,
       83,   84,  129,  129,   87,   88,   89,   90,   91,   92,
       20,  129,   95,   96,   97,  130,  130,  100,  101,  102,
      103,  104,  105,  106,  107,  108,  109,  110,  111,  112,
       40,   41,  130,  130,  130,  130,  130,  130,  130,   49,
       50,   51,   52,   53,   54,  128,  129,  130,  131,  130,
      130,   61,   62,  130,  130,  130,  130,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,    1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   83,   84,   -1,   -1,   87,   88,   89,
       90,   91,   92,   20,   -1,   95,   96,   97,   -1,   -1,
      100,  101,  102,  103,  104,  105,  106,  107,  108,  109,
      110,  111,  112,   40,   41,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   49,   50,   51,   52,   53,   54,  128,  129,
      130,  131,   -1,   -1,   61,   62,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   83,   84,   -1,   -1,
       87,   88,   89,   90,   91,   92,   -1,   -1,   95,   96,
       97,   -1,   -1,  100,  101,  102,  103,  104,  105,  106,
      107,  108,  109,  110,  111,  112,   20,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,  128,  129,   -1,  131,   -1,   40,   41,   -1,   43,
        1,   -1,   -1,   -1,   -1,   49,   50,   51,   52,   53,
       54,   -1,   56,   57,   -1,   59,   -1,   61,   -1,   20,
       -1,   -1,   -1,   -1,   -1,   -1,   70,   71,   72,   73,
       74,   -1,   76,   77,   78,   79,   80,   81,   82,   40,
       41,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   49,   50,
       51,   52,   53,   54,   -1,   -1,   -1,   -1,   -1,   -1,
       61,   -1,   -1,   -1,   -1,    1,   -1,   -1,   -1,  113,
      114,  115,  116,  117,  118,  119,   -1,   -1,   -1,   -1,
       -1,   -1,   83,   84,   20,  129,   87,   88,   89,   90,
       91,   92,   -1,   -1,   95,   96,   97,   -1,   -1,  100,
       -1,   -1,   -1,   -1,   40,   41,   -1,   -1,   -1,   -1,
      111,  112,   -1,   49,   50,   51,   52,   53,   54,   -1,
       -1,   -1,   -1,   59,   -1,   61,   62,  128,  129,    3,
        4,    5,    6,    7,    8,    9,   10,   11,   12,   13,
       14,   15,   16,   17,   18,   19,   -1,   21,   -1,   23,
       24,   25,   26,   27,   28,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,    3,    4,    5,    6,    7,
        8,    9,   10,   11,   12,   13,   14,   15,   16,   17,
       18,   19,  128,   21,   -1,   23,   24,   25,   26,   -1,
       -1,   -1,   -1,   31,    3,    4,    5,    6,    7,    8,
        9,   10,   11,   12,   13,   14,   15,   16,   17,   18,
       19,   -1,   21,   -1,   23,   24,   25,   26,   27,    3,
        4,    5,    6,    7,    8,    9,   10,   11,   12,   13,
       14,   15,   16,   17,   18,   19,   -1,   21,   -1,   23,
       24,   25,   26,    3,    4,    5,    6,    7,    8,    9,
       10,   11,   12,   13,   14,   15,   16,   17,   18,   19,
       -1,   21,   -1,   23,   24,   25,   26,    3,    4,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   -1,   21,   -1,   23,   24,   25,
        3,    4,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   -1,   21,   -1,
       23,   24,    3,    4,    5,    6,    7,    8,    9,   10,
       11,   12,   13,   14,   15,   16,   17,   18,   19,   -1,
       21,   20,   23,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   40,   41,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       49,   50,   51,   52,   53,   54,   -1,   56,   -1,   -1,
       59,   -1,   61,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   70,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   81,   82
  ];

  private static $yybase = [
      278,  185,  453,  453,  546,  546,  721,  794,  940,  867,
      140, 1013, 1013,  -20,   59,  182, 1149, 1149, 1149, 1149,
     1149, 1149, 1149, 1149, 1149, 1149, 1149,  760,  775,  800,
      783,  786,  812,  808,  610,  730,  718,  648,  729,  651,
      728,  793,  797,  798,  606,  809,  799,  810,  811,  675,
      407,  407,  407,  407,  407,  407,  407,  407, 1322,  407,
      407,  407,  407,  407, 1214, 1400, 1400, 1400,  270,  270,
       52,  311,  796,  707,  801,  708,  678,  223,  618,   54,
      645,   37,  646,  232, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106,  436,  436,  436,  436,  436,  436,
      436, 1106, 1106, 1106, 1106, 1106, 1106,  436,  436,  436,
      436,  436,  436,  436,  436,  436,  436,  436,  436,  436,
      436,  436,  436,  436,  436,  436,  436,  436,  436,  436,
      436,  436,  436,  436,  436,  436,  436,  436,  436,  436,
      436,  436,  436,  436,  436,  436, 1106, 1106,  436, 1106,
     1106, 1106, 1106, 1106, 1106, 1106,  436,  436,  436,  436,
     1106, 1106, 1106, 1106,  436,  436, 1106, 1106, 1106,  203,
      203,  203,  203,  203,  203,  203,  203,  203,  203,  203,
      203,  203,  203,  203,  203,  203,  203,  203,  203,  203,
      203,  203,  203,  203,  203,  203,  203,  203,  203,  203,
      203,  203,  203,  184,  184,  184,  446,  446,  446,  446,
      446,  446,  446,  446,  446,  446,  446,  446,  446,  446,
      446,  446,  446,  184,  184,  108,  108,  108, 1469, 1469,
     1447, 1447,  300, 1424, 1424,   -4, 1376, 1376,  669, 1351,
     1351,  -26, 1276, 1276,  591,  498,  224,  224,  224,  224,
      213,  213, 1471,  398,  510,  510,  442,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  272,  272,  272,
      272,  541,  541,  541,  539,  586,  586,  586,  586,   79,
       79,  854,  691,  691,  691,  691,  691,  691,  487,  487,
      487,  247,  247,  247,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  545,  439,  439,  439,
      439,  439,  439,  439,  439,  532,  532,  532,  532,  186,
      186,  186,  186,  186,  186,  186,  186,  712,  712,  712,
      712,  186,  186,  712,  712,  346,  346,  346,  346,  346,
      534,  346,  346,  371,  550,  346,  188,  -18,  -18,  -18,
      -18,  592,  592,  483,  447,  703,  703,  703,  703,  703,
      703,  703,  703,  703,  266,  705,  178,  705,  703,  814,
      802,  597,  736,   94,  -30,  853,  -30,  -30,  -30,  -30,
      -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,
      -30,  -30,  -30,  236,  -30,  -30,  -30,  -30,  -30,  -30,
      -30,  -30,  -30,  207,  611,  489,  461,  316,  567,  570,
      694,  570,  734,  566,  700,  699,  806,  338,  698,  650,
      702,  706,  684,  818,  817,  748,  301,  623,  598,  380,
      784,  601,   99,  235,  752,  785,  726,  835,  508,  571,
      -43,  362,  836,  779,  744,  117,  516,  596,  781,  595,
      852,  350,  704,  713,  735,  768,  735,  732,  832,  732,
      732,  733,  455,  832,  733,  705,  507,  732,  832,  694,
      694,  704,  732,  713,  733,  705,  709,  -29,  705,  705,
      705,  705,  832,  832,  832,  824,   32,  710,  262,  690,
      710,  723,  722,  740,  776,  710,  787,  769,  803,  804,
      805,  823,  745,  738,  737,  576,  876,  875,  530,  731,
      874,  747,  717,  750,  749,  751,  720,  782,  563,  739,
      710,  711,  807,  873,  710,  375,  741,  870,  820,  746,
      585,  403,  819,  654,  679,  869,  755,  858,  356,  857,
      403,  727,  743,  777,  780,  495,  856,  778,  710,  472,
      816,  742,  855,  719,  815,    0, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106,  -20, 1106, 1106,    0,
      -30,  407, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106,  407,  407,  407,  407,  407,  407,  407,
      407,  407,  407,  407,  407,  407,  407,  407,  407,  407,
      407,  407,  407,  407,  407,  517,    0,    0,    0,    0,
        0,    0,    0,    0,  -26,    0,    0,    0,    0,    0,
     1106,  -26,  -26,  -26, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1106, 1106, 1106, 1106, 1106, 1106, 1106,    0,    0,    0,
        0,    0,    0, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106,    0,    0, 1106,    0,    0,    0,    0,    0,
        0,    0, 1106, 1106, 1106, 1106,    0,    0,    0,    0,
     1106, 1106,    0,    0,    0,  407,  407,  407,  407,  407,
      407,  407,  407,  407,  407,  407,  407,  407,  407,  407,
      407,  407,  407,  407,  407,  407,  407,  407,  407,  407,
      407,  407,  407,  407,  407,  407,  407,  407,  407,  407,
      407,  407,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,
      -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  407,
      407,  -26,  -26,  -26,  407,  407,  407,  407,  -26,  407,
      407,  -26,  407,  407,  -26,  407,  407,    0,  407,  407,
      -26,  -26,  691,  691,  691,  691,  -26,  -26, 1106,  247,
      247,  247,  247,  691,  691,  691,  691,  691,  691,  691,
      691,  691,  691,  -26,  -26,  -26,  -26,  247,  247,  247,
      247,  691,  691,  691,  691,  -26,  -26,  247,    0,    0,
        0,    0,    0,    0,  517,  517,  517,    0,    0,    0,
      -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,
      -30,  -30,  -30,  691,  691,  691,  691,  691,  691,  691,
      691,  517,  517,  517,  517,  691,  691,  691,  691,  691,
      691,  691,  691,  517,  517,  517,  517,  691,  691,  517,
      517,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,
      -30,  -30,  -30,  517,  517,  517,  517,  517,  517,  -30,
      598,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,
      -30,  -30,  -30,  -30,  -30,  -30,  -30,  598,    0,  710,
        0,  567,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  832,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      710,  787,    0,  710,    0,    0,  832,    0,  832,    0,
      832,  832,  705,    0,  832,  832,  832,  832,  832,  832,
      832,  787,    0,    0,    0,    0,  356,    0,    0,    0,
      787,  356,  335,  335,    0,    0,    0,    0,  332,  375,
      496,    0,    0,    0,  496,    0,  332,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  517
  ];

  private static $yydefault = [
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,  627,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,  559,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  243,
      558,  244,  446,  559,  245,   65,  448,  566,32767,  447,
      157,  246,  160,  162,32767,  247,  248,   69,32767,32767,
    32767,32767,32767,  627,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  278,
      279,  280,  281,  282,  283,  284,  285,  286,  287,  288,
      289,  290,  291,  292,  277,  266,  339,  340,  341,  342,
      343,  344,  345,  346,  347,  348,  349,  350,  351,  352,
      353,  338,  327,  360,  297,  358,  402,  403,  404,  405,
      406,  407,  408,  409,  410,  411,  412,  413,  414,  415,
      416,  401,  391,  296,  357,  423,  421,  420,  264,  325,
      265,  326,  389,  263,  324,  390,  257,  318,  388,  258,
      319,  382,  256,  317,  383,  381,  269,  270,  330,  331,
      394,  395,32767,   45,   46,   46,   46,  271,  261,  262,
      260,  259,  332,  322,  323,  320,  321,  386,  387,  384,
      385,   45,   45,   45,   45,  267,  268,  328,  329,  392,
      393,   45,  249,  250,  255,  310,  311,  316,  374,  375,
      380,   45,   45,   46,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,  251,  252,  253,
      254,  312,  313,  314,  315,  376,  377,  378,  379,  300,
      299,  302,  301,  362,  361,  364,  363,  425,  424,  427,
      426,  145,  143,  149,  147,   60,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,  303,  304,  365,
      366,  428,  429,32767,32767,32767,  164,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,  458,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
      165,32767,32767,32767,32767,32767,32767,32767,  469,  470,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  177,
    32767,  178,32767,   82,32767,32767,32767,   78,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,   41,32767,32767,32767,32767,   33,  158,32767,32767,
    32767,32767,  218,  203,  437,  208,  438,32767,32767,32767,
    32767,  305,  626,32767,  367,32767,  626,32767,32767,32767,
    32767,  219,32767,  204,  430,32767,   89,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,  452,  458,32767,
      461,32767,32767,32767,32767,   44,32767,32767,32767,32767,
    32767,32767,32767,   31,32767,   64,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,  458,32767,
      166,32767,32767,32767,   88,   83,32767,32767,32767,32767,
       68,  137,32767,32767,  225,32767,32767,32767,   61,32767,
      136,32767,32767,32767,32767,  161,32767,32767,   94,   90,
    32767,32767,32767,32767,32767,  456
  ];

  private static $yygoto = [
       28,   52,   54,   53,   54,   52,   30,  651,   34,   35,
       37,   38,   39,   40,   27,  409,  410,  411,  412,  437,
      438,   31,   15,   32,  293,  413,  414,  415,  416,  439,
      440,   50,   33,   51,  259,  260,  261,  262,  263,  264,
      265,  266,  267,  268,  269,  270,  271,  272,  273,  274,
      275,  318,  320,  323,  326,  329,  332,  336,  337,  347,
      348,  349,  350,  351,  365,  366,  372,  373,  397,  398,
      399,  400,  374,   36,  276,  277,  278,  279,  280,  281,
      282,  283,  284,  285,  286,  287,  288,  289,  290,  291,
      292,  319,  321,  324,  327,  330,  333,  338,  339,  352,
      353,  354,  355,  356,  367,  368,  375,  376,  401,  402,
      403,  404,  377,  544,  877,  694,  694,  694,  613,  629,
      642,   55,  294,   56,  421,   57,  295,  954,  954,  954,
      954,  954,  954,  954,  954,  954,  954,  748,  954,  954,
      718, 1211,  620,  954,  954,  954,  954,  954,  954,  954,
      954,  954,  954,  954,  694,  748,  748,  748,  748,  779,
      779,  779,  779,    9,  779,  779,   41,   42, 1203,   43,
       44,  313,   59,   60,  422,  314,  600,  617,  584,  619,
       61,   45,   62,   46, 1091,  656,   63,   47,   48,  676,
      538, 1079,  578,  578,  578,  578,  578,  578,  578,  578,
      578,  578, 1213,  578,  578, 1213, 1117, 1192,  578,  578,
      578,  578,  578,  578,  578,  578,  578,  578,  578, 1194,
     1196,  944, 1193,  744,  620,  718,  718,  628,  525,  620,
     1068,  784,  719,  762,  630,  709,  526, 1068, 1068, 1068,
      540,  771, 1214,  713,  771, 1214,  842,  675,  829,  800,
      822,  493,  790,  859,  615,  604,  788,  794,  792,  754,
      756,  753,  751,  608,  634, 1080,  686,  608,  955,  955,
      955,  955,  955,  955,  955,  955,  955,  955,  739,  955,
      955,  725,  733,  870,  955,  955,  955,  955,  955,  955,
      955,  955,  955,  955,  955,  637,  499,  858,  873,  826,
     1209,  830,  867,  852,    0,    0,  863,    0,    0,    0,
        0, 1079, 1079, 1079, 1079, 1079, 1079, 1079,    0,    0,
      862,  860,  861,    0, 1079, 1079, 1079, 1079, 1079, 1079,
     1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079,
     1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079,
     1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079,
     1079, 1079, 1079,    0,    0, 1079,    0,    0,   17,    0,
       18,  591,    0, 1079, 1079, 1079, 1079,    0,  618,    0,
        0, 1079, 1079,   20,    0, 1080, 1080, 1080, 1080, 1080,
     1080, 1080,    0,    0,    0,    0,    0,  509, 1080, 1080,
     1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080,
     1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080,
     1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080,
     1080, 1080, 1080, 1080, 1080, 1080, 1080,    0,    0, 1080,
        0,    0,    0,  939,    0,    0,  483, 1080, 1080, 1080,
     1080,    0, 1063,    0,    0, 1080, 1080,    0,    0, 1063,
     1063, 1063,  345,    0,    0,    0,    0,    0, 1068, 1068,
     1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068,
     1068, 1068, 1068, 1068, 1068,    0,    0, 1068, 1068, 1068,
        0,    0,    0,    0, 1068,  508,  747, 1068,    0,    0,
     1068,    0,    0, 1068,    0,  510, 1068, 1068,  511,  512,
      513,  514, 1068, 1068,  747,  747,  747,  747,  554,  918,
      919,  920,  979,  980,  981,  564, 1042, 1043, 1044, 1068,
     1068, 1068, 1068,    0,    0,  720,  720,  720,  720,    0,
        0, 1068, 1068, 1195,    0,    0,    0,    0,    0,    0,
     1068, 1068, 1068,  773,  773,  773,  773,    0,  773,  773,
        0,    0,    0,  587,  543,  836,  821,  853,  856,  819,
      816,  817,  818,  820, 1191,    0,    0, 1068, 1068, 1068,
     1068,  518,  518,  518,  518,    0,  518,  518,  462, 1068,
     1068, 1068, 1068,    0,    0, 1068, 1068,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1068, 1068,    0,    0,  720,  720,  720,
      720,  720,    0,  720,  720,    0,    0,  720,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  462,  602,
        0,    0,    0,    0,    0,    0,  593,  555,  593,  565,
        0,  589,  590,    0,    0,    0,  624,    0,  536,  624,
      536,  953, 1105,  517,  503,  588, 1015, 1106,  506,  507,
      612, 1078,  537,  568,  569,    0,  809,  688,  872,  640,
      568,  569,  641,  541,  644,    0,    0,    0,    0,    0,
     1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
     1063, 1063, 1063, 1063, 1063, 1063, 1063,    0,    0, 1063,
     1063, 1063,    0,    0,    0,    0, 1063,    0, 1068, 1063,
        0,    0, 1063,  952,    0, 1063, 1014,    0, 1063, 1063,
        0,    0,  553,    0, 1063, 1063, 1077,  778,  778,  778,
      778,  346,  778,  778,  777,  777,  777,  777,    0,  777,
      777, 1063, 1063, 1063, 1063,    0,    0,    0,    0,  346,
      346,  346,  346, 1063, 1063,    0,    0,    0,    0,  383,
        0,    0, 1063, 1063, 1063,    0,    0,    0,    0,  383,
      383,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  622,  625,    0,    0,    0,    0,    0,    0, 1063,
     1063, 1063, 1063,    0,    0,    0,    0,    0,    0,    0,
        0, 1063, 1063, 1063, 1063,    0,    0, 1063, 1063,    0,
        0,    0,    0,    0,  315,  417,  418,  419,  420,  441,
      442,    0,    0,    0,    0, 1063, 1063,   58,  296,  297,
      298,  299,  300,  301,  302,  303,  304,  305,  306,  307,
      308,  309,  310,  311,  312,  322,  325,  328,  331,  334,
      335,  340,  341,  357,  358,  359,  360,  369,  370,  378,
      379,  405,  406,  407,  408,  380,    0,    0,   66,    0,
        0,    0,    0,    0,    0,    0,  546,  423,   67,  316,
        0,    0,    0,    0,  424,  317,    0,    0,    0,    0,
        0,  580,  580,  580,  580,  580,  580,  580,  580,  580,
      580,  580,  580,  610,    0,    0,    0,    0,  444,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  444,  444,  444,  444,
     1063,    0,    0,    0,    0,    0,  491,  614,    0,    0,
      638,  614,    0,  494,    0,    0,  491,  492,    0,    0,
      497,  635,  585,  610,  585,  614,  585,  585,  614,  614,
      638,    0,    0,    0,    0,  463,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  746,    0,    0,    0,    0,    0,
        0,  745,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  746,  746,  746,  746,    0,    0,    0,  745,
      745,  745,  745
  ];

  private static $yygcheck = [
       20,   20,   20,   20,   20,   20,   20,    4,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   93,   32,   32,   32,   44,   44,
       44,   20,   20,   20,   20,   20,   20,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   10,   98,   98,
       36,  116,   36,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   32,   10,   10,   10,   10,   17,
       17,   17,   17,   57,   17,   17,   20,   20,  113,   20,
       20,   20,   20,   20,   20,   20,    2,    2,  102,  102,
       20,   20,   20,   20,  104,    7,   20,   20,   20,    7,
       74,   98,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,  105,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,  107,
      108,   97,  106,   51,   36,   36,   36,   34,   34,   36,
       97,   54,   36,   56,   37,   35,   41,   97,   97,   97,
       28,   23,   78,   38,   23,   78,   23,   23,   54,   64,
       54,   27,   54,   54,   47,   21,   54,   54,   54,   54,
       54,   54,   54,   24,   45,  100,   29,   24,   99,   99,
       99,   99,   99,   99,   99,   99,   99,   99,   49,   99,
       99,   45,   45,   90,   99,   99,   99,   99,   99,   99,
       99,   99,   99,   99,   99,   25,   54,   86,   91,   76,
      112,   54,   88,   84,   -1,   -1,   54,   -1,   -1,   -1,
       -1,   98,   98,   98,   98,   98,   98,   98,   -1,   -1,
       54,   54,   54,   -1,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   -1,   -1,   98,   -1,   -1,   68,   -1,
       68,   68,   -1,   98,   98,   98,   98,   -1,   68,   -1,
       -1,   98,   98,   68,   -1,  100,  100,  100,  100,  100,
      100,  100,   -1,   -1,   -1,   -1,   -1,   53,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,   -1,   -1,  100,
       -1,   -1,   -1,   67,   -1,   -1,   53,  100,  100,  100,
      100,   -1,   67,   -1,   -1,  100,  100,   -1,   -1,   67,
       67,   67,   31,   -1,   -1,   -1,   -1,   -1,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   -1,   -1,   97,   97,   97,
       -1,   -1,   -1,   -1,   97,   53,   17,   97,   -1,   -1,
       97,   -1,   -1,   97,   -1,   53,   97,   97,   53,   53,
       53,   53,   97,   97,   17,   17,   17,   17,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   97,
       97,   97,   97,   -1,   -1,   24,   24,   24,   24,   -1,
       -1,   97,   97,  100,   -1,   -1,   -1,   -1,   -1,   -1,
       97,   97,   97,   19,   19,   19,   19,   -1,   19,   19,
       -1,   -1,   -1,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   78,   -1,   -1,   97,   97,   97,
       97,   30,   30,   30,   30,   -1,   30,   30,   24,   97,
       97,   97,   97,   -1,   -1,   97,   97,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   97,   97,   -1,   -1,   24,   24,   24,
       24,   24,   -1,   24,   24,   -1,   -1,   24,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   24,   30,
       -1,   -1,   -1,   -1,   -1,   -1,   24,   24,   24,   24,
       -1,   24,   24,   -1,   -1,   -1,   24,   -1,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   -1,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   -1,   -1,   -1,   -1,   -1,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   -1,   -1,   67,
       67,   67,   -1,   -1,   -1,   -1,   67,   -1,   97,   67,
       -1,   -1,   67,   97,   -1,   67,   97,   -1,   67,   67,
       -1,   -1,   78,   -1,   67,   67,   97,   16,   16,   16,
       16,   31,   16,   16,   15,   15,   15,   15,   -1,   15,
       15,   67,   67,   67,   67,   -1,   -1,   -1,   -1,   31,
       31,   31,   31,   67,   67,   -1,   -1,   -1,   -1,   31,
       -1,   -1,   67,   67,   67,   -1,   -1,   -1,   -1,   31,
       31,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   78,   78,   -1,   -1,   -1,   -1,   -1,   -1,   67,
       67,   67,   67,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   67,   67,   67,   67,   -1,   -1,   67,   67,   -1,
       -1,   -1,   -1,   -1,   39,   39,   39,   39,   39,   39,
       39,   -1,   -1,   -1,   -1,   67,   67,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   -1,   -1,   39,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   39,   39,   39,   39,
       -1,   -1,   -1,   -1,   39,   39,   -1,   -1,   -1,   -1,
       -1,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,   -1,   -1,   -1,   -1,   30,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   30,   30,   30,   30,
       67,   -1,   -1,   -1,   -1,   -1,   30,    5,   -1,   -1,
        5,    5,   -1,    5,   -1,   -1,   30,   30,   -1,   -1,
        5,   67,    5,    5,    5,    5,    5,    5,    5,    5,
        5,   -1,   -1,   -1,   -1,    5,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   16,   -1,   -1,   -1,   -1,   -1,
       -1,   15,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   16,   16,   16,   16,   -1,   -1,   -1,   15,
       15,   15,   15
  ];

  private static $yygbase = [
        0,    0,  174,    0,    3,  517,    0,  184,    0,    0,
     -206,    0,    0,    0,    0,  738,  731,  153,    0,  547,
      -70, -201,    0,  235,  192, -173,    0, -199, -207, -183,
      575,  398, -229,    0, -198, -196, -203, -193, -189,  640,
        0, -192,    0,    0, -243, -170,    0, -194,    0, -175,
        0, -141,    0,  -60, -252,    0, -148,  155,    0,    0,
        0,    0,    0,    0, -197,    0,    0,  394, -179,    0,
        0,    0,    0,    0,  116,    0, -202,    0,  232,    0,
        0,    0,    0,    0, -260,    0, -204,    0, -259,    0,
     -184, -200,    0,  107,    0,    0,  133,  172,  127,  268,
      201,    0,  110,    0,  109, -135, -120, -123, -122,    0,
        0,    0, -256,   95,    0,    0,  128,    0
  ];

  private static $yygdefault = [
    -32768,  576,  648,  649,  650,  577,    1,  655,  657,  659,
      660,  661,  662,  663,  664,  665,  666,  667,  668,  671,
       29,  519,  774,  770, 1104,  626,  680,  531,  532,  685,
      461,  344,  693,  627,  520,  708,  595,  621,  712,   65,
      721,  527,  566,  539,  636,  732,  521,  533,  639,  738,
      364,  743,  749,  504,  813,  371,  763,    6,  772,  522,
      523, 1018, 1081,  529,  799,  480,  530, 1000, 1101,  545,
      815,  496,   72,   74,  534,  501,  825,  560, 1100,  465,
      843,  845,  846,  563,  851,  855,  857,  561,  866,  535,
      869,  874,    7,  876,  516,   49,  551, 1005, 1016, 1019,
     1017, 1082, 1108,  528, 1090, 1095, 1096, 1097, 1099,  579,
      582,  552, 1201, 1202,  597,  556, 1210,  598
  ];

  private static $yylhs = [
        0,    1,    1,    2,    2,    3,    3,    3,    4,    6,
        6,    7,    7,    7,    7,    7,    7,    7,    7,    7,
        7,    7,    7,    7,    7,    7,   18,   18,    9,   22,
       14,   21,   21,   25,   25,   25,    8,    8,    8,   28,
       28,   29,   29,   29,   27,   30,   30,   31,   31,   32,
       32,   32,   32,   32,   32,   32,   32,   32,   32,   10,
       33,   33,   34,   34,   35,   35,   37,   37,   38,   38,
       40,   40,   41,   41,   36,   36,   11,   11,   42,   42,
       42,   42,   46,   46,   46,   46,   47,   47,   45,   43,
       43,   43,   48,   48,   49,   44,   44,   50,   50,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   52,   52,   52,   55,   55,   56,   56,
       12,   12,   13,   13,   57,   57,   23,   23,   23,   23,
       23,   58,   58,   58,   16,   17,   59,   60,   15,   15,
       15,   15,   61,   61,   61,   61,   62,   62,   62,   62,
       53,   53,   53,   63,   63,   64,   64,   64,   64,   64,
       64,   64,   64,   64,   66,   66,   65,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   73,
       72,   72,   72,   69,   69,   83,   83,   84,   70,   70,
       85,   75,   75,   86,   86,   86,   86,   76,   77,   77,
       87,   87,   88,   89,   89,   90,   90,   79,   79,   91,
       92,   92,   93,   93,   54,   54,   54,   80,   80,   81,
       81,   82,   82,   94,   94,   74,   74,   71,   71,   95,
       95,   95,   95,   95,   95,   95,   95,   95,   95,   95,
       95,   95,   95,   95,   95,   95,   95,   95,   95,   95,
       95,   95,   95,   95,   95,   95,   95,   95,   95,   95,
       95,   95,   95,   95,   95,   95,   95,   95,   95,   95,
       95,   95,   95,   95,   95,   95,   95,   95,   95,   95,
       95,   95,   95,   95,   95,   95,   95,   95,   95,   95,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   99,  101,   68,
       68,   97,   97,   97,  103,  103,  104,  104,  104,   98,
       98,   98,   98,   98,   98,   98,  109,  106,    5,    5,
        5,   96,   96,  102,  102,  102,  102,  102,   24,   24,
       24,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,   78,  105,  105,  105,   26,   26,   26,   26,   26,
       26,  107,  107,  107,  107,  110,  111,  111,  113,  113,
      100,  100,  100,  114,  115,  115,  116,  117,  117,  117,
      117,  117,  117,  117,  117,  117,  117,  117,  117,  117,
      117,  117,  117,  117,  117,  117,  117,  117,  117,  117,
      117,  117,  117,  117,  117,  117,  117,  117,  117,  117,
      117,  117,  117,  117,  117,  117,  117,  117,  117,  117,
      117,  117,  117,  117,  117,  117,  117,  117,  117,  117,
      117,  117,  117,  117,  117,  117,  112,  112
  ];

  private static $yylen = [
        1,    0,    1,    1,    1,    4,    5,    4,    1,    1,
        2,    1,    3,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    2,    1,    1,    3,    4,    4,    4,
        4,    1,    4,    1,    3,    4,    3,    5,    5,    1,
        3,    1,    3,    4,    1,    0,    1,    1,    2,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    5,
        0,    1,    1,    3,    1,    3,    1,    3,    1,    3,
        3,    3,    1,    3,    1,    1,    8,    6,    0,    2,
        3,    3,    0,    2,    3,    3,    1,    3,    1,    0,
        2,    2,    1,    3,    1,    0,    1,    1,    2,    1,
        1,    1,    1,    1,    4,    4,    4,    4,    4,    6,
        4,    6,    4,    3,    5,    5,    1,    2,    3,    6,
        5,    3,    6,    4,    1,    2,    1,    1,    1,    3,
        2,    1,    1,    1,    4,    3,    3,    2,    5,    7,
        5,    4,    4,    5,    3,    4,    4,    5,    3,    4,
        2,    3,    3,    1,    3,    1,    2,    3,    2,    3,
        4,    3,    5,    3,    0,    1,    1,    1,    5,    5,
        7,    7,    7,    6,    7,    5,    2,    2,    3,    3,
        4,    5,    3,    2,    3,    2,    3,    2,    3,    3,
        3,    3,    3,    5,    5,    3,    3,    1,    2,    1,
        1,    2,    2,    0,    1,    1,    2,    3,    0,    1,
        2,    1,    2,    2,    5,    7,    5,    2,    0,    1,
        1,    2,    3,    1,    3,    1,    3,    1,    2,    2,
        1,    2,    3,    2,    2,    3,    3,    2,    1,    2,
        1,    2,    1,    1,    3,    1,    3,    1,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    2,    2,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    2,    4,    4,    5,    4,    2,    2,
        2,    2,    2,    2,    2,    2,    3,    2,    1,    1,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    2,    2,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    2,    4,    4,    5,    4,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    3,    2,
        1,    1,    1,    1,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    2,
        2,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    2,    4,    4,
        5,    4,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    3,    2,    1,    1,    1,    1,    4,    4,    3,
        3,    2,    3,    3,    1,    3,    1,    3,    2,    1,
        1,    1,    1,    1,    1,    1,    0,    3,    1,    2,
        3,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    9,    3,    3,    2,    1,    3,    2,    1,
        2,    3,    3,    2,    1,    3,    3,    1,    1,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    0,    1
  ];
  
  private static $yyproduction = [
    "start : start",
    "start : /* empty */",
    "start : unit",
    "unit : module",
    "unit : program",
    "module : T_MODULE name ';' program",
    "module : T_MODULE name '{' unit '}'",
    "module : T_MODULE '{' unit '}'",
    "program : toplvl",
    "toplvl : topex",
    "toplvl : toplvl topex",
    "topex : use_decl",
    "topex : '@' error T_NL",
    "topex : attr_decl",
    "topex : enum_decl",
    "topex : class_decl",
    "topex : trait_decl",
    "topex : iface_decl",
    "topex : topex_attr",
    "topex : fn_decl",
    "topex : let_decl",
    "topex : var_decl",
    "topex : require",
    "topex : error T_SYNC",
    "topex : T_END",
    "topex : stmt",
    "require : T_REQUIRE rxpr ';'",
    "require : T_REQUIRE T_PHP rxpr ';'",
    "attr_decl : '@' attr_def ';' T_NL",
    "comp_attr : '@' attr_def T_NL comp",
    "topex_attr : '@' attr_def T_NL topex",
    "attr_def : ident",
    "attr_def : ident '(' attr_val ')'",
    "attr_val : ident",
    "attr_val : ident '=' lit",
    "attr_val : ident '(' attr_val ')'",
    "use_decl : T_USE use_name ';'",
    "use_decl : T_USE use_name T_AS ident ';'",
    "use_decl : T_USE use_name '{' use_items '}'",
    "use_items : use_item",
    "use_items : use_items ',' use_item",
    "use_item : use_name",
    "use_item : use_name T_AS ident",
    "use_item : use_name '{' use_items '}'",
    "use_name : name",
    "mods_opt : /* empty */",
    "mods_opt : mods",
    "mods : mod",
    "mods : mods mod",
    "mod : T_CONST",
    "mod : T_FINAL",
    "mod : T_GLOBAL",
    "mod : T_STATIC",
    "mod : T_PUBLIC",
    "mod : T_PRIVATE",
    "mod : T_PROTECTED",
    "mod : T_SEALED",
    "mod : T_INLINE",
    "mod : T_EXTERN",
    "enum_decl : mods_opt T_ENUM '{' vars_opt '}'",
    "vars_opt : /* empty */",
    "vars_opt : vars",
    "vars : var",
    "vars : vars ',' var",
    "var : destr_item",
    "var : destr_item '=' rxpr",
    "vars_noin : var_noin",
    "vars_noin : vars_noin ',' var_noin",
    "var_noin : destr_item",
    "var_noin : destr_item '=' rxpr_noin",
    "destr : '[' destr_items ']'",
    "destr : '{' destr_items '}'",
    "destr_items : destr_item",
    "destr_items : destr_items ',' destr_item",
    "destr_item : ident",
    "destr_item : destr",
    "class_decl : mods_opt T_CLASS ident ext_opt impl_opt '{' members_opt '}'",
    "class_decl : mods_opt T_CLASS ident ext_opt impl_opt ';'",
    "ext_opt : /* empty */",
    "ext_opt : ':' ext",
    "ext_opt : '(' ext ')'",
    "ext_opt : '(' error ')'",
    "exts_opt : /* empty */",
    "exts_opt : ':' exts",
    "exts_opt : '(' exts ')'",
    "exts_opt : '(' error ')'",
    "exts : ext",
    "exts : exts ',' ext",
    "ext : name",
    "impl_opt : /* empty */",
    "impl_opt : '~' impls",
    "impl_opt : '~' error",
    "impls : impl",
    "impls : impls ',' impl",
    "impl : name",
    "members_opt : /* empty */",
    "members_opt : members",
    "members : member",
    "members : members member",
    "member : fn_decl",
    "member : let_decl",
    "member : var_decl",
    "member : enum_decl",
    "member : trait_usage",
    "member : mods_opt T_NEW pparams ';'",
    "member : mods_opt T_NEW pparams block",
    "member : mods_opt T_DEL pparams ';'",
    "member : mods_opt T_DEL pparams block",
    "member : T_GET ident pparams block",
    "member : T_GET ident pparams T_ARR rxpr ';'",
    "member : T_SET ident pparams block",
    "member : T_SET ident pparams T_ARR rxpr ';'",
    "member : mods '{' members_opt '}'",
    "trait_usage : T_USE name ';'",
    "trait_usage : T_USE name T_AS ident ';'",
    "trait_usage : T_USE name '{' trait_usage_items '}'",
    "trait_usage_items : trait_usage_item",
    "trait_usage_items : trait_usage_items trait_usage_item",
    "trait_usage_item : mods_opt ident ';'",
    "trait_usage_item : mods_opt ident T_AS mods_opt ident ';'",
    "trait_decl : T_TRAIT ident '{' members_opt '}'",
    "trait_decl : T_TRAIT ident ';'",
    "iface_decl : T_IFACE ident exts_opt '{' members_opt '}'",
    "iface_decl : T_IFACE ident exts_opt ';'",
    "inner : comp",
    "inner : inner comp",
    "comp : decl",
    "comp : stmt",
    "comp : comp_attr",
    "comp : '@' error T_NL",
    "comp : error T_SYNC",
    "decl : fn_decl",
    "decl : let_decl",
    "decl : var_decl",
    "let_decl : mods_opt T_LET vars ';'",
    "var_decl : mods vars ';'",
    "let_decl_noin_nosemi : mods_opt T_LET vars_noin",
    "var_decl_noin_nosemi : mods vars_noin",
    "fn_decl : mods_opt T_FN ident pparams block",
    "fn_decl : mods_opt T_FN ident pparams T_ARR rxpr ';'",
    "fn_decl : mods_opt T_FN ident pparams ';'",
    "fn_decl : mods_opt T_FN ident ';'",
    "fn_expr : T_FN ident pparams block",
    "fn_expr : T_FN ident pparams T_ARR rxpr",
    "fn_expr : T_FN pparams block",
    "fn_expr : T_FN pparams T_ARR rxpr",
    "fn_expr_noin : T_FN ident pparams block",
    "fn_expr_noin : T_FN ident pparams T_ARR rxpr_noin",
    "fn_expr_noin : T_FN pparams block",
    "fn_expr_noin : T_FN pparams T_ARR rxpr_noin",
    "pparams : '(' ')'",
    "pparams : '(' error ')'",
    "pparams : '(' params ')'",
    "params : param",
    "params : params ',' param",
    "param : ident",
    "param : ident '?'",
    "param : ident '=' rxpr",
    "param : hint ident",
    "param : hint ident '?'",
    "param : hint ident '=' rxpr",
    "param : hint_opt T_THIS dot_ident",
    "param : hint_opt T_THIS dot_ident '=' rxpr",
    "param : hint_opt T_REST ident",
    "hint_opt : /* empty */",
    "hint_opt : hint",
    "hint : name",
    "stmt : block",
    "stmt : T_DO stmt T_WHILE pxpr ';'",
    "stmt : T_IF pxpr stmt elsifs_opt else_opt",
    "stmt : T_FOR '(' let_decl_noin_nosemi T_IN rxpr ')' stmt",
    "stmt : T_FOR '(' var_decl_noin_nosemi T_IN rxpr ')' stmt",
    "stmt : T_FOR '(' rseq_noin T_IN rxpr ')' stmt",
    "stmt : T_FOR '(' for_expr_noin for_expr ')' stmt",
    "stmt : T_FOR '(' for_expr_noin for_expr rseq ')' stmt",
    "stmt : T_FOR '(' error ')' stmt",
    "stmt : T_FOR block",
    "stmt : T_TRY block",
    "stmt : T_TRY block catches",
    "stmt : T_TRY block finally",
    "stmt : T_TRY block catches finally",
    "stmt : T_PHP '{' php_usage_opt str '}'",
    "stmt : T_GOTO ident ';'",
    "stmt : T_TEST block",
    "stmt : T_TEST str block",
    "stmt : T_BREAK ';'",
    "stmt : T_BREAK ident ';'",
    "stmt : T_CONTINUE ';'",
    "stmt : T_CONTINUE ident ';'",
    "stmt : T_THROW rxpr ';'",
    "stmt : T_WHILE pxpr stmt",
    "stmt : T_YIELD rxpr ';'",
    "stmt : T_ASSERT rxpr ';'",
    "stmt : T_ASSERT rxpr ':' str ';'",
    "stmt : T_SWITCH pxpr '{' cases '}'",
    "stmt : T_RETURN rxpr ';'",
    "stmt : ident ':' comp",
    "stmt : lxpr_stmt",
    "stmt : error ';'",
    "for_expr : rxpr_stmt",
    "for_expr_noin : rxpr_stmt_noin",
    "for_expr_noin : let_decl_noin_nosemi ';'",
    "for_expr_noin : var_decl_noin_nosemi ';'",
    "elsifs_opt : /* empty */",
    "elsifs_opt : elsifs",
    "elsifs : elsif",
    "elsifs : elsifs elsif",
    "elsif : T_ELSIF pxpr stmt",
    "else_opt : /* empty */",
    "else_opt : else",
    "else : T_ELSE stmt",
    "catches : catch",
    "catches : catches catch",
    "catch : T_CATCH block",
    "catch : T_CATCH '(' name ')' block",
    "catch : T_CATCH '(' name ':' ident ')' block",
    "catch : T_CATCH '(' error ')' block",
    "finally : T_FINALLY block",
    "php_usage_opt : /* empty */",
    "php_usage_opt : php_usage",
    "php_usage : php_use",
    "php_usage : php_usage php_use",
    "php_use : T_USE php_use_items ';'",
    "php_use_items : php_use_item",
    "php_use_items : php_use_items ',' php_use_item",
    "php_use_item : ident",
    "php_use_item : ident T_AS ident",
    "cases : case",
    "cases : cases case",
    "case : casels inner",
    "casels : casel",
    "casels : casels casel",
    "casel : T_CASE rxpr ':'",
    "casel : T_DEFAULT ':'",
    "block : '{' '}'",
    "block : '{' inner '}'",
    "block : '{' error '}'",
    "lxpr_stmt : lseq ';'",
    "lxpr_stmt : ';'",
    "rxpr_stmt : rseq ';'",
    "rxpr_stmt : ';'",
    "rxpr_stmt_noin : rseq_noin ';'",
    "rxpr_stmt_noin : ';'",
    "lseq : lxpr",
    "lseq : lseq ',' rxpr",
    "rseq : rxpr",
    "rseq : rseq ',' rxpr",
    "rseq_noin : rxpr_noin",
    "rseq_noin : rseq_noin ',' rxpr_noin",
    "lxpr : lxpr '+' rxpr",
    "lxpr : lxpr '-' rxpr",
    "lxpr : lxpr '*' rxpr",
    "lxpr : lxpr '/' rxpr",
    "lxpr : lxpr '%' rxpr",
    "lxpr : lxpr T_POW rxpr",
    "lxpr : lxpr '~' rxpr",
    "lxpr : lxpr '&' rxpr",
    "lxpr : lxpr '|' rxpr",
    "lxpr : lxpr '^' rxpr",
    "lxpr : lxpr '<' rxpr",
    "lxpr : lxpr '>' rxpr",
    "lxpr : lxpr T_GTE rxpr",
    "lxpr : lxpr T_LTE rxpr",
    "lxpr : lxpr T_BOOL_AND rxpr",
    "lxpr : lxpr T_BOOL_OR rxpr",
    "lxpr : lxpr T_BOOL_XOR rxpr",
    "lxpr : lxpr T_RANGE rxpr",
    "lxpr : lxpr T_SL rxpr",
    "lxpr : lxpr T_SR rxpr",
    "lxpr : lxpr T_EQ rxpr",
    "lxpr : lxpr T_NEQ rxpr",
    "lxpr : lxpr T_IN rxpr",
    "lxpr : lxpr T_IS type_name",
    "lxpr : lxpr T_ISNT type_name",
    "lxpr : lxpr T_AS type_name",
    "lxpr : lxpr T_INC",
    "lxpr : lxpr T_DEC",
    "lxpr : lxpr '=' rxpr",
    "lxpr : lxpr T_APLUS rxpr",
    "lxpr : lxpr T_AMINUS rxpr",
    "lxpr : lxpr T_AMUL rxpr",
    "lxpr : lxpr T_ADIV rxpr",
    "lxpr : lxpr T_AMOD rxpr",
    "lxpr : lxpr T_APOW rxpr",
    "lxpr : lxpr T_ABIT_NOT rxpr",
    "lxpr : lxpr T_ABIT_OR rxpr",
    "lxpr : lxpr T_ABIT_AND rxpr",
    "lxpr : lxpr T_ABIT_XOR rxpr",
    "lxpr : lxpr T_ABOOL_OR rxpr",
    "lxpr : lxpr T_ABOOL_AND rxpr",
    "lxpr : lxpr T_ABOOL_XOR rxpr",
    "lxpr : lxpr T_ASHIFT_L rxpr",
    "lxpr : lxpr T_ASHIFT_R rxpr",
    "lxpr : lxpr dot_ident",
    "lxpr : lxpr '[' rxpr ']'",
    "lxpr : lxpr '[' error ']'",
    "lxpr : lxpr '?' rxpr ':' rxpr",
    "lxpr : lxpr '?' ':' rxpr",
    "lxpr : lxpr pargs",
    "lxpr : '-' rxpr",
    "lxpr : '+' rxpr",
    "lxpr : '~' rxpr",
    "lxpr : '!' rxpr",
    "lxpr : T_INC rxpr",
    "lxpr : T_DEC rxpr",
    "lxpr : T_NEW type_name",
    "lxpr : T_NEW type_name pargs",
    "lxpr : T_DEL ident",
    "lxpr : atom",
    "lxpr : legacy_cast",
    "rxpr : rxpr '+' rxpr",
    "rxpr : rxpr '-' rxpr",
    "rxpr : rxpr '*' rxpr",
    "rxpr : rxpr '/' rxpr",
    "rxpr : rxpr '%' rxpr",
    "rxpr : rxpr T_POW rxpr",
    "rxpr : rxpr '~' rxpr",
    "rxpr : rxpr '&' rxpr",
    "rxpr : rxpr '|' rxpr",
    "rxpr : rxpr '^' rxpr",
    "rxpr : rxpr '>' rxpr",
    "rxpr : rxpr '<' rxpr",
    "rxpr : rxpr T_GTE rxpr",
    "rxpr : rxpr T_LTE rxpr",
    "rxpr : rxpr T_BOOL_AND rxpr",
    "rxpr : rxpr T_BOOL_OR rxpr",
    "rxpr : rxpr T_BOOL_XOR rxpr",
    "rxpr : rxpr T_RANGE rxpr",
    "rxpr : rxpr T_SL rxpr",
    "rxpr : rxpr T_SR rxpr",
    "rxpr : rxpr T_EQ rxpr",
    "rxpr : rxpr T_NEQ rxpr",
    "rxpr : rxpr T_IN rxpr",
    "rxpr : rxpr T_IS type_name",
    "rxpr : rxpr T_ISNT type_name",
    "rxpr : rxpr T_AS type_name",
    "rxpr : rxpr T_INC",
    "rxpr : rxpr T_DEC",
    "rxpr : rxpr '=' rxpr",
    "rxpr : rxpr T_APLUS rxpr",
    "rxpr : rxpr T_AMINUS rxpr",
    "rxpr : rxpr T_AMUL rxpr",
    "rxpr : rxpr T_ADIV rxpr",
    "rxpr : rxpr T_AMOD rxpr",
    "rxpr : rxpr T_APOW rxpr",
    "rxpr : rxpr T_ABIT_NOT rxpr",
    "rxpr : rxpr T_ABIT_OR rxpr",
    "rxpr : rxpr T_ABIT_AND rxpr",
    "rxpr : rxpr T_ABIT_XOR rxpr",
    "rxpr : rxpr T_ABOOL_OR rxpr",
    "rxpr : rxpr T_ABOOL_AND rxpr",
    "rxpr : rxpr T_ABOOL_XOR rxpr",
    "rxpr : rxpr T_ASHIFT_L rxpr",
    "rxpr : rxpr T_ASHIFT_R rxpr",
    "rxpr : rxpr dot_ident",
    "rxpr : rxpr '[' rxpr ']'",
    "rxpr : rxpr '[' error ']'",
    "rxpr : rxpr '?' rxpr ':' rxpr",
    "rxpr : rxpr '?' ':' rxpr",
    "rxpr : rxpr pargs",
    "rxpr : T_YIELD rxpr",
    "rxpr : '-' rxpr",
    "rxpr : '+' rxpr",
    "rxpr : '~' rxpr",
    "rxpr : '!' rxpr",
    "rxpr : T_INC rxpr",
    "rxpr : T_DEC rxpr",
    "rxpr : T_NEW type_name",
    "rxpr : T_NEW type_name pargs",
    "rxpr : T_DEL ident",
    "rxpr : atom",
    "rxpr : obj",
    "rxpr : fn_expr",
    "rxpr : legacy_cast",
    "rxpr_noin : rxpr_noin '+' rxpr_noin",
    "rxpr_noin : rxpr_noin '-' rxpr_noin",
    "rxpr_noin : rxpr_noin '*' rxpr_noin",
    "rxpr_noin : rxpr_noin '/' rxpr_noin",
    "rxpr_noin : rxpr_noin '%' rxpr_noin",
    "rxpr_noin : rxpr_noin T_POW rxpr_noin",
    "rxpr_noin : rxpr_noin '~' rxpr_noin",
    "rxpr_noin : rxpr_noin '&' rxpr_noin",
    "rxpr_noin : rxpr_noin '|' rxpr_noin",
    "rxpr_noin : rxpr_noin '^' rxpr_noin",
    "rxpr_noin : rxpr_noin '>' rxpr_noin",
    "rxpr_noin : rxpr_noin '<' rxpr_noin",
    "rxpr_noin : rxpr_noin T_GTE rxpr_noin",
    "rxpr_noin : rxpr_noin T_LTE rxpr_noin",
    "rxpr_noin : rxpr_noin T_BOOL_AND rxpr_noin",
    "rxpr_noin : rxpr_noin T_BOOL_OR rxpr_noin",
    "rxpr_noin : rxpr_noin T_BOOL_XOR rxpr_noin",
    "rxpr_noin : rxpr_noin T_RANGE rxpr_noin",
    "rxpr_noin : rxpr_noin T_SL rxpr_noin",
    "rxpr_noin : rxpr_noin T_SR rxpr_noin",
    "rxpr_noin : rxpr_noin T_EQ rxpr_noin",
    "rxpr_noin : rxpr_noin T_NEQ rxpr_noin",
    "rxpr_noin : rxpr_noin T_IS type_name",
    "rxpr_noin : rxpr_noin T_ISNT type_name",
    "rxpr_noin : rxpr_noin T_AS type_name",
    "rxpr_noin : rxpr_noin T_INC",
    "rxpr_noin : rxpr_noin T_DEC",
    "rxpr_noin : rxpr_noin '=' rxpr_noin",
    "rxpr_noin : rxpr_noin T_APLUS rxpr_noin",
    "rxpr_noin : rxpr_noin T_AMINUS rxpr_noin",
    "rxpr_noin : rxpr_noin T_AMUL rxpr_noin",
    "rxpr_noin : rxpr_noin T_ADIV rxpr_noin",
    "rxpr_noin : rxpr_noin T_AMOD rxpr_noin",
    "rxpr_noin : rxpr_noin T_APOW rxpr_noin",
    "rxpr_noin : rxpr_noin T_ABIT_NOT rxpr_noin",
    "rxpr_noin : rxpr_noin T_ABIT_OR rxpr_noin",
    "rxpr_noin : rxpr_noin T_ABIT_AND rxpr_noin",
    "rxpr_noin : rxpr_noin T_ABIT_XOR rxpr_noin",
    "rxpr_noin : rxpr_noin T_ABOOL_OR rxpr_noin",
    "rxpr_noin : rxpr_noin T_ABOOL_AND rxpr_noin",
    "rxpr_noin : rxpr_noin T_ABOOL_XOR rxpr_noin",
    "rxpr_noin : rxpr_noin T_ASHIFT_L rxpr_noin",
    "rxpr_noin : rxpr_noin T_ASHIFT_R rxpr_noin",
    "rxpr_noin : rxpr_noin dot_ident",
    "rxpr_noin : rxpr_noin '[' rxpr ']'",
    "rxpr_noin : rxpr_noin '[' error ']'",
    "rxpr_noin : rxpr_noin '?' rxpr ':' rxpr_noin",
    "rxpr_noin : rxpr_noin '?' ':' rxpr_noin",
    "rxpr_noin : rxpr_noin pargs",
    "rxpr_noin : T_YIELD rxpr_noin",
    "rxpr_noin : '-' rxpr_noin",
    "rxpr_noin : '+' rxpr_noin",
    "rxpr_noin : '~' rxpr_noin",
    "rxpr_noin : '!' rxpr_noin",
    "rxpr_noin : T_INC rxpr_noin",
    "rxpr_noin : T_DEC rxpr_noin",
    "rxpr_noin : T_NEW type_name",
    "rxpr_noin : T_NEW type_name pargs",
    "rxpr_noin : T_DEL ident",
    "rxpr_noin : atom",
    "rxpr_noin : obj",
    "rxpr_noin : fn_expr_noin",
    "rxpr_noin : legacy_cast_noin",
    "legacy_cast : '(' type ')' rxpr",
    "legacy_cast_noin : '(' type ')' rxpr_noin",
    "pxpr : '(' rxpr ')'",
    "pxpr : '(' error ')'",
    "pargs : '(' ')'",
    "pargs : '(' error ')'",
    "pargs : '(' args ')'",
    "args : arg",
    "args : args ',' arg",
    "arg : rxpr",
    "arg : ident ':' rxpr",
    "arg : T_REST rxpr",
    "atom : num",
    "atom : reg",
    "atom : arr",
    "atom : name",
    "atom : kwc",
    "atom : str",
    "atom : pxpr",
    "@1 : /* empty */",
    "reg : '/' @1 T_REGEXP",
    "name : ident",
    "name : T_DDDOT ident",
    "name : name T_DDDOT ident",
    "type_name : name",
    "type_name : type",
    "type : T_TINT",
    "type : T_TBOOL",
    "type : T_TFLOAT",
    "type : T_TSTRING",
    "type : T_TREGEXP",
    "ident : T_IDENT",
    "ident : T_GET",
    "ident : T_SET",
    "dot_ident : '.' ident",
    "dot_ident : '.' T_FN",
    "dot_ident : '.' T_LET",
    "dot_ident : '.' T_PHP",
    "dot_ident : '.' T_TEST",
    "dot_ident : '.' T_ASSERT",
    "dot_ident : '.' T_TRUE",
    "dot_ident : '.' T_FALSE",
    "dot_ident : '.' T_NULL",
    "dot_ident : '.' T_IF",
    "dot_ident : '.' T_ELSIF",
    "dot_ident : '.' T_ELSE",
    "dot_ident : '.' T_TRY",
    "dot_ident : '.' T_THROW",
    "dot_ident : '.' T_CATCH",
    "dot_ident : '.' T_FINALLY",
    "dot_ident : '.' T_USE",
    "dot_ident : '.' T_MODULE",
    "dot_ident : '.' T_EXTERN",
    "dot_ident : '.' T_CLASS",
    "dot_ident : '.' T_TRAIT",
    "dot_ident : '.' T_IFACE",
    "dot_ident : '.' T_THIS",
    "dot_ident : '.' T_STATIC",
    "dot_ident : '.' T_CONST",
    "dot_ident : '.' T_FINAL",
    "dot_ident : '.' T_PUBLIC",
    "dot_ident : '.' T_PRIVATE",
    "dot_ident : '.' T_PROTECTED",
    "dot_ident : '.' T_ENUM",
    "dot_ident : '.' T_SWITCH",
    "dot_ident : '.' T_CASE",
    "dot_ident : '.' T_DEFAULT",
    "dot_ident : '.' T_FOR",
    "dot_ident : '.' T_WHILE",
    "dot_ident : '.' T_DO",
    "dot_ident : '.' T_BREAK",
    "dot_ident : '.' T_CONTINUE",
    "dot_ident : '.' T_RETURN",
    "dot_ident : '.' T_SUPER",
    "dot_ident : '.' T_GOTO",
    "dot_ident : '.' T_REQUIRE",
    "dot_ident : '.' T_YIELD",
    "dot_ident : '.' T_GLOBAL",
    "dot_ident : '.' T_TINT",
    "dot_ident : '.' T_TBOOL",
    "dot_ident : '.' T_TFLOAT",
    "dot_ident : '.' T_TSTRING",
    "dot_ident : '.' T_TREGEXP",
    "dot_ident : '.' T_SEALED",
    "dot_ident : '.' T_INLINE",
    "dot_ident : '.' T_CFILE",
    "dot_ident : '.' T_CLINE",
    "dot_ident : '.' T_CCOLN",
    "dot_ident : '.' T_CFN",
    "dot_ident : '.' T_CCLASS",
    "dot_ident : '.' T_CMETHOD",
    "dot_ident : '.' T_CMODULE",
    "kwc : T_THIS",
    "kwc : T_SUPER",
    "kwc : T_NULL",
    "kwc : T_TRUE",
    "kwc : T_FALSE",
    "kwc : T_CFILE",
    "kwc : T_CLINE",
    "kwc : T_CCOLN",
    "kwc : T_CFN",
    "kwc : T_CCLASS",
    "kwc : T_CMETHOD",
    "kwc : T_CMODULE",
    "str : T_STRING",
    "num : T_LNUM",
    "num : T_DNUM",
    "num : T_SNUM",
    "lit : str",
    "lit : num",
    "lit : reg",
    "lit : arr",
    "lit : obj",
    "lit : kwc",
    "arr : '[' ']'",
    "arr : '[' rxpr T_FOR '(' rxpr_noin T_IN rxpr ')' ']'",
    "arr : '[' arr_vals ']'",
    "arr : '[' error ']'",
    "arr_vals : arr_vals_cs comma_opt",
    "arr_vals_cs : arr_val",
    "arr_vals_cs : arr_vals_cs ',' arr_val",
    "arr_val : T_REST rxpr",
    "arr_val : rxpr",
    "obj : '{' '}'",
    "obj : '{' obj_pairs '}'",
    "obj : '{' error '}'",
    "obj_pairs : obj_pairs_cs comma_opt",
    "obj_pairs_cs : obj_pair",
    "obj_pairs_cs : obj_pairs_cs ',' obj_pair",
    "obj_pair : obj_key ':' rxpr",
    "obj_key : ident",
    "obj_key : str",
    "obj_key : '[' rxpr ']'",
    "obj_key : T_FN",
    "obj_key : T_LET",
    "obj_key : T_PHP",
    "obj_key : T_TEST",
    "obj_key : T_ASSERT",
    "obj_key : T_TRUE",
    "obj_key : T_FALSE",
    "obj_key : T_NULL",
    "obj_key : T_IF",
    "obj_key : T_ELSIF",
    "obj_key : T_ELSE",
    "obj_key : T_TRY",
    "obj_key : T_THROW",
    "obj_key : T_CATCH",
    "obj_key : T_FINALLY",
    "obj_key : T_USE",
    "obj_key : T_MODULE",
    "obj_key : T_EXTERN",
    "obj_key : T_CLASS",
    "obj_key : T_TRAIT",
    "obj_key : T_IFACE",
    "obj_key : T_THIS",
    "obj_key : T_STATIC",
    "obj_key : T_CONST",
    "obj_key : T_FINAL",
    "obj_key : T_PUBLIC",
    "obj_key : T_PRIVATE",
    "obj_key : T_PROTECTED",
    "obj_key : T_ENUM",
    "obj_key : T_SWITCH",
    "obj_key : T_CASE",
    "obj_key : T_FOR",
    "obj_key : T_WHILE",
    "obj_key : T_DO",
    "obj_key : T_BREAK",
    "obj_key : T_CONTINUE",
    "obj_key : T_RETURN",
    "obj_key : T_SUPER",
    "obj_key : T_GOTO",
    "obj_key : T_REQUIRE",
    "obj_key : T_YIELD",
    "obj_key : T_GLOBAL",
    "obj_key : T_TINT",
    "obj_key : T_TBOOL",
    "obj_key : T_TFLOAT",
    "obj_key : T_TSTRING",
    "obj_key : T_TREGEXP",
    "obj_key : T_SEALED",
    "obj_key : T_INLINE",
    "obj_key : T_CFILE",
    "obj_key : T_CLINE",
    "obj_key : T_CCOLN",
    "obj_key : T_CFN",
    "obj_key : T_CCLASS",
    "obj_key : T_CMETHOD",
    "obj_key : T_CMODULE",
    "comma_opt : /* empty */",
    "comma_opt : ','"
  ];
  
  private function yytrace_newstate($state, $tokenId) 
  {
    $msg = '% State ' . $state. ', Lookahead ';
    
    if ($tokenId === self::TOKEN_NONE)
      $msg .= '--none--';
    else
      $msg .= self::$terminals[$tokenId];
    
    $this->trace($msg);
  }

  private function yytrace_read($tokenId) 
  {
    $this->trace('% Reading ' . self::$terminals[$tokenId]);
  }

  private function yytrace_shift($tokenId) 
  {
    $this->trace('% Shift ' . self::$terminals[$tokenId]);
  }

  private function yytrace_accept() 
  {
    $this->trace('% Accepted.');
  }

  private function yytrace_reduce($n) 
  {
    $this->trace('% Reduce by (' . $n . ') ' . self::$yyproduction[$n]);
  }

  private function yytrace_pop($state) 
  {
    $this->trace('% Recovering, uncovers state ' . $state);
  }

  private function yytrace_discard($tokenId) 
  {
    $this->trace('% Discard ' . self::$terminals[$tokenId]);
  }
  
  private function trace($msg)
  {
    $this->error_at(null, ERR_INFO, $msg);
  }
    
  private $yyval;
  private $yyastk;
  private $yysstk;
  private $yysp;
  private $yystate;
  private $yyloc; // current location
  
  private $lex;
  private $invalid = false;
  
  /**
   * returns the current location (last scanned token)
   * 
   * @return Location
   */
  public function loc()
  {
    if (!$this->yyloc)
      return new Location('<unknown>', new Position(0, 0));
    
    return $this->yyloc;
  }
  
  /**
   * consumes semicolons to avoid unnecessary empty-expressions 
   * 
   * @void
   */
  private function eat_semis()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_SEMI) {
      $num = 0;
      do {
        ++$num;
        $this->lex->skip();
        $peek = $this->lex->peek();
      } while ($peek->type === T_SEMI);

      $this->trace("% Consumed $num semicolon(s)");
    }
  }
  
  /**
   * parse function
   * 
   * @param  Lexer  $lex
   * @return Node
   */
  public function parse(Lexer $lex) 
  {
    $tokid = self::TOKEN_NONE;
    
    // lexer
    $this->lex = $lex;
    
    // stacks
    $this->yysstk = [ 0 ]; 
    $this->yyastk = [];
    
    // current state
    $yystate = 0;
    
    // error flag
    $yyerrflag = 0;

    // stack position
    $this->yysp = 0;
    
    // location stack
    $yylstk = [];

    for (;;) {
      $this->yytrace_newstate($yystate, $tokid);
      if (self::$yybase[$yystate] == 0)
        $yyn = self::$yydefault[$yystate];
      else {
        if ($tokid === self::TOKEN_NONE) {
          // Fetch the next token id from the lexer
          $token = $this->lex->next();
                    
          // invalid token (regexp-scan failed)
          if ($token->type === T_INVL) {
            $this->error_at($token->loc, ERR_ERROR, 'invalid source/regexp-literal');
            return null;
          }
          
          // map the lexer token id to the internally used token id's
          if ($token->type >= 0 && $token->type < self::TOKEN_MAP_SIZE)
            $tokid = self::$translate[$token->type];
          else {
            $this->error_at($token->loc, ERR_ERROR, 'invalid token %d -> %s', 
              $token->type, $token->value);
            return null;
          }        
          
          $this->yyloc = $token->loc;
          
          // store location
          $yylstk[$this->yysp] = $this->yyloc;
          
          $this->yytrace_read($tokid);
        } 

        if ((($yyn = self::$yybase[$yystate] + $tokid) >= 0
          && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid
          || ($yystate < self::YY2TBLSTATE
            && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + $tokid) >= 0
            && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid))
          && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT
        ) {
          /*
           * >= YYNLSTATE: shift and reduce
           * > 0: shift
           * = 0: accept
           * < 0: reduce
           * = -YYUNEXPECTED: error
           */
          if ($yyn > 0) {
            /* shift */
            $this->yytrace_shift($tokid);
            
            $this->yysp++;
            
            $this->yysstk[$this->yysp] = $yystate = $yyn;
            $this->yyastk[$this->yysp] = $token;
            
            // store location
            $yylstk[$this->yysp] = $this->yyloc;
            
            $tokid = self::TOKEN_NONE;
            
            if ($yyerrflag > 0)
              $yyerrflag--;
            
            if ($yyn < self::YYNLSTATES)
              continue;

            /* $yyn >= YYNLSTATES means shift-and-reduce */
            $yyn -= self::YYNLSTATES;
          } else
            $yyn = -$yyn;
        } else
          $yyn = self::$yydefault[$yystate];
      }
      
      for (;;) {
        /* reduce/error */
        if ($yyn == 0) {
          /* accept */
          if ($this->invalid === true)
            return null;
          $this->yytrace_accept();
          return $this->yyval;
        } elseif ($yyn != self::YYUNEXPECTED) {
          /* reduce */
          $this->yytrace_reduce($yyn);
//ifnot -t
          $this->{'yyn' . $yyn}();
//endif          
          /* Goto - shift nonterminal */
          $yylen = self::$yylen[$yyn];
          $yyloc = $yylstk[$this->yysp - $yylen];
          
          $this->yysp -= $yylen;
          
          $yyn = self::$yylhs[$yyn];
          
          if (($yyp = self::$yygbase[$yyn]
           + $this->yysstk[$this->yysp]) >= 0
            && $yyp < self::YYGLAST && self::$yygcheck[$yyp] == $yyn)
            $yystate = self::$yygoto[$yyp];
          else
            $yystate = self::$yygdefault[$yyn];
          
          $this->yysp++;
          
          $this->yysstk[$this->yysp] = $yystate;
          $this->yyastk[$this->yysp] = $this->yyval;
          
          // set location if a real node was produced by $yyn
          if ($this->yyval instanceof Node)
            $this->yyval->loc = $yyloc;
          
          // store position
          $yylstk[$this->yysp] = $this->yyloc;
          
        } else {
          /* error */
          $this->invalid = true;
                    
          switch ($yyerrflag) {
            case 0:
              // let the lexer know
              $this->lex->sync = true;
              
              $expa = [];
              $expn = 0;
              $base = self::$yybase[$yystate];
              
              for ($i = 0; $i < self::TOKEN_MAP_SIZE; ++$i) {
                $n = $base + $i;
                if ($n >= 0 && $n < self::YYLAST && self::$yycheck[$n] == $i
                  || $yystate < self::YY2TBLSTATE
                  && ($n = self::$yybase[$yystate + self::YYNLSTATES] + $i)
                  && $n < self::YYLAST && ($n < 0 || self::$yycheck[$n] == $i)
                ) {
                  if ($n >= 0 && self::$yyaction[$n] != self::YYUNEXPECTED) {
                    if ($expn === 4) {
                      /* Too many expected tokens */
                      $expa = null;
                      $expn = 0;
                      break;
                    }

                    $expa[] = self::$terminals[$i];
                    $expn++;
                  }
                }
              }

              $exps = 'unexpected ' . self::$terminals[$tokid];
              
              if ($expn > 0) {
                $last = array_pop($expa);
                $exps .= ', expected ';
                
                if ($expn > 1)
                  $exps .= implode(', ', $expa) . ' or ';
                
                $exps .= $last;
                unset ($expa, $last);
              }
              
              $this->error_at($this->yyloc, ERR_ERROR, $exps);              
            case 1:
            case 2:
              $yyerrflag = 3;  
              
              while (!(($yyn = self::$yybase[$yystate] + self::YYINTERRTOK) >= 0
                && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK
                || ($yystate < self::YY2TBLSTATE
                  && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + self::YYINTERRTOK) >= 0
                  && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK))
              ) {  
                if ($this->yysp <= 0) 
                  return null;
                
                $yystate = $this->yysstk[--$this->yysp];              
                $this->yytrace_pop($yystate);
              }
              
              $yyn = self::$yyaction[$yyn];
              $this->yytrace_shift(self::YYINTERRTOK);
              $this->yysstk[++$this->yysp] = $yystate = $yyn;
              break;
            
            case 3:
              $this->yytrace_discard($tokid);
              if ($tokid === 0) 
                return null;
              
              $tokid = -1;
              break;
          }
        }

        if ($yystate < self::YYNLSTATES)
          break;
        
        /* >= YYNLSTATES means shift-and-reduce */
        $yyn = $yystate - self::YYNLSTATES;
      }
    }
  }


  private function yyn0() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn1() 
  {
     $this->yyval = new Unit(null); 
  }


  private function yyn2() 
  {
     $this->yyval = new Unit($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn3() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn4() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn5() 
  {
     $this->yyval = new Module($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn6() 
  {
     $this->yyval = new Module($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); $this->eat_semis(); 
  }


  private function yyn7() 
  {
     $this->yyval = new Module(null, $this->yyastk[$this->yysp-(4-3)]); $this->eat_semis(); 
  }


  private function yyn8() 
  {
     $this->yyval = new Program($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn9() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn10() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn11() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn12() 
  {
     $this->yyval = null; 
  }


  private function yyn13() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn14() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn15() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn16() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn17() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn18() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn19() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn20() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn21() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn22() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn23() 
  {
     $this->yyval = null; 
  }


  private function yyn24() 
  {
     $this->yyval = null; 
  }


  private function yyn25() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn26() 
  {
     $this->yyval = new RequireDecl(false, $this->yyastk[$this->yysp-(3-2)]); $this->eat_semis(); 
  }


  private function yyn27() 
  {
     $this->yyval = new RequireDecl(true, $this->yyastk[$this->yysp-(4-3)]); $this->eat_semis(); 
  }


  private function yyn28() 
  {
     $this->yyval = new AttrDecl($this->yyastk[$this->yysp-(4-2)]); $this->eat_semis(); 
  }


  private function yyn29() 
  {
     $this->yyval = new CompAttr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn30() 
  {
     $this->yyval = new TopexAttr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn31() 
  {
     $this->yyval = new AttrDef($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn32() 
  {
     $this->yyval = new AttrDef($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn33() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn34() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn35() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn36() 
  {
     $this->yyval = new UseDecl($this->yyastk[$this->yysp-(3-2)]); $this->eat_semis(); 
  }


  private function yyn37() 
  {
     $this->yyval = new UseDecl(new UseAlias($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)])); $this->eat_semis(); 
  }


  private function yyn38() 
  {
     $this->yyval = new UseDecl(new UseUnpack($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)])); $this->eat_semis(); 
  }


  private function yyn39() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn40() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn41() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn42() 
  {
     $this->yyval = new UseAlias($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn43() 
  {
     $this->yyval = new UseUnpack($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn44() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn45() 
  {
     $this->yyval = null; 
  }


  private function yyn46() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn47() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn48() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn49() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn50() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn51() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn52() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn53() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn54() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn55() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn56() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn57() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn58() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn59() 
  {
     $this->yyval = new EnumDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); $this->eat_semis(); 
  }


  private function yyn60() 
  {
     $this->yyval = null; 
  }


  private function yyn61() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn62() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn63() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn64() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn65() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn66() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn67() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn68() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn69() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn70() 
  {
     $this->yyval = new ArrDestr($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn71() 
  {
     $this->yyval = new ObjDestr($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn72() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn73() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn74() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn75() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn76() 
  {
     $this->yyval = new ClassDecl($this->yyastk[$this->yysp-(8-1)], $this->yyastk[$this->yysp-(8-3)], $this->yyastk[$this->yysp-(8-4)], $this->yyastk[$this->yysp-(8-5)], $this->yyastk[$this->yysp-(8-7)]); $this->eat_semis(); 
  }


  private function yyn77() 
  {
     $this->yyval = new ClassDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-5)], null); $this->eat_semis(); 
  }


  private function yyn78() 
  {
     $this->yyval = null; 
  }


  private function yyn79() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn80() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn81() 
  {
     $this->yyval = null; 
  }


  private function yyn82() 
  {
     $this->yyval = null; 
  }


  private function yyn83() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn84() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn85() 
  {
     $this->yyval = null; 
  }


  private function yyn86() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn87() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn88() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn89() 
  {
     $this->yyval = null; 
  }


  private function yyn90() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn91() 
  {
     $this->yyval = null; 
  }


  private function yyn92() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn93() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn94() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn95() 
  {
     $this->yyval = null; 
  }


  private function yyn96() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn97() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn98() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn99() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn100() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn101() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn102() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn103() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn104() 
  {
     $this->yyval = new CtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); $this->eat_semis(); 
  }


  private function yyn105() 
  {
     $this->yyval = new CtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn106() 
  {
     $this->yyval = new DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); $this->eat_semis(); 
  }


  private function yyn107() 
  {
     $this->yyval = new DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn108() 
  {
     $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn109() 
  {
     $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); $this->eat_semis(); 
  }


  private function yyn110() 
  {
     $this->yyval = new SetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn111() 
  {
     $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); $this->eat_semis(); 
  }


  private function yyn112() 
  {
     $this->yyval = new NestedMods($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn113() 
  {
     $this->yyval = new TraitUse($this->yyastk[$this->yysp-(3-2)], null, null); $this->eat_semis(); 
  }


  private function yyn114() 
  {
     $this->yyval = new TraitUse($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], null); $this->eat_semis(); 
  }


  private function yyn115() 
  {
     $this->yyval = new TraitUse($this->yyastk[$this->yysp-(5-2)], null, $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn116() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn117() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn118() 
  {
     $this->yyval = new TraitItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, null); $this->eat_semis(); 
  }


  private function yyn119() 
  {
     $this->yyval = new TraitItem($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-6)]); $this->eat_semis(); 
  }


  private function yyn120() 
  {
     $this->yyval = new TraitDecl($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); $this->eat_semis(); 
  }


  private function yyn121() 
  {
     $this->yyval = new TraitDecl($this->yyastk[$this->yysp-(3-2)], null); $this->eat_semis(); 
  }


  private function yyn122() 
  {
     $this->yyval = new IfaceDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); $this->eat_semis(); 
  }


  private function yyn123() 
  {
     $this->yyval = new IfaceDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null); $this->eat_semis(); 
  }


  private function yyn124() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn125() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn126() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn127() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn128() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn129() 
  {
     $this->yyval = null; 
  }


  private function yyn130() 
  {
     $this->yyval = null; 
  }


  private function yyn131() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn132() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn133() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn134() 
  {
     $this->yyval = new LetDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); $this->eat_semis(); 
  }


  private function yyn135() 
  {
     $this->yyval = new VarDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); $this->eat_semis(); 
  }


  private function yyn136() 
  {
     $this->yyval = new LetDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn137() 
  {
     $this->yyval = new VarDecl($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn138() 
  {
     $this->yyval = new FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn139() 
  {
     $this->yyval = new FnDecl($this->yyastk[$this->yysp-(7-1)], $this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-6)]); $this->eat_semis(); 
  }


  private function yyn140() 
  {
     $this->yyval = new FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], null); $this->eat_semis(); 
  }


  private function yyn141() 
  {
     $this->yyval = new FnDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null, null); $this->eat_semis(); 
  }


  private function yyn142() 
  {
     $this->yyval = new FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn143() 
  {
     $this->yyval = new FnExpr($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn144() 
  {
     $this->yyval = new FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn145() 
  {
     $this->yyval = new FnExpr(null, $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn146() 
  {
     $this->yyval = new FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn147() 
  {
     $this->yyval = new FnExpr($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn148() 
  {
     $this->yyval = new FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn149() 
  {
     $this->yyval = new FnExpr(null, $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn150() 
  {
     $this->yyval = null; 
  }


  private function yyn151() 
  {
     $this->yyval = null; 
  }


  private function yyn152() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn153() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn154() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn155() 
  {
     $this->yyval = new Param(null, $this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn156() 
  {
     $this->yyval = new Param(null, $this->yyastk[$this->yysp-(2-1)], null, true); 
  }


  private function yyn157() 
  {
     $this->yyval = new Param(null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn158() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn159() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn160() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn161() 
  {
     $this->yyval = new ThisParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn162() 
  {
     $this->yyval = new ThisParam($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn163() 
  {
     $this->yyval = new RestParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn164() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn165() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn166() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn167() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn168() 
  {
     $this->yyval = new DoStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn169() 
  {
     $this->yyval = new IfStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn170() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn171() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn172() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn173() 
  {
     $this->yyval = new ForStmt($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], null, $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn174() 
  {
     $this->yyval = new ForStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn175() 
  {
     $this->yyval = null; 
  }


  private function yyn176() 
  {
     $this->yyval = new ForStmt(null, null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn177() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(2-2)], null, null); 
  }


  private function yyn178() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn179() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(3-2)], null, $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn180() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn181() 
  {
     $this->yyval = new PhpStmt($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn182() 
  {
     $this->yyval = new GotoStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn183() 
  {
     $this->yyval = new TestStmt(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn184() 
  {
     $this->yyval = new TestStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn185() 
  {
     $this->yyval = new BreakStmt(null); 
  }


  private function yyn186() 
  {
     $this->yyval = new BreakStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn187() 
  {
     $this->yyval = new ContinueStmt(null); 
  }


  private function yyn188() 
  {
     $this->yyval = new ContinueStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn189() 
  {
     $this->yyval = new ThrowStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn190() 
  {
     $this->yyval = new WhileStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn191() 
  {
     $this->yyval = new YieldStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn192() 
  {
     $this->yyval = new AssertStmt($this->yyastk[$this->yysp-(3-2)], null); 
  }


  private function yyn193() 
  {
     $this->yyval = new AssertStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn194() 
  {
     $this->yyval = new SwitchStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn195() 
  {
     $this->yyval = new ReturnStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn196() 
  {
     $this->yyval = new LabeledStmt($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn197() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn198() 
  {
     $this->yyval = null; 
  }


  private function yyn199() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn200() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn201() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn202() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn203() 
  {
     $this->yyval = null; 
  }


  private function yyn204() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn205() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn206() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn207() 
  {
     $this->yyval = new ElsifItem($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn208() 
  {
     $this->yyval = null; 
  }


  private function yyn209() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn210() 
  {
     $this->yyval = new ElseItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn211() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn212() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn213() 
  {
     $this->yyval = new CatchItem(null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn214() 
  {
     $this->yyval = new CatchItem($this->yyastk[$this->yysp-(5-3)], null, $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn215() 
  {
     $this->yyval = new CatchItem($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn216() 
  {
     $this->yyval = null; 
  }


  private function yyn217() 
  {
     $this->yyval = new FinallyItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn218() 
  {
     $this->yyval = null; 
  }


  private function yyn219() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn220() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn221() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn222() 
  {
     $this->yyval = new PhpUse($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn223() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn224() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn225() 
  {
     $this->yyval = new PhpUseItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn226() 
  {
     $this->yyval = new PhpUseItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn227() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn228() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn229() 
  {
     new CaseItem($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn230() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn231() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn232() 
  {
     $this->yyval = new CaseLabel($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn233() 
  {
     $this->yyval = new CaseLabel(null); 
  }


  private function yyn234() 
  {
     $this->yyval = new Block(null); 
  }


  private function yyn235() 
  {
     $this->yyval = new Block($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn236() 
  {
     $this->yyval = null; 
  }


  private function yyn237() 
  {
     $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); $this->eat_semis(); 
  }


  private function yyn238() 
  {
     $this->yyval = new ExprStmt(null); $this->eat_semis(); 
  }


  private function yyn239() 
  {
     $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn240() 
  {
     $this->yyval = new ExprStmt(null); 
  }


  private function yyn241() 
  {
     $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn242() 
  {
     $this->yyval = new ExprStmt(null); 
  }


  private function yyn243() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn244() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn245() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn246() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn247() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn248() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn249() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn250() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn251() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn252() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn253() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn254() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn255() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn256() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn257() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn258() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn259() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn260() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn261() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn262() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn263() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn264() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn265() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn266() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn267() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn268() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn269() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn270() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn271() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn272() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn273() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn274() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn275() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn276() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn277() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn278() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn279() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn280() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn281() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn282() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn283() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn284() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn285() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn286() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn287() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn288() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn289() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn290() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn291() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn292() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn293() 
  {
     $this->yyval = new MemberExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn294() 
  {
     $this->yyval = new MemberExpr(true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn295() 
  {
     $this->yyval = null; 
  }


  private function yyn296() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn297() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn298() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn299() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn300() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn301() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn302() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn303() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn304() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn305() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn306() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn307() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn308() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn309() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn310() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn311() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn312() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn313() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn314() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn315() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn316() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn317() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn318() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn319() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn320() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn321() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn322() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn323() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn324() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn325() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn326() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn327() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn328() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn329() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn330() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn331() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn332() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn333() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn334() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn335() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn336() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn337() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn338() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn339() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn340() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn341() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn342() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn343() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn344() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn345() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn346() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn347() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn348() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn349() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn350() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn351() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn352() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn353() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn354() 
  {
     $this->yyval = new MemberExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn355() 
  {
     $this->yyval = new MemberExpr(true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn356() 
  {
     $this->yyval = null; 
  }


  private function yyn357() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn358() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn359() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn360() 
  {
     $this->yyval = new YieldExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn361() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn362() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn363() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn364() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn365() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn366() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn367() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn368() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn369() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn370() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn371() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn372() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn373() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn374() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn375() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn376() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn377() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn378() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn379() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn380() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn381() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn382() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn383() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn384() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn385() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn386() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn387() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn388() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn389() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn390() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn391() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn392() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn393() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn394() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn395() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn396() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn397() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn398() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn399() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn400() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn401() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn402() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn403() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn404() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn405() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn406() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn407() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn408() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn409() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn410() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn411() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn412() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn413() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn414() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn415() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn416() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn417() 
  {
     $this->yyval = new MemberExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn418() 
  {
     $this->yyval = new MemberExpr(true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn419() 
  {
     $this->yyval = null; 
  }


  private function yyn420() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn421() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn422() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn423() 
  {
     $this->yyval = new YieldExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn424() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn425() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn426() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn427() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn428() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn429() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn430() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn431() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn432() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn433() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn434() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn435() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn436() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn437() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-2)]); $this->error_at($this->yyastk[$this->yysp-(4-1)]->loc, ERR_WARN, 'legacy cast, use `expr as type` instead'); 
  }


  private function yyn438() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-2)]); $this->error_at($this->yyastk[$this->yysp-(4-1)]->loc, ERR_WARN, 'legacy cast, use `expr as type` instead'); 
  }


  private function yyn439() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn440() 
  {
     $this->yyval = null; 
  }


  private function yyn441() 
  {
     $this->yyval = null; 
  }


  private function yyn442() 
  {
     $this->yyval = null; 
  }


  private function yyn443() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn444() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn445() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn446() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn447() 
  {
     $this->yyval = new NamedArg($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn448() 
  {
     $this->yyval = new RestArg($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn449() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn450() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn451() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn452() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn453() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn454() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn455() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn456() 
  {
     $this->lex->scan_regexp($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn457() 
  {
     $this->yyval = new RegexpLit($this->yyastk[$this->yysp-(3-3)]->value); 
  }


  private function yyn458() 
  {
     $this->yyval = new Name($this->yyastk[$this->yysp-(1-1)], false); 
  }


  private function yyn459() 
  {
     $this->yyval = new Name($this->yyastk[$this->yysp-(2-2)], true); 
  }


  private function yyn460() 
  {
     $this->yyastk[$this->yysp-(3-1)]->add($this->yyastk[$this->yysp-(3-3)]); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn461() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn462() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn463() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn464() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn465() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn466() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn467() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn468() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn469() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn470() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn471() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn472() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn473() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn474() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn475() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn476() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn477() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn478() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn479() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn480() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn481() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn482() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn483() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn484() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn485() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn486() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn487() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn488() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn489() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn490() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn491() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn492() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn493() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn494() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn495() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn496() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn497() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn498() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn499() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn500() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn501() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn502() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn503() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn504() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn505() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn506() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn507() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn508() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn509() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn510() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn511() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn512() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn513() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn514() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn515() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn516() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn517() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn518() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn519() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn520() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn521() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn522() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn523() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn524() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn525() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn526() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn527() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn528() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn529() 
  {
     $this->yyval = new ThisExpr; 
  }


  private function yyn530() 
  {
     $this->yyval = new SuperExpr; 
  }


  private function yyn531() 
  {
     $this->yyval = new NullLit; 
  }


  private function yyn532() 
  {
     $this->yyval = new TrueLit; 
  }


  private function yyn533() 
  {
     $this->yyval = new FalseLit; 
  }


  private function yyn534() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->file, 'c'); 
  }


  private function yyn535() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->line, 'c'); 
  }


  private function yyn536() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->coln, 'c'); 
  }


  private function yyn537() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn538() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn539() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn540() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn541() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->flag); 
  }


  private function yyn542() 
  {
     $this->yyval = new LNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn543() 
  {
     $this->yyval = new DNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn544() 
  {
     $this->yyval = new SNumLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->suffix); 
  }


  private function yyn545() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn546() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn547() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn548() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn549() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn550() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn551() 
  {
     $this->yyval = new ArrayLit(null); 
  }


  private function yyn552() 
  {
     $this->yyval = new ArrayGen($this->yyastk[$this->yysp-(9-2)], $this->yyastk[$this->yysp-(9-5)], $this->yyastk[$this->yysp-(9-7)]); 
  }


  private function yyn553() 
  {
     $this->yyval = new ArrayLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn554() 
  {
     $this->yyval = null; 
  }


  private function yyn555() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn556() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn557() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn558() 
  {
     $this->yyval = new SpreadExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn559() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn560() 
  {
     $this->yyval = new ObjectLit(null); 
  }


  private function yyn561() 
  {
     $this->yyval = new ObjectLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn562() 
  {
     $this->yyval = null; 
  }


  private function yyn563() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn564() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn565() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn566() 
  {
     $this->yyval = new ObjectPair($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn567() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn568() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn569() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn570() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn571() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn572() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn573() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn574() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn575() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn576() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn577() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn578() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn579() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn580() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn581() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn582() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn583() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn584() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn585() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn586() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn587() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn588() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn589() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn590() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn591() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn592() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn593() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn594() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn595() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn596() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn597() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn598() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn599() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn600() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn601() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn602() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn603() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn604() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn605() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn606() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn607() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn608() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn609() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn610() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn611() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn612() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn613() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn614() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn615() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn616() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn617() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn618() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn619() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn620() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn621() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn622() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn623() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn624() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn625() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn626() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn627() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }

}

