<?php

/* this parser-skeleton is based on the awesome 
   work of nikic (https://github.com/nikic) 
   with some extensions (error-recovery and location-tracking) */

/**
 * This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *   the grammar file gen/yy-parser-tpl.y
 *   the parser skeleton gen/kymacc.php.parser
 *
 * The skeleton for this parser was written by Moriyoshi Koizumi and is based on
 * the work by Masato Bito and is in the PUBLIC DOMAIN.
 */

namespace phs;


const YYERRTOK = 256;
const T_PRINT = 257;
const T_YIELD = 258;
const T_APLUS = 259;
const T_AMINUS = 260;
const T_AMUL = 261;
const T_ADIV = 262;
const T_AMOD = 263;
const T_APOW = 264;
const T_ACONCAT = 265;
const T_ABIT_OR = 266;
const T_ABIT_AND = 267;
const T_ABIT_XOR = 268;
const T_ABOOL_OR = 269;
const T_ABOOL_AND = 270;
const T_ABOOL_XOR = 271;
const T_ASHIFT_L = 272;
const T_ASHIFT_R = 273;
const T_RANGE = 274;
const T_BOOL_OR = 275;
const T_BOOL_XOR = 276;
const T_BOOL_AND = 277;
const T_EQ = 278;
const T_NEQ = 279;
const T_IN = 280;
const T_IS = 281;
const T_ISNT = 282;
const T_GTE = 283;
const T_LTE = 284;
const T_SL = 285;
const T_SR = 286;
const T_POW = 287;
const T_AS = 288;
const T_REST = 289;
const T_DEL = 290;
const T_INC = 291;
const T_DEC = 292;
const T_NEW = 293;
const T_ARR = 294;
const T_DDDOT = 295;
const T_FN = 296;
const T_LET = 297;
const T_USE = 298;
const T_ENUM = 299;
const T_CLASS = 300;
const T_TRAIT = 301;
const T_IFACE = 302;
const T_MODULE = 303;
const T_REQUIRE = 304;
const T_IDENT = 305;
const T_LNUM = 306;
const T_DNUM = 307;
const T_SNUM = 308;
const T_STRING = 309;
const T_REGEXP = 310;
const T_TRUE = 311;
const T_FALSE = 312;
const T_NULL = 313;
const T_THIS = 314;
const T_SUPER = 315;
const T_GET = 316;
const T_SET = 317;
const T_DO = 318;
const T_IF = 319;
const T_ELSIF = 320;
const T_ELSE = 321;
const T_FOR = 322;
const T_TRY = 323;
const T_GOTO = 324;
const T_BREAK = 325;
const T_CONTINUE = 326;
const T_THROW = 327;
const T_CATCH = 328;
const T_FINALLY = 329;
const T_WHILE = 330;
const T_ASSERT = 331;
const T_SWITCH = 332;
const T_CASE = 333;
const T_DEFAULT = 334;
const T_RETURN = 335;
const T_CONST = 336;
const T_FINAL = 337;
const T_GLOBAL = 338;
const T_STATIC = 339;
const T_EXTERN = 340;
const T_PUBLIC = 341;
const T_PRIVATE = 342;
const T_PROTECTED = 343;
const T_SEALED = 344;
const T_INLINE = 345;
const T_PHP = 346;
const T_TEST = 347;
const T_CDIR = 348;
const T_CFILE = 349;
const T_CLINE = 350;
const T_CCOLN = 351;
const T_CFN = 352;
const T_CCLASS = 353;
const T_CMETHOD = 354;
const T_CMODULE = 355;
const T_NL = 356;
const T_TINT = 357;
const T_TBOOL = 358;
const T_TFLOAT = 359;
const T_TSTRING = 360;
const T_TREGEXP = 361;
const T_INVL = 362;
const T_END = 363;
const T_SYNC = 364;

require_once 'context.php';
require_once 'parser_base.php';

require_once 'ast.php';
require_once 'glob.php';
require_once 'lexer.php';

use phs\ast\Node;
use phs\ast\Expr;
use phs\ast\Unit;
use phs\ast\Module;
use phs\ast\Program;
use phs\ast\LabelDecl;
use phs\ast\RequireDecl;
use phs\ast\AttrDecl;
use phs\ast\CompAttr;
use phs\ast\TopexAttr;
use phs\ast\AttrDef;
use phs\ast\AttrVal;
use phs\ast\UseDecl;
use phs\ast\UseAlias;
use phs\ast\UseUnpack;
use phs\ast\EnumDecl;
use phs\ast\VarItem;
use phs\ast\ArrDestr;
use phs\ast\ObjDestr;
use phs\ast\ClassDecl;
use phs\ast\CtorDecl;
use phs\ast\DtorDecl;
use phs\ast\GetterDecl;
use phs\ast\SetterDecl;
use phs\ast\NestedMods;
use phs\ast\TraitUse;
use phs\ast\TraitItem;
use phs\ast\TraitDecl;
use phs\ast\IfaceDecl;
use phs\ast\LetDecl;
use phs\ast\VarDecl;
use phs\ast\FnDecl;
use phs\ast\FnExpr;
use phs\ast\Block;
use phs\ast\ReturnStmt;
use phs\ast\Param;
use phs\ast\ThisParam;
use phs\ast\RestParam;
use phs\ast\DoStmt;
use phs\ast\IfStmt;
use phs\ast\ForInStmt;
use phs\ast\ForStmt;
use phs\ast\TryStmt;
use phs\ast\PhpStmt;
use phs\ast\GotoStmt;
use phs\ast\TestStmt;
use phs\ast\BreakStmt;
use phs\ast\ContinueStmt;
use phs\ast\ThrowStmt;
use phs\ast\WhileStmt;
use phs\ast\AssertStmt;
use phs\ast\SwitchStmt;
use phs\ast\ElsifItem;
use phs\ast\ElseItem;
use phs\ast\CatchItem;
use phs\ast\FinallyItem;
use phs\ast\PhpUse;
use phs\ast\PhpUseItem;
use phs\ast\CaseItem;
use phs\ast\CaseLabel;
use phs\ast\ExprStmt;
use phs\ast\BinExpr;
use phs\ast\CheckExpr;
use phs\ast\CastExpr;
use phs\ast\UpdateExpr;
use phs\ast\AssignExpr;
use phs\ast\MemberExpr;
use phs\ast\CondExpr;
use phs\ast\CallExpr;
use phs\ast\YieldExpr;
use phs\ast\UnaryExpr;
use phs\ast\NewExpr;
use phs\ast\DelExpr;
use phs\ast\PrintExpr;
use phs\ast\NamedArg;
use phs\ast\RestArg;
use phs\ast\RegexpLit;
use phs\ast\Name;
use phs\ast\TypeId;
use phs\ast\Ident;
use phs\ast\ThisExpr;
use phs\ast\SuperExpr;
use phs\ast\NullLit;
use phs\ast\TrueLit;
use phs\ast\FalseLit;
use phs\ast\StrLit;
use phs\ast\EngineConst;
use phs\ast\LNumLit;
use phs\ast\DNumLit;
use phs\ast\SNumLit;
use phs\ast\ArrLit;
use phs\ast\ArrGen;
use phs\ast\SpreadExpr;
use phs\ast\ObjLit;
use phs\ast\ObjPair;


class Parser extends ParserBase
{
  const TOKEN_NONE    = -1;
  const TOKEN_INVALID = 134;

  const TOKEN_MAP_SIZE = 365;

  const YYLAST       = 1611;
  const YY2TBLSTATE  = 597;
  const YYGLAST      = 1308;
  const YYNLSTATES   = 675;
  const YYINTERRTOK  = 1;
  const YYUNEXPECTED = 32767;
  const YYDEFAULT    = -32766;

  /* @var array Map of token ids to their respective names */
  private static $terminals = [
    "EOF",
    "error",
    "','",
    "T_PRINT",
    "T_YIELD",
    "T_APLUS",
    "T_AMINUS",
    "T_AMUL",
    "T_ADIV",
    "T_AMOD",
    "T_APOW",
    "T_ACONCAT",
    "T_ABIT_OR",
    "T_ABIT_AND",
    "T_ABIT_XOR",
    "T_ABOOL_OR",
    "T_ABOOL_AND",
    "T_ABOOL_XOR",
    "T_ASHIFT_L",
    "T_ASHIFT_R",
    "'='",
    "T_RANGE",
    "'?'",
    "':'",
    "T_BOOL_OR",
    "T_BOOL_XOR",
    "T_BOOL_AND",
    "'|'",
    "'^'",
    "'&'",
    "T_EQ",
    "T_NEQ",
    "T_IN",
    "T_IS",
    "T_ISNT",
    "T_GTE",
    "T_LTE",
    "'>'",
    "'<'",
    "T_SL",
    "T_SR",
    "'+'",
    "'-'",
    "'~'",
    "'*'",
    "'/'",
    "'%'",
    "T_POW",
    "T_AS",
    "T_REST",
    "T_DEL",
    "T_INC",
    "T_DEC",
    "'!'",
    "T_NEW",
    "'.'",
    "'['",
    "']'",
    "'('",
    "')'",
    "T_ARR",
    "T_DDDOT",
    "T_FN",
    "T_LET",
    "T_USE",
    "T_ENUM",
    "T_CLASS",
    "T_TRAIT",
    "T_IFACE",
    "T_MODULE",
    "T_REQUIRE",
    "T_IDENT",
    "T_LNUM",
    "T_DNUM",
    "T_SNUM",
    "T_STRING",
    "T_REGEXP",
    "T_TRUE",
    "T_FALSE",
    "T_NULL",
    "T_THIS",
    "T_SUPER",
    "T_GET",
    "T_SET",
    "T_DO",
    "T_IF",
    "T_ELSIF",
    "T_ELSE",
    "T_FOR",
    "T_TRY",
    "T_GOTO",
    "T_BREAK",
    "T_CONTINUE",
    "T_THROW",
    "T_CATCH",
    "T_FINALLY",
    "T_WHILE",
    "T_ASSERT",
    "T_SWITCH",
    "T_CASE",
    "T_DEFAULT",
    "T_RETURN",
    "T_CONST",
    "T_FINAL",
    "T_GLOBAL",
    "T_STATIC",
    "T_EXTERN",
    "T_PUBLIC",
    "T_PRIVATE",
    "T_PROTECTED",
    "T_SEALED",
    "T_INLINE",
    "T_PHP",
    "T_TEST",
    "T_CDIR",
    "T_CFILE",
    "T_CLINE",
    "T_CCOLN",
    "T_CFN",
    "T_CCLASS",
    "T_CMETHOD",
    "T_CMODULE",
    "T_NL",
    "T_TINT",
    "T_TBOOL",
    "T_TFLOAT",
    "T_TSTRING",
    "T_TREGEXP",
    "T_END",
    "T_SYNC",
    "';'",
    "'@'",
    "'{'",
    "'}'"
    , "???"
  ];

  /* @var array Map which translates lexer tokens to internal tokens */
  private static $translate = [
        0,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,   53,  134,  134,  134,   46,   29,  134,
       58,   59,   44,   41,    2,   42,   55,   45,  134,  134,
      134,  134,  134,  134,  134,  134,  134,  134,   23,  130,
       38,   20,   37,   22,  131,  134,  134,  134,  134,  134,
      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,   56,  134,   57,   28,  134,  134,  134,  134,  134,
      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,  132,   27,  133,   43,  134,  134,  134,
      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,  134,  134,  134,    1,    3,    4,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   21,   24,   25,   26,   30,   31,
       32,   33,   34,   35,   36,   39,   40,   47,   48,   49,
       50,   51,   52,   54,   60,   61,   62,   63,   64,   65,
       66,   67,   68,   69,   70,   71,   72,   73,   74,   75,
       76,   77,   78,   79,   80,   81,   82,   83,   84,   85,
       86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
       96,   97,   98,   99,  100,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
      116,  117,  118,  119,  120,  121,  122,  123,  124,  125,
      126,  127,  134,  128,  129
  ];

  private static $yyaction = [
     1316,    0,  212,  213,  214,  215,  216,  217,  218,  219,
      220,  221,  222,  223,  224,  225,  226,  227,  228,  146,
      437,  229,  230,  231,  232,  233,  234,  235,  236,  237,
      416,  417,  238,  239,  240,  241,  242,  243,  244,  245,
      246,  247,  248,  249,  250,  418,  307,  421, 1027, 1028,
     1094, 1095,   16,  147,  328,  136,  842,-32766, 1276, 1277,
     1291, 1304, 1294, 1295, 1296, 1292, 1315, 1172,-32766,-32766,
      636, 1247, 1217, 1281, 1282, 1283, 1297, 1313, 1173, 1174,
     1309, 1284, 1285, 1286, 1307, 1287, 1314, 1310, 1311, 1288,
     1289, 1290, 1308, 1280, 1305, 1306,  438, 1312, 1299, 1300,
     1317, 1298, 1293, 1301, 1302, 1303, 1323, 1324, 1278, 1279,
     1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,  615, 1318,
     1319, 1320, 1321, 1322,-32766,-32766,-32766,-32766,  211, 1172,
     1176, 1177, 1191, 1204, 1194, 1195, 1196, 1192, 1216, 1172,
     1173, 1174,  244,  245,  246, 1181, 1182, 1183, 1197, 1214,
     1173, 1174, 1210, 1184, 1185, 1186, 1208, 1187, 1215, 1211,
     1212, 1188, 1189, 1190, 1209, 1180, 1205, 1206, 1207, 1213,
     1199, 1200, 1218, 1198, 1193, 1201, 1202, 1203, 1224, 1225,
     1178, 1179, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
      497, 1219, 1220, 1221, 1222, 1223,   -6,  542,  624,  151,
      152,  291,  292,  293,  294,  639,  419,  420,  295,  296,
      297,  298,  299,  300,  301,  302,  303,  304,  305,  306,
      307,  421,  809,  662, 1094, 1095,  922,  310,   18,  150,
      149,  136,  287,  288,  289,  290,  628,  153,  154,  155,
     1167, 1168, 1169, 1170, 1171,  644,  496,  156,  157,  158,
      341,  643, 1167, 1168, 1169, 1170, 1171,  311,  -50,  -50,
      452,  -50,  -50,  498,  499,  445,  141,  516,  437,   -1,
      542,  309,  151,  152,  494,  304,  305,  306,  307,  421,
       20,  577, 1094, 1095,  535,  578,  500,  461,  462,  159,
      615,  308,  579,  160,  580, -163,  590,  142,  729,  730,
      731,  732,  738,  733,  734,  735,  736,  737,  608,  529,
      153,  154,  155,  324,  171,  839,  288,  289,  290,  496,
      156,  157,  158,  341,  700,  384,  924,  456,    9,-32766,
     -157,  -50,  -50,  452,  -50,  -50,  498,  499,  444,  141,
    -32766,-32766,  613,  542,  386,  151,  152,  402,  315,  789,
      833,  401, -163,   20,  577,  927,    6,  535,  578,  500,
      461,  462,  159,  495,  635,  579,  160,  580, 1266,  888,
      142,  729,  730,  731,  732,  738,  733,  734,  735,  736,
      737,  608,  529,  153,  154,  155,  441, -157,  497,  887,
      169,  791,  496,  156,  157,  158,  341,  700, 1257,  924,
      456,    9,  908,  878,  -50,  -50,  452,  -50,  -50,  498,
      499,  445,  141,  505,   18,  150,  542,  136,  151,  152,
      323,  603,-32766,-32766,-32766,  604,   20,  577,  640,  794,
      535,  578,  500,  461,  462,  159,  626,  383,  579,  160,
      580,  663,  923,  142,  729,  730,  731,  732,  738,  733,
      734,  735,  736,  737,  608,  529,  153,  154,  155,    1,
      513,  325,  519,  836,   14,  496,  156,  157,  158,  341,
      700,  512,  924,  456,    9,   -8,  263,  -50,  -50,  452,
      -50,  -50,  498,  499,  445,  141, 1145,  289,  290,  542,
      815,  151,  152,  455,  829,  716,  138,  448,  606,   20,
      577,  497,  600,  535,  578,  500,  461,  462,  159,-32766,
    -32766,  579,  160,  580,  767,  319,  142,  729,  730,  731,
      732,  738,  733,  734,  735,  736,  737,  608,  529,  153,
      154,  155,  797,  799,  390,  391,  503,  435,  496,  156,
      157,  158,  341,  700,  449,  924,  456,    9,   -7,  440,
      -50,  -50,  452,  -50,  -50,  498,  499,  445,  141,  237,
      416,  417,  238,  239,  240,  241,  242,  243,  244,  245,
      246, 1172,   20,  577,  497,  260,  535,  578,  500,  461,
      462,  159, 1173, 1174,  579,  160,  580,-32766,-32766,  142,
      729,  730,  731,  732,  738,  733,  734,  735,  736,  737,
      608,  529,  729,  730,  731,  732,  738,  733,  734,  735,
      736,  737,  140,    5,  454,    2,  700,  451,  924,  456,
        9,  172,  173,  174,  175,  176,  177,  178,  179,  180,
      181,  182,  183,  184,  185,  186,  187,  188,  144,  443,
      189,  190,  191,  192,  193,  194,  195,  196,  197,  413,
      414,  198,  199,  200,  201,  202,  203,  204,  205,  206,
      207,  208,  209,  210,  415,  626,  504,  961,  962, 1147,
      439,   15,  145,  551,  329,  151,  152,  322,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,  510,-32766,-32766,-32766,
    -32766,-32766,-32766,  757,  327,  392,   16,  147,   17,  148,
      316,  536,  589,  153,  154,  155,  313,  918,  507,  261,
      460,  266,  496,  156,  157,  158,  341,-32766,  497,  247,
      248,  249,  250,  418,  -50,  -50, 1027, 1028,  508,  509,
       16,  147,  320,  136,  312,  655,  551,   11,  151,  152,
      497,  265,  314,  919,  290,  515,   20,  577,  453,-32766,
      535,  578,  500,  461,  462,  159,  511,  169,  579,  160,
      580, -240, -240,  142,  729,  730,  731,  732,  738,  733,
      734,  735,  736,  737,  608,  529,  153,  154,  155,  -97,
     1167, 1168, 1169, 1170, 1171,  496,  156,  157,  158,  341,
      450,  442,  924,  458,    9, -240,  263,  -50,  -50,  514,
       19,  982, 1167, 1168, 1169, 1170, 1171,  981,   30,  524,
     1048,  151,  152, 1047,  750, 1115, 1258, 1259, 1260,   20,
      577, 1114, 1140,  535,  578,  500,  461,  462,  159, 1141,
       26,  579,  160,  580,  312,  655,  142,  729,  730,  731,
      732,  738,  733,  734,  735,  736,  737,  608,  529,  153,
      154,  155,  446,  358,-32767,   32,  460,  143,  496,  156,
      157,  158,  341,-32766,  269,  924,  458,    9,  485,  318,
      -50,  -50,  715,  712,  508,  509,  828, 1146,   23,  317,
       27,   28,  551,   29,  151,  152,  672, 1143,  605,  607,
     1144,  251,   20,  577,  264,  330,  535,  578,  500,  461,
      462,  159,  331,  436,  579,  160,  580,  497,  502,  142,
      729,  730,  731,  732,  738,  733,  734,  735,  736,  737,
      608,  529,  153,  154,  155,  -96,  469, 1247,   25, 1161,
      594,  496,  156,  157,  158,  341,  631,  170,  924,  458,
        9,  920,  782,  -50,  -50,  588,  780,    9,   12,    0,
        0,    0,  809,    0,    0,  551,    0,  151,  152,  808,
      688,  708,  699,    0,    0,   20,  577,    0,  527,  535,
      578,  500,  461,  462,  159,  881, 1046,  579,  160,  580,
      875,  873,  142,  729,  730,  731,  732,  738,  733,  734,
      735,  736,  737,  608,  529,  153,  154,  155,  869,  874,
      872,  879,  925,  790,  496,  156,  157,  158,  341,  707,
      811,  924,  458,    9,  921,  810,  -50,  -50,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,  822,-32766,   20,  577,
      161,  162,  535,  578,  500,  461,  462,  159,  785,  795,
      579,  160,  580,  816,  717,  142,  729,  730,  731,  732,
      738,  733,  734,  735,  736,  737,  608,  529,  855,  787,
      706,  876,  926,  884,  882,    0,    0,  570,  163,  164,
      165,  262,  674,  267,  924,  458,    9,  501,  166,  167,
      168,  342,    2,  135,  268,  133,  321,  434,  497,  457,
      980, 1275,  751,  718,  723, 1139, 1113,  880, 1172, 1248,
     1249, 1250, 1247,  756, 1237, 1238, 1236, 1234, 1235, 1173,
     1174,  618,  788,  151,  152,  798,  739,  868,  704,  796,
      705, 1267, 1268,    0,    0,  633,    0,  252,  253,-32767,
    -32767,-32767,-32767,-32767,-32767,-32767,  242,  243,  244,  245,
      246, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,    0,
        0,  153,  154,  155,    0,    0,    0,    0,    0,   13,
      496,  156,  157,  158,  341,  254,  255,  256,    0,    0,
        0,    0,-32766,    0,  506,  257,  258,  259,  343,    0,
        0,    0,  134,    0,    0,    0,  459,  -50,    0,    0,
        0,    0,    0,    0,   20,  577,    0,    0,  535,  578,
      500,  461,  462,  159,    0,    0,  579,  160,  580,    0,
        0,  142,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  608,  529,    0,    0,  729,  730,  731,  732,
      738,  733,  734,  735,  736,  737,    0,    0,    0,    0,
      924,    0,    9,-32766,-32766,-32766,-32766,    0,-32767,-32767,
    -32767,-32767,-32767,-32767,  928,  270,  271,  272,  273,  274,
      275,  276,  277,  278,  279,  280,  281,  282,  283,  284,
      285,  286,  149,    0,  287,  288,  289,  290,    0,    0,
        0,    0,  326,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,    0,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,    0,-32766,-32766,-32766,-32766,
      270,  271,  272,  273,  274,  275,  276,  277,  278,  279,
      280,  281,  282,  283,  284,  285,  286,  149,    0,  287,
      288,  289,  290,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,    0,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,    0,-32766,-32766,-32766,-32766,    0,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,    0,    0,-32766,-32766,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  252,  253,-32766,-32766,-32766,    0,    0,    0,
        0,    0,    0,-32766,-32766,-32766,-32766,-32766,    0,    0,
        0,  143,    0,    0,    0,-32766,-32766,-32766,-32766,    0,
        0,    0,    0,    0,  642,-32766,-32766,-32766,-32766,-32766,
      254,  255,  256,-32766,    0,    0,-32766,-32766,    0,  506,
      257,  258,  259,  343,    0,    0,-32766,  134,  437,    0,
        0,  459,  507,    0,    0,    0,  460,-32766,-32766,-32766,
    -32766,-32766,-32766,    0,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766, -176,    0,  517,  518, 1167, 1168, 1169, 1170,
     1171,    0,  827,    0,  497,-32766,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, -176,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  438,  -96,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 1167, 1168, 1169, 1170,
     1171
  ];

  private static $yycheck = [
        4,    0,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   20,   21,   22,
       56,   24,   25,   26,   27,   28,   29,   30,   31,   32,
       33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
       43,   44,   45,   46,   47,   48,   47,   48,   51,   52,
       51,   52,   55,   56,   20,   58,   22,   71,   62,   63,
       64,   65,   66,   67,   68,   69,   70,   71,   82,   83,
        1,   75,    4,   77,   78,   79,   80,   81,   82,   83,
       84,   85,   86,   87,   88,   89,   90,   91,   92,   93,
       94,   95,   96,   97,   98,   99,  132,  101,  102,  103,
      104,  105,  106,  107,  108,  109,  110,  111,  112,  113,
      114,  115,  116,  117,  118,  119,  120,  121,    1,  123,
      124,  125,  126,  127,   28,   29,   30,   31,  132,   71,
       62,   63,   64,   65,   66,   67,   68,   69,   70,   71,
       82,   83,   41,   42,   43,   77,   78,   79,   80,   81,
       82,   83,   84,   85,   86,   87,   88,   89,   90,   91,
       92,   93,   94,   95,   96,   97,   98,   99,  100,  101,
      102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,  113,  114,  115,  116,  117,  118,  119,  120,  121,
       61,  123,  124,  125,  126,  127,    0,    1,    1,    3,
        4,   28,   29,   30,   31,    1,   33,   34,   35,   36,
       37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
       47,   48,  129,    1,   51,   52,  133,    2,   55,   56,
       22,   58,   24,   25,   26,   27,    1,   41,   42,   43,
      123,  124,  125,  126,  127,    1,   50,   51,   52,   53,
       54,    1,  123,  124,  125,  126,  127,   32,   62,   63,
       64,   65,   66,   67,   68,   69,   70,   48,   56,    0,
        1,   32,    3,    4,    2,   44,   45,   46,   47,   48,
       84,   85,   51,   52,   88,   89,   90,   91,   92,   93,
        1,   32,   96,   97,   98,    2,   23,  101,  102,  103,
      104,  105,  106,  107,  108,  109,  110,  111,  112,  113,
       41,   42,   43,   20,    2,   22,   25,   26,   27,   50,
       51,   52,   53,   54,  128,   20,  130,  131,  132,   71,
        2,   62,   63,   64,   65,   66,   67,   68,   69,   70,
       82,   83,    1,    1,  132,    3,    4,   48,   20,  130,
       22,  132,   59,   84,   85,  130,  122,   88,   89,   90,
       91,   92,   93,   58,  130,   96,   97,   98,  133,  130,
      101,  102,  103,  104,  105,  106,  107,  108,  109,  110,
      111,  112,  113,   41,   42,   43,    2,   59,   61,  130,
       49,  133,   50,   51,   52,   53,   54,  128,   57,  130,
      131,  132,  130,  130,   62,   63,   64,   65,   66,   67,
       68,   69,   70,   48,   55,   56,    1,   58,    3,    4,
       60,   50,   44,   45,   46,   54,   84,   85,    1,  130,
       88,   89,   90,   91,   92,   93,   65,    2,   96,   97,
       98,    1,  130,  101,  102,  103,  104,  105,  106,  107,
      108,  109,  110,  111,  112,  113,   41,   42,   43,  132,
       48,   20,   23,   22,    2,   50,   51,   52,   53,   54,
      128,   49,  130,  131,  132,  133,   49,   62,   63,   64,
       65,   66,   67,   68,   69,   70,   59,   26,   27,    1,
      130,    3,    4,    2,   59,  130,    2,  132,   59,   84,
       85,   61,   80,   88,   89,   90,   91,   92,   93,   28,
       29,   96,   97,   98,    1,   20,  101,  102,  103,  104,
      105,  106,  107,  108,  109,  110,  111,  112,  113,   41,
       42,   43,  130,  130,  132,  132,   62,   63,   50,   51,
       52,   53,   54,  128,  132,  130,  131,  132,  133,    2,
       62,   63,   64,   65,   66,   67,   68,   69,   70,   32,
       33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
       43,   71,   84,   85,   61,   20,   88,   89,   90,   91,
       92,   93,   82,   83,   96,   97,   98,   55,   56,  101,
      102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,  113,  102,  103,  104,  105,  106,  107,  108,  109,
      110,  111,    2,  130,    2,  132,  128,    2,  130,  131,
      132,    5,    6,    7,    8,    9,   10,   11,   12,   13,
       14,   15,   16,   17,   18,   19,   20,   21,   22,    2,
       24,   25,   26,   27,   28,   29,   30,   31,   32,   33,
       34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
       44,   45,   46,   47,   48,   65,   66,   51,   52,   59,
        2,   55,   56,    1,   20,    3,    4,    2,    5,    6,
        7,    8,    9,   10,   11,   12,   13,   14,   15,   16,
       17,   18,   19,   20,   21,   22,   29,   24,   25,   26,
       27,   28,   29,  130,   23,  132,   55,   56,   55,   56,
       23,   94,   95,   41,   42,   43,   23,   23,   29,   23,
       64,   23,   50,   51,   52,   53,   54,   71,   61,   44,
       45,   46,   47,   48,   62,   63,   51,   52,   82,   83,
       55,   56,   23,   58,   99,  100,    1,   23,    3,    4,
       61,   23,   23,   23,   27,   29,   84,   85,   38,   28,
       88,   89,   90,   91,   92,   93,   29,   49,   96,   97,
       98,   99,  100,  101,  102,  103,  104,  105,  106,  107,
      108,  109,  110,  111,  112,  113,   41,   42,   43,  133,
      123,  124,  125,  126,  127,   50,   51,   52,   53,   54,
       38,   43,  130,  131,  132,  133,   49,   62,   63,   48,
       55,   57,  123,  124,  125,  126,  127,   57,   59,    1,
       57,    3,    4,   57,   57,   57,   57,   57,   57,   84,
       85,   57,   57,   88,   89,   90,   91,   92,   93,   57,
       59,   96,   97,   98,   99,  100,  101,  102,  103,  104,
      105,  106,  107,  108,  109,  110,  111,  112,  113,   41,
       42,   43,   58,   58,   58,   58,   64,   58,   50,   51,
       52,   53,   54,   71,   58,  130,  131,  132,   58,   60,
       62,   63,   59,   59,   82,   83,   59,   59,   59,   59,
       59,   59,    1,   59,    3,    4,   59,   59,   59,   59,
       59,   59,   84,   85,   60,   60,   88,   89,   90,   91,
       92,   93,   60,   63,   96,   97,   98,   61,   61,  101,
      102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,  113,   41,   42,   43,  133,   64,   75,   87,   76,
       86,   50,   51,   52,   53,   54,   88,  112,  130,  131,
      132,  133,  130,   62,   63,   96,  130,  132,  122,   -1,
       -1,   -1,  129,   -1,   -1,    1,   -1,    3,    4,  122,
      122,  122,  129,   -1,   -1,   84,   85,   -1,  132,   88,
       89,   90,   91,   92,   93,  130,  133,   96,   97,   98,
      130,  130,  101,  102,  103,  104,  105,  106,  107,  108,
      109,  110,  111,  112,  113,   41,   42,   43,  130,  130,
      130,  130,  130,  130,   50,   51,   52,   53,   54,  130,
      130,  130,  131,  132,  133,  130,   62,   63,    5,    6,
        7,    8,    9,   10,   11,   12,   13,   14,   15,   16,
       17,   18,   19,   20,   21,   22,  130,   24,   84,   85,
        3,    4,   88,   89,   90,   91,   92,   93,  130,  130,
       96,   97,   98,  130,  130,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  130,  130,
      130,  130,  130,  130,  130,   -1,   -1,  132,   41,   42,
       43,  132,   45,  132,  130,  131,  132,   50,   51,   52,
       53,   54,  132,   56,  132,   58,  132,  132,   61,   62,
      133,  133,  133,  133,  133,  133,  133,  133,   71,   72,
       73,   74,   75,  133,   77,   78,   79,   80,   81,   82,
       83,    1,  133,    3,    4,  133,  133,  133,  133,  133,
      133,  133,  133,   -1,   -1,    1,   -1,    3,    4,   32,
       33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
       43,  114,  115,  116,  117,  118,  119,  120,  121,   -1,
       -1,   41,   42,   43,   -1,   -1,   -1,   -1,   -1,  132,
       50,   51,   52,   53,   54,   41,   42,   43,   -1,   -1,
       -1,   -1,   62,   -1,   50,   51,   52,   53,   54,   -1,
       -1,   -1,   58,   -1,   -1,   -1,   62,   63,   -1,   -1,
       -1,   -1,   -1,   -1,   84,   85,   -1,   -1,   88,   89,
       90,   91,   92,   93,   -1,   -1,   96,   97,   98,   -1,
       -1,  101,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,  112,  113,   -1,   -1,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,   -1,   -1,   -1,   -1,
      130,   -1,  132,   28,   29,   30,   31,   -1,   33,   34,
       35,   36,   37,   38,  130,    5,    6,    7,    8,    9,
       10,   11,   12,   13,   14,   15,   16,   17,   18,   19,
       20,   21,   22,   -1,   24,   25,   26,   27,   -1,   -1,
       -1,   -1,   32,    5,    6,    7,    8,    9,   10,   11,
       12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
       22,   -1,   24,   25,   26,   27,   28,    5,    6,    7,
        8,    9,   10,   11,   12,   13,   14,   15,   16,   17,
       18,   19,   20,   21,   22,   -1,   24,   25,   26,   27,
        5,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   20,   21,   22,   -1,   24,
       25,   26,   27,    5,    6,    7,    8,    9,   10,   11,
       12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
       22,   -1,   24,   25,   26,    5,    6,    7,    8,    9,
       10,   11,   12,   13,   14,   15,   16,   17,   18,   19,
       20,   21,   22,   -1,   24,   25,    3,    4,   -1,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   20,   21,   -1,   -1,    3,    4,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,    3,    4,   41,   42,   43,   -1,   -1,   -1,
       -1,   -1,   -1,   50,   51,   52,   53,   54,   -1,   -1,
       -1,   58,   -1,   -1,   -1,   62,   41,   42,   43,   -1,
       -1,   -1,   -1,   -1,    1,   50,   51,   52,   53,   54,
       41,   42,   43,   58,   -1,   -1,   61,   62,   -1,   50,
       51,   52,   53,   54,   -1,   -1,   71,   58,   56,   -1,
       -1,   62,   29,   -1,   -1,   -1,   64,   82,   83,   28,
       29,   30,   31,   -1,   33,   34,   35,   36,   37,   38,
       39,   40,   49,   -1,   82,   83,  123,  124,  125,  126,
      127,   -1,   59,   -1,   61,  132,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   80,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,  132,  133,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,  123,  124,  125,  126,
      127
  ];

  private static $yybase = [
      269,  415,  415,  196,  342,  488,  488,  672,  745,  818,
      891,  964,  964,  235,   -4,  959,  961,  972,  974,   68,
     1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130,
     1130,  273, 1144,  858,  838,  950,  951,  855,  889,  693,
      760,  978,  687,  766,  775,  977,  853,  982,  681,  774,
      831,  832,  834,  694,  983,  916,  837,  928,  949,  616,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3, 1270,   -3,   -3,   -3,   -3,   -3,
       -3,   -3, 1345, 1345, 1345, 1345, 1345, 1345, 1345, 1345,
     1345, 1345, 1345, 1345, 1345, 1345, 1345, 1345, 1345, 1345,
     1345, 1345, 1345,  117,  117,  341,  427,  952,  718,  781,
      757,  835,  954,  289,  696,  204,  698,  250,  244,  719,
      222, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,
     1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,
     1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,
     1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,
     1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,
     1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,
     1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,
     1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,
     1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,
     1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,
     1047, 1047, 1449, 1449, 1449, 1449, 1449, 1449, 1449, 1449,
     1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1449,
     1449, 1449, 1449, 1449, 1449, 1449, 1449, 1449, 1449, 1449,
     1449, 1449, 1449, 1449, 1449, 1449, 1449, 1449, 1449, 1449,
     1449, 1449, 1449, 1449, 1449, 1449, 1449, 1449, 1449, 1449,
     1449, 1449, 1449, 1449, 1449, 1449, 1449, 1449, 1047, 1047,
     1449, 1047, 1047, 1047, 1047, 1047, 1047, 1449, 1449, 1449,
     1449, 1047, 1047, 1047, 1047, 1047, 1047, 1449, 1047, 1047,
     1047, 1047, 1414, 1414, 1414, 1414, 1414, 1414,  208,  208,
      208, 1413, 1413, 1413, 1023, 1023, 1390, 1390,  291, 1368,
     1368,  461, 1322, 1322,  727, 1298, 1298,  173, 1483,  673,
      673,  731,  481,  527,  527, 1117, 1117, 1117, 1117, 1117,
      527,  527, 1117, 1117, 1117, 1117, 1117,   96,   96, 1235,
     1235, 1235, 1235,  689, 1435,  667, 1452,  -36,  -36,  212,
      802,  802,  802,  656,  101,  101,  101,  101, 1491, 1491,
      258,  -14,  -14,  685,  685,  685,  685,  685,  685,  231,
      231,  231,  -14,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  378,  378,  378,  378,  378,  378,  378,  378,
       -1,   -1,   -1,   -1,  -36,  -36,  -36,  -36,  -36,  -36,
      -36,  -36,  513,  -36,  327,  327,  440,  371,  856,  856,
      856,  856,  856,  856,  856,  856,  197,  805,   69,  805,
      856,  880,  879,  737,  726,  600,  328,  293,  219,   58,
      984,  651,  651,  651,  651,  651,  651,  653,  651,  651,
      651,  651,  651,  651,  653,   58,  359,  359,  359,  359,
      359,  359,  653,  360,   58,   58,   58,   58,   58,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
       58,   58,  365,  483,   93,  225,  439,  645,  617,  862,
      844,  617,  844,  819,  819,  807,  804,  933,  845,  852,
      822,  826,  843,  312,  402,  234,  474,  890,  403,  259,
      239,  833,  970,  895,  767,  979,  610,  435,  422,  412,
      980,  882,  272,  305,  441,  759,  573,   34,  981,  299,
      872,  854,  806,  851,  806,  806,  806,  809,  825,  809,
      809,  532,  494,  762,  825,  532,  805,  462,  809,  825,
      862,  862,  872,  720,  809,  854,  532,  805,  384,  758,
      755,  805,  805,  805,  805,  825,  825,  825,  955,    1,
      857,  724,  863,  771,  770,  841,  842,  857,  953,  859,
      878,  861,  860,  846,  848,  820,  975,  555, 1009, 1008,
      728,  816, 1007,  829,  850,  849,  847,  836,  857,  754,
      828,  729,  827,  763,  782,  934, 1006,  857,  612, 1005,
      948,  830,  495,  547,  881,  730,  761, 1004,  824, 1003,
     1002,  547,  768,  839,  654,  999,  823,  857,  491,  883,
      840,  990,  769,  929,    0, 1047, 1047, 1047, 1047, 1047,
     1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,   -4,    0,
       68,   68,   68,   68,    0, 1047, 1047, 1047, 1047, 1047,
     1047, 1047, 1047, 1047, 1047, 1047,   -3, 1047,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,  359,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  173,
        0,    0,    0,    0,    0,    0,    0,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173, 1047, 1047,
     1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,
     1047, 1047, 1047, 1047, 1047, 1047,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 1047, 1047, 1047,
     1047, 1047, 1047, 1047, 1047,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1047, 1047, 1047, 1047, 1047, 1047,
     1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,
     1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,
     1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,
     1047, 1047, 1047,    0,    0, 1047,    0,    0,    0,    0,
        0,    0, 1047, 1047, 1047, 1047,    0,    0,    0,    0,
        0,    0, 1047,    0,    0,    0,    0,   -3,   -3,   -3,
       -3,   -3,   -3,  173,  173,  173, 1047, 1047, 1047,   -3,
       -3,   -3,   -3,  173,   -3,   -3,  173,   -3,   -3,  173,
       -3,   -3,    0,  500,   -3,   -3,  173,  173,  685,  685,
      685,  685,  685,  685,  685,  685,  685,  685,  685,  685,
      685,  685,  173,  173,  173,  173,  173,  173,  500, 1047,
      500,  500,  500,  500,  500,  500,  500,  500,  500,  685,
      685,  685,  685,  173,  173,  500,  500,  500,    0,    0,
        0,    0,    0,    0,  359,  359,  359,  500,   58,   58,
       58,   58,   58,   58,   58,   58,   58,  685,  685,  685,
      685,  685,  685,  685,  685,  359,  359,  359,  359,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
       58,   58,  474,   58,   58,   58,   58,   58,   58,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
      474,    0,    0,  857,    0,  645,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
        0,    0,    0,    0,    0,    0,    0,  359,  825,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  857,  953,
        0,  857,    0,    0,  825,  825,    0,  825,  825,  825,
      825,  825,  805,  825,  825,  825,  825,  953,    0,    0,
        0,    0,  668,    0,    0,    0,  953,  857,  668,  637,
      637,    0,    0,    0,    0,  615,  675,    0,    0,    0,
      675,    0,    0,  615,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  359,    0,    0,    0,
      359,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  359
  ];

  private static $yydefault = [
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,  659,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,  590,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  254,
      323,  311,  389,  377,  589,  255,  289,  290,  291,  292,
      293,  294,  295,  296,  297,  298,  299,  300,  301,  302,
      303,  288,  475,  355,  356,  357,  358,  359,  360,  361,
      362,  363,  364,  365,  366,  367,  368,  369,  354,  590,
      256,   70,  477,  597,32767,  476,  159,  257,  165,  162,
      168,  170,  258,  456,  444,  422,  423,  424,  425,  426,
      427,  428,  429,  430,  431,  432,  433,  434,  435,  436,
      421,  259,   74,32767,32767,32767,32767,32767,  659,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,  277,  343,  309,  375,  308,  374,  411,  442,
      441,32767,32767,32767,  275,  341,  276,  342,  409,  274,
      340,  410,  268,  334,  408,  269,  335,  402,32767,  267,
      333,  403,  401,  280,  281,  282,  272,  273,  271,  270,
      346,  347,  348,  338,  339,  336,  337,  414,  415,  406,
      407,  404,  405,  176,32767,32767,   50,   51,   51,   51,
       50,   50,   50,   50,  278,  279,  344,  345,  412,  413,
       50,   50,   50,  260,  261,  266,  326,  327,  332,  394,
      395,  400,   51,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,  262,  263,  264,  265,  328,  329,  330,  331,
      396,  397,  398,  399,   65,32767,32767,32767,32767,32767,
    32767,  659,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,  177,32767,32767,  487,  487,32767,32767,
    32767,  313,  312,  314,  316,  317,  315,  320,  379,  378,
      380,  382,  383,  381,  386,32767,  446,  445,  447,  449,
      450,  448,  453,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,  498,  499,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,  189,32767,
    32767,  190,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,   46,
    32767,32767,32767,   38,  160,32767,32767,  166,32767,32767,
      229,  214,  461,  219,  149,  462,  151,32767,32767,32767,
    32767,  318,  658,   85,32767,  384,32767,  658,32767,32767,
    32767,32767,  230,   83,32767,  215,  451,32767,  658,   90,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
      481,  487,32767,32767,32767,32767,32767,   49,32767,32767,
    32767,32767,32767,32767,32767,   36,32767,   69,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,  490,32767,
    32767,  487,32767,32767,32767,32767,32767,   89,   86,32767,
    32767,32767,   73,  138,32767,32767,  236,32767,32767,32767,
    32767,  137,32767,32767,  169,32767,32767,   95,   91,32767,
    32767,32767,32767,32767,  485
  ];

  private static $yygoto = [
       33,   82,  100,   99,  100,   82,   35,   37, 1133,   39,
       40,   42,   43,   44,   48,   49,   60,   61,  471,  472,
      473,  474,  475,  476,   36,   31,   62,   63,  478,  479,
      480,  481,  482,  483,   64,   38,   65,   66,   67,   68,
       69,   70,   71,   72,   73,   74,   75,   76,   77,   78,
       79,   80,   81,  332,  344,  346,  349,  352,  355,  359,
      363,  364,  365,  366,  367,  368,  369,  394,  395,  403,
      404,  405,  422,  423,  424,  425,   41,   83,   84,   85,
       86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
       96,   97,   98,  333,  345,  347,  350,  353,  356,  360,
      370,  371,  372,  373,  374,  375,  376,  396,  397,  406,
      407,  408,  426,  427,  428,  429,  572,  778,  484,  492,
      388,  778,  778,  778,  778,  101,  334,   45,  102,  574,
      103,  335,   46,   47,  999,  999,  999,  999,  999,  999,
      999,  999,  999,  999,  999,  999,  999,  801, 1274, 1274,
      801,  703,  709,  649,  999,  999,  999,  999,  999,  999,
      999,  999,  999,  999,  999,  917, 1132,  805,  805,  805,
      805,  805,  805,   50,   51,  680,   52,   53,  336,  105,
      106,  337,  685,  685,   10,  710,   54,  107,   55,  108,
      109,   56, 1271,  110,  111,   57,   58,  611,  611,  611,
      611,  611,  611,  611,  611,  611,  611,  611,  611,  611,
     1273, 1273, 1175, 1175, 1175, 1175, 1175,  546,  546,  546,
      546,  546,  546,  646,  660,  671, 1269, 1263, 1133, 1133,
     1133, 1133, 1133, 1133, 1133, 1133,  565,  741,    3, 1149,
      616,  651,  634,    3,  831, 1133, 1133, 1133, 1133, 1133,
     1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133,
     1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133,
     1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133,
     1133, 1133, 1133, 1133,  464,  728, 1133,  728,  728,  728,
      743, 1252,  743, 1133, 1133, 1133, 1133,  598,  553,   21,
     1253,   22,  623, 1133,  804,  804,  804,  804,  804,  804,
      650, 1254,  728,  759,  763, 1256,   24,  774, 1000, 1000,
     1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
     1000,  792,  661,  641,  554,  747,  568,  641, 1000, 1000,
     1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,  807,
      807,  807,  807,  807,  807,  720,  769,  522,  910,  913,
     1255,  637,  619,  571,  877,  862,  893,  896,  860,  857,
      858,  859,  861,  803,  803,  803,  803,  803,  803,  666,
      867,  898,  819,  907,  817,  892, 1132, 1132, 1132, 1132,
     1132, 1132, 1132, 1132,  802,  802,  802,  802,  802,  802,
        0,    0,    0, 1132, 1132, 1132, 1132, 1132, 1132, 1132,
     1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132,
     1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132,
     1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132,
     1132, 1132,  985,    0, 1132,    0,  385,    0,  581,  585,
      596, 1132, 1132, 1132, 1132,    0,    0,    0,    0,    0,
        0, 1132,    0,    0,    0,    0,  638,    0,    0,    0,
        0,  385,    0,    0,  389, 1142, 1142, 1142,  389,  389,
      389,  389,    0,    0,    0,    0,    0, 1118,  412,  412,
      412,  638,  752,  638,  652, 1118, 1118, 1118, 1118, 1118,
     1118, 1118, 1118, 1118, 1118, 1118, 1118, 1118, 1118, 1118,
     1118, 1118, 1118, 1118, 1118, 1118,    0,    0,    0, 1251,
        0,  638,  638,  638,  638,  638,  638,  638,  638,  638,
      821,  958,  959,  960, 1024, 1025, 1026, 1091, 1092, 1093,
        0,    0,  652,  752,  752,    0,  652,    0,    0,  753,
      667,    0,  523,  552,  526,  466,  617,  617,  647,  617,
      617,  647,  647,  667,    0,    0,  870,  823,  468,  823,
      825,  825,  863,  899,    0,  784,  786,  783,  781,    0,
      466,    0,  467,  754,  754,  754,  754,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  447,    0,    0,    0,
      447,  447,  447,  447,    0,    0,    0,    0,    0,    0,
      520,  520,  521,    0,    0,  528,    0,    0,    0,    0,
        0,  871,    0,    0,    0,    0,  903,    0,    0,    0,
        0,  754,  754,  754,  754,  754,  754,  754,  754,    0,
      754,    0,  902,  900,  901,    0,    0,    0,    0,    0,
        0,    0,    0,  625,  586,  625,  597,  533,  621,  622,
      564,  567,    0,    0,  584,    0,  656,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  563,  777,    0,    0,    0,  777,  777,  777,
      777,  656,  563,  997, 1163,  544,  583,  620, 1063, 1164,
      537,  593,  645, 1130,  847,  601,  602,  849,  848,  846,
      722,  912,  850,  669,  601,  602,  670,  569,  673,    0,
        0, 1118, 1118, 1118,    0,  654,  657,    0,    0,    0,
        0, 1118,    0,    0, 1118,  493,    0, 1118,    0,    0,
     1118,    0,    0,    0, 1118, 1118,    0,    0,    0,    0,
        0,    0,  776,    0,    0,    0,  776,  776,  776,  776,
     1118, 1118, 1118, 1118, 1118, 1118,  979,    0,    0,    0,
        0,    0,    0,  775,    0,    0,    0,  775,  775,  775,
      775, 1118, 1118,    0,  532,    0,    0,    0,    0,    0,
        0,    0, 1118, 1118, 1118,  534,    0,    0,    0,  538,
      539,  540,  541,    0,    0,    0,    0,    0,    0,    0,
        0, 1112,    0, 1118, 1118, 1118, 1118,    0,    0, 1112,
     1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112,
     1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      996,    0,    0,    0,    0,    0,    0, 1062,    0, 1118,
     1118, 1118, 1118, 1118, 1118, 1129,  113,  114,  486,  487,
      488,  489,  490,  491,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  104,  115,  116,  117,  118,  119,  120,
      121,  122,  123,  124,  125,  126,  127,  128,  129,  130,
      338,  348,  351,  354,  357,  361,  362,  377,  378,  379,
      380,  381,  382,  398,  399,  409,  410,  411,  430,  431,
      432,  433,    0,    0,  131,    0,    0,    0,    0,    0,
        0,  575,  576,  132,  339,    0,    0,    0,    0,    0,
        0,  340,    0,    0,    0,    0,    0,    0, 1118, 1118,
        0,    0,    0,    0,  994,    0,    0,    0, 1060,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 1127,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1112, 1112, 1112,    0,    0,
        0,    0,    0,    0,    0, 1112,    0,    0, 1112,    0,
        0, 1112,    0,    0, 1112,    0,    0,    0, 1112, 1112,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1112, 1112, 1112, 1112, 1112, 1112,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1112, 1112,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 1112, 1112, 1112,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 1112, 1112, 1112,
     1112,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1138,    0,    0,    0,    0,    0,
        0, 1138,    0, 1112, 1112, 1112, 1112, 1112, 1112, 1138,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1112, 1112,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  664
  ];

  private static $yygcheck = [
       25,   25,   25,   25,   25,   25,   25,   25,  108,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   12,  105,  105,
       34,   12,   12,   12,   12,   25,   25,   25,   25,   25,
       25,   25,   25,   25,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,  106,   24,   85,   85,
       24,   24,   24,    7,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  100,  106,   21,   21,   21,
       21,   21,   21,   25,   25,    4,   25,   25,   25,   25,
       25,   25,    8,    8,   61,    8,   25,   25,   25,   25,
       25,   25,  122,   25,   25,   25,   25,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   33,   33,   33,
       33,   33,   33,   48,   48,   48,   38,  119,  108,  108,
      108,  108,  108,  108,  108,  108,   81,   38,    6,  111,
      104,  104,   33,    6,   70,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,   71,   35,  108,   35,   35,   35,
       39,  112,   39,  108,  108,  108,  108,   37,   37,   75,
      113,   75,   75,  108,   19,   19,   19,   19,   19,   19,
       75,  114,   35,   49,   49,  115,   75,   55,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,   60,   41,   23,   45,   42,   31,   23,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,   22,
       22,   22,   22,   22,   22,   32,   53,   30,   97,   98,
      108,   26,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   18,   18,   18,   18,   18,   18,   28,
       83,   93,   68,   95,   66,   91,  106,  106,  106,  106,
      106,  106,  106,  106,   17,   17,   17,   17,   17,   17,
       -1,   -1,   -1,  106,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  106,  103,   -1,  106,   -1,   34,   -1,  104,  104,
      104,  106,  106,  106,  106,   -1,   -1,   -1,   -1,   -1,
       -1,  106,   -1,   -1,   -1,   -1,    5,   -1,   -1,   -1,
       -1,   34,   -1,   -1,   34,  106,  106,  106,   34,   34,
       34,   34,   -1,   -1,   -1,   -1,   -1,  103,   34,   34,
       34,    5,   40,    5,   40,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,   -1,   -1,   -1,   85,
       -1,    5,    5,    5,    5,    5,    5,    5,    5,    5,
       58,   74,   74,   74,   74,   74,   74,   74,   74,   74,
       -1,   -1,   40,   40,   40,   -1,   40,   -1,   -1,   40,
        5,   -1,    5,    5,    5,   23,    5,    5,    5,    5,
        5,    5,    5,    5,   -1,   -1,   58,   58,    5,   58,
       58,   58,   58,   58,   -1,   58,   58,   58,   58,   -1,
       23,   -1,   23,   23,   23,   23,   23,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,   -1,
       33,   33,   33,   33,   -1,   -1,   -1,   -1,   -1,   -1,
       33,   33,   33,   -1,   -1,   58,   -1,   -1,   -1,   -1,
       -1,   58,   -1,   -1,   -1,   -1,   58,   -1,   -1,   -1,
       -1,   23,   23,   23,   23,   23,   23,   23,   23,   -1,
       23,   -1,   58,   58,   58,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   23,   23,   23,   23,   57,   23,   23,
       23,   23,   -1,   -1,   85,   -1,   23,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   23,   19,   -1,   -1,   -1,   19,   19,   19,
       19,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   -1,
       -1,  103,  103,  103,   -1,   85,   85,   -1,   -1,   -1,
       -1,  103,   -1,   -1,  103,   57,   -1,  103,   -1,   -1,
      103,   -1,   -1,   -1,  103,  103,   -1,   -1,   -1,   -1,
       -1,   -1,   18,   -1,   -1,   -1,   18,   18,   18,   18,
      103,  103,  103,  103,  103,  103,   73,   -1,   -1,   -1,
       -1,   -1,   -1,   17,   -1,   -1,   -1,   17,   17,   17,
       17,  103,  103,   -1,   57,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,  103,  103,  103,   57,   -1,   -1,   -1,   57,
       57,   57,   57,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   73,   -1,  103,  103,  103,  103,   -1,   -1,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
      103,   -1,   -1,   -1,   -1,   -1,   -1,  103,   -1,  103,
      103,  103,  103,  103,  103,  103,   43,   43,   43,   43,
       43,   43,   43,   43,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   43,   43,   43,   43,   43,   43,   43,
       43,   43,   43,   43,   43,   43,   43,   43,   43,   43,
       43,   43,   43,   43,   43,   43,   43,   43,   43,   43,
       43,   43,   43,   43,   43,   43,   43,   43,   43,   43,
       43,   43,   -1,   -1,   43,   -1,   -1,   -1,   -1,   -1,
       -1,   43,   43,   43,   43,   -1,   -1,   -1,   -1,   -1,
       -1,   43,   -1,   -1,   -1,   -1,   -1,   -1,  103,  103,
       -1,   -1,   -1,   -1,  103,   -1,   -1,   -1,  103,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  103,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   73,   73,   73,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   73,   -1,   -1,   73,   -1,
       -1,   73,   -1,   -1,   73,   -1,   -1,   -1,   73,   73,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   73,   73,   73,   73,   73,   73,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   73,   73,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   73,   73,   73,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   73,   73,   73,
       73,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   73,   -1,   -1,   -1,   -1,   -1,
       -1,   73,   -1,   73,   73,   73,   73,   73,   73,   73,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   73,   73,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   73
  ];

  private static $yygbase = [
        0,    0,    0,    0,  170,  108,  238,  151,  179,    0,
        0,    0, -269,    0,    0,    0,    0,  387,  366,  297,
        0,  160,  342,  197,  140, -135,  -97,    0, -116,    0,
      -95, -113,  -96,  210,   88, -100,    0, -137, -361, -149,
      106, -104, -105,  624,    0, -103,    0,    0, -167, -140,
        0,    0,    0,  -99,    0,  -76,    0,  198,   37,    0,
      -70,  175,    0,    0,    0,    0, -148,    0, -152,    0,
     -139, -101,    0,  707,  118, -278,    0,    0,    0,    0,
        0,   97,    0, -151,    0,  135,    0,    0,    0,    0,
        0, -210,    0, -150,    0, -209,    0, -136, -168,    0,
      157,    0,    0,  383,  107, -224,  134,  318,  -24,    0,
        0,   99,  -93,  -84,  -73,  -69,    0,    0,    0,   89,
        0,    0,  178,    0
  ];

  private static $yygdefault = [
    -32768,  609,  677,  678,  679,  610,    4,  632,  684,  686,
      687,  689,  690,  691,  692,  693,  694,  695,  696,  697,
      698,  701,  702, 1162,  800,   34,  545,  806,  658,  714,
      559,  560,  719,  465,  387,  727,  659,  547, 1261,  742,
      627,  653,  746,  112,  755,  555,  599,  566,  665,  762,
      548,  648,  668,  768,  393,  773,  779,  530,  854,  400,
      793,    7,  549,  550,  814, 1067,  818, 1134,  820,  557,
      830,  463,  558, 1045,  853, 1159,  573,  856,  525,  137,
      139,  561,  531,  866,  591, 1158,  470,  883,  885,  886,
      595,  891,  895,  897,  592,  906,  562,  909,  914,    8,
      916,  543,   59, 1051, 1166,  477, 1065, 1068, 1066, 1135,
      556, 1148, 1153, 1154, 1155, 1157,  612,  614,  582, 1262,
      629,  587, 1270,  630
  ];

  private static $yylhs = [
        0,    1,    1,    2,    2,    3,    4,    7,    7,    6,
        6,    8,    8,    8,    8,    8,    8,    8,    8,    8,
        8,    8,    8,    8,    8,    8,    8,    8,   21,    9,
        9,   20,   20,   11,   27,   16,   26,   26,   28,   28,
       28,   10,   10,   10,   31,   31,   32,   32,   32,   30,
       33,   33,   34,   34,   35,   35,   35,   35,   35,   35,
       35,   35,   35,   35,   12,   36,   36,   37,   37,   39,
       39,   41,   41,   42,   42,   44,   44,   45,   45,   40,
       40,   13,   13,   46,   46,   50,   50,   51,   51,   49,
       47,   47,   47,   52,   52,   53,   48,   48,   54,   54,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   56,   56,   56,   59,   59,   60,
       60,   14,   14,   15,   15,   61,   61,   24,   24,   24,
       24,   24,   24,   24,   24,   18,   19,   62,   63,   17,
       17,   17,   65,   65,   67,   67,   64,   64,   66,   66,
       68,   68,   57,   57,   57,   69,   69,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   72,   72,   71,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       80,   79,   79,   79,   76,   76,   90,   90,   91,   77,
       77,   92,   82,   82,   93,   93,   93,   93,   83,   84,
       84,   94,   94,   95,   96,   96,   97,   97,   86,   86,
       98,   99,   99,  100,  100,   58,   58,   58,   87,   87,
       88,   88,   89,   89,  101,  101,   81,   81,   78,   78,
      102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
      102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
      102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
      102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
      102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
      102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
      102,  102,  102,  102,  102,  102,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   43,   43,   43,   43,   43,   43,
       43,   43,   43,   43,   43,   43,   43,   43,   43,   43,
       43,   43,   43,   43,   43,   43,   43,   43,   43,   43,
       43,   43,   43,   43,   43,   43,   43,   43,   43,   43,
       43,   43,   43,   43,   43,   43,   43,   43,   43,   43,
       43,   43,   43,   43,   43,   43,   43,   43,   43,   43,
       43,   43,   43,   43,   43,   43,   43,   43,   43,   43,
       43,  107,  109,  105,  105,  105,  105,  105,   75,   75,
      103,  103,  103,  110,  110,  111,  111,  111,  106,  106,
      106,  106,  106,  106,  106,  116,  113,    5,    5,    5,
       74,   74,  104,  104,  104,  104,  104,   23,   23,   23,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,  115,
      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  115,   85,  112,  112,  112,   29,   29,   29,   29,
       29,   29,  114,  114,  114,  114,  117,  118,  118,  119,
      119,  108,  108,  108,  120,  121,  121,  122,  123,  123,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      123,  123,  123,  123,  123,  123,  123,  123,   38,   38
  ];

  private static $yylen = [
        1,    0,    1,    1,    1,    4,    1,    0,    1,    1,
        2,    1,    1,    3,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    2,    1,    1,    1,    3,    5,
        4,    3,    4,    4,    4,    4,    1,    4,    1,    3,
        4,    3,    5,    5,    1,    3,    1,    3,    4,    1,
        0,    1,    1,    2,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    5,    0,    2,    1,    3,    1,
        3,    1,    3,    1,    3,    3,    3,    1,    3,    1,
        1,    8,    6,    0,    2,    0,    2,    1,    3,    1,
        0,    2,    2,    1,    3,    1,    0,    1,    1,    2,
        1,    1,    1,    1,    1,    4,    4,    4,    4,    4,
        6,    4,    6,    4,    3,    5,    5,    1,    2,    3,
        6,    5,    3,    6,    4,    1,    2,    1,    1,    1,
        1,    1,    1,    3,    2,    4,    3,    3,    2,    5,
        5,    4,    4,    3,    4,    3,    1,    3,    1,    2,
        1,    2,    2,    3,    3,    1,    3,    1,    2,    3,
        2,    3,    4,    2,    3,    4,    3,    4,    5,    3,
        5,    3,    2,    3,    3,    4,    0,    1,    1,    1,
        5,    5,    7,    7,    7,    6,    7,    5,    2,    2,
        3,    3,    4,    5,    3,    2,    3,    2,    3,    2,
        3,    3,    3,    3,    5,    5,    3,    2,    1,    2,
        1,    1,    2,    2,    0,    1,    1,    2,    3,    0,
        1,    2,    1,    2,    2,    5,    7,    5,    2,    0,
        1,    1,    2,    3,    1,    3,    1,    3,    1,    2,
        2,    1,    2,    3,    2,    2,    3,    3,    2,    1,
        2,    1,    2,    1,    1,    3,    1,    3,    1,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    2,    2,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    2,    5,    4,    4,    5,    4,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    3,
        2,    3,    2,    2,    1,    1,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    2,    2,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        2,    5,    4,    4,    5,    4,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    3,    2,    3,    2,    2,
        1,    1,    1,    1,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    2,
        2,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    2,    5,    4,
        4,    5,    4,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    3,    2,    3,    2,    2,    1,    1,    1,
        1,    4,    4,    2,    5,    4,    4,    1,    3,    3,
        2,    3,    3,    1,    3,    1,    3,    2,    1,    1,
        1,    1,    1,    1,    1,    0,    3,    1,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    2,    9,    3,    3,    2,    1,    3,    2,
        1,    2,    3,    3,    2,    1,    3,    3,    1,    1,
        3,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    0,    1
  ];
  
    
  private $yyval;
  private $yyastk;
  private $yysstk;
  private $yysp;
  private $yystate;
  private $yyloc; // current location
  
  private $lex;
  private $invalid = false;
  
  /**
   * returns the current location (last scanned token)
   * 
   * @return Location
   */
  public function loc()
  {
    if (!$this->yyloc)
      return new Location('<unknown>', new Position(0, 0));
    
    return $this->yyloc;
  }
  
  /**
   * consumes semicolons to avoid unnecessary empty-expressions 
   * 
   * @void
   */
  private function eat_semis()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_SEMI) {
      do {
        $this->lex->skip();
        $peek = $this->lex->peek();
      } while ($peek->type === T_SEMI);

    }
  }
  
  /**
   * consumes a T_END token
   * 
   * @void
   */
  private function eat_end()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_END) {
      $this->lex->skip();
    }
  }
  
  /**
   * parse function
   * 
   * @param  Lexer  $lex
   * @return Node
   */
  public function parse(Lexer $lex) 
  {
    $tokid = self::TOKEN_NONE;
    
    // lexer
    $this->lex = $lex;
    
    // stacks
    $this->yysstk = [ 0 ]; 
    $this->yyastk = [];
    
    // current state
    $yystate = 0;
    
    // error flag
    $yyerrflag = 0;

    // stack position
    $this->yysp = 0;
    
    // location stack
    $yylstk = [];

    for (;;) {
      if (self::$yybase[$yystate] == 0)
        $yyn = self::$yydefault[$yystate];
      else {
        if ($tokid === self::TOKEN_NONE) {
          // Fetch the next token id from the lexer
          $token = $this->lex->next();
                    
          // invalid token (regexp-scan failed)
          if ($token->type === T_INVL) {
            $this->error_at($token->loc, ERR_ERROR, 'invalid source/regexp-literal');
            return null;
          }
          
          // map the lexer token id to the internally used token id's
          if ($token->type >= 0 && $token->type < self::TOKEN_MAP_SIZE)
            $tokid = self::$translate[$token->type];
          else {
            $this->error_at($token->loc, ERR_ERROR, 'invalid token %d -> %s', 
              $token->type, $token->value);
            return null;
          }        
          
          $this->yyloc = $token->loc;
          
          // store location
          $yylstk[$this->yysp] = $this->yyloc;
          
        } 

        if ((($yyn = self::$yybase[$yystate] + $tokid) >= 0
          && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid
          || ($yystate < self::YY2TBLSTATE
            && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + $tokid) >= 0
            && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid))
          && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT
        ) {
          /*
           * >= YYNLSTATE: shift and reduce
           * > 0: shift
           * = 0: accept
           * < 0: reduce
           * = -YYUNEXPECTED: error
           */
          if ($yyn > 0) {
            /* shift */
            
            $this->yysp++;
            
            $this->yysstk[$this->yysp] = $yystate = $yyn;
            $this->yyastk[$this->yysp] = $token;
            
            // store location
            $yylstk[$this->yysp] = $this->yyloc;
            
            $tokid = self::TOKEN_NONE;
            
            if ($yyerrflag > 0)
              $yyerrflag--;
            
            if ($yyn < self::YYNLSTATES)
              continue;

            /* $yyn >= YYNLSTATES means shift-and-reduce */
            $yyn -= self::YYNLSTATES;
          } else
            $yyn = -$yyn;
        } else
          $yyn = self::$yydefault[$yystate];
      }
      
      for (;;) {
        /* reduce/error */
        if ($yyn == 0) {
          /* accept */
          if ($this->invalid === true)
            return null;
          return $this->yyval;
        } elseif ($yyn != self::YYUNEXPECTED) {
          /* reduce */
//ifnot -t
          $this->{'yyn' . $yyn}();
//endif          
          /* Goto - shift nonterminal */
          $yylen = self::$yylen[$yyn];
          $yyloc = $yylstk[$this->yysp - $yylen];
          
          $this->yysp -= $yylen;
          
          $yyn = self::$yylhs[$yyn];
          
          if (($yyp = self::$yygbase[$yyn]
           + $this->yysstk[$this->yysp]) >= 0
            && $yyp < self::YYGLAST && self::$yygcheck[$yyp] == $yyn)
            $yystate = self::$yygoto[$yyp];
          else
            $yystate = self::$yygdefault[$yyn];
          
          $this->yysp++;
          
          $this->yysstk[$this->yysp] = $yystate;
          $this->yyastk[$this->yysp] = $this->yyval;
          
          // set location if a real node was produced by $yyn
          if ($this->yyval instanceof Node)
            $this->yyval->loc = $yyloc;
          
          // store position
          $yylstk[$this->yysp] = $this->yyloc;
          
        } else {
          /* error */
          $this->invalid = true;
                    
          switch ($yyerrflag) {
            case 0:
              // let the lexer know
              $this->lex->sync = true;
              
              $expa = [];
              $expn = 0;
              $base = self::$yybase[$yystate];
              
              for ($i = 0; $i < self::TOKEN_MAP_SIZE; ++$i) {
                $n = $base + $i;
                if ($n >= 0 && $n < self::YYLAST && self::$yycheck[$n] == $i
                  || $yystate < self::YY2TBLSTATE
                  && ($n = self::$yybase[$yystate + self::YYNLSTATES] + $i)
                  && $n < self::YYLAST && ($n < 0 || self::$yycheck[$n] == $i)
                ) {
                  if ($n >= 0 && self::$yyaction[$n] != self::YYUNEXPECTED) {
                    if ($expn === 4) {
                      /* Too many expected tokens */
                      $expa = null;
                      $expn = 0;
                      break;
                    }

                    $expa[] = self::$terminals[$i];
                    $expn++;
                  }
                }
              }

              $exps = 'unexpected ' . self::$terminals[$tokid];
              
              if ($expn > 0) {
                $last = array_pop($expa);
                $exps .= ', expected ';
                
                if ($expn > 1)
                  $exps .= implode(', ', $expa) . ' or ';
                
                $exps .= $last;
                unset ($expa, $last);
              }
              
              $this->error_at($this->yyloc, ERR_ERROR, $exps);              
            case 1:
            case 2:
              $yyerrflag = 3;  
              
              while (!(($yyn = self::$yybase[$yystate] + self::YYINTERRTOK) >= 0
                && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK
                || ($yystate < self::YY2TBLSTATE
                  && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + self::YYINTERRTOK) >= 0
                  && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK))
              ) {  
                if ($this->yysp <= 0) 
                  return null;
                
                $yystate = $this->yysstk[--$this->yysp];              
              }
              
              $yyn = self::$yyaction[$yyn];
              $this->yysstk[++$this->yysp] = $yystate = $yyn;
              break;
            
            case 3:
              if ($tokid === 0) 
                return null;
              
              $tokid = -1;
              break;
          }
        }

        if ($yystate < self::YYNLSTATES)
          break;
        
        /* >= YYNLSTATES means shift-and-reduce */
        $yyn = $yystate - self::YYNLSTATES;
      }
    }
  }


  private function yyn0() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn1() 
  {
     $this->yyval = new Unit(null); 
  }


  private function yyn2() 
  {
     $this->yyval = new Unit($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn3() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; $this->eat_end(); 
  }


  private function yyn4() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; $this->eat_end(); 
  }


  private function yyn5() 
  {
     $this->yyval = new Module($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn6() 
  {
     $this->yyval = new Program($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn7() 
  {
     $this->yyval = null; 
  }


  private function yyn8() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn9() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn10() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn11() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn12() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn13() 
  {
     $this->yyval = null; 
  }


  private function yyn14() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn15() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn16() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn17() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn18() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn19() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn20() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn21() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn22() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn23() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn24() 
  {
     $this->yyval = null; 
  }


  private function yyn25() 
  {
     $this->yyval = null; 
  }


  private function yyn26() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn27() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn28() 
  {
     $this->yyval = new LabelDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn29() 
  {
     
      $this->yyval = new Module($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn30() 
  {
     
      $this->yyval = new Module(null, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn31() 
  {
     
      $this->yyval = new RequireDecl(false, $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn32() 
  {
     
      $this->yyval = new RequireDecl(true, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn33() 
  {
     
      $this->yyval = new AttrDecl($this->yyastk[$this->yysp-(4-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn34() 
  {
     $this->yyval = new CompAttr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn35() 
  {
     $this->yyval = new TopexAttr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn36() 
  {
     $this->yyval = new AttrDef($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn37() 
  {
     $this->yyval = new AttrDef($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn38() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn39() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn40() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn41() 
  {
     
      $this->yyval = new UseDecl($this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn42() 
  {
     
      $this->yyval = new UseDecl(new UseAlias($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)])); 
      $this->eat_semis(); 
    
  }


  private function yyn43() 
  {
     
      $this->yyval = new UseDecl(new UseUnpack($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)])); 
      $this->eat_semis(); 
    
  }


  private function yyn44() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn45() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn46() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn47() 
  {
     $this->yyval = new UseAlias($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn48() 
  {
     $this->yyval = new UseUnpack($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn49() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn50() 
  {
     $this->yyval = null; 
  }


  private function yyn51() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn52() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn53() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn54() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn55() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn56() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn57() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn58() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn59() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn60() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn61() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn62() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn63() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn64() 
  {
     
      $this->yyval = new EnumDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn65() 
  {
     $this->yyval = null; 
  }


  private function yyn66() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn67() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn68() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn69() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn70() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn71() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn72() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn73() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn74() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn75() 
  {
     $this->yyval = new ArrDestr($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn76() 
  {
     $this->yyval = new ObjDestr($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn77() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn78() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn79() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn80() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn81() 
  {
     
      $this->yyval = new ClassDecl($this->yyastk[$this->yysp-(8-1)], $this->yyastk[$this->yysp-(8-3)], $this->yyastk[$this->yysp-(8-4)], $this->yyastk[$this->yysp-(8-5)], $this->yyastk[$this->yysp-(8-7)]); 
      $this->eat_semis(); 
    
  }


  private function yyn82() 
  {
     
      $this->yyval = new ClassDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-5)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn83() 
  {
     $this->yyval = null; 
  }


  private function yyn84() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn85() 
  {
     $this->yyval = null; 
  }


  private function yyn86() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn87() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn88() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn89() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn90() 
  {
     $this->yyval = null; 
  }


  private function yyn91() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn92() 
  {
     $this->yyval = null; 
  }


  private function yyn93() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn94() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn95() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn96() 
  {
     $this->yyval = []; 
  }


  private function yyn97() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn98() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn99() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn100() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn101() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn102() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn103() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn104() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn105() 
  {
     
      $this->yyval = new CtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn106() 
  {
     $this->yyval = new CtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn107() 
  {
     
      $this->yyval = new DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn108() 
  {
     $this->yyval = new DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn109() 
  {
     $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn110() 
  {
     
      $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn111() 
  {
     $this->yyval = new SetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn112() 
  {
     
      $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn113() 
  {
     $this->yyval = new NestedMods($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn114() 
  {
     
      $this->yyval = new TraitUse($this->yyastk[$this->yysp-(3-2)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn115() 
  {
     
      $this->yyval = new TraitUse($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn116() 
  {
     $this->yyval = new TraitUse($this->yyastk[$this->yysp-(5-2)], null, $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn117() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn118() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn119() 
  {
     
      $this->yyval = new TraitItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn120() 
  {
     
      $this->yyval = new TraitItem($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-6)]); 
      $this->eat_semis(); 
    
  }


  private function yyn121() 
  {
     
      $this->yyval = new TraitDecl($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn122() 
  {
     
      $this->yyval = new TraitDecl($this->yyastk[$this->yysp-(3-2)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn123() 
  {
     
      $this->yyval = new IfaceDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn124() 
  {
     
      $this->yyval = new IfaceDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn125() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn126() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn127() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn128() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn129() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn130() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn131() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn132() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn133() 
  {
     $this->yyval = null; 
  }


  private function yyn134() 
  {
     $this->yyval = null; 
  }


  private function yyn135() 
  {
     
      $this->yyval = new LetDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn136() 
  {
     
      $this->yyval = new VarDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn137() 
  {
     $this->yyval = new LetDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn138() 
  {
     $this->yyval = new VarDecl($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn139() 
  {
     $this->yyval = new FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn140() 
  {
     
      $this->yyval = new FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn141() 
  {
     
      $this->yyval = new FnDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn142() 
  {
     $this->yyval = new FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn143() 
  {
     $this->yyval = new FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn144() 
  {
     $this->yyval = new FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn145() 
  {
     $this->yyval = new FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn146() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn147() 
  {
     
      /* FIXME */
      $this->yyval = new Block([ new ReturnStmt($this->yyastk[$this->yysp-(3-2)]) ]); 
      $this->eat_semis(); 
    
  }


  private function yyn148() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn149() 
  {
     
      /* FIXME */
      $this->yyval = new Block([ new ReturnStmt($this->yyastk[$this->yysp-(2-2)]) ]); 
    
  }


  private function yyn150() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn151() 
  {
     
      /* FIXME */
      $this->yyval = new Block([ new ReturnStmt($this->yyastk[$this->yysp-(2-2)]) ]); 
    
  }


  private function yyn152() 
  {
     $this->yyval = null; 
  }


  private function yyn153() 
  {
     $this->yyval = null; 
  }


  private function yyn154() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn155() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn156() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn157() 
  {
     $this->yyval = new Param(false, null, null, $this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn158() 
  {
     $this->yyval = new Param(false, null, null, $this->yyastk[$this->yysp-(2-1)], null, true); 
  }


  private function yyn159() 
  {
     $this->yyval = new Param(false, null, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn160() 
  {
     $this->yyval = new Param(false, null, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn161() 
  {
     $this->yyval = new Param(false, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn162() 
  {
     $this->yyval = new Param(false, null, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn163() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(2-1)], null, $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn164() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(3-1)], null, $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn165() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn166() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn167() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null, true); 
  }


  private function yyn168() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], false); 
  }


  private function yyn169() 
  {
     $this->yyval = new ThisParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn170() 
  {
     $this->yyval = new ThisParam($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn171() 
  {
     $this->yyval = new RestParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn172() 
  {
     $this->yyval = new Param(true, null, null, $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn173() 
  {
     $this->yyval = new Param(true, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn174() 
  {
     $this->yyval = new Param(true, $this->yyastk[$this->yysp-(3-1)], null, $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn175() 
  {
     $this->yyval = new Param(true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], null, false); 
  }


  private function yyn176() 
  {
     $this->yyval = null; 
  }


  private function yyn177() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn178() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn179() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn180() 
  {
     $this->yyval = new DoStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn181() 
  {
     $this->yyval = new IfStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn182() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn183() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn184() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn185() 
  {
     $this->yyval = new ForStmt($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], null, $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn186() 
  {
     $this->yyval = new ForStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn187() 
  {
     $this->yyval = null; 
  }


  private function yyn188() 
  {
     $this->yyval = new ForStmt(null, null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn189() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(2-2)], null, null); 
  }


  private function yyn190() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn191() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(3-2)], null, $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn192() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn193() 
  {
     $this->yyval = new PhpStmt($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn194() 
  {
     $this->yyval = new GotoStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn195() 
  {
     $this->yyval = new TestStmt(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn196() 
  {
     $this->yyval = new TestStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn197() 
  {
     $this->yyval = new BreakStmt(null); 
  }


  private function yyn198() 
  {
     $this->yyval = new BreakStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn199() 
  {
     $this->yyval = new ContinueStmt(null); 
  }


  private function yyn200() 
  {
     $this->yyval = new ContinueStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn201() 
  {
     $this->yyval = new ThrowStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn202() 
  {
     $this->yyval = new WhileStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn203() 
  {
     $this->yyval = new AssertStmt($this->yyastk[$this->yysp-(3-2)], null); 
  }


  private function yyn204() 
  {
     $this->yyval = new AssertStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn205() 
  {
     $this->yyval = new SwitchStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn206() 
  {
     $this->yyval = new ReturnStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn207() 
  {
     $this->yyval = new ReturnStmt(null); 
  }


  private function yyn208() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn209() 
  {
     $this->yyval = null; 
  }


  private function yyn210() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn211() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn212() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn213() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn214() 
  {
     $this->yyval = null; 
  }


  private function yyn215() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn216() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn217() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn218() 
  {
     $this->yyval = new ElsifItem($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn219() 
  {
     $this->yyval = null; 
  }


  private function yyn220() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn221() 
  {
     $this->yyval = new ElseItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn222() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn223() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn224() 
  {
     $this->yyval = new CatchItem(null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn225() 
  {
     $this->yyval = new CatchItem($this->yyastk[$this->yysp-(5-3)], null, $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn226() 
  {
     $this->yyval = new CatchItem($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn227() 
  {
     $this->yyval = null; 
  }


  private function yyn228() 
  {
     $this->yyval = new FinallyItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn229() 
  {
     $this->yyval = null; 
  }


  private function yyn230() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn231() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn232() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn233() 
  {
     $this->yyval = new PhpUse($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn234() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn235() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn236() 
  {
     $this->yyval = new PhpUseItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn237() 
  {
     $this->yyval = new PhpUseItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn238() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn239() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn240() 
  {
     $this->yyval = new CaseItem($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn241() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn242() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn243() 
  {
     $this->yyval = new CaseLabel($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn244() 
  {
     $this->yyval = new CaseLabel(null); 
  }


  private function yyn245() 
  {
     $this->yyval = new Block(null); 
  }


  private function yyn246() 
  {
     $this->yyval = new Block($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn247() 
  {
     $this->yyval = null; 
  }


  private function yyn248() 
  {
     
      $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
      $this->eat_semis(); 
    
  }


  private function yyn249() 
  {
     
      $this->yyval = new ExprStmt(null); 
      $this->eat_semis(); 
    
  }


  private function yyn250() 
  {
     $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn251() 
  {
     $this->yyval = new ExprStmt(null); 
  }


  private function yyn252() 
  {
     $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn253() 
  {
     $this->yyval = new ExprStmt(null); 
  }


  private function yyn254() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn255() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn256() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn257() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn258() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn259() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn260() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn261() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn262() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn263() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn264() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn265() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn266() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn267() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn268() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn269() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn270() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn271() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn272() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn273() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn274() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn275() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn276() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn277() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn278() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn279() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn280() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn281() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn282() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn283() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn284() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn285() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn286() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn287() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn288() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn289() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn290() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn291() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn292() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn293() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn294() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn295() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn296() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn297() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn298() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn299() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn300() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn301() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn302() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn303() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn304() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn305() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn306() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn307() 
  {
     $this->yyval = null; 
  }


  private function yyn308() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn309() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn310() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn311() 
  {
     $this->yyval = new YieldExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn312() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn313() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn314() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn315() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn316() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn317() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn318() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn319() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn320() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn321() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn322() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn323() 
  {
     $this->yyval = new PrintExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn324() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn325() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn326() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn327() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn328() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn329() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn330() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn331() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn332() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn333() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn334() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn335() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn336() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn337() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn338() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn339() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn340() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn341() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn342() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn343() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn344() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn345() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn346() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn347() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn348() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn349() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn350() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn351() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn352() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn353() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn354() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn355() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn356() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn357() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn358() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn359() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn360() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn361() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn362() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn363() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn364() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn365() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn366() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn367() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn368() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn369() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn370() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn371() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn372() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn373() 
  {
     $this->yyval = null; 
  }


  private function yyn374() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn375() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn376() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn377() 
  {
     $this->yyval = new YieldExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn378() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn379() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn380() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn381() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn382() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn383() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn384() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn385() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn386() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn387() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn388() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn389() 
  {
     $this->yyval = new PrintExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn390() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn391() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn392() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn393() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn394() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn395() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn396() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn397() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn398() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn399() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn400() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn401() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn402() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn403() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn404() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn405() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn406() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn407() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn408() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn409() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn410() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn411() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn412() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn413() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn414() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn415() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn416() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn417() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn418() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn419() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn420() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn421() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn422() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn423() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn424() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn425() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn426() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn427() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn428() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn429() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn430() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn431() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn432() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn433() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn434() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn435() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn436() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn437() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn438() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn439() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn440() 
  {
     $this->yyval = null; 
  }


  private function yyn441() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn442() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn443() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn444() 
  {
     $this->yyval = new YieldExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn445() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn446() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn447() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn448() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn449() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn450() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn451() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn452() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn453() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn454() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn455() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn456() 
  {
     $this->yyval = new PrintExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn457() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn458() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn459() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn460() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn461() 
  {
     
      $this->yyval = new CastExpr($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-2)]); 
      $this->error_at($this->yyastk[$this->yysp-(4-1)]->loc, ERR_WARN, 'legacy cast, use `expr as type` instead'); 
    
  }


  private function yyn462() 
  {
     
      $this->yyval = new CastExpr($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-2)]); 
      $this->error_at($this->yyastk[$this->yysp-(4-1)]->loc, ERR_WARN, 'legacy cast, use `expr as type` instead'); 
    
  }


  private function yyn463() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn464() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn465() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn466() 
  {
     $this->yyval = null; 
  }


  private function yyn467() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn468() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn469() 
  {
     $this->yyval = null; 
  }


  private function yyn470() 
  {
     $this->yyval = null; 
  }


  private function yyn471() 
  {
     $this->yyval = null; 
  }


  private function yyn472() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn473() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn474() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn475() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn476() 
  {
     $this->yyval = new NamedArg($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn477() 
  {
     $this->yyval = new RestArg($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn478() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn479() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn480() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn481() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn482() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn483() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn484() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn485() 
  {
     $this->lex->scan_regexp($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn486() 
  {
     $this->yyval = new RegexpLit($this->yyastk[$this->yysp-(3-3)]->value); 
  }


  private function yyn487() 
  {
     $this->yyval = new Name($this->yyastk[$this->yysp-(1-1)], false); 
  }


  private function yyn488() 
  {
     $this->yyval = new Name($this->yyastk[$this->yysp-(2-2)], true); 
  }


  private function yyn489() 
  {
     $this->yyastk[$this->yysp-(3-1)]->add($this->yyastk[$this->yysp-(3-3)]); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn490() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn491() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn492() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn493() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn494() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn495() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn496() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn497() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn498() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn499() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn500() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn501() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn502() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn503() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn504() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn505() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn506() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn507() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn508() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn509() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn510() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn511() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn512() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn513() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn514() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn515() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn516() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn517() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn518() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn519() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn520() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn521() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn522() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn523() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn524() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn525() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn526() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn527() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn528() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn529() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn530() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn531() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn532() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn533() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn534() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn535() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn536() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn537() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn538() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn539() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn540() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn541() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn542() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn543() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn544() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn545() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn546() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn547() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn548() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn549() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn550() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn551() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn552() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn553() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn554() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn555() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn556() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn557() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn558() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn559() 
  {
     $this->yyval = new ThisExpr; 
  }


  private function yyn560() 
  {
     $this->yyval = new SuperExpr; 
  }


  private function yyn561() 
  {
     $this->yyval = new NullLit; 
  }


  private function yyn562() 
  {
     $this->yyval = new TrueLit; 
  }


  private function yyn563() 
  {
     $this->yyval = new FalseLit; 
  }


  private function yyn564() 
  {
     $this->yyval = new StrLit(dirname($this->yyastk[$this->yysp-(1-1)]->loc->file), 'c'); 
  }


  private function yyn565() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->file, 'c'); 
  }


  private function yyn566() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->line, 'c'); 
  }


  private function yyn567() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->coln, 'c'); 
  }


  private function yyn568() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn569() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn570() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn571() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn572() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->flag); 
  }


  private function yyn573() 
  {
     $this->yyval = new LNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn574() 
  {
     $this->yyval = new DNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn575() 
  {
     $this->yyval = new SNumLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->suffix); 
  }


  private function yyn576() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn577() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn578() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn579() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn580() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn581() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn582() 
  {
     $this->yyval = new ArrLit(null); 
  }


  private function yyn583() 
  {
     $this->yyval = new ArrGen($this->yyastk[$this->yysp-(9-2)], $this->yyastk[$this->yysp-(9-5)], $this->yyastk[$this->yysp-(9-7)]); 
  }


  private function yyn584() 
  {
     $this->yyval = new ArrLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn585() 
  {
     $this->yyval = null; 
  }


  private function yyn586() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn587() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn588() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn589() 
  {
     $this->yyval = new SpreadExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn590() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn591() 
  {
     $this->yyval = new ObjLit(null); 
  }


  private function yyn592() 
  {
     $this->yyval = new ObjLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn593() 
  {
     $this->yyval = null; 
  }


  private function yyn594() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn595() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn596() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn597() 
  {
     $this->yyval = new ObjPair($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn598() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn599() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn600() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn601() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn602() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn603() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn604() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn605() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn606() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn607() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn608() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn609() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn610() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn611() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn612() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn613() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn614() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn615() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn616() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn617() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn618() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn619() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn620() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn621() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn622() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn623() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn624() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn625() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn626() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn627() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn628() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn629() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn630() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn631() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn632() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn633() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn634() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn635() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn636() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn637() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn638() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn639() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn640() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn641() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn642() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn643() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn644() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn645() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn646() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn647() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn648() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn649() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn650() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn651() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn652() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn653() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn654() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn655() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn656() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn657() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn658() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn659() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }

}

