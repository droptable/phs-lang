<?php

/* this parser-skeleton is based on the awesome 
   work of nikic (https://github.com/nikic) 
   with some extensions (error-recovery and location-tracking) */

/**
 * This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *   the grammar file gen/yy-parser-tpl.y
 *   the parser skeleton gen/kymacc.php.parser
 *
 * The skeleton for this parser was written by Moriyoshi Koizumi and is based on
 * the work by Masato Bito and is in the PUBLIC DOMAIN.
 */

namespace phs;


const YYERRTOK = 256;
const T_APLUS = 257;
const T_AMINUS = 258;
const T_AMUL = 259;
const T_ADIV = 260;
const T_AMOD = 261;
const T_APOW = 262;
const T_ABIT_NOT = 263;
const T_ABIT_OR = 264;
const T_ABIT_AND = 265;
const T_ABIT_XOR = 266;
const T_ABOOL_OR = 267;
const T_ABOOL_AND = 268;
const T_ABOOL_XOR = 269;
const T_ASHIFT_L = 270;
const T_ASHIFT_R = 271;
const T_RANGE = 272;
const T_YIELD = 273;
const T_THROW = 274;
const T_BOOL_OR = 275;
const T_BOOL_XOR = 276;
const T_BOOL_AND = 277;
const T_EQ = 278;
const T_NEQ = 279;
const T_IN = 280;
const T_IS = 281;
const T_ISNT = 282;
const T_GTE = 283;
const T_LTE = 284;
const T_SL = 285;
const T_SR = 286;
const T_POW = 287;
const T_AS = 288;
const T_REST = 289;
const T_DEL = 290;
const T_INC = 291;
const T_DEC = 292;
const T_NEW = 293;
const T_ARR = 294;
const T_DDDOT = 295;
const T_FN = 296;
const T_LET = 297;
const T_USE = 298;
const T_ENUM = 299;
const T_CLASS = 300;
const T_TRAIT = 301;
const T_IFACE = 302;
const T_MODULE = 303;
const T_REQUIRE = 304;
const T_IDENT = 305;
const T_LNUM = 306;
const T_DNUM = 307;
const T_SNUM = 308;
const T_STRING = 309;
const T_REGEXP = 310;
const T_TRUE = 311;
const T_FALSE = 312;
const T_NULL = 313;
const T_THIS = 314;
const T_SUPER = 315;
const T_GET = 316;
const T_SET = 317;
const T_DO = 318;
const T_IF = 319;
const T_ELSIF = 320;
const T_ELSE = 321;
const T_FOR = 322;
const T_TRY = 323;
const T_GOTO = 324;
const T_BREAK = 325;
const T_CONTINUE = 326;
const T_CATCH = 327;
const T_FINALLY = 328;
const T_WHILE = 329;
const T_ASSERT = 330;
const T_SWITCH = 331;
const T_CASE = 332;
const T_DEFAULT = 333;
const T_RETURN = 334;
const T_CONST = 335;
const T_FINAL = 336;
const T_GLOBAL = 337;
const T_STATIC = 338;
const T_EXTERN = 339;
const T_PUBLIC = 340;
const T_PRIVATE = 341;
const T_PROTECTED = 342;
const T_SEALED = 343;
const T_INLINE = 344;
const T_PHP = 345;
const T_TEST = 346;
const T_CFILE = 347;
const T_CLINE = 348;
const T_CCOLN = 349;
const T_CFN = 350;
const T_CCLASS = 351;
const T_CMETHOD = 352;
const T_CMODULE = 353;
const T_NL = 354;
const T_TINT = 355;
const T_TBOOL = 356;
const T_TFLOAT = 357;
const T_TSTRING = 358;
const T_TREGEXP = 359;
const T_INVL = 360;
const T_END = 361;
const T_SYNC = 362;

require_once 'context.php';
require_once 'parser_base.php';

require_once 'ast.php';
require_once 'glob.php';
require_once 'lexer.php';

use phs\ast\Node;
use phs\ast\Unit;
use phs\ast\Module;
use phs\ast\Program;
use phs\ast\RequireDecl;
use phs\ast\AttrDecl;
use phs\ast\CompAttr;
use phs\ast\TopexAttr;
use phs\ast\AttrDef;
use phs\ast\AttrVal;
use phs\ast\UseDecl;
use phs\ast\UseAlias;
use phs\ast\UseUnpack;
use phs\ast\EnumDecl;
use phs\ast\VarItem;
use phs\ast\ArrDestr;
use phs\ast\ObjDestr;
use phs\ast\ClassDecl;
use phs\ast\CtorDecl;
use phs\ast\DtorDecl;
use phs\ast\GetterDecl;
use phs\ast\SetterDecl;
use phs\ast\NestedMods;
use phs\ast\TraitUse;
use phs\ast\TraitItem;
use phs\ast\TraitDecl;
use phs\ast\IfaceDecl;
use phs\ast\LetDecl;
use phs\ast\VarDecl;
use phs\ast\FnDecl;
use phs\ast\FnExpr;
use phs\ast\Block;
use phs\ast\ReturnStmt;
use phs\ast\Param;
use phs\ast\ThisParam;
use phs\ast\RestParam;
use phs\ast\DoStmt;
use phs\ast\IfStmt;
use phs\ast\ForInStmt;
use phs\ast\ForStmt;
use phs\ast\TryStmt;
use phs\ast\PhpStmt;
use phs\ast\GotoStmt;
use phs\ast\TestStmt;
use phs\ast\BreakStmt;
use phs\ast\ContinueStmt;
use phs\ast\ThrowStmt;
use phs\ast\WhileStmt;
use phs\ast\YieldStmt;
use phs\ast\AssertStmt;
use phs\ast\SwitchStmt;
use phs\ast\LabeledStmt;
use phs\ast\ElsifItem;
use phs\ast\ElseItem;
use phs\ast\CatchItem;
use phs\ast\FinallyItem;
use phs\ast\PhpUse;
use phs\ast\PhpUseItem;
use phs\ast\CaseItem;
use phs\ast\CaseLabel;
use phs\ast\ExprStmt;
use phs\ast\BinExpr;
use phs\ast\CheckExpr;
use phs\ast\CastExpr;
use phs\ast\UpdateExpr;
use phs\ast\AssignExpr;
use phs\ast\MemberExpr;
use phs\ast\CondExpr;
use phs\ast\CallExpr;
use phs\ast\UnaryExpr;
use phs\ast\NewExpr;
use phs\ast\DelExpr;
use phs\ast\YieldExpr;
use phs\ast\NamedArg;
use phs\ast\RestArg;
use phs\ast\RegexpLit;
use phs\ast\Name;
use phs\ast\TypeId;
use phs\ast\Ident;
use phs\ast\ThisExpr;
use phs\ast\SuperExpr;
use phs\ast\NullLit;
use phs\ast\TrueLit;
use phs\ast\FalseLit;
use phs\ast\StrLit;
use phs\ast\EngineConst;
use phs\ast\LNumLit;
use phs\ast\DNumLit;
use phs\ast\SNumLit;
use phs\ast\ArrLit;
use phs\ast\ArrGen;
use phs\ast\SpreadExpr;
use phs\ast\ObjLit;
use phs\ast\ObjPair;


class Parser extends ParserBase
{
  const TOKEN_NONE    = -1;
  const TOKEN_INVALID = 132;

  const TOKEN_MAP_SIZE = 363;

  const YYLAST       = 1653;
  const YY2TBLSTATE  = 589;
  const YYGLAST      = 1253;
  const YYNLSTATES   = 671;
  const YYINTERRTOK  = 1;
  const YYUNEXPECTED = 32767;
  const YYDEFAULT    = -32766;

  /* @var array Map of token ids to their respective names */
  private static $terminals = [
    "EOF",
    "error",
    "','",
    "T_APLUS",
    "T_AMINUS",
    "T_AMUL",
    "T_ADIV",
    "T_AMOD",
    "T_APOW",
    "T_ABIT_NOT",
    "T_ABIT_OR",
    "T_ABIT_AND",
    "T_ABIT_XOR",
    "T_ABOOL_OR",
    "T_ABOOL_AND",
    "T_ABOOL_XOR",
    "T_ASHIFT_L",
    "T_ASHIFT_R",
    "'='",
    "T_RANGE",
    "T_YIELD",
    "T_THROW",
    "'?'",
    "':'",
    "T_BOOL_OR",
    "T_BOOL_XOR",
    "T_BOOL_AND",
    "'|'",
    "'^'",
    "'&'",
    "T_EQ",
    "T_NEQ",
    "T_IN",
    "T_IS",
    "T_ISNT",
    "T_GTE",
    "T_LTE",
    "'>'",
    "'<'",
    "T_SL",
    "T_SR",
    "'+'",
    "'-'",
    "'~'",
    "'*'",
    "'/'",
    "'%'",
    "T_POW",
    "T_AS",
    "T_REST",
    "T_DEL",
    "T_INC",
    "T_DEC",
    "'!'",
    "T_NEW",
    "'.'",
    "'['",
    "']'",
    "'('",
    "')'",
    "T_ARR",
    "T_DDDOT",
    "T_FN",
    "T_LET",
    "T_USE",
    "T_ENUM",
    "T_CLASS",
    "T_TRAIT",
    "T_IFACE",
    "T_MODULE",
    "T_REQUIRE",
    "T_IDENT",
    "T_LNUM",
    "T_DNUM",
    "T_SNUM",
    "T_STRING",
    "T_REGEXP",
    "T_TRUE",
    "T_FALSE",
    "T_NULL",
    "T_THIS",
    "T_SUPER",
    "T_GET",
    "T_SET",
    "T_DO",
    "T_IF",
    "T_ELSIF",
    "T_ELSE",
    "T_FOR",
    "T_TRY",
    "T_GOTO",
    "T_BREAK",
    "T_CONTINUE",
    "T_CATCH",
    "T_FINALLY",
    "T_WHILE",
    "T_ASSERT",
    "T_SWITCH",
    "T_CASE",
    "T_DEFAULT",
    "T_RETURN",
    "T_CONST",
    "T_FINAL",
    "T_GLOBAL",
    "T_STATIC",
    "T_EXTERN",
    "T_PUBLIC",
    "T_PRIVATE",
    "T_PROTECTED",
    "T_SEALED",
    "T_INLINE",
    "T_PHP",
    "T_TEST",
    "T_CFILE",
    "T_CLINE",
    "T_CCOLN",
    "T_CFN",
    "T_CCLASS",
    "T_CMETHOD",
    "T_CMODULE",
    "T_NL",
    "T_TINT",
    "T_TBOOL",
    "T_TFLOAT",
    "T_TSTRING",
    "T_TREGEXP",
    "T_END",
    "T_SYNC",
    "';'",
    "'{'",
    "'}'",
    "'@'"
    , "???"
  ];

  /* @var array Map which translates lexer tokens to internal tokens */
  private static $translate = [
        0,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,   53,  132,  132,  132,   46,   29,  132,
       58,   59,   44,   41,    2,   42,   55,   45,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,   23,  128,
       38,   18,   37,   22,  131,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,   56,  132,   57,   28,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  129,   27,  130,   43,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,    1,    3,    4,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   19,   20,   21,   24,   25,   26,   30,   31,
       32,   33,   34,   35,   36,   39,   40,   47,   48,   49,
       50,   51,   52,   54,   60,   61,   62,   63,   64,   65,
       66,   67,   68,   69,   70,   71,   72,   73,   74,   75,
       76,   77,   78,   79,   80,   81,   82,   83,   84,   85,
       86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
       96,   97,   98,   99,  100,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
      116,  117,  118,  119,  120,  121,  122,  123,  124,  125,
      132,  126,  127
  ];

  private static $yyaction = [
     1311, 1283,  283,  284,  285,  286,  431,  413,  414,  287,
      288,  289,  290,  291,  292,  293,  294,  295,  296,  297,
      298,  299,  415,  299,  415, 1092, 1093, 1092, 1093,   18,
      145,  320,  131,  317,  455,  845,  204,  839,  606,  280,
      281,  282, 1271, 1272, 1286, 1299, 1289, 1290, 1291, 1287,
     1310, 1169,  501,  502,    0, 1242,  606, 1276, 1277, 1278,
     1292, 1308, 1170, 1171, 1304, 1279, 1280, 1281, 1302, 1282,
     1309, 1305, 1306, 1284, 1285, 1303, 1275, 1300, 1301,  432,
     1307, 1294, 1295, 1312, 1293, 1288, 1296, 1297, 1298, 1318,
     1319, 1273, 1274, 1320, 1321, 1322, 1323, 1324, 1325, 1326,
     -103, 1313, 1314, 1315, 1316, 1317, 1214, 1185,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,   18,  145,-32766,  131,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,  615,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766, 1173, 1174,
     1188, 1201, 1191, 1192, 1193, 1189, 1213, 1169, 1164, 1165,
     1166, 1167, 1168, 1178, 1179, 1180, 1194, 1211, 1170, 1171,
     1207, 1181, 1182, 1183, 1205, 1184, 1212, 1208, 1209, 1186,
     1187, 1206, 1177, 1202, 1203, 1204, 1210, 1196, 1197, 1215,
     1195, 1190, 1198, 1199, 1200, 1221, 1222, 1175, 1176, 1223,
     1224, 1225, 1226, 1227, 1228, 1229,  636, 1216, 1217, 1218,
     1219, 1220,   -1,  535,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,  635,  146,  147,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,  626,  148,  149,  150,  144,  630,  279,  280,
      281,  282,  489,  151,  152,  153,  337, 1170, 1171,-32766,
    -32766,-32766,-32766,  507,  -53,  -53,  447,  -53,  -53,  491,
      492,  439,  136,  498,  505,  656,  728,  729,  730,  731,
      737,  732,  733,  734,  735,  736,   21,  571,  794, 1169,
      526,  572,  493,  456,  457,  435,  535,  573,  154,  574,
     1170, 1171,  137,  728,  729,  730,  731,  737,  732,  733,
      734,  735,  736,  599,  520,  146,  147,-32766,-32766,-32766,
    -32766,  302,-32767,-32767,-32767,-32767,-32767,-32767,  703,   14,
      925,    9,  583,  451,  133,  594,  148,  149,  150,  595,
      237,  238,  239,  792,  395,  489,  151,  152,  153,  337,
      617,  303,  300,  715,  443,  444,  487,  -53,  -53,  447,
      -53,  -53,  491,  492,  440,  136,  230,  410,  411,  231,
      232,  233,  234,  235,  236,  237,  238,  239,  619,   21,
      571,  315,  376,  526,  572,  493,  456,  457,  631,  535,
      573,  154,  574,  445,  396,  137,  728,  729,  730,  731,
      737,  732,  733,  734,  735,  736,  599,  520,  146,  147,
      296,  297,  298,  299,  415,  455,  449, 1092, 1093,  281,
      282,  703,  488,  925,    9,  -11,  451,  434,  433,  148,
      149,  150,  314,  501,  502,  510,  255,  878,  489,  151,
      152,  153,  337,-32766,-32766,-32766, 1142,  928,  888,  818,
      -53,  -53,  447,  -53,  -53,  491,  492,  440,  136,-32767,
    -32767,-32767,-32767,-32767,-32767,-32767,  235,  236,  237,  238,
      239,  597,   21,  571,  797,  301,  526,  572,  493,  456,
      457, -104,  909,  573,  154,  574,  446,  164,  137,  728,
      729,  730,  731,  737,  732,  733,  734,  735,  736,  599,
      520,  240,  241,  242,  243,  412,  438, 1261, 1026, 1027,
    -32766,-32766,   16,  142,  703,  131,  925,    9,  -10,  451,
      205,  206,  207,  208,  209,  210,  211,  212,  213,  214,
      215,  216,  217,  218,  219,  220,  221,  490,  490,  141,
      450,  222,  223,  224,  225,  226,  227,  228,  229,  230,
      410,  411,  231,  232,  233,  234,  235,  236,  237,  238,
      239,  240,  241,  242,  243,  412,  -16,  535, 1026, 1027,
      431,  889,   16,  142,  278,  131,  431,  144,  455,  279,
      280,  281,  282,  504,  386, 1169,  146,  147,  135,  311,
     -170, 1169,  604,  657,  252, -164,  508,  509, 1164, 1165,
     1166, 1167, 1168,  448,  658,    1,  316,  148,  149,  150,
      842,  307,  431,  924,  591,  836,  489,  151,  152,  153,
      337,  641,  770,  809,  321,  490,  923, 1169,  -53,  -53,
      447,  -53,  -53,  491,  492, 1169,  136,  258,  437,  312,
      162,  832,  920,  432, -103, 1144,  319, -170, 1252,  432,
       21,  571, -164,  490,  526,  572,  493,  456,  457,   16,
      142,  573,  154,  574,  490,  308,  137,  728,  729,  730,
      731,  737,  732,  733,  734,  735,  736,  599,  520,    6,
      253,  490,  490,-32766,-32766,  378,  306,  628,   17,  143,
      617,  497,  703,  919,  925,    9,  257,  451,  165,  166,
      167,  168,  169,  170,  171,  172,  173,  174,  175,  176,
      177,  178,  179,  180,  181,  496,  429,  139,  282,  182,
      183,  184,  185,  186,  187,  188,  189,  190,  407,  408,
      191,  192,  193,  194,  195,  196,  197,  198,  199,  200,
      201,  202,  203,  409,  535,  245,  962,  963,-32766,-32766,
       15,  140,  528,  582,  304,  648,   12,  800,  382,  802,
      383,  305,-32766,  146,  147,  436,  246,  247,  248,    5,
        2,  756,  384,  255,  506,  499,  249,  250,  251,  339,
      162,  441,   19,  129,  148,  149,  150,  454,  377, 1255,
      495,  430, 1254,  489,  151,  152,  153,  337,  983, 1046,
      322, 1138, 1113, 1253, 1270,  -53,  -53,  447,  -53,  -53,
      491,  492,  749,  136, 1112, 1047, 1137,  982,  462,  261,
      478,  138,  633,  108,-32767,  490,  714,   21,  571, 1143,
      831,  526,  572,  493,  456,  457,  764,  544,  573,  154,
      574,  598,  759,  137,  728,  729,  730,  731,  737,  732,
      733,  734,  735,  736,  599,  520,  146,  147,  760,  596,
      309,  763,  244,   24,  711,   31, 1141,   27, 1140,  703,
     -179,  925,    9,-32766,  451,  668,   30,  148,  149,  150,
      830,   29,  490,   28,  586,  310,  489,  151,  152,  153,
      337,  256, 1169,  323,-32766,-32766,-32766,   26,  -53,  -53,
      622, -179, 1242,-32766,-32766,-32766,-32766,-32766, 1158,  581,
      544,  138,  808,  691,  707,-32766,   13,  809,  702, 1045,
       21,  571,  163,  783,  526,  572,  493,  456,  457,  146,
      147,  573,  154,  574, -245, -245,  137,  728,  729,  730,
      731,  737,  732,  733,  734,  735,  736,  599,  520,  313,
      148,  149,  150, 1136,  854,    0,  716,  874,  872,  489,
      151,  152,  153,  337,  925,    9, -245,  453,  873,  871,
      926,  -53,  -53,  879, 1164, 1165, 1166, 1167, 1168,  868,
      885,    0,-32766,  544,  814,  813,  877,  793,  882,  798,
      927,  875,  819,   21,  571,  705,  881,  526,  572,  493,
      456,  457,  146,  147,  573,  154,  574,  304,  648,  137,
      728,  729,  730,  731,  737,  732,  733,  734,  735,  736,
      599,  520,  785,  148,  149,  150,  790,  788,  825,  706,
        0,  428,  489,  151,  152,  153,  337,  925,    9,  518,
      453,  564,    2,  254,  -53,  -53,  259,  260,    9,    0,
     1111,  750,  717,  722,  880,  981,  515,  755,  791,  801,
      738,  867,  679,  799,  680, 1262,   21,  571, 1263,    0,
      526,  572,  493,  456,  457,  146,  147,  573,  154,  574,
        0,    0,  137,  728,  729,  730,  731,  737,  732,  733,
      734,  735,  736,  599,  520,    0,  148,  149,  150,    0,
        0,    0,    0,    0,    0,  489,  151,  152,  153,  337,
      925,    9,  922,  453,    0,    0,    0,  -53,  -53,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  544,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   21,
      571,    0,    0,  526,  572,  493,  456,  457,  146,  147,
      573,  154,  574,    0,    0,  137,  728,  729,  730,  731,
      737,  732,  733,  734,  735,  736,  599,  520,    0,  148,
      149,  150,    0,    0,    0,    0,    0,    0,  489,  151,
      152,  153,  337,  925,    9,  921,  453,    0,    0,    0,
      -53,  -53,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   21,  571,    0,    0,  526,  572,  493,  456,
      457,    0,    0,  573,  154,  574,    0,    0,  137,  728,
      729,  730,  731,  737,  732,  733,  734,  735,  736,  599,
      520,  155,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  925,    9,    0,  453,
        0,    0,  156,  157,  158,  609,  670,    0,    0,    0,
        0,  494,  159,  160,  161,  338,    0,  130,    0,  128,
        0,    0,  490,  452,  146,  147,    0,    0,    0,    0,
        0,    0, 1169, 1243, 1244, 1245, 1242,    0, 1233, 1234,
     1232, 1230, 1231, 1170, 1171,  148,  149,  150,    0,    0,
        0,    0,    0,    0,  489,  151,  152,  153,  337,    0,
        0,    0,    0,    0,    0,    0,-32766,    0,  624,    0,
        0,    0,    0,    0, 1235, 1236, 1237, 1238, 1239, 1240,
     1241,    0,    0,    0,    0,    0,    0,  245,   21,  571,
       11,    0,  526,  572,  493,  456,  457,    0,    0,  573,
      154,  574,    0,    0,  137,    0,    0,    0,  246,  247,
      248,    0,    0,    0,    0,  599,  520,  499,  249,  250,
      251,  339,    0,    0,    0,  129,    0,    0,    0,  454,
      -53,    0,  925,    9,  262,  263,  264,  265,  266,  267,
      268,  269,  270,  271,  272,  273,  274,  275,  276,  277,
      278,    0,    0,  144,    0,  279,  280,  281,  282,    0,
        0,    0,    0,  318,    0,    0,    0,    0,  728,  729,
      730,  731,  737,  732,  733,  734,  735,  736,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,  929,    0,-32766,    0,-32766,
    -32766,-32766,-32766,-32766,  262,  263,  264,  265,  266,  267,
      268,  269,  270,  271,  272,  273,  274,  275,  276,  277,
      278,    0,    0,  144,    0,  279,  280,  281,  282,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,    0,    0,-32766,    0,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,    0,    0,-32766,    0,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,    0,    0,-32766,    0,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,-32766,
    -32766,    0,-32766,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    -32766,-32766,-32766,    0,    0,    0,    0,    0,    0,-32766,
    -32766,-32766,-32766,-32766,    0,    0,    0,-32766,    0,    0,
    -32766,-32766,    0,    0,    0,    0,    0,    0,    0,    0,
    -32766,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,-32766,-32766
  ];

  private static $yycheck = [
       20,   21,   28,   29,   30,   31,   56,   33,   34,   35,
       36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
       46,   47,   48,   47,   48,   51,   52,   51,   52,   55,
       56,   18,   58,   18,   64,   22,   56,   22,    1,   25,
       26,   27,   62,   63,   64,   65,   66,   67,   68,   69,
       70,   71,   82,   83,    0,   75,    1,   77,   78,   79,
       80,   81,   82,   83,   84,   85,   86,   87,   88,   89,
       90,   91,   92,   93,   94,   95,   96,   97,   98,  129,
      100,  101,  102,  103,  104,  105,  106,  107,  108,  109,
      110,  111,  112,  113,  114,  115,  116,  117,  118,  119,
      130,  121,  122,  123,  124,  125,   20,   21,    3,    4,
        5,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   55,   56,   22,   58,   24,
       25,   26,   27,   28,   29,   28,   29,   30,   31,    1,
       33,   34,   35,   36,   37,   38,   39,   40,   62,   63,
       64,   65,   66,   67,   68,   69,   70,   71,  121,  122,
      123,  124,  125,   77,   78,   79,   80,   81,   82,   83,
       84,   85,   86,   87,   88,   89,   90,   91,   92,   93,
       94,   95,   96,   97,   98,   99,  100,  101,  102,  103,
      104,  105,  106,  107,  108,  109,  110,  111,  112,  113,
      114,  115,  116,  117,  118,  119,    1,  121,  122,  123,
      124,  125,    0,    1,    3,    4,    5,    6,    7,    8,
        9,   10,   11,   12,   13,   14,   15,   16,   17,   18,
       19,    1,   20,   21,    3,    4,    5,    6,    7,    8,
        9,   10,   11,   12,   13,   14,   15,   16,   17,   18,
       82,   83,    1,   41,   42,   43,   22,    1,   24,   25,
       26,   27,   50,   51,   52,   53,   54,   82,   83,   28,
       29,   30,   31,   48,   62,   63,   64,   65,   66,   67,
       68,   69,   70,   48,   48,    1,  101,  102,  103,  104,
      105,  106,  107,  108,  109,  110,   84,   85,  130,   71,
       88,   89,   90,   91,   92,    2,    1,   95,   96,   97,
       82,   83,  100,  101,  102,  103,  104,  105,  106,  107,
      108,  109,  110,  111,  112,   20,   21,   28,   29,   30,
       31,    2,   33,   34,   35,   36,   37,   38,  126,    2,
      128,  129,   23,  131,    2,   50,   41,   42,   43,   54,
       41,   42,   43,  128,  129,   50,   51,   52,   53,   54,
       65,   32,   32,  128,  129,  129,    2,   62,   63,   64,
       65,   66,   67,   68,   69,   70,   32,   33,   34,   35,
       36,   37,   38,   39,   40,   41,   42,   43,    1,   84,
       85,   60,   18,   88,   89,   90,   91,   92,    1,    1,
       95,   96,   97,   23,   48,  100,  101,  102,  103,  104,
      105,  106,  107,  108,  109,  110,  111,  112,   20,   21,
       44,   45,   46,   47,   48,   64,    2,   51,   52,   26,
       27,  126,   58,  128,  129,  130,  131,    2,   58,   41,
       42,   43,    2,   82,   83,   23,   49,  128,   50,   51,
       52,   53,   54,   44,   45,   46,   59,  128,  128,  128,
       62,   63,   64,   65,   66,   67,   68,   69,   70,   32,
       33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
       43,   59,   84,   85,  128,   32,   88,   89,   90,   91,
       92,  130,  128,   95,   96,   97,    2,    2,  100,  101,
      102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,   44,   45,   46,   47,   48,    2,  130,   51,   52,
       28,   29,   55,   56,  126,   58,  128,  129,  130,  131,
        3,    4,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   61,   61,   22,
        2,   24,   25,   26,   27,   28,   29,   30,   31,   32,
       33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
       43,   44,   45,   46,   47,   48,    0,    1,   51,   52,
       56,  128,   55,   56,   19,   58,   56,   22,   64,   24,
       25,   26,   27,   49,    2,   71,   20,   21,    2,   18,
        2,   71,    1,    1,   18,    2,   82,   83,  121,  122,
      123,  124,  125,   23,    1,  129,   18,   41,   42,   43,
       22,   18,   56,  128,   80,   22,   50,   51,   52,   53,
       54,    1,    1,  127,   18,   61,  130,   71,   62,   63,
       64,   65,   66,   67,   68,   71,   70,   23,   58,   23,
       49,   59,   23,  129,  130,   59,   23,   59,   57,  129,
       84,   85,   59,   61,   88,   89,   90,   91,   92,   55,
       56,   95,   96,   97,   61,   23,  100,  101,  102,  103,
      104,  105,  106,  107,  108,  109,  110,  111,  112,  120,
       23,   61,   61,   55,   56,  129,   23,  128,   55,   56,
       65,   66,  126,   23,  128,  129,   23,  131,    3,    4,
        5,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   62,   63,   22,   27,   24,
       25,   26,   27,   28,   29,   30,   31,   32,   33,   34,
       35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
       45,   46,   47,   48,    1,   20,   51,   52,   82,   83,
       55,   56,   93,   94,   98,   99,   23,  128,  129,  128,
      129,   23,   28,   20,   21,   43,   41,   42,   43,  128,
      129,  128,  129,   49,   48,   50,   51,   52,   53,   54,
       49,   58,   55,   58,   41,   42,   43,   62,   58,   57,
       61,   63,   57,   50,   51,   52,   53,   54,   57,   57,
       60,   57,   57,   57,   57,   62,   63,   64,   65,   66,
       67,   68,   57,   70,   57,   57,   57,   57,   64,   58,
       58,   58,    1,   58,   58,   61,   59,   84,   85,   59,
       59,   88,   89,   90,   91,   92,   59,    1,   95,   96,
       97,   59,   59,  100,  101,  102,  103,  104,  105,  106,
      107,  108,  109,  110,  111,  112,   20,   21,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,  126,
       49,  128,  129,   20,  131,   59,   59,   41,   42,   43,
       59,   59,   61,   59,   86,   60,   50,   51,   52,   53,
       54,   60,   71,   60,   41,   42,   43,   87,   62,   63,
       88,   80,   75,   50,   51,   52,   53,   54,   76,   95,
        1,   58,  120,  120,  120,   62,  120,  127,  127,  130,
       84,   85,  111,  128,   88,   89,   90,   91,   92,   20,
       21,   95,   96,   97,   98,   99,  100,  101,  102,  103,
      104,  105,  106,  107,  108,  109,  110,  111,  112,  129,
       41,   42,   43,  130,  128,   -1,  128,  128,  128,   50,
       51,   52,   53,   54,  128,  129,  130,  131,  128,  128,
      128,   62,   63,  128,  121,  122,  123,  124,  125,  128,
      128,   -1,  129,    1,  128,  128,  128,  128,  128,  128,
      128,  128,  128,   84,   85,  128,  128,   88,   89,   90,
       91,   92,   20,   21,   95,   96,   97,   98,   99,  100,
      101,  102,  103,  104,  105,  106,  107,  108,  109,  110,
      111,  112,  128,   41,   42,   43,  128,  128,  128,  128,
       -1,  129,   50,   51,   52,   53,   54,  128,  129,  129,
      131,  129,  129,  129,   62,   63,  129,  129,  129,   -1,
      130,  130,  130,  130,  130,  130,    1,  130,  130,  130,
      130,  130,  130,  130,  130,  130,   84,   85,  130,   -1,
       88,   89,   90,   91,   92,   20,   21,   95,   96,   97,
       -1,   -1,  100,  101,  102,  103,  104,  105,  106,  107,
      108,  109,  110,  111,  112,   -1,   41,   42,   43,   -1,
       -1,   -1,   -1,   -1,   -1,   50,   51,   52,   53,   54,
      128,  129,  130,  131,   -1,   -1,   -1,   62,   63,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   84,
       85,   -1,   -1,   88,   89,   90,   91,   92,   20,   21,
       95,   96,   97,   -1,   -1,  100,  101,  102,  103,  104,
      105,  106,  107,  108,  109,  110,  111,  112,   -1,   41,
       42,   43,   -1,   -1,   -1,   -1,   -1,   -1,   50,   51,
       52,   53,   54,  128,  129,  130,  131,   -1,   -1,   -1,
       62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   84,   85,   -1,   -1,   88,   89,   90,   91,
       92,   -1,   -1,   95,   96,   97,   -1,   -1,  100,  101,
      102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,   20,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,  128,  129,   -1,  131,
       -1,   -1,   41,   42,   43,    1,   45,   -1,   -1,   -1,
       -1,   50,   51,   52,   53,   54,   -1,   56,   -1,   58,
       -1,   -1,   61,   62,   20,   21,   -1,   -1,   -1,   -1,
       -1,   -1,   71,   72,   73,   74,   75,   -1,   77,   78,
       79,   80,   81,   82,   83,   41,   42,   43,   -1,   -1,
       -1,   -1,   -1,   -1,   50,   51,   52,   53,   54,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   62,   -1,    1,   -1,
       -1,   -1,   -1,   -1,  113,  114,  115,  116,  117,  118,
      119,   -1,   -1,   -1,   -1,   -1,   -1,   20,   84,   85,
      129,   -1,   88,   89,   90,   91,   92,   -1,   -1,   95,
       96,   97,   -1,   -1,  100,   -1,   -1,   -1,   41,   42,
       43,   -1,   -1,   -1,   -1,  111,  112,   50,   51,   52,
       53,   54,   -1,   -1,   -1,   58,   -1,   -1,   -1,   62,
       63,   -1,  128,  129,    3,    4,    5,    6,    7,    8,
        9,   10,   11,   12,   13,   14,   15,   16,   17,   18,
       19,   -1,   -1,   22,   -1,   24,   25,   26,   27,   -1,
       -1,   -1,   -1,   32,   -1,   -1,   -1,   -1,  101,  102,
      103,  104,  105,  106,  107,  108,  109,  110,    3,    4,
        5,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,  128,   -1,   22,   -1,   24,
       25,   26,   27,   28,    3,    4,    5,    6,    7,    8,
        9,   10,   11,   12,   13,   14,   15,   16,   17,   18,
       19,   -1,   -1,   22,   -1,   24,   25,   26,   27,    3,
        4,    5,    6,    7,    8,    9,   10,   11,   12,   13,
       14,   15,   16,   17,   18,   19,   -1,   -1,   22,   -1,
       24,   25,   26,   27,    3,    4,    5,    6,    7,    8,
        9,   10,   11,   12,   13,   14,   15,   16,   17,   18,
       19,   -1,   -1,   22,   -1,   24,   25,   26,    3,    4,
        5,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   -1,   -1,   22,   -1,   24,
       25,    3,    4,    5,    6,    7,    8,    9,   10,   11,
       12,   13,   14,   15,   16,   17,   18,   19,   -1,   20,
       22,   -1,   24,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       41,   42,   43,   -1,   -1,   -1,   -1,   -1,   -1,   50,
       51,   52,   53,   54,   -1,   -1,   -1,   58,   -1,   -1,
       61,   62,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       71,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   82,   83
  ];

  private static $yybase = [
      212,  398,  398,  305,  576,  753,  753,  846,  919, 1065,
      992,  387, 1138, 1138,  -20,  924,  927,  928,  830,   86,
      319, 1274, 1274, 1274, 1274, 1274, 1274, 1274, 1274, 1274,
     1274, 1274,  868,  873,  822,  819,  877,  878,  911,  748,
      770,  757,  652,  752,  769,  935,  799,  833,  633,  767,
      834,  832,  827,  680,  930,  910,  826,  909,  908,  705,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
     1401,  527,  527,  527,  527,  527,  527,  527, 1337, 1471,
     1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471,
     1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471,   37,   37,
      601,  397,  872,  741,  818,  734,  821,  870,   55,  667,
      256,  624,  230,  205,  626,  284, 1231, 1231, 1231, 1231,
     1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231,
     1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231,
     1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231,
     1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231,
     1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231,
     1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231,
     1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231,
     1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231,
     1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231,
     1231, 1231, 1231, 1231, 1231,  735,  735,  735,  735,  735,
      735,  735, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231,
     1231,  735,  735,  735,  735,  735,  735,  735,  735,  735,
      735,  735,  735,  735,  735,  735,  735,  735,  735,  735,
      735,  735,  735,  735,  735,  735,  735,  735,  735,  735,
      735,  735,  735,  735,  735,  735,  735,  735,  735,  735,
     1231, 1231,  735, 1231, 1231, 1231, 1231, 1231, 1231,  735,
      735,  735,  735, 1231, 1231, 1231, 1231, 1231, 1231,  735,
     1231, 1231, 1231, 1231,  231,  231,  231,  565,  211,  211,
      565,  211,  211,  234,  234, 1568, 1568,  863,  863,  863,
     1545, 1545,   14, 1521, 1521,  403, 1496, 1496,  701, 1445,
     1445,  -26,  105,  105,  744,  492,  344,  344,  437,  437,
      437,  437,  437,  344,  344,  437,  437,  437,  437,  437,
      241,  241,  299,  299,  299,  299, 1569,  831,  524,  530,
      530,  566,  -30,  -30,  -30,  361,  574,  574,  309,  309,
      309,  309,  107,  107,  168,  676,  676,  467,  467,  467,
      467,  467,  467,  376,  376,  376,  676,  487,  487,  487,
      487,  487,  487,  487,  487,  487,  409,  409,  409,  409,
      409,  409,  409,  409,  -24,  -24,  -24,  -24,  -50,  -50,
      -50,  -50,  -50,  630,  -50,  -50,  631,  613,  -50,  486,
      486,  602,  295,  774,  774,  774,  774,  774,  774,  774,
      774,  138,  740,  251,  740,  774,  851,  850,  635,  603,
      598,  225,  228,  934,  614,  614,  614,  614,  614,  614,
      643,  614,  614,  614,  614,  614,  614,  643,  228,   70,
       70,   70,   70,   70,   70,  643,  331,  228,  228,  228,
      228,  228,  228,  228,  228,  228,  228,  228,  228,  228,
      228,  228,  228,  228,  228,  228,  228,  228,  228,  228,
      228,  228,  228,  235,  651,  506,  329,  422,  666,  669,
      837,  841,  669,  841,  835,  835,  775,  380,  733,  874,
      590,  750,  843,  904,  805,  801,  495,  639,  663,  569,
      866,  641,  330,  453,  800,  867,  765,  931,  596,  592,
      544,  236,  932,  812,  923,  852,  364,  374,   15,  816,
      653,   13,  933,  356,  764,  808,  776,  820,  776,  776,
      776,  773,  929,  773,  773,  638,  342,  929,  638,  740,
      337,  773,  929,  837,  837,  764,  773,  808,  638,  740,
      732,  737,  740,  740,  740,  740,  929,  929,  929,  922,
       54,  739,  743,  842,  742,  745,  817,  813,  739,  862,
      824,  861,  840,  839,  920,  803,  772,  912,  586,  948,
      945,  683,  771,  944,  814,  738,  802,  806,  804,  739,
      751,  780,  673,  781,  739,  768,  754,  838,  943,  739,
      424,  787,  942,  836,  811,  581,  303,  855,  629,  736,
      941,  815,  940,  435,  939,  303,  755,  810,  809,  793,
      616,  938,  777,  739,  548,  869,  792,  937,  756,  871,
        0, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231,
     1231, 1231,  -20, 1231, 1231,    0,   86,   86,   86,   86,
        0,  527, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231,
     1231, 1231, 1231,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
       70,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  -26,    0,    0,    0,    0,    0,    0,    0, 1231,
      -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,
      -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26, 1231,
     1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231,
     1231, 1231, 1231, 1231, 1231, 1231, 1231,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 1231, 1231, 1231, 1231,
     1231, 1231, 1231,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231,
     1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231,
     1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231,
     1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231,
     1231,    0,    0, 1231,    0,    0,    0,    0,    0,    0,
     1231, 1231, 1231, 1231,    0,    0,    0,    0,    0,    0,
     1231,    0,    0,    0,    0,  527,  527,  527,  -26,  527,
      527,  -26,  527,  527,  -26,  -26,  527,  527, 1231, 1231,
     1231,  527,  527,  -26,  527,  527,  -26,  527,  527,  -26,
      527,  527,    0,  527,  527,  -26,  -26,  467,  467,  467,
      467,  467,  467,  467,  467,  467,  467,  467,  467,  467,
      467,  -26,  -26,  -26,  -26,  -26,  -26, 1231,  185,  185,
      185,  185,  185,  185,  185,  185,  185,  185,  185,  467,
      467,  467,  467,  -26,  -26,  185,  185,  185,    0,    0,
        0,    0,    0,    0,   70,   70,   70,  185,  228,  228,
      228,  228,  228,  228,  228,  228,  228,  467,  467,  467,
      467,  467,  467,  467,  467,   70,   70,   70,   70,  228,
      228,  228,  228,  228,  228,  228,  228,  228,  228,  228,
      228,  228,  228,  663,  228,  228,  228,  228,  228,  228,
      228,  228,  228,  228,  228,  228,  228,  228,  228,  663,
        0,    0,  739,    0,  666,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,    0,
        0,    0,    0,    0,    0,    0,   70,  929,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  739,  862,    0,  739,    0,
        0,  929,  929,    0,  929,  929,  929,  929,    0,  929,
      740,    0,  929,  929,  929,  929,  862,    0,    0,    0,
        0,  435,    0,    0,    0,  862,  435,  514,  514,    0,
        0,    0,    0,  494,  424,  739,  440,    0,    0,    0,
      440,    0,    0,  494,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,   70,    0,    0,   70,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   70
  ];

  private static $yydefault = [
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,  657,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,  589,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  259,
      588,  260,  294,  295,  296,  297,  298,  299,  300,  301,
      302,  303,  304,  305,  306,  307,  308,  293,  476,  358,
      359,  360,  361,  362,  363,  364,  365,  366,  367,  368,
      369,  370,  371,  372,  357,  589,  261,   73,  478,  596,
    32767,  477,  166,  262,  172,  169,  175,  177,32767,  263,
      424,  425,  426,  427,  428,  429,  430,  431,  432,  433,
      434,  435,  436,  437,  438,  423,  264,   77,32767,32767,
    32767,32767,32767,  657,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,  380,  282,  346,  446,  314,  378,
      413,  313,  377,  444,  443,  280,  344,32767,32767,32767,
      281,  345,  411,  279,  343,  412,  273,  337,  410,  274,
      338,  404,  272,  336,  405,  403,  285,  286,  287,  277,
      278,  276,  275,  349,  350,  351,  341,  342,  339,  340,
      416,  417,  408,  409,  406,  407,32767,32767,   53,   54,
       54,   54,   53,   53,   53,   53,  179,32767,  283,  284,
      347,  348,  414,  415,   53,   53,   53,  265,  266,  271,
      329,  330,  335,  396,  397,  402,   54,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,  267,  268,  269,  270,
      331,  332,  333,  334,  398,  399,  400,  401,   68,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  488,
      488,32767,32767,32767,  317,  316,  318,  320,  321,  319,
      324,  382,  381,  383,  385,  386,  384,  389,32767,  448,
      447,  449,  451,  452,  450,  455,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
      180,32767,32767,32767,32767,32767,32767,32767,  499,  500,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  192,
    32767,32767,  193,32767,32767,32767,32767,   90,32767,32767,
       86,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,   49,32767,32767,32767,32767,32767,   41,  167,32767,
    32767,  173,32767,32767,  234,  219,  462,  224,  156,  463,
      158,32767,32767,32767,32767,  322,  656,32767,  387,32767,
      656,32767,32767,32767,32767,  235,32767,  220,  453,32767,
       97,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,  482,  488,32767,32767,32767,32767,32767,   52,32767,
    32767,32767,32767,32767,32767,32767,   39,32767,   72,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  491,
    32767,32767,  488,32767,  181,32767,32767,32767,32767,   96,
       91,32767,32767,32767,32767,   76,  145,32767,32767,  241,
    32767,32767,32767,   69,32767,  144,32767,32767,32767,32767,
      176,32767,32767,  102,   98,32767,32767,32767,32767,32767,
      486
  ];

  private static $yygoto = [
       34,   78,   96,   95,   96,   78,   36,   37,  677,   39,
       40,   42,   43,   44,   48,   49,   32,   33,  464,  465,
      466,  467,  468,  469,   20,  324,  471,  472,  473,  474,
      475,  476,   60,   38,   61,   62,   63,   64,   65,   66,
       67,   68,   69,   70,   71,   72,   73,   74,   75,   76,
       77,  325,  335,  340,  343,  346,  349,  352,  356,  357,
      358,  359,  360,  361,  362,  388,  389,  397,  398,  399,
      416,  417,  418,  419,   41,   79,   80,   81,   82,   83,
       84,   85,   86,   87,   88,   89,   90,   91,   92,   93,
       94,  326,  336,  341,  344,  347,  350,  353,  363,  364,
      365,  366,  367,  368,  369,  390,  391,  400,  401,  402,
      420,  421,  422,  423,  566,  688,  638,  654,  667,  689,
      688,  709,   97,  328,   45,   98,  568,   99,  329,   46,
       47,  602,  602,  602,  602,  602,  602,  602,  602,  602,
      602,  602, 1268,  602,  602, 1268, 1172, 1172, 1172, 1172,
     1172, 1130,  602,  602,  602,  602,  602,  602,  602,  602,
      602,  602,  602,  804,  477,  485,  804,  642,  883,  708,
       50,   51,  684,   52,   53,  331,  101,  102,  332, 1269,
      653,  545, 1269,   54,  103,   55,  104,  105,   56,  678,
      106,  107,   57,   58,  998,  998,  998,  998,  998,  998,
      998,  998,  998,  998,  998,  918,  998,  998,   10, 1266,
     1258, 1146,  607,  644,  559,  998,  998,  998,  998,  998,
      998,  998,  998,  998,  998,  998,  999,  999,  999,  999,
      999,  999,  999,  999,  999,  999,  999, 1251,  999,  999,
     1248,  777, 1247,  751, 1249,  645,  834,  999,  999,  999,
      999,  999,  999,  999,  999,  999,  999,  999,  806,  806,
      806,  806,  632,  806,  806,  503,  632,  795,  655,  742,
      546,  746,  610,  565,  876,  861,  894,  897,  859,  856,
      857,  858,  860,  719,  562,  627,  640,  659, 1130, 1130,
     1130, 1130, 1130, 1130, 1130,  645,  751,  751,  758,  766,
      645,  513, 1129,  752, 1130, 1130, 1130, 1130, 1130, 1130,
     1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130,
     1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130,
     1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130,
     1130, 1130, 1130,  772,  911, 1130,   22,  662,   23,  614,
      899,  914, 1130, 1130, 1130, 1130,  643,  820, 1264,  908,
      893,   25, 1130,  327,  479,  480,  481,  482,  483,  484,
      960,  961, 1023, 1024, 1025, 1089, 1090, 1091,  822,  100,
      110,  111,  112,  113,  114,  115,  116,  117,  118,  119,
      120,  121,  122,  123,  124,  125,  330,  342,  345,  348,
      351,  354,  355,  370,  371,  372,  373,  374,  375,  392,
      393,  403,  404,  405,  424,  425,  426,  427,  866, 1250,
      126,  575,  578,  588,    0,    0,    0,  569,  570,  127,
      333,    0,  524,    0,    0,    0,    0,  334,    0, 1129,
     1129, 1129, 1129, 1129, 1129, 1129,    0,    0,  538,  538,
      538,  538,    0,  538,  538, 1129, 1129, 1129, 1129, 1129,
     1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
     1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
     1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
     1129, 1129, 1129, 1129,    0,    0, 1129,    0,    0,    0,
      824,    0,    0, 1129, 1129, 1129, 1129,  486,  459,  753,
      753,  753,  753, 1129,  727,  727,  727,  459,  460,  781,
      380,    0,  727,  781,  781,  781,  781,    0,    0,    0,
        0, 1139, 1139, 1139,  869,  826,    0,  826,  828,  828,
      862,  727,  900,    0, 1246,  787,  789,  786,  784,  625,
      811,  811,  811,  811,    0,  811,  811,  523,    0,  753,
      753,  753,  753,  753,    0,  753,  753,  525,    0,  753,
      531,  532,  533,  534,    0,  812,  812,  812,  812,    0,
      812,  812,  616,  579,  616,  589,  519,  612,  613,    0,
        0,  870,    0,  649,    0,    0,  904,    0,    0,    0,
        0,    0,    0,  986,    0,    0,    0,    0,    0,  557,
      903,  901,  902,    0,    0,    0,    0,    0,  649,  557,
      997, 1160,  537,  527,  611, 1062, 1161,  529,  530,  637,
     1128,  558,  592,  593,  561,  849,  721,  913,  665,  592,
      593,  666,  563,  669, 1116,    0,    0,    0,    0,    0,
        0,    0,    0, 1116, 1116, 1116, 1116, 1116, 1116, 1116,
     1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116,
     1116, 1116,  634,  810,  810,  810,  810,    0,  810,  810,
        0,  634,  634,    0,    0,    0,    0,    0,  577,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  629,  629,  629,  629,  629,  629,  629,  629,
      629,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      980,    0,    0,    0,    0,    0,    0,    0,  639,    0,
        0,  663,  639,    0,  514,  554,  517,    0,  608,  608,
      639,  608,  608,  639,  639,  663,    0,    0,    0,    0,
      461,  647,  650,    0,    0,    0,    0,    0,    0,    0,
        0, 1110,    0,    0,    0,    0,    0,    0,    0,    0,
     1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110,
     1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110,  387,
      381,    0,    0,    0,  381,  381,  381,  381,  387,    0,
        0,    0,    0,    0,    0,    0,  406,  406,  406,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  442,
        0,    0,    0,  442,  442,  442,  442,    0,    0,    0,
        0,    0,    0,    0,    0,  511,  511,  512,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1116,    0,    0, 1116,    0,    0, 1116, 1116,    0,
        0,    0,    0,    0,    0,    0, 1116,    0,    0, 1116,
        0,    0, 1116,    0,    0, 1116,    0,    0, 1116, 1116,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1116, 1116, 1116, 1116, 1116, 1116,
        0,  779,    0,    0,    0,  779,  779,  779,  779,    0,
        0,    0,    0,    0,    0,    0, 1116, 1116,    0,    0,
        0,    0,    0,    0,    0,    0,  780, 1116, 1116, 1116,
      780,  780,  780,  780,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1116, 1116,
     1116, 1116,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1110,    0,
        0, 1110,    0,    0, 1110, 1110,    0,    0,    0,    0,
        0,    0,    0, 1110,    0,    0, 1110,    0,    0, 1110,
        0,    0, 1110,    0,  996, 1110, 1110,    0,    0,    0,
        0, 1061,    0, 1116, 1116, 1116, 1116, 1116, 1116, 1127,
        0, 1110, 1110, 1110, 1110, 1110, 1110,    0,    0,    0,
        0,    0,    0,    0,  778,    0,    0,    0,  778,  778,
      778,  778,    0, 1110, 1110,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1110, 1110, 1110,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1110, 1110, 1110, 1110,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1116, 1116,    0,    0,    0,    0,  994,
        0,    0, 1059,    0,    0,    0,    0,    0,    0,    0,
        0, 1135, 1125,    0,    0,    0,    0,    0, 1135,    0,
     1110, 1110, 1110, 1110, 1110, 1110, 1135,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1110, 1110,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  660
  ];

  private static $yygcheck = [
       25,   25,   25,   25,   25,   25,   25,   25,    6,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   11,   49,   49,   49,   11,
       11,   11,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,  110,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   28,  107,  107,   28,    8,   28,   28,
       25,   25,   10,   25,   25,   25,   25,   25,   25,   86,
       39,   39,   86,   25,   25,   25,   25,   25,   25,    4,
       25,   25,   25,   25,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  101,  108,  108,   62,  125,
      122,  113,  106,  106,   82,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  109,  109,  109,  109,
      109,  109,  109,  109,  109,  109,  109,  117,  109,  109,
      115,   56,  114,   41,  116,   41,   72,  109,  109,  109,
      109,  109,  109,  109,  109,  109,  109,  109,   24,   24,
       24,   24,   29,   24,   24,   73,   29,   61,   42,   40,
       46,   43,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   34,   33,   26,   52,   50,  110,  110,
      110,  110,  110,  110,  110,   41,   41,   41,   50,   50,
       41,   32,  108,   41,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,   54,   98,  110,   76,   30,   76,   76,
       94,   99,  110,  110,  110,  110,   76,   68,  121,   96,
       92,   76,  110,   44,   44,   44,   44,   44,   44,   44,
      104,  104,  104,  104,  104,  104,  104,  104,   70,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   84,  110,
       44,  106,  106,  106,   -1,   -1,   -1,   44,   44,   44,
       44,   -1,   58,   -1,   -1,   -1,   -1,   44,   -1,  108,
      108,  108,  108,  108,  108,  108,   -1,   -1,   35,   35,
       35,   35,   -1,   35,   35,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,   -1,   -1,  108,   -1,   -1,   -1,
       59,   -1,   -1,  108,  108,  108,  108,   58,   29,   29,
       29,   29,   29,  108,   37,   37,   37,   29,   29,   15,
       36,   -1,   37,   15,   15,   15,   15,   -1,   -1,   -1,
       -1,  108,  108,  108,   59,   59,   -1,   59,   59,   59,
       59,   37,   59,   -1,   86,   59,   59,   59,   59,   35,
       21,   21,   21,   21,   -1,   21,   21,   58,   -1,   29,
       29,   29,   29,   29,   -1,   29,   29,   58,   -1,   29,
       58,   58,   58,   58,   -1,   22,   22,   22,   22,   -1,
       22,   22,   29,   29,   29,   29,   59,   29,   29,   -1,
       -1,   59,   -1,   29,   -1,   -1,   59,   -1,   -1,   -1,
       -1,   -1,   -1,  105,   -1,   -1,   -1,   -1,   -1,   29,
       59,   59,   59,   -1,   -1,   -1,   -1,   -1,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,  105,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,    7,   20,   20,   20,   20,   -1,   20,   20,
       -1,    7,    7,   -1,   -1,   -1,   -1,   -1,   86,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,    7,    7,    7,    7,    7,    7,    7,    7,
        7,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       75,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    7,   -1,
       -1,    7,    7,   -1,    7,    7,    7,   -1,    7,    7,
        7,    7,    7,    7,    7,    7,   -1,   -1,   -1,   -1,
        7,   86,   86,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   75,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   36,
       36,   -1,   -1,   -1,   36,   36,   36,   36,   36,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   36,   36,   36,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   35,
       -1,   -1,   -1,   35,   35,   35,   35,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   35,   35,   35,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,  105,   -1,   -1,  105,   -1,   -1,  105,  105,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,  105,   -1,   -1,  105,
       -1,   -1,  105,   -1,   -1,  105,   -1,   -1,  105,  105,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,  105,  105,  105,  105,  105,  105,
       -1,   21,   -1,   -1,   -1,   21,   21,   21,   21,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,  105,  105,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   22,  105,  105,  105,
       22,   22,   22,   22,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  105,  105,
      105,  105,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   75,   -1,
       -1,   75,   -1,   -1,   75,   75,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   75,   -1,   -1,   75,   -1,   -1,   75,
       -1,   -1,   75,   -1,  105,   75,   75,   -1,   -1,   -1,
       -1,  105,   -1,  105,  105,  105,  105,  105,  105,  105,
       -1,   75,   75,   75,   75,   75,   75,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   20,   -1,   -1,   -1,   20,   20,
       20,   20,   -1,   75,   75,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   75,   75,   75,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   75,   75,   75,   75,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,  105,  105,   -1,   -1,   -1,   -1,  105,
       -1,   -1,  105,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   75,  105,   -1,   -1,   -1,   -1,   -1,   75,   -1,
       75,   75,   75,   75,   75,   75,   75,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       75,   75,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   75
  ];

  private static $yygbase = [
        0,    0,    0,    0,  184,    0,    8,  295,  165,    0,
      169,  115,    0,    0,    0,  141,    0,    0,    0,    0,
      666,  543,  568,    0,  251, -130, -168,    0,  156,  131,
     -141,    0, -146, -160, -163,  441,  412,  135,    0, -248,
     -165, -135, -162, -164,  118,    0, -161,    0,    0, -266,
     -150,    0, -159,    0, -107,    0, -144,    0,  -22,   14,
        0, -128,  199,    0,    0,    0,    0,    0, -166,    0,
     -147,    0, -140, -122,    0,  661, -225,    0,    0,    0,
        0,    0,   80,    0, -104,    0,  168,    0,    0,    0,
        0,    0, -227,    0, -172,    0, -226,    0, -143, -167,
        0,  197,    0,    0,  -38,  544,   84, -174,  194,  226,
       43,    0,    0,   76, -134, -136, -132, -139,    0,    0,
        0, -222,   77,    0,    0,  195,    0
  ];

  private static $yygdefault = [
    -32768,  600,  673,  674,  675,  676,  686,  601,  623,    3,
      683,  685,    4,  690,  692,  693,  694,  695,  696,  697,
      698,  699,  700,  701,  704,   35,  539,  807,  803, 1159,
      651,  713,  551,  552,  718,  458,  379,  726,  652,  540,
      741,  618,  646,  745,  109,  754,  547,  590,  560,  661,
      765,  541,  553,  664,  771,  385,  776,  782,  521,  853,
      394,  796,    7,  805,  542,  543,  817, 1065,  821, 1131,
      823,  549,  833,  500,  550, 1044, 1156,  567,  855,  516,
      132,  134,  555,  522,  865,  584, 1155,  463,  884,  886,
      887,  587,  892,  896,  898,  585,  907,  556,  910,  915,
        8,  917,  536,   59,  959, 1050, 1163,  470, 1063, 1066,
     1064, 1132,  548, 1145, 1150, 1151, 1152, 1154,  603,  605,
      576, 1256, 1257,  620,  580, 1265,  621
  ];

  private static $yylhs = [
        0,    1,    1,    2,    2,    3,    3,    5,    6,    6,
        8,    8,    9,    9,   10,   10,    4,   12,   12,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   23,   23,   14,   27,   19,   26,
       26,   30,   30,   30,   13,   13,   13,   33,   33,   34,
       34,   34,   32,   35,   35,   36,   36,   37,   37,   37,
       37,   37,   37,   37,   37,   37,   37,   15,   38,   38,
       39,   39,   40,   40,   42,   42,   43,   43,   45,   45,
       46,   46,   41,   41,   16,   16,   47,   47,   47,   47,
       51,   51,   51,   51,   52,   52,   50,   48,   48,   48,
       53,   53,   54,   49,   49,   55,   55,   56,   56,   56,
       56,   56,   56,   56,   56,   56,   56,   56,   56,   56,
       56,   57,   57,   57,   60,   60,   61,   61,   17,   17,
       18,   18,   62,   62,   28,   28,   28,   28,   28,   63,
       63,   63,   21,   22,   64,   65,   20,   20,   20,   67,
       67,   69,   69,   66,   66,   68,   68,   70,   70,   58,
       58,   58,   71,   71,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   74,
       74,   73,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   81,   80,   80,   80,   77,
       77,   91,   91,   92,   78,   78,   93,   83,   83,   94,
       94,   94,   94,   84,   85,   85,   95,   95,   96,   97,
       97,   98,   98,   87,   87,   99,  100,  100,  101,  101,
       59,   59,   59,   88,   88,   89,   89,   90,   90,  102,
      102,   82,   82,   79,   79,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,  109,  111,  107,  107,  107,  107,  107,   76,
       76,  105,  105,  105,  112,  112,  113,  113,  113,  108,
      108,  108,  108,  108,  108,  108,  118,  115,    7,    7,
        7,  104,  104,  106,  106,  106,  106,  106,   29,   29,
       29,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  117,
      117,  117,  117,  117,  117,  117,  117,  117,  117,  117,
      117,   86,  114,  114,  114,   31,   31,   31,   31,   31,
       31,  116,  116,  116,  116,  119,  120,  120,  122,  122,
      110,  110,  110,  123,  124,  124,  125,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  121,  121
  ];

  private static $yylen = [
        1,    0,    1,    1,    1,    1,    1,    4,    5,    4,
        0,    1,    1,    2,    1,    1,    1,    1,    2,    1,
        3,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    1,    1,    3,    4,    4,    4,    4,    1,
        4,    1,    3,    4,    3,    5,    5,    1,    3,    1,
        3,    4,    1,    0,    1,    1,    2,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    5,    0,    1,
        1,    3,    1,    3,    1,    3,    1,    3,    3,    3,
        1,    3,    1,    1,    8,    6,    0,    2,    3,    3,
        0,    2,    3,    3,    1,    3,    1,    0,    2,    2,
        1,    3,    1,    0,    1,    1,    2,    1,    1,    1,
        1,    1,    4,    4,    4,    4,    4,    6,    4,    6,
        4,    3,    5,    5,    1,    2,    3,    6,    5,    3,
        6,    4,    1,    2,    1,    1,    1,    3,    2,    1,
        1,    1,    4,    3,    3,    2,    5,    5,    4,    4,
        3,    4,    3,    1,    3,    1,    2,    1,    2,    2,
        3,    3,    1,    3,    1,    2,    3,    2,    3,    4,
        2,    3,    4,    3,    4,    5,    3,    5,    3,    0,
        1,    1,    1,    5,    5,    7,    7,    7,    6,    7,
        5,    2,    2,    3,    3,    4,    5,    3,    2,    3,
        2,    3,    2,    3,    3,    3,    3,    3,    5,    5,
        3,    2,    3,    1,    2,    1,    1,    2,    2,    0,
        1,    1,    2,    3,    0,    1,    2,    1,    2,    2,
        5,    7,    5,    2,    0,    1,    1,    2,    3,    1,
        3,    1,    3,    1,    2,    2,    1,    2,    3,    2,
        2,    3,    3,    2,    1,    2,    1,    2,    1,    1,
        3,    1,    3,    1,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    2,    2,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    2,
        5,    4,    4,    5,    4,    2,    2,    2,    2,    2,
        2,    2,    2,    3,    2,    3,    2,    1,    1,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    2,    2,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    2,    5,    4,    4,    5,    4,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    3,    2,
        3,    2,    1,    1,    1,    1,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    2,    2,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    2,
        5,    4,    4,    5,    4,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    3,    2,    3,    2,    1,    1,
        1,    1,    4,    4,    2,    5,    4,    4,    1,    3,
        3,    2,    3,    3,    1,    3,    1,    3,    2,    1,
        1,    1,    1,    1,    1,    1,    0,    3,    1,    2,
        3,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    9,    3,    3,    2,    1,    3,    2,    1,
        2,    3,    3,    2,    1,    3,    3,    1,    1,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    0,    1
  ];
  
    
  private $yyval;
  private $yyastk;
  private $yysstk;
  private $yysp;
  private $yystate;
  private $yyloc; // current location
  
  private $lex;
  private $invalid = false;
  
  /**
   * returns the current location (last scanned token)
   * 
   * @return Location
   */
  public function loc()
  {
    if (!$this->yyloc)
      return new Location('<unknown>', new Position(0, 0));
    
    return $this->yyloc;
  }
  
  /**
   * consumes semicolons to avoid unnecessary empty-expressions 
   * 
   * @void
   */
  private function eat_semis()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_SEMI) {
      do {
        $this->lex->skip();
        $peek = $this->lex->peek();
      } while ($peek->type === T_SEMI);

    }
  }
  
  /**
   * consumes a T_END token
   * 
   * @void
   */
  private function eat_end()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_END) {
      $this->lex->skip();
    }
  }
  
  /**
   * parse function
   * 
   * @param  Lexer  $lex
   * @return Node
   */
  public function parse(Lexer $lex) 
  {
    $tokid = self::TOKEN_NONE;
    
    // lexer
    $this->lex = $lex;
    
    // stacks
    $this->yysstk = [ 0 ]; 
    $this->yyastk = [];
    
    // current state
    $yystate = 0;
    
    // error flag
    $yyerrflag = 0;

    // stack position
    $this->yysp = 0;
    
    // location stack
    $yylstk = [];

    for (;;) {
      if (self::$yybase[$yystate] == 0)
        $yyn = self::$yydefault[$yystate];
      else {
        if ($tokid === self::TOKEN_NONE) {
          // Fetch the next token id from the lexer
          $token = $this->lex->next();
                    
          // invalid token (regexp-scan failed)
          if ($token->type === T_INVL) {
            $this->error_at($token->loc, ERR_ERROR, 'invalid source/regexp-literal');
            return null;
          }
          
          // map the lexer token id to the internally used token id's
          if ($token->type >= 0 && $token->type < self::TOKEN_MAP_SIZE)
            $tokid = self::$translate[$token->type];
          else {
            $this->error_at($token->loc, ERR_ERROR, 'invalid token %d -> %s', 
              $token->type, $token->value);
            return null;
          }        
          
          $this->yyloc = $token->loc;
          
          // store location
          $yylstk[$this->yysp] = $this->yyloc;
          
        } 

        if ((($yyn = self::$yybase[$yystate] + $tokid) >= 0
          && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid
          || ($yystate < self::YY2TBLSTATE
            && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + $tokid) >= 0
            && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid))
          && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT
        ) {
          /*
           * >= YYNLSTATE: shift and reduce
           * > 0: shift
           * = 0: accept
           * < 0: reduce
           * = -YYUNEXPECTED: error
           */
          if ($yyn > 0) {
            /* shift */
            
            $this->yysp++;
            
            $this->yysstk[$this->yysp] = $yystate = $yyn;
            $this->yyastk[$this->yysp] = $token;
            
            // store location
            $yylstk[$this->yysp] = $this->yyloc;
            
            $tokid = self::TOKEN_NONE;
            
            if ($yyerrflag > 0)
              $yyerrflag--;
            
            if ($yyn < self::YYNLSTATES)
              continue;

            /* $yyn >= YYNLSTATES means shift-and-reduce */
            $yyn -= self::YYNLSTATES;
          } else
            $yyn = -$yyn;
        } else
          $yyn = self::$yydefault[$yystate];
      }
      
      for (;;) {
        /* reduce/error */
        if ($yyn == 0) {
          /* accept */
          if ($this->invalid === true)
            return null;
          return $this->yyval;
        } elseif ($yyn != self::YYUNEXPECTED) {
          /* reduce */
//ifnot -t
          $this->{'yyn' . $yyn}();
//endif          
          /* Goto - shift nonterminal */
          $yylen = self::$yylen[$yyn];
          $yyloc = $yylstk[$this->yysp - $yylen];
          
          $this->yysp -= $yylen;
          
          $yyn = self::$yylhs[$yyn];
          
          if (($yyp = self::$yygbase[$yyn]
           + $this->yysstk[$this->yysp]) >= 0
            && $yyp < self::YYGLAST && self::$yygcheck[$yyp] == $yyn)
            $yystate = self::$yygoto[$yyp];
          else
            $yystate = self::$yygdefault[$yyn];
          
          $this->yysp++;
          
          $this->yysstk[$this->yysp] = $yystate;
          $this->yyastk[$this->yysp] = $this->yyval;
          
          // set location if a real node was produced by $yyn
          if ($this->yyval instanceof Node)
            $this->yyval->loc = $yyloc;
          
          // store position
          $yylstk[$this->yysp] = $this->yyloc;
          
        } else {
          /* error */
          $this->invalid = true;
                    
          switch ($yyerrflag) {
            case 0:
              // let the lexer know
              $this->lex->sync = true;
              
              $expa = [];
              $expn = 0;
              $base = self::$yybase[$yystate];
              
              for ($i = 0; $i < self::TOKEN_MAP_SIZE; ++$i) {
                $n = $base + $i;
                if ($n >= 0 && $n < self::YYLAST && self::$yycheck[$n] == $i
                  || $yystate < self::YY2TBLSTATE
                  && ($n = self::$yybase[$yystate + self::YYNLSTATES] + $i)
                  && $n < self::YYLAST && ($n < 0 || self::$yycheck[$n] == $i)
                ) {
                  if ($n >= 0 && self::$yyaction[$n] != self::YYUNEXPECTED) {
                    if ($expn === 4) {
                      /* Too many expected tokens */
                      $expa = null;
                      $expn = 0;
                      break;
                    }

                    $expa[] = self::$terminals[$i];
                    $expn++;
                  }
                }
              }

              $exps = 'unexpected ' . self::$terminals[$tokid];
              
              if ($expn > 0) {
                $last = array_pop($expa);
                $exps .= ', expected ';
                
                if ($expn > 1)
                  $exps .= implode(', ', $expa) . ' or ';
                
                $exps .= $last;
                unset ($expa, $last);
              }
              
              $this->error_at($this->yyloc, ERR_ERROR, $exps);              
            case 1:
            case 2:
              $yyerrflag = 3;  
              
              while (!(($yyn = self::$yybase[$yystate] + self::YYINTERRTOK) >= 0
                && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK
                || ($yystate < self::YY2TBLSTATE
                  && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + self::YYINTERRTOK) >= 0
                  && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK))
              ) {  
                if ($this->yysp <= 0) 
                  return null;
                
                $yystate = $this->yysstk[--$this->yysp];              
              }
              
              $yyn = self::$yyaction[$yyn];
              $this->yysstk[++$this->yysp] = $yystate = $yyn;
              break;
            
            case 3:
              if ($tokid === 0) 
                return null;
              
              $tokid = -1;
              break;
          }
        }

        if ($yystate < self::YYNLSTATES)
          break;
        
        /* >= YYNLSTATES means shift-and-reduce */
        $yyn = $yystate - self::YYNLSTATES;
      }
    }
  }


  private function yyn0() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn1() 
  {
     $this->yyval = new Unit(null); 
  }


  private function yyn2() 
  {
     $this->yyval = new Unit($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn3() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; $this->eat_end(); 
  }


  private function yyn4() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; $this->eat_end(); 
  }


  private function yyn5() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn6() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn7() 
  {
     $this->yyval = new Module($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn8() 
  {
     
      $this->yyval = new Module($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn9() 
  {
     
      $this->yyval = new Module(null, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn10() 
  {
     $this->yyval = null; 
  }


  private function yyn11() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn12() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn13() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn14() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn15() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn16() 
  {
     $this->yyval = new Program($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn17() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn18() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn19() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn20() 
  {
     $this->yyval = null; 
  }


  private function yyn21() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn22() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn23() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn24() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn25() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn26() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn27() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn28() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn29() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn30() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn31() 
  {
     $this->yyval = null; 
  }


  private function yyn32() 
  {
     $this->yyval = null; 
  }


  private function yyn33() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn34() 
  {
     
      $this->yyval = new RequireDecl(false, $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn35() 
  {
     
      $this->yyval = new RequireDecl(true, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn36() 
  {
     
      $this->yyval = new AttrDecl($this->yyastk[$this->yysp-(4-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn37() 
  {
     $this->yyval = new CompAttr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn38() 
  {
     $this->yyval = new TopexAttr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn39() 
  {
     $this->yyval = new AttrDef($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn40() 
  {
     $this->yyval = new AttrDef($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn41() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn42() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn43() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn44() 
  {
     
      $this->yyval = new UseDecl($this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn45() 
  {
     
      $this->yyval = new UseDecl(new UseAlias($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)])); 
      $this->eat_semis(); 
    
  }


  private function yyn46() 
  {
     
      $this->yyval = new UseDecl(new UseUnpack($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)])); 
      $this->eat_semis(); 
    
  }


  private function yyn47() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn48() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn49() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn50() 
  {
     $this->yyval = new UseAlias($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn51() 
  {
     $this->yyval = new UseUnpack($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn52() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn53() 
  {
     $this->yyval = null; 
  }


  private function yyn54() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn55() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn56() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn57() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn58() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn59() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn60() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn61() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn62() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn63() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn64() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn65() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn66() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn67() 
  {
     
      $this->yyval = new EnumDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn68() 
  {
     $this->yyval = null; 
  }


  private function yyn69() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn70() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn71() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn72() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn73() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn74() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn75() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn76() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn77() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn78() 
  {
     $this->yyval = new ArrDestr($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn79() 
  {
     $this->yyval = new ObjDestr($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn80() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn81() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn82() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn83() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn84() 
  {
     
      $this->yyval = new ClassDecl($this->yyastk[$this->yysp-(8-1)], $this->yyastk[$this->yysp-(8-3)], $this->yyastk[$this->yysp-(8-4)], $this->yyastk[$this->yysp-(8-5)], $this->yyastk[$this->yysp-(8-7)]); 
      $this->eat_semis(); 
    
  }


  private function yyn85() 
  {
     
      $this->yyval = new ClassDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-5)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn86() 
  {
     $this->yyval = null; 
  }


  private function yyn87() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn88() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn89() 
  {
     $this->yyval = null; 
  }


  private function yyn90() 
  {
     $this->yyval = null; 
  }


  private function yyn91() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn92() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn93() 
  {
     $this->yyval = null; 
  }


  private function yyn94() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn95() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn96() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn97() 
  {
     $this->yyval = null; 
  }


  private function yyn98() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn99() 
  {
     $this->yyval = null; 
  }


  private function yyn100() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn101() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn102() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn103() 
  {
     $this->yyval = []; 
  }


  private function yyn104() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn105() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn106() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn107() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn108() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn109() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn110() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn111() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn112() 
  {
     
      $this->yyval = new CtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn113() 
  {
     $this->yyval = new CtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn114() 
  {
     
      $this->yyval = new DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn115() 
  {
     $this->yyval = new DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn116() 
  {
     $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn117() 
  {
     
      $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn118() 
  {
     $this->yyval = new SetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn119() 
  {
     
      $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn120() 
  {
     $this->yyval = new NestedMods($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn121() 
  {
     
      $this->yyval = new TraitUse($this->yyastk[$this->yysp-(3-2)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn122() 
  {
     
      $this->yyval = new TraitUse($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn123() 
  {
     $this->yyval = new TraitUse($this->yyastk[$this->yysp-(5-2)], null, $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn124() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn125() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn126() 
  {
     
      $this->yyval = new TraitItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn127() 
  {
     
      $this->yyval = new TraitItem($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-6)]); 
      $this->eat_semis(); 
    
  }


  private function yyn128() 
  {
     
      $this->yyval = new TraitDecl($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn129() 
  {
     
      $this->yyval = new TraitDecl($this->yyastk[$this->yysp-(3-2)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn130() 
  {
     
      $this->yyval = new IfaceDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn131() 
  {
     
      $this->yyval = new IfaceDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn132() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn133() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn134() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn135() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn136() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn137() 
  {
     $this->yyval = null; 
  }


  private function yyn138() 
  {
     $this->yyval = null; 
  }


  private function yyn139() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn140() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn141() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn142() 
  {
     
      $this->yyval = new LetDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn143() 
  {
     
      $this->yyval = new VarDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn144() 
  {
     $this->yyval = new LetDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn145() 
  {
     $this->yyval = new VarDecl($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn146() 
  {
     $this->yyval = new FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn147() 
  {
     
      $this->yyval = new FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn148() 
  {
     
      $this->yyval = new FnDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn149() 
  {
     $this->yyval = new FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn150() 
  {
     $this->yyval = new FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn151() 
  {
     $this->yyval = new FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn152() 
  {
     $this->yyval = new FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn153() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn154() 
  {
     
      /* FIXME */
      $this->yyval = new Block([ new ReturnStmt($this->yyastk[$this->yysp-(3-2)]) ]); 
      $this->eat_semis(); 
    
  }


  private function yyn155() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn156() 
  {
     
      /* FIXME */
      $this->yyval = new Block([ new ReturnStmt($this->yyastk[$this->yysp-(2-2)]) ]); 
    
  }


  private function yyn157() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn158() 
  {
     
      /* FIXME */
      $this->yyval = new Block([ new ReturnStmt($this->yyastk[$this->yysp-(2-2)]) ]); 
    
  }


  private function yyn159() 
  {
     $this->yyval = null; 
  }


  private function yyn160() 
  {
     $this->yyval = null; 
  }


  private function yyn161() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn162() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn163() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn164() 
  {
     $this->yyval = new Param(null, null, $this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn165() 
  {
     $this->yyval = new Param(null, null, $this->yyastk[$this->yysp-(2-1)], null, true); 
  }


  private function yyn166() 
  {
     $this->yyval = new Param(null, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn167() 
  {
     $this->yyval = new Param(null, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn168() 
  {
     $this->yyval = new Param(null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn169() 
  {
     $this->yyval = new Param(null, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn170() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(2-1)], null, $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn171() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(3-1)], null, $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn172() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn173() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn174() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null, true); 
  }


  private function yyn175() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], false); 
  }


  private function yyn176() 
  {
     $this->yyval = new ThisParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn177() 
  {
     $this->yyval = new ThisParam($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn178() 
  {
     $this->yyval = new RestParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn179() 
  {
     $this->yyval = null; 
  }


  private function yyn180() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn181() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn182() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn183() 
  {
     $this->yyval = new DoStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn184() 
  {
     $this->yyval = new IfStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn185() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn186() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn187() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn188() 
  {
     $this->yyval = new ForStmt($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], null, $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn189() 
  {
     $this->yyval = new ForStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn190() 
  {
     $this->yyval = null; 
  }


  private function yyn191() 
  {
     $this->yyval = new ForStmt(null, null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn192() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(2-2)], null, null); 
  }


  private function yyn193() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn194() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(3-2)], null, $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn195() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn196() 
  {
     $this->yyval = new PhpStmt($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn197() 
  {
     $this->yyval = new GotoStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn198() 
  {
     $this->yyval = new TestStmt(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn199() 
  {
     $this->yyval = new TestStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn200() 
  {
     $this->yyval = new BreakStmt(null); 
  }


  private function yyn201() 
  {
     $this->yyval = new BreakStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn202() 
  {
     $this->yyval = new ContinueStmt(null); 
  }


  private function yyn203() 
  {
     $this->yyval = new ContinueStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn204() 
  {
     $this->yyval = new ThrowStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn205() 
  {
     $this->yyval = new WhileStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn206() 
  {
     $this->yyval = new YieldStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn207() 
  {
     $this->yyval = new AssertStmt($this->yyastk[$this->yysp-(3-2)], null); 
  }


  private function yyn208() 
  {
     $this->yyval = new AssertStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn209() 
  {
     $this->yyval = new SwitchStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn210() 
  {
     $this->yyval = new ReturnStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn211() 
  {
     $this->yyval = new ReturnStmt(null); 
  }


  private function yyn212() 
  {
     $this->yyval = new LabeledStmt($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn213() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn214() 
  {
     $this->yyval = null; 
  }


  private function yyn215() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn216() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn217() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn218() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn219() 
  {
     $this->yyval = null; 
  }


  private function yyn220() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn221() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn222() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn223() 
  {
     $this->yyval = new ElsifItem($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn224() 
  {
     $this->yyval = null; 
  }


  private function yyn225() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn226() 
  {
     $this->yyval = new ElseItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn227() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn228() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn229() 
  {
     $this->yyval = new CatchItem(null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn230() 
  {
     $this->yyval = new CatchItem($this->yyastk[$this->yysp-(5-3)], null, $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn231() 
  {
     $this->yyval = new CatchItem($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn232() 
  {
     $this->yyval = null; 
  }


  private function yyn233() 
  {
     $this->yyval = new FinallyItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn234() 
  {
     $this->yyval = null; 
  }


  private function yyn235() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn236() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn237() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn238() 
  {
     $this->yyval = new PhpUse($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn239() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn240() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn241() 
  {
     $this->yyval = new PhpUseItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn242() 
  {
     $this->yyval = new PhpUseItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn243() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn244() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn245() 
  {
     new CaseItem($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn246() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn247() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn248() 
  {
     $this->yyval = new CaseLabel($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn249() 
  {
     $this->yyval = new CaseLabel(null); 
  }


  private function yyn250() 
  {
     $this->yyval = new Block(null); 
  }


  private function yyn251() 
  {
     $this->yyval = new Block($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn252() 
  {
     $this->yyval = null; 
  }


  private function yyn253() 
  {
     
      $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
      $this->eat_semis(); 
    
  }


  private function yyn254() 
  {
     
      $this->yyval = new ExprStmt(null); 
      $this->eat_semis(); 
    
  }


  private function yyn255() 
  {
     $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn256() 
  {
     $this->yyval = new ExprStmt(null); 
  }


  private function yyn257() 
  {
     $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn258() 
  {
     $this->yyval = new ExprStmt(null); 
  }


  private function yyn259() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn260() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn261() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn262() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn263() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn264() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn265() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn266() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn267() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn268() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn269() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn270() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn271() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn272() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn273() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn274() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn275() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn276() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn277() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn278() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn279() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn280() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn281() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn282() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn283() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn284() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn285() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn286() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn287() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn288() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn289() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn290() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn291() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn292() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn293() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn294() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn295() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn296() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn297() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn298() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn299() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn300() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn301() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn302() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn303() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn304() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn305() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn306() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn307() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn308() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn309() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn310() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn311() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn312() 
  {
     $this->yyval = null; 
  }


  private function yyn313() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn314() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn315() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn316() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn317() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn318() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn319() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn320() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn321() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn322() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-1)], null); 
  }


  private function yyn323() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn324() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-1)], null); 
  }


  private function yyn325() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn326() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn327() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn328() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn329() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn330() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn331() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn332() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn333() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn334() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn335() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn336() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn337() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn338() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn339() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn340() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn341() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn342() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn343() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn344() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn345() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn346() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn347() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn348() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn349() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn350() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn351() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn352() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn353() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn354() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn355() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn356() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn357() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn358() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn359() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn360() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn361() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn362() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn363() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn364() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn365() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn366() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn367() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn368() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn369() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn370() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn371() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn372() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn373() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn374() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn375() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn376() 
  {
     $this->yyval = null; 
  }


  private function yyn377() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn378() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn379() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn380() 
  {
     $this->yyval = new YieldExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn381() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn382() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn383() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn384() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn385() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn386() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn387() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-1)], null); 
  }


  private function yyn388() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn389() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-1)], null); 
  }


  private function yyn390() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn391() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn392() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn393() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn394() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn395() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn396() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn397() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn398() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn399() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn400() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn401() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn402() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn403() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn404() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn405() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn406() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn407() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn408() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn409() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn410() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn411() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn412() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn413() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn414() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn415() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn416() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn417() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn418() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn419() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn420() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn421() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn422() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn423() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn424() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn425() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn426() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn427() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn428() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn429() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn430() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn431() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn432() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn433() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn434() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn435() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn436() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn437() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn438() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn439() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn440() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn441() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn442() 
  {
     $this->yyval = null; 
  }


  private function yyn443() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn444() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn445() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn446() 
  {
     $this->yyval = new YieldExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn447() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn448() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn449() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn450() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn451() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn452() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn453() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-1)], null); 
  }


  private function yyn454() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn455() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-1)], null); 
  }


  private function yyn456() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn457() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn458() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn459() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn460() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn461() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn462() 
  {
     
      $this->yyval = new CastExpr($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-2)]); 
      $this->error_at($this->yyastk[$this->yysp-(4-1)]->loc, ERR_WARN, 'legacy cast, use `expr as type` instead'); 
    
  }


  private function yyn463() 
  {
     
      $this->yyval = new CastExpr($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-2)]); 
      $this->error_at($this->yyastk[$this->yysp-(4-1)]->loc, ERR_WARN, 'legacy cast, use `expr as type` instead'); 
    
  }


  private function yyn464() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn465() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn466() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn467() 
  {
     $this->yyval = null; 
  }


  private function yyn468() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn469() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn470() 
  {
     $this->yyval = null; 
  }


  private function yyn471() 
  {
     $this->yyval = null; 
  }


  private function yyn472() 
  {
     $this->yyval = null; 
  }


  private function yyn473() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn474() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn475() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn476() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn477() 
  {
     $this->yyval = new NamedArg($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn478() 
  {
     $this->yyval = new RestArg($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn479() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn480() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn481() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn482() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn483() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn484() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn485() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn486() 
  {
     $this->lex->scan_regexp($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn487() 
  {
     $this->yyval = new RegexpLit($this->yyastk[$this->yysp-(3-3)]->value); 
  }


  private function yyn488() 
  {
     $this->yyval = new Name($this->yyastk[$this->yysp-(1-1)], false); 
  }


  private function yyn489() 
  {
     $this->yyval = new Name($this->yyastk[$this->yysp-(2-2)], true); 
  }


  private function yyn490() 
  {
     $this->yyastk[$this->yysp-(3-1)]->add($this->yyastk[$this->yysp-(3-3)]); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn491() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn492() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn493() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn494() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn495() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn496() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn497() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn498() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn499() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn500() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn501() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn502() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn503() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn504() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn505() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn506() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn507() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn508() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn509() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn510() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn511() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn512() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn513() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn514() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn515() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn516() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn517() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn518() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn519() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn520() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn521() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn522() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn523() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn524() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn525() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn526() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn527() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn528() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn529() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn530() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn531() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn532() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn533() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn534() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn535() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn536() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn537() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn538() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn539() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn540() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn541() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn542() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn543() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn544() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn545() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn546() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn547() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn548() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn549() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn550() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn551() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn552() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn553() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn554() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn555() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn556() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn557() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn558() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn559() 
  {
     $this->yyval = new ThisExpr; 
  }


  private function yyn560() 
  {
     $this->yyval = new SuperExpr; 
  }


  private function yyn561() 
  {
     $this->yyval = new NullLit; 
  }


  private function yyn562() 
  {
     $this->yyval = new TrueLit; 
  }


  private function yyn563() 
  {
     $this->yyval = new FalseLit; 
  }


  private function yyn564() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->file, 'c'); 
  }


  private function yyn565() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->line, 'c'); 
  }


  private function yyn566() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->coln, 'c'); 
  }


  private function yyn567() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn568() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn569() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn570() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn571() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->flag); 
  }


  private function yyn572() 
  {
     $this->yyval = new LNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn573() 
  {
     $this->yyval = new DNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn574() 
  {
     $this->yyval = new SNumLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->suffix); 
  }


  private function yyn575() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn576() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn577() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn578() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn579() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn580() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn581() 
  {
     $this->yyval = new ArrLit(null); 
  }


  private function yyn582() 
  {
     $this->yyval = new ArrGen($this->yyastk[$this->yysp-(9-2)], $this->yyastk[$this->yysp-(9-5)], $this->yyastk[$this->yysp-(9-7)]); 
  }


  private function yyn583() 
  {
     $this->yyval = new ArrLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn584() 
  {
     $this->yyval = null; 
  }


  private function yyn585() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn586() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn587() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn588() 
  {
     $this->yyval = new SpreadExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn589() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn590() 
  {
     $this->yyval = new ObjLit(null); 
  }


  private function yyn591() 
  {
     $this->yyval = new ObjLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn592() 
  {
     $this->yyval = null; 
  }


  private function yyn593() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn594() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn595() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn596() 
  {
     $this->yyval = new ObjPair($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn597() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn598() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn599() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn600() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn601() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn602() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn603() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn604() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn605() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn606() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn607() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn608() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn609() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn610() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn611() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn612() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn613() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn614() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn615() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn616() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn617() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn618() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn619() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn620() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn621() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn622() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn623() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn624() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn625() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn626() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn627() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn628() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn629() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn630() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn631() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn632() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn633() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn634() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn635() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn636() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn637() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn638() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn639() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn640() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn641() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn642() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn643() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn644() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn645() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn646() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn647() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn648() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn649() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn650() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn651() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn652() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn653() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn654() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn655() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn656() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn657() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }

}

