<?php

/* this parser-skeleton is based on the awesome 
   work of nikic (https://github.com/nikic) 
   with some extensions (error-recovery and location-tracking) */

/**
 * This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *   the grammar file gen/yy-parser-tpl.y
 *   the parser skeleton gen/kymacc.php.parser
 *
 * The skeleton for this parser was written by Moriyoshi Koizumi and is based on
 * the work by Masato Bito and is in the PUBLIC DOMAIN.
 */

namespace phs;


const YYERRTOK = 256;
const T_APLUS = 257;
const T_AMINUS = 258;
const T_AMUL = 259;
const T_ADIV = 260;
const T_AMOD = 261;
const T_APOW = 262;
const T_ABIT_NOT = 263;
const T_ABIT_OR = 264;
const T_ABIT_AND = 265;
const T_ABIT_XOR = 266;
const T_ABOOL_OR = 267;
const T_ABOOL_AND = 268;
const T_ABOOL_XOR = 269;
const T_ASHIFT_L = 270;
const T_ASHIFT_R = 271;
const T_RANGE = 272;
const T_YIELD = 273;
const T_BOOL_OR = 274;
const T_BOOL_XOR = 275;
const T_BOOL_AND = 276;
const T_EQ = 277;
const T_NEQ = 278;
const T_IN = 279;
const T_IS = 280;
const T_ISNT = 281;
const T_GTE = 282;
const T_LTE = 283;
const T_SL = 284;
const T_SR = 285;
const T_POW = 286;
const T_AS = 287;
const T_ARR = 288;
const T_REST = 289;
const T_DEL = 290;
const T_INC = 291;
const T_DEC = 292;
const T_NEW = 293;
const T_DDDOT = 294;
const T_FN = 295;
const T_LET = 296;
const T_USE = 297;
const T_ENUM = 298;
const T_CLASS = 299;
const T_TRAIT = 300;
const T_IFACE = 301;
const T_MODULE = 302;
const T_REQUIRE = 303;
const T_IDENT = 304;
const T_LNUM = 305;
const T_DNUM = 306;
const T_SNUM = 307;
const T_STRING = 308;
const T_REGEXP = 309;
const T_TRUE = 310;
const T_FALSE = 311;
const T_NULL = 312;
const T_THIS = 313;
const T_SUPER = 314;
const T_GET = 315;
const T_SET = 316;
const T_DO = 317;
const T_IF = 318;
const T_ELSIF = 319;
const T_ELSE = 320;
const T_FOR = 321;
const T_TRY = 322;
const T_GOTO = 323;
const T_BREAK = 324;
const T_CONTINUE = 325;
const T_THROW = 326;
const T_CATCH = 327;
const T_FINALLY = 328;
const T_WHILE = 329;
const T_ASSERT = 330;
const T_SWITCH = 331;
const T_CASE = 332;
const T_DEFAULT = 333;
const T_RETURN = 334;
const T_CONST = 335;
const T_FINAL = 336;
const T_GLOBAL = 337;
const T_STATIC = 338;
const T_EXTERN = 339;
const T_PUBLIC = 340;
const T_PRIVATE = 341;
const T_PROTECTED = 342;
const T_SEALED = 343;
const T_INLINE = 344;
const T_PHP = 345;
const T_TEST = 346;
const T_CFILE = 347;
const T_CLINE = 348;
const T_CCOLN = 349;
const T_CFN = 350;
const T_CCLASS = 351;
const T_CMETHOD = 352;
const T_CMODULE = 353;
const T_NL = 354;
const T_TINT = 355;
const T_TBOOL = 356;
const T_TFLOAT = 357;
const T_TSTRING = 358;
const T_TREGEXP = 359;
const T_INVL = 360;
const T_END = 361;
const T_SYNC = 362;

require_once 'context.php';
require_once 'parser_base.php';

require_once 'ast.php';
require_once 'glob.php';
require_once 'lexer.php';

use phs\ast\Node;
use phs\ast\Unit;
use phs\ast\Module;
use phs\ast\Program;
use phs\ast\RequireDecl;
use phs\ast\AttrDecl;
use phs\ast\CompAttr;
use phs\ast\TopexAttr;
use phs\ast\AttrDef;
use phs\ast\AttrVal;
use phs\ast\UseDecl;
use phs\ast\UseAlias;
use phs\ast\UseUnpack;
use phs\ast\EnumDecl;
use phs\ast\VarItem;
use phs\ast\ArrDestr;
use phs\ast\ObjDestr;
use phs\ast\ClassDecl;
use phs\ast\CtorDecl;
use phs\ast\DtorDecl;
use phs\ast\GetterDecl;
use phs\ast\SetterDecl;
use phs\ast\NestedMods;
use phs\ast\TraitUse;
use phs\ast\TraitItem;
use phs\ast\TraitDecl;
use phs\ast\IfaceDecl;
use phs\ast\LetDecl;
use phs\ast\VarDecl;
use phs\ast\FnDecl;
use phs\ast\FnExpr;
use phs\ast\Block;
use phs\ast\ReturnStmt;
use phs\ast\Param;
use phs\ast\ThisParam;
use phs\ast\RestParam;
use phs\ast\DoStmt;
use phs\ast\IfStmt;
use phs\ast\ForInStmt;
use phs\ast\ForStmt;
use phs\ast\TryStmt;
use phs\ast\PhpStmt;
use phs\ast\GotoStmt;
use phs\ast\TestStmt;
use phs\ast\BreakStmt;
use phs\ast\ContinueStmt;
use phs\ast\ThrowStmt;
use phs\ast\WhileStmt;
use phs\ast\YieldStmt;
use phs\ast\AssertStmt;
use phs\ast\SwitchStmt;
use phs\ast\LabeledStmt;
use phs\ast\ElsifItem;
use phs\ast\ElseItem;
use phs\ast\CatchItem;
use phs\ast\FinallyItem;
use phs\ast\PhpUse;
use phs\ast\PhpUseItem;
use phs\ast\CaseItem;
use phs\ast\CaseLabel;
use phs\ast\ExprStmt;
use phs\ast\BinExpr;
use phs\ast\CheckExpr;
use phs\ast\CastExpr;
use phs\ast\UpdateExpr;
use phs\ast\AssignExpr;
use phs\ast\MemberExpr;
use phs\ast\CondExpr;
use phs\ast\CallExpr;
use phs\ast\UnaryExpr;
use phs\ast\NewExpr;
use phs\ast\DelExpr;
use phs\ast\YieldExpr;
use phs\ast\NamedArg;
use phs\ast\RestArg;
use phs\ast\RegexpLit;
use phs\ast\Name;
use phs\ast\TypeId;
use phs\ast\Ident;
use phs\ast\ThisExpr;
use phs\ast\SuperExpr;
use phs\ast\NullLit;
use phs\ast\TrueLit;
use phs\ast\FalseLit;
use phs\ast\StrLit;
use phs\ast\EngineConst;
use phs\ast\LNumLit;
use phs\ast\DNumLit;
use phs\ast\SNumLit;
use phs\ast\ArrLit;
use phs\ast\ArrGen;
use phs\ast\SpreadExpr;
use phs\ast\ObjLit;
use phs\ast\ObjPair;


class Parser extends ParserBase
{
  const TOKEN_NONE    = -1;
  const TOKEN_INVALID = 132;

  const TOKEN_MAP_SIZE = 363;

  const YYLAST       = 1667;
  const YY2TBLSTATE  = 565;
  const YYGLAST      = 1180;
  const YYNLSTATES   = 671;
  const YYINTERRTOK  = 1;
  const YYUNEXPECTED = 32767;
  const YYDEFAULT    = -32766;

  /* @var array Map of token ids to their respective names */
  private static $terminals = [
    "EOF",
    "error",
    "','",
    "T_APLUS",
    "T_AMINUS",
    "T_AMUL",
    "T_ADIV",
    "T_AMOD",
    "T_APOW",
    "T_ABIT_NOT",
    "T_ABIT_OR",
    "T_ABIT_AND",
    "T_ABIT_XOR",
    "T_ABOOL_OR",
    "T_ABOOL_AND",
    "T_ABOOL_XOR",
    "T_ASHIFT_L",
    "T_ASHIFT_R",
    "'='",
    "T_RANGE",
    "T_YIELD",
    "'?'",
    "':'",
    "T_BOOL_OR",
    "T_BOOL_XOR",
    "T_BOOL_AND",
    "'|'",
    "'^'",
    "'&'",
    "T_EQ",
    "T_NEQ",
    "T_IN",
    "T_IS",
    "T_ISNT",
    "T_GTE",
    "T_LTE",
    "'>'",
    "'<'",
    "T_SL",
    "T_SR",
    "'+'",
    "'-'",
    "'~'",
    "'*'",
    "'/'",
    "'%'",
    "T_POW",
    "T_AS",
    "T_ARR",
    "T_REST",
    "T_DEL",
    "'!'",
    "T_INC",
    "T_DEC",
    "T_NEW",
    "'.'",
    "T_DDDOT",
    "'['",
    "']'",
    "'('",
    "')'",
    "T_FN",
    "T_LET",
    "T_USE",
    "T_ENUM",
    "T_CLASS",
    "T_TRAIT",
    "T_IFACE",
    "T_MODULE",
    "T_REQUIRE",
    "T_IDENT",
    "T_LNUM",
    "T_DNUM",
    "T_SNUM",
    "T_STRING",
    "T_REGEXP",
    "T_TRUE",
    "T_FALSE",
    "T_NULL",
    "T_THIS",
    "T_SUPER",
    "T_GET",
    "T_SET",
    "T_DO",
    "T_IF",
    "T_ELSIF",
    "T_ELSE",
    "T_FOR",
    "T_TRY",
    "T_GOTO",
    "T_BREAK",
    "T_CONTINUE",
    "T_THROW",
    "T_CATCH",
    "T_FINALLY",
    "T_WHILE",
    "T_ASSERT",
    "T_SWITCH",
    "T_CASE",
    "T_DEFAULT",
    "T_RETURN",
    "T_CONST",
    "T_FINAL",
    "T_GLOBAL",
    "T_STATIC",
    "T_EXTERN",
    "T_PUBLIC",
    "T_PRIVATE",
    "T_PROTECTED",
    "T_SEALED",
    "T_INLINE",
    "T_PHP",
    "T_TEST",
    "T_CFILE",
    "T_CLINE",
    "T_CCOLN",
    "T_CFN",
    "T_CCLASS",
    "T_CMETHOD",
    "T_CMODULE",
    "T_NL",
    "T_TINT",
    "T_TBOOL",
    "T_TFLOAT",
    "T_TSTRING",
    "T_TREGEXP",
    "T_END",
    "T_SYNC",
    "';'",
    "'{'",
    "'}'",
    "'@'"
    , "???"
  ];

  /* @var array Map which translates lexer tokens to internal tokens */
  private static $translate = [
        0,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,   51,  132,  132,  132,   45,   28,  132,
       59,   60,   43,   40,    2,   41,   55,   44,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,   22,  128,
       37,   18,   36,   21,  131,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,   57,  132,   58,   27,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  129,   26,  130,   42,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,    1,    3,    4,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   19,   20,   23,   24,   25,   29,   30,   31,
       32,   33,   34,   35,   38,   39,   46,   47,   48,   49,
       50,   52,   53,   54,   56,   61,   62,   63,   64,   65,
       66,   67,   68,   69,   70,   71,   72,   73,   74,   75,
       76,   77,   78,   79,   80,   81,   82,   83,   84,   85,
       86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
       96,   97,   98,   99,  100,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
      116,  117,  118,  119,  120,  121,  122,  123,  124,  125,
      132,  126,  127
  ];

  private static $yyaction = [
     1311,  235,  236,  237,  238,    0,  413,  414,  239,  240,
      241,  242,  243,  244,  245,  246,  247,  248,  249,  250,
      251,  415,-32766,-32766,-32766,-32766, 1092, 1093,   17,   18,
       95,   97,  606,   83,  636,-32767,-32767,  156,   16,  267,
       94, 1271, 1272, 1286, 1299, 1289, 1290, 1291, 1287, 1310,
     1169,-32766,-32766,  116, 1242,  635, 1276, 1277, 1278, 1292,
     1308, 1170, 1171, 1304, 1279, 1280, 1281, 1302, 1282, 1309,
     1305, 1306, 1283, 1284, 1285, 1303, 1275, 1300, 1301, 1214,
     1307, 1294, 1295, 1312, 1293, 1288, 1296, 1297, 1298, 1318,
     1319, 1273, 1274, 1320, 1321, 1322, 1323, 1324, 1325, 1326,
      794, 1313, 1314, 1315, 1316, 1317,-32766,-32766,-32766,-32766,
      606,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,  818,
     1173, 1174, 1188, 1201, 1191, 1192, 1193, 1189, 1213, 1169,
      187,  188,  189,  190,  191, 1178, 1179, 1180, 1194, 1211,
     1170, 1171, 1207, 1181, 1182, 1183, 1205, 1184, 1212, 1208,
     1209, 1185, 1186, 1187, 1206, 1177, 1202, 1203, 1204, 1210,
     1196, 1197, 1215, 1195, 1190, 1198, 1199, 1200, 1221, 1222,
     1175, 1176, 1223, 1224, 1225, 1226, 1227, 1228, 1229,  924,
     1216, 1217, 1218, 1219, 1220,   -1,  537,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,  475,   98,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,  503,  504,  626,   99,  100,  101,  489,  396,
     1164, 1165, 1166, 1167, 1168,  491,  102,  103,  104,  337,
       96,  630,  231,  232,  233,  234,  -53,  -53,  467,  -53,
      -53,  493,  494,  439,   88,  182,  410,  411,  183,  184,
      185,  186,  187,  188,  189,  190,  191,  253,   21,  571,
      583, -103,  528,  572,  495,  476,  477,  105,  465,  537,
      573,  106,  574,  492,  656,   89,  728,  729,  730,  731,
      737,  732,  733,  734,  735,  736,  599,  522,   98,-32766,
    -32766,-32766,-32766,  492,-32766,-32766,-32766,-32766,-32766,-32766,
      797,  703,  619,  925,    9,  433,  471, 1169,   99,  100,
      101,  509,-32766,-32766,-32766,-32766,-32766,  254,  491,  102,
      103,  104,  337,  248,  249,  250,  251,  415,  500,  -53,
      -53,  467,  -53,  -53,  493,  494,  452,   88, 1164, 1165,
     1166, 1167, 1168,  230,  909,   96,  255,  231,  232,  233,
      234,   21,  571,  615,  889,  528,  572,  495,  476,  477,
      105,  492,  537,  573,  106,  574,  878,   85,   89,  728,
      729,  730,  731,  737,  732,  733,  734,  735,  736,  599,
      522,   98, 1092, 1093,  604,   18,  594,   97, -164,   83,
      595,  252,  792,  395,  703,  435,  925,    9,  -10,  471,
      617,   99,  100,  101,  259,  658,  362,  836, 1169,  715,
      463,  491,  102,  103,  104,  337,  469,  475,  269, 1170,
     1171,  839,  -53,  -53,  467,  -53,  -53,  493,  494,  452,
       88, 1261,  114,  470,    1,  503,  504,  232,  233,  234,
       14, 1252,  266,  928,   21,  571, -164,  490,  528,  572,
      495,  476,  477,  105, 1170, 1171,  573,  106,  574,  507,
      492,   89,  728,  729,  730,  731,  737,  732,  733,  734,
      735,  736,  599,  522,  728,  729,  730,  731,  737,  732,
      733,  734,  735,  736, -104,  641,  263,  703,  888,  925,
        9,  -11,  471,  157,  158,  159,  160,  161,  162,  163,
      164,  165,  166,  167,  168,  169,  170,  171,  172,  173,
      431,   93,  386,  174,  175,  176,  177,  178,  179,  180,
      181,  182,  410,  411,  183,  184,  185,  186,  187,  188,
      189,  190,  191,  192,  193,  194,  195,  412,  -16,  537,
      492,  464, 1026, 1027,  431,   16,  512,   94,  431,   83,
      192,  193,  194,  195,  412, -170,   87, 1169,   98, 1026,
     1027, 1169,   16,  770,   94,  506,   83,  189,  190,  191,
      832,  268,  468,  466,  842,-32766,-32766,-32766,   99,  100,
      101,  657,  432,  272,  597,    6,  845,  204,  491,  102,
      103,  104,  337,  628,  809,  591,  205,  923,  210,  -53,
      -53,  467,  -53,  -53,  493,  494,  631,   88,  273,  437,
      233,  234,  438, -170, 1144,  434,  432,  264,  492,   12,
      364,   21,  571,-32766,-32766,  528,  572,  495,  476,  477,
      105,-32767,-32767,  573,  106,  574,  492,  234,   89,  728,
      729,  730,  731,  737,  732,  733,  734,  735,  736,  599,
      522,  271,  251,  415,  207,  498,  429,  617,  499,-32766,
    -32766,  530,  582,  260,  703, 1142,  925,    9,  257,  471,
      117,  118,  119,  120,  121,  122,  123,  124,  125,  126,
      127,  128,  129,  130,  131,  132,  133,  920,   91,-32766,
      134,  135,  136,  137,  138,  139,  140,  141,  142,  407,
      408,  143,  144,  145,  146,  147,  148,  149,  150,  151,
      152,  153,  154,  155,  409,  537,  258,  431,  197,  962,
      963,  209,   15,  475,   92,  256,  648,  756,  384,  919,
     1169,  800,  382,  436,   98,  802,  383,  508,  198,  199,
      200,  510,  511,    5,    2,  208, 1253,   19,  501,  201,
      202,  203,  339,  274,   99,  100,  101,   81,  275,  474,
      262,  749,  207,   76,  491,  102,  103,  104,  337,  114,
    -32767,  497,  492,   26, 1242,  -53,  -53,  467,  -53,  -53,
      493,  494, 1270,   88, 1112, 1137,  982, 1113, 1138,  432,
     -103, 1046, 1255, 1254,  983, 1047, 1158,   21,  571,  459,
      363,  528,  572,  495,  476,  477,  105,   83,  546,  573,
      106,  574,  213,   90,   89,  728,  729,  730,  731,  737,
      732,  733,  734,  735,  736,  599,  522,   98,  486,  430,
       24,  760,   27,   31,  764,  831, 1143, 1141,  759,  714,
      703,  598,  925,    9,-32766,  471,  596,   99,  100,  101,
      261,  711,  763,  196, 1140,  668,   30,  491,  102,  103,
      104,  337,   29,   28,-32766,-32766,-32766,  482,  -53,  -53,
      586,  622,  115,  702,-32766,-32766,-32766,-32766,-32766,   13,
      808,  546,  581,   90,  707,-32766,  691,  206,    0,  809,
       21,  571,  211,  798,  528,  572,  495,  476,  477,  105,
       98,    0,  573,  106,  574, -245, -245,   89,  728,  729,
      730,  731,  737,  732,  733,  734,  735,  736,  599,  522,
       99,  100,  101,    0,    0,  793,  927,  705,  875,  873,
      491,  102,  103,  104,  337,  925,    9, -245,  473,  871,
      926,  -53,  -53,  783,  881, 1164, 1165, 1166, 1167, 1168,
      706,  814,    0,-32766,  546,  813,  825,  885,  819,  868,
      872,  788,  785,   21,  571,  790,  879,  528,  572,  495,
      476,  477,  105,   98,  874,  573,  106,  574,  256,  648,
       89,  728,  729,  730,  731,  737,  732,  733,  734,  735,
      736,  599,  522,   99,  100,  101,  854,  882,  877,  716,
        0,  212,  265,  491,  102,  103,  104,  337,  925,    9,
      566,  473,  520,  428,  -53,  -53,    9,    2,    0,  880,
      722,  717,  750,  981, 1045, 1136, 1111,  517,  755,  791,
      801,  738,  867,  679,  799,  680,   21,  571, 1262, 1263,
      528,  572,  495,  476,  477,  105,   98,    0,  573,  106,
      574,    0,    0,   89,  728,  729,  730,  731,  737,  732,
      733,  734,  735,  736,  599,  522,   99,  100,  101,    0,
        0,    0,    0,    0,    0,    0,  491,  102,  103,  104,
      337,  925,    9,  922,  473,    0,    0,  -53,  -53,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      546,    0,    0,    0,    0,    0,    0,    0,    0,   21,
      571,    0,    0,  528,  572,  495,  476,  477,  105,   98,
        0,  573,  106,  574,    0,    0,   89,  728,  729,  730,
      731,  737,  732,  733,  734,  735,  736,  599,  522,   99,
      100,  101,    0,    0,    0,    0,    0,    0,    0,  491,
      102,  103,  104,  337,  925,    9,  921,  473,    0,    0,
      -53,  -53,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   21,  571,    0,    0,  528,  572,  495,  476,
      477,  105,    0,    0,  573,  106,  574,    0,    0,   89,
      728,  729,  730,  731,  737,  732,  733,  734,  735,  736,
      599,  522,  107,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  925,    9,    0,
      473,    0,  108,  109,  110,    0,  670,  609,    0,    0,
        0,    0,  496,  111,  112,  113,  338,    0,  492,   82,
        0,   80,    0,  472,    0,    0,   98,    0,    0,    0,
        0,    0, 1169, 1243, 1244, 1245, 1242,    0, 1233, 1234,
     1232, 1230, 1231, 1170, 1171,    0,   99,  100,  101,    0,
        0,    0,    0,    0,    0,    0,  491,  102,  103,  104,
      337,    0,    0,    0,  633,    0,    0,-32766,    0,    0,
        0,    0,    0,    0,    0, 1235, 1236, 1237, 1238, 1239,
     1240, 1241,    0,    0,    0,    0,    0,    0,  624,   21,
      571,   11,    0,  528,  572,  495,  476,  477,  105,    0,
        0,  573,  106,  574,    0,    0,   89,  197,    0,    0,
        0,    0, -179,    0,    0,    0,    0,  599,  522,  492,
        0,    0,    0,  830,    0,    0,    0,  198,  199,  200,
        0,    0,    0, 1169,  925,    9,    0,  501,  201,  202,
      203,  339, -179,    0,    0,    0,   81,    0,  474,  -53,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,-32766,    0,
    -32766,-32766,-32766,-32766,-32766,-32766,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  728,  729,
      730,  731,  737,  732,  733,  734,  735,  736,  214,  215,
      216,  217,  218,  219,  220,  221,  222,  223,  224,  225,
      226,  227,  228,  229,  230,  929,   96,    0,  231,  232,
      233,  234,    0,    0,    0,    0,  270,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,    0,-32766,    0,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,
    -32766,    0,-32766,-32766,-32766,-32766,  214,  215,  216,  217,
      218,  219,  220,  221,  222,  223,  224,  225,  226,  227,
      228,  229,  230,    0,   96,    0,  231,  232,  233,  234,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,-32766,    0,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
        0,-32766,    0,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,    0,-32766,-32766,-32766,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,-32766,-32766,-32766,    0,    0,    0,
        0,    0,    0,    0,-32766,-32766,-32766,-32766,-32766,    0,
    -32766,    0,    0,-32766,    0,-32766,    0,    0,    0,    0,
        0,    0,    0,    0,-32766,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,-32766,-32766
  ];

  private static $yycheck = [
       20,   27,   28,   29,   30,    0,   32,   33,   34,   35,
       36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
       46,   47,   27,   28,   29,   30,   52,   53,   55,   55,
       57,   57,    1,   59,    1,   52,   53,   57,   55,   48,
       57,   61,   62,   63,   64,   65,   66,   67,   68,   69,
       70,   81,   82,    2,   74,    1,   76,   77,   78,   79,
       80,   81,   82,   83,   84,   85,   86,   87,   88,   89,
       90,   91,   92,   93,   94,   95,   96,   97,   98,   20,
      100,  101,  102,  103,  104,  105,  106,  107,  108,  109,
      110,  111,  112,  113,  114,  115,  116,  117,  118,  119,
      130,  121,  122,  123,  124,  125,   27,   28,   29,   30,
        1,   32,   33,   34,   35,   36,   37,   38,   39,  128,
       61,   62,   63,   64,   65,   66,   67,   68,   69,   70,
       38,   39,   40,   41,   42,   76,   77,   78,   79,   80,
       81,   82,   83,   84,   85,   86,   87,   88,   89,   90,
       91,   92,   93,   94,   95,   96,   97,   98,   99,  100,
      101,  102,  103,  104,  105,  106,  107,  108,  109,  110,
      111,  112,  113,  114,  115,  116,  117,  118,  119,  128,
      121,  122,  123,  124,  125,    0,    1,    3,    4,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   63,   20,    3,    4,    5,    6,
        7,    8,    9,   10,   11,   12,   13,   14,   15,   16,
       17,   18,   81,   82,    1,   40,   41,   42,    2,   47,
      121,  122,  123,  124,  125,   50,   51,   52,   53,   54,
       21,    1,   23,   24,   25,   26,   61,   62,   63,   64,
       65,   66,   67,   68,   69,   31,   32,   33,   34,   35,
       36,   37,   38,   39,   40,   41,   42,   31,   83,   84,
       22,  130,   87,   88,   89,   90,   91,   92,   22,    1,
       95,   96,   97,   56,    1,  100,  101,  102,  103,  104,
      105,  106,  107,  108,  109,  110,  111,  112,   20,   27,
       28,   29,   30,   56,   32,   33,   34,   35,   36,   37,
      128,  126,    1,  128,  129,   59,  131,   70,   40,   41,
       42,   47,   43,   44,   45,   46,   47,    2,   50,   51,
       52,   53,   54,   43,   44,   45,   46,   47,   47,   61,
       62,   63,   64,   65,   66,   67,   68,   69,  121,  122,
      123,  124,  125,   19,  128,   21,   31,   23,   24,   25,
       26,   83,   84,    1,  128,   87,   88,   89,   90,   91,
       92,   56,    1,   95,   96,   97,  128,    2,  100,  101,
      102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,   20,   52,   53,    1,   55,   50,   57,    2,   59,
       54,   31,  128,  129,  126,    2,  128,  129,  130,  131,
       64,   40,   41,   42,   18,    1,   18,   21,   70,  128,
      129,   50,   51,   52,   53,   54,    2,   63,   18,   81,
       82,   21,   61,   62,   63,   64,   65,   66,   67,   68,
       69,  130,   49,    2,  129,   81,   82,   24,   25,   26,
        2,   58,    2,  128,   83,   84,   60,   59,   87,   88,
       89,   90,   91,   92,   81,   82,   95,   96,   97,   47,
       56,  100,  101,  102,  103,  104,  105,  106,  107,  108,
      109,  110,  111,  112,  101,  102,  103,  104,  105,  106,
      107,  108,  109,  110,  130,    1,   18,  126,  128,  128,
      129,  130,  131,    3,    4,    5,    6,    7,    8,    9,
       10,   11,   12,   13,   14,   15,   16,   17,   18,   19,
       57,   21,    2,   23,   24,   25,   26,   27,   28,   29,
       30,   31,   32,   33,   34,   35,   36,   37,   38,   39,
       40,   41,   42,   43,   44,   45,   46,   47,    0,    1,
       56,  129,   52,   53,   57,   55,   22,   57,   57,   59,
       43,   44,   45,   46,   47,    2,    2,   70,   20,   52,
       53,   70,   55,    1,   57,   49,   59,   40,   41,   42,
       60,   18,   22,    2,   21,   43,   44,   45,   40,   41,
       42,    1,  129,   18,   60,  120,   21,   18,   50,   51,
       52,   53,   54,  128,  127,   79,   22,  130,   22,   61,
       62,   63,   64,   65,   66,   67,    1,   69,   18,   59,
       25,   26,    2,   60,   60,    2,  129,   22,   56,   22,
      129,   83,   84,   27,   28,   87,   88,   89,   90,   91,
       92,   52,   53,   95,   96,   97,   56,   26,  100,  101,
      102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,   22,   46,   47,   49,   61,   62,   64,   65,   81,
       82,   93,   94,   22,  126,   60,  128,  129,   22,  131,
        3,    4,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   22,   21,   27,
       23,   24,   25,   26,   27,   28,   29,   30,   31,   32,
       33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
       43,   44,   45,   46,   47,    1,   22,   57,   20,   52,
       53,   22,   55,   63,   57,   98,   99,  128,  129,   22,
       70,  128,  129,   42,   20,  128,  129,   47,   40,   41,
       42,   81,   82,  128,  129,   48,   58,   55,   50,   51,
       52,   53,   54,   48,   40,   41,   42,   59,   48,   61,
       48,   58,   49,   59,   50,   51,   52,   53,   54,   49,
       59,   56,   56,   86,   74,   61,   62,   63,   64,   65,
       66,   67,   58,   69,   58,   58,   58,   58,   58,  129,
      130,   58,   58,   58,   58,   58,   75,   83,   84,   59,
       59,   87,   88,   89,   90,   91,   92,   59,    1,   95,
       96,   97,   59,   59,  100,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,   20,   59,   62,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
      126,   60,  128,  129,   20,  131,   60,   40,   41,   42,
       60,   60,   60,   60,   60,   60,   60,   50,   51,   52,
       53,   54,   60,   60,   40,   41,   42,   63,   61,   62,
       85,   87,  111,  127,   50,   51,   52,   53,   54,  120,
      120,    1,   95,   59,  120,   61,  120,  129,   -1,  127,
       83,   84,  129,  128,   87,   88,   89,   90,   91,   92,
       20,   -1,   95,   96,   97,   98,   99,  100,  101,  102,
      103,  104,  105,  106,  107,  108,  109,  110,  111,  112,
       40,   41,   42,   -1,   -1,  128,  128,  128,  128,  128,
       50,   51,   52,   53,   54,  128,  129,  130,  131,  128,
      128,   61,   62,  128,  128,  121,  122,  123,  124,  125,
      128,  128,   -1,  129,    1,  128,  128,  128,  128,  128,
      128,  128,  128,   83,   84,  128,  128,   87,   88,   89,
       90,   91,   92,   20,  128,   95,   96,   97,   98,   99,
      100,  101,  102,  103,  104,  105,  106,  107,  108,  109,
      110,  111,  112,   40,   41,   42,  128,  128,  128,  128,
       -1,  129,  129,   50,   51,   52,   53,   54,  128,  129,
      129,  131,  129,  129,   61,   62,  129,  129,   -1,  130,
      130,  130,  130,  130,  130,  130,  130,    1,  130,  130,
      130,  130,  130,  130,  130,  130,   83,   84,  130,  130,
       87,   88,   89,   90,   91,   92,   20,   -1,   95,   96,
       97,   -1,   -1,  100,  101,  102,  103,  104,  105,  106,
      107,  108,  109,  110,  111,  112,   40,   41,   42,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   50,   51,   52,   53,
       54,  128,  129,  130,  131,   -1,   -1,   61,   62,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
        1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   83,
       84,   -1,   -1,   87,   88,   89,   90,   91,   92,   20,
       -1,   95,   96,   97,   -1,   -1,  100,  101,  102,  103,
      104,  105,  106,  107,  108,  109,  110,  111,  112,   40,
       41,   42,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   50,
       51,   52,   53,   54,  128,  129,  130,  131,   -1,   -1,
       61,   62,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   83,   84,   -1,   -1,   87,   88,   89,   90,
       91,   92,   -1,   -1,   95,   96,   97,   -1,   -1,  100,
      101,  102,  103,  104,  105,  106,  107,  108,  109,  110,
      111,  112,   20,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,  128,  129,   -1,
      131,   -1,   40,   41,   42,   -1,   44,    1,   -1,   -1,
       -1,   -1,   50,   51,   52,   53,   54,   -1,   56,   57,
       -1,   59,   -1,   61,   -1,   -1,   20,   -1,   -1,   -1,
       -1,   -1,   70,   71,   72,   73,   74,   -1,   76,   77,
       78,   79,   80,   81,   82,   -1,   40,   41,   42,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   50,   51,   52,   53,
       54,   -1,   -1,   -1,    1,   -1,   -1,   61,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,  113,  114,  115,  116,  117,
      118,  119,   -1,   -1,   -1,   -1,   -1,   -1,    1,   83,
       84,  129,   -1,   87,   88,   89,   90,   91,   92,   -1,
       -1,   95,   96,   97,   -1,   -1,  100,   20,   -1,   -1,
       -1,   -1,   49,   -1,   -1,   -1,   -1,  111,  112,   56,
       -1,   -1,   -1,   60,   -1,   -1,   -1,   40,   41,   42,
       -1,   -1,   -1,   70,  128,  129,   -1,   50,   51,   52,
       53,   54,   79,   -1,   -1,   -1,   59,   -1,   61,   62,
        3,    4,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   -1,   21,   -1,
       23,   24,   25,   26,   27,   28,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  101,  102,
      103,  104,  105,  106,  107,  108,  109,  110,    3,    4,
        5,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,  128,   21,   -1,   23,   24,
       25,   26,   -1,   -1,   -1,   -1,   31,    3,    4,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   -1,   21,   -1,   23,   24,   25,
       26,   27,    3,    4,    5,    6,    7,    8,    9,   10,
       11,   12,   13,   14,   15,   16,   17,   18,   19,   -1,
       21,   -1,   23,   24,   25,   26,    3,    4,    5,    6,
        7,    8,    9,   10,   11,   12,   13,   14,   15,   16,
       17,   18,   19,   -1,   21,   -1,   23,   24,   25,   26,
        3,    4,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   -1,   21,   -1,
       23,   24,   25,    3,    4,    5,    6,    7,    8,    9,
       10,   11,   12,   13,   14,   15,   16,   17,   18,   19,
       -1,   21,   -1,   23,   24,    3,    4,    5,    6,    7,
        8,    9,   10,   11,   12,   13,   14,   15,   16,   17,
       18,   19,   -1,   21,   20,   23,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   40,   41,   42,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   50,   51,   52,   53,   54,   -1,
       56,   -1,   -1,   59,   -1,   61,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   70,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   81,   82
  ];

  private static $yybase = [
      185,  278,  278,  371,  548,  724,  724,  817,  890, 1036,
      963,  311, 1109, 1109,  -20,  768,  773,  882,  883,   59,
      248, 1246, 1246, 1246, 1246, 1246, 1246, 1246, 1246, 1246,
     1246, 1246,  880,  794,  804,  809,  810,  826,  832,  656,
      738,  734,  651,  743,  737,  903,  904,  905,  639,  736,
      813,  812,  806,  717,  906,  838,  805,  843,  847,  677,
      500,  500,  500,  500,  500,  500,  500,  500, 1435,  500,
      500,  500,  500,  500,  500,  500, 1327, 1513, 1513, 1513,
      109,  109,  393,  615,  808,  730,  782,  723,  771,  879,
       31,  584,  240,  586,   54,   33,  605,  283, 1202, 1202,
     1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202, 1202, 1202, 1202, 1202,  708,  708,  708,
      708,  708,  708,  708, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202,  708,  708,  708,  708,  708,  708,  708,
      708,  708,  708,  708,  708,  708,  708,  708,  708,  708,
      708,  708,  708,  708,  708,  708,  708,  708,  708,  708,
      708,  708,  708,  708,  708,  708,  708,  708,  708,  708,
      708,  708, 1202, 1202,  708, 1202, 1202, 1202, 1202, 1202,
     1202,  708,  708,  708,  708, 1202, 1202, 1202, 1202, 1202,
     1202,  708, 1202, 1202, 1202, 1202,  203,  203,  203,  203,
      203,  203,  203,  203,  203,  203,  203,  203,  203,  203,
      203,  203,  203,  203,  203,  203,  203,  203,  203,  203,
      203,  203,  203,  203,  203,  203,  203,  203,  203,  203,
      184,  184,  184,  334,  334,  334,  334,  334,  334,  334,
      334,  334,  334,  334,  334,  334,  334,  334,  334,  334,
      184,  184,  219,  219,  219, 1582, 1582,  834,  834,  834,
     1560, 1560,  423, 1537, 1537,  595, 1489, 1489,  621, 1464,
     1464,  -26, 1387, 1387,  672,  606,  224,  224,  224,  224,
       -5,   -5, 1584, 1303,  670,  497,  497,  501,   92,   92,
       92,   92,   92,   92,   92,   92,   92,   92,  272,  272,
      272,  272,  141,  141,  141,  364,  247,  247,  537,  537,
      537,  537,   79,   79,  -30,  588,  588,  517,  517,  517,
      517,  517,  517,  290,  290,  290,  588,  227,  227,  227,
      227,  227,  227,  227,  227,  227,  542,  542,  542,  542,
      542,  542,  542,  542,  616,  616,  616,  616,  463,  463,
      463,  463,  463,  494,  463,  463,  572,  414,  463,  315,
      279,  279,  279,  279,  -17,  -17,  279,  279,  279,  279,
      -17,  -17,  315,  340,  340,  340,  340,  589,  589,  590,
      279,  340,  346,  726,  726,  726,  726,  726,  726,  726,
      726,  362,  751,  223,  751,  726,  821,  811,  603,  396,
      563,  274,  348,  899,  -27,  -27,  348,  -27,   -9,  348,
      348,  348,  348,  348,  348,  348,  348,  348,  348,  348,
      348,  348,  348,  348,  348,  348,  348,  348,  348,  348,
      348,  348,  348,  348,  348,  291,  625,  477,  325,  534,
      637,  578,  710,  707,  578,  707,  722,  722,  714,  256,
      750,  840,  560,  715,  720,  844,  825,  756,   51,  613,
      604,  475,  833,  617,  370,  236,  772,  837,  713,  902,
      564,  520,  526,  422,  901,  802,  898,  822,  226,  398,
      410,  783,  609,  575,  900,  182,  814,  795,  721,  697,
      721,  764,  897,  764,  764,  758,  375,  897,  758,  751,
      448,  764,  897,  710,  710,  814,  764,  795,  758,  751,
      701,  702,  751,  751,  751,  751,  897,  897,  897,  891,
        5,  725,  607,  731,  744,  745,  787,  803,  725,  839,
      797,  841,  842,  856,  893,  776,  779,  894,  579,  919,
      918,  709,  763,  915,  780,  777,  770,  769,  774,  725,
      746,  786,  704,  785,  725,  747,  740,  881,  914,  725,
      424,  784,  913,  878,  800,  478,  403,  848,  675,  700,
      912,  801,  911,  623,  910,  403,  739,  796,  781,  788,
      600,  909,  789,  725,  441,  807,  791,  908,  698,  775,
        0, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202,  -20, 1202, 1202,    0,   59,   59,   59,   59,
        0,  500, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202,  500,  500,  500,  500,  500,  500,  500,
      500,  500,  500,  500,  500,  500,  500,  500,  500,  500,
      500,  500,  500,  500,  500,  500,  500,  500,  500,  500,
      758,    0,    0,    0,    0,    0,    0,    0,    0,  -26,
        0,    0,    0,    0,    0,    0,    0, 1202,  -26,  -26,
      -26, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1202, 1202,
     1202, 1202, 1202, 1202, 1202,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202,    0,    0, 1202,    0,    0,    0,    0,
        0,    0, 1202, 1202, 1202, 1202,    0,    0,    0,    0,
        0,    0, 1202,    0,    0,    0,    0,  500,  500,  500,
      500,  500,  500,  500,  500,  500,  500,  500,  500,  500,
      500,  500,  500,  500,  500,  500,  500,  500,  500,  500,
      500,  500,  500,  500,  500,  500,  500,  500,  500,  500,
      500,  500,  500,  500,  -26,  -26,  -26,  -26,  -26,  -26,
      -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,
      -26,  500,  500,  -26,  -26,  -26,  500,  500, 1202, 1202,
     1202,  500,  500,  -26,  500,  500,  -26,  500,  500,  -26,
      500,  500,    0,  500,  500,  -26,  -26,  517,  517,  517,
      517,  -26,  -26, 1202,  383,  383,  383,  383,  383,  517,
      517,  517,  517,  517,  517,  517,  517,  517,  517,  -26,
      -26,  -26,  -26,  383,  383,  383,  383,  383,  383,  517,
      517,  517,  517,  -26,  -26,  383,  383,  383,    0,    0,
        0,    0,    0,    0,  340,  340,  340,  383,  348,  348,
      348,  348,  348,  348,  348,  348,  348,  517,  517,  517,
      517,  517,  517,  517,  517,  340,  340,  340,  340,  348,
      348,  348,  348,  348,  348,  348,  348,  348,  348,  348,
      348,  517,  517,  517,  517,  758,  758,  517,  517,  517,
      517,  758,  758,  348,    0,    0,    0,    0,  340,  340,
      348,  517,    0,  604,  348,  348,  348,  348,  348,  348,
      348,  348,  348,  348,  348,  348,  348,  348,  348,  604,
        0,    0,  725,    0,  637,  758,  758,    0,  758,  897,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  725,  839,    0,
      725,    0,    0,  897,  897,    0,  897,  897,  897,  897,
        0,  897,  751,    0,  897,  897,  897,  897,  839,    0,
        0,    0,    0,  623,    0,    0,    0,  839,  623,  620,
      620,    0,    0,    0,    0,  581,  424,  725,  450,    0,
        0,    0,  450,    0,    0,  581
  ];

  private static $yydefault = [
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,  657,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,  589,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  259,
      588,  260,  476,  589,  261,   73,  478,  596,32767,  477,
      166,  262,  172,  169,  175,  177,32767,  263,  264,   77,
    32767,32767,32767,32767,32767,  657,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,  294,  295,  296,  297,
      298,  299,  300,  301,  302,  303,  304,  305,  306,  307,
      308,  293,  282,  358,  359,  360,  361,  362,  363,  364,
      365,  366,  367,  368,  369,  370,  371,  372,  357,  346,
      380,  314,  378,  424,  425,  426,  427,  428,  429,  430,
      431,  432,  433,  434,  435,  436,  437,  438,  423,  413,
      313,  377,  446,  444,  443,  280,  344,32767,32767,32767,
      281,  345,  411,  279,  343,  412,  273,  337,  410,  274,
      338,  404,  272,  336,  405,  403,  285,  286,  349,  350,
      416,  417,32767,32767,   53,   54,   54,   54,  287,  277,
      278,  276,  275,  351,  341,  342,  339,  340,  408,  409,
      406,  407,   53,   53,   53,   53,  179,32767,  283,  284,
      347,  348,  414,  415,   53,   53,   53,  265,  266,  271,
      329,  330,  335,  396,  397,  402,   54,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,  267,  268,  269,  270,
      331,  332,  333,  334,  398,  399,  400,  401,   68,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
      317,  316,  318,  319,  320,  321,  382,  381,  383,  384,
      385,  386,32767,  448,  447,  449,  450,  451,  452,32767,
      156,  158,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  488,
      488,32767,32767,32767,  324,  389,32767,  455,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,  180,32767,32767,32767,32767,32767,32767,32767,
      499,  500,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,  192,32767,32767,  193,32767,32767,32767,32767,   90,
    32767,32767,   86,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,   49,32767,32767,32767,32767,32767,   41,
      167,32767,32767,  173,32767,32767,  234,  219,  462,  224,
      463,32767,32767,32767,32767,  322,  656,32767,  387,32767,
      656,32767,32767,32767,32767,  235,32767,  220,  453,32767,
       97,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,  482,  488,32767,32767,32767,32767,32767,   52,32767,
    32767,32767,32767,32767,32767,32767,   39,32767,   72,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  491,
    32767,32767,  488,32767,  181,32767,32767,32767,32767,   96,
       91,32767,32767,32767,32767,   76,  145,32767,32767,  241,
    32767,32767,32767,   69,32767,  144,32767,32767,32767,32767,
      176,32767,32767,  102,   98,32767,32767,32767,32767,32767,
      486
  ];

  private static $yygoto = [
       33,   62,   64,   63,   64,   62,   35,   37,  677,   39,
       40,   42,   43,   44,   48,   49,   32,  440,  441,  442,
      443,  444,  445,   36,   20,  310,  446,  447,  448,  449,
      450,  451,   60,   38,   61,  276,  277,  278,  279,  280,
      281,  282,  283,  284,  285,  286,  287,  288,  289,  290,
      291,  292,  335,  340,  343,  346,  349,  352,  356,  357,
      368,  369,  370,  371,  372,  388,  389,  397,  398,  399,
      416,  417,  418,  419,   41,  293,  294,  295,  296,  297,
      298,  299,  300,  301,  302,  303,  304,  305,  306,  307,
      308,  309,  336,  341,  344,  347,  350,  353,  358,  359,
      373,  374,  375,  376,  377,  390,  391,  400,  401,  402,
      420,  421,  422,  423,  568,  804,  485,  487,  804,  642,
      883,  708,   65,  311,   45,   66,  460,   67,  312,   46,
       47,  602,  602,  602,  602,  602,  602,  602,  602,  602,
      602,  602, 1268,  602,  602, 1268, 1172, 1172, 1172, 1172,
     1172,  684,  602,  602,  602,  602,  602,  602,  602,  602,
      602,  602,  602, 1269, 1130,  659, 1269,  638,  654,  667,
       50,   51,  678,   52,   53,  330,   69,   70,  331,   22,
      918,   23,  614,   54,   71,   55,   72,   73,   56,  643,
       74,   75,   57,   58,   25,   10,  758,  766,  998,  998,
      998,  998,  998,  998,  998,  998,  998,  998,  998, 1266,
      998,  998,  653,  547,  632, 1258, 1146, 1251,  632,  998,
      998,  998,  998,  998,  998,  998,  998,  998,  998,  998,
      999,  999,  999,  999,  999,  999,  999,  999,  999,  999,
      999,  688,  999,  999,  561,  689,  688,  709, 1248,  607,
      644,  999,  999,  999,  999,  999,  999,  999,  999,  999,
      999,  999,  960,  961, 1023, 1024, 1025, 1089, 1090, 1091,
     1247, 1249,  777,  795, 1129,  834,  655,  505,  548,  742,
      564,  719,  640,  746,  772, 1130, 1130, 1130, 1130, 1130,
     1130, 1130,  515,  627,  540,  540,  540,  540,  911,  540,
      540, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130,
     1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130,
     1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130,
     1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130,
      662,  914, 1130,  727,  727,  727,  899,  866, 1264, 1130,
     1130, 1130, 1130,  820,  822,  806,  806,  806,  806, 1130,
      806,  806,  781,  625,  908,  727,    0,  893,    0,  610,
      567,  876,  861,  894,  897,  859,  856,  857,  858,  860,
      781,  781,  781,  781,  727,    0,    0,    0,  811,  811,
      811,  811,    0,  811,  811, 1129, 1129, 1129, 1129, 1129,
     1129, 1129,    0,    0,  812,  812,  812,  812,    0,  812,
      812, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
     1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
     1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
     1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
     1250,    0, 1129,    0,  986,    0,    0,    0,    0, 1129,
     1129, 1129, 1129, 1116,    0,    0,    0,    0,    0, 1129,
        0,    0, 1116, 1116, 1116,    0,    0,    0,  634,    0,
        0,    0,  810,  810,  810,  810,    0,  810,  810,    0,
        0,    0,    0,    0,  479,  753,  753,  753,  753,    0,
        0,  634,  634,    0,    0,  366,  575,  578,  588,    0,
        0,    0,    0,    0, 1246,    0,    0,  479,  480,    0,
        0,    0,  629,  629,  629,  629,  629,  629,  629,  629,
      629,    0,    0,    0,    0, 1139, 1139, 1139,    0,    0,
        0,    0,    0,  526,  751,    0,  645,    0,  639,    0,
        0,  663,  639,    0,  516,    0,    0,    0,    0,  753,
      753,  753,  753,  753,    0,  753,  753,  556,    0,  753,
        0,    0,    0,    0,  519,    0,    0,    0,  608,  608,
      639,  608,  608,  639,  639,  663,    0,    0,    0,    0,
      481,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      488,    0,  616,  579,  616,  589,    0,  612,  613,    0,
      645,  751,  751,  649,    0,  645,    0,  559,  752,    0,
      649,  559,  997, 1160,  539,  529,  611, 1062, 1161,  531,
      532,  637, 1128,  560,  592,  593,  563,  849,  721,  913,
      665,  592,  593,  666,  565,  669,    0,  980,  525,    0,
      824,  462,    0,    0,    0,    0, 1110,    0,  527,    0,
        0,  533,  534,  535,  536, 1110, 1110, 1110,    0,  462,
      462,  462,  462,    0,  577,    0,    0,    0,    0,    0,
        0,  513,  513,  514,  869,  826,    0,  826,  828,  828,
      862,    0,  900,    0,    0,  787,  789,  786,  784,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1116, 1116,
     1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116,
     1116, 1116, 1116, 1116, 1116,    0,    0, 1116, 1116, 1116,
        0,    0,    0,    0,  521,  647,  650, 1116,    0,  870,
     1116,    0,    0, 1116,  904,  779, 1116,    0,    0, 1116,
     1116,    0,    0,    0,    0, 1116, 1116,    0,  903,  901,
      902,  780,    0,  779,  779,  779,  779,    0,    0,    0,
        0,    0,    0, 1116, 1116, 1116, 1116,    0,    0,  780,
      780,  780,  780,    0,    0,    0,    0, 1116, 1116,    0,
        0,    0,  387,  367,    0,    0,    0,    0, 1116, 1116,
     1116,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  367,  367,  367,  367,  387,    0,    0,    0, 1116,
     1116, 1116, 1116,  406,  406,  406,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  778,
        0,    0,    0,    0,    0,    0,    0,    0, 1116, 1116,
     1116, 1116, 1116, 1116,    0,    0, 1116,  778,  778,  778,
      778,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  996,
     1061,    0, 1127,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110,
     1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110,    0,    0,
     1110, 1110, 1110,    0,    0,    0,    0,    0,    0,    0,
     1110,    0,    0, 1110,    0,    0, 1110,    0,    0, 1110,
        0,    0, 1110, 1110,    0,    0,    0,    0, 1110, 1110,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1116, 1110, 1110, 1110, 1110,
      994,    0,    0, 1059,    0,    0,    0,    0,    0,    0,
     1110, 1110,    0, 1125,    0,    0,    0,    0,    0,    0,
        0, 1110, 1110, 1110,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1110, 1110, 1110, 1110,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1110, 1110, 1110, 1110, 1110, 1110,    0,    0, 1110,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      332,  453,  454,  455,  456,  457,  458,    0,    0,    0,
        0,    0, 1135, 1135,    0, 1135,   68,  313,  314,  315,
      316,  317,  318,  319,  320,  321,  322,  323,  324,  325,
      326,  327,  328,  329,  342,  345,  348,  351,  354,  355,
      360,  361,  378,  379,  380,  381,  392,  393,  403,  404,
      405,  424,  425,  426,  427,    0,    0,   78,    0,    0,
        0,    0,    0,    0,  570,  461,   79,  333,    0,    0,
        0,    0,    0,    0,  334,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1110,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  660
  ];

  private static $yygcheck = [
       25,   25,   25,   25,   25,   25,   25,   25,    6,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   28,  107,  107,   28,    8,
       28,   28,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   10,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   86,  110,   50,   86,   49,   49,   49,
       25,   25,    4,   25,   25,   25,   25,   25,   25,   76,
      101,   76,   76,   25,   25,   25,   25,   25,   25,   76,
       25,   25,   25,   25,   76,   62,   50,   50,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  125,
      108,  108,   39,   39,   29,  122,  113,  117,   29,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      109,  109,  109,  109,  109,  109,  109,  109,  109,  109,
      109,   11,  109,  109,   82,   11,   11,   11,  115,  106,
      106,  109,  109,  109,  109,  109,  109,  109,  109,  109,
      109,  109,  104,  104,  104,  104,  104,  104,  104,  104,
      114,  116,   56,   61,  108,   72,   42,   73,   46,   40,
       33,   34,   52,   43,   54,  110,  110,  110,  110,  110,
      110,  110,   32,   26,   35,   35,   35,   35,   98,   35,
       35,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
       30,   99,  110,   37,   37,   37,   94,   84,  121,  110,
      110,  110,  110,   68,   70,   24,   24,   24,   24,  110,
       24,   24,   15,   35,   96,   37,   -1,   92,   -1,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       15,   15,   15,   15,   37,   -1,   -1,   -1,   21,   21,
       21,   21,   -1,   21,   21,  108,  108,  108,  108,  108,
      108,  108,   -1,   -1,   22,   22,   22,   22,   -1,   22,
       22,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      110,   -1,  108,   -1,  105,   -1,   -1,   -1,   -1,  108,
      108,  108,  108,  105,   -1,   -1,   -1,   -1,   -1,  108,
       -1,   -1,  105,  105,  105,   -1,   -1,   -1,    7,   -1,
       -1,   -1,   20,   20,   20,   20,   -1,   20,   20,   -1,
       -1,   -1,   -1,   -1,   29,   29,   29,   29,   29,   -1,
       -1,    7,    7,   -1,   -1,   36,  106,  106,  106,   -1,
       -1,   -1,   -1,   -1,   86,   -1,   -1,   29,   29,   -1,
       -1,   -1,    7,    7,    7,    7,    7,    7,    7,    7,
        7,   -1,   -1,   -1,   -1,  108,  108,  108,   -1,   -1,
       -1,   -1,   -1,   58,   41,   -1,   41,   -1,    7,   -1,
       -1,    7,    7,   -1,    7,   -1,   -1,   -1,   -1,   29,
       29,   29,   29,   29,   -1,   29,   29,    7,   -1,   29,
       -1,   -1,   -1,   -1,    7,   -1,   -1,   -1,    7,    7,
        7,    7,    7,    7,    7,    7,   -1,   -1,   -1,   -1,
        7,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       58,   -1,   29,   29,   29,   29,   -1,   29,   29,   -1,
       41,   41,   41,   29,   -1,   41,   -1,   29,   41,   -1,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   -1,   75,   58,   -1,
       59,   35,   -1,   -1,   -1,   -1,   75,   -1,   58,   -1,
       -1,   58,   58,   58,   58,   75,   75,   75,   -1,   35,
       35,   35,   35,   -1,   86,   -1,   -1,   -1,   -1,   -1,
       -1,   35,   35,   35,   59,   59,   -1,   59,   59,   59,
       59,   -1,   59,   -1,   -1,   59,   59,   59,   59,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,   -1,   -1,  105,  105,  105,
       -1,   -1,   -1,   -1,   59,   86,   86,  105,   -1,   59,
      105,   -1,   -1,  105,   59,   21,  105,   -1,   -1,  105,
      105,   -1,   -1,   -1,   -1,  105,  105,   -1,   59,   59,
       59,   22,   -1,   21,   21,   21,   21,   -1,   -1,   -1,
       -1,   -1,   -1,  105,  105,  105,  105,   -1,   -1,   22,
       22,   22,   22,   -1,   -1,   -1,   -1,  105,  105,   -1,
       -1,   -1,   36,   36,   -1,   -1,   -1,   -1,  105,  105,
      105,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   36,   36,   36,   36,   36,   -1,   -1,   -1,  105,
      105,  105,  105,   36,   36,   36,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   20,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  105,  105,
      105,  105,  105,  105,   -1,   -1,  105,   20,   20,   20,
       20,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  105,
      105,   -1,  105,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   -1,   -1,
       75,   75,   75,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       75,   -1,   -1,   75,   -1,   -1,   75,   -1,   -1,   75,
       -1,   -1,   75,   75,   -1,   -1,   -1,   -1,   75,   75,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,  105,   75,   75,   75,   75,
      105,   -1,   -1,  105,   -1,   -1,   -1,   -1,   -1,   -1,
       75,   75,   -1,  105,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   75,   75,   75,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   75,   75,   75,   75,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   75,   75,   75,   75,   75,   75,   -1,   -1,   75,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       44,   44,   44,   44,   44,   44,   44,   -1,   -1,   -1,
       -1,   -1,   75,   75,   -1,   75,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   -1,   -1,   44,   -1,   -1,
       -1,   -1,   -1,   -1,   44,   44,   44,   44,   -1,   -1,
       -1,   -1,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   75,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   75
  ];

  private static $yygbase = [
        0,    0,    0,    0,  167,    0,    8,  115,  117,    0,
      148,  241,    0,    0,    0,   -2,    0,    0,    0,    0,
      475,  381,  397,    0,  348,  -82, -180,    0,  108,  131,
     -150,    0, -175, -184, -185,  287,  429,  -22,    0, -216,
     -155,  180, -154, -152,  863,    0, -153,    0,    0, -215,
     -272,    0, -183,    0, -186,    0, -113,    0,   69,  162,
        0, -122,  186,    0,    0,    0,    0,    0, -172,    0,
     -173,    0, -111, -110,    0,  588, -392,    0,    0,    0,
        0,    0,  158,    0, -177,    0,  152,    0,    0,    0,
        0,    0, -220,    0, -178,    0, -221,    0, -191, -179,
        0,  172,    0,    0, -146,  395,  169, -222,  198,  230,
       88,    0,    0,  129,  -92, -114,  -91, -145,    0,    0,
        0, -232,  130,    0,    0,  195,    0
  ];

  private static $yygdefault = [
    -32768,  600,  673,  674,  675,  676,  686,  601,  623,    3,
      683,  685,    4,  690,  692,  693,  694,  695,  696,  697,
      698,  699,  700,  701,  704,   34,  541,  807,  803, 1159,
      651,  713,  553,  554,  718,  478,  365,  726,  652,  542,
      741,  618,  646,  745,   77,  754,  549,  590,  562,  661,
      765,  543,  555,  664,  771,  385,  776,  782,  523,  853,
      394,  796,    7,  805,  544,  545,  817, 1065,  821, 1131,
      823,  551,  833,  502,  552, 1044, 1156,  569,  855,  518,
       84,   86,  557,  524,  865,  584, 1155,  483,  884,  886,
      887,  587,  892,  896,  898,  585,  907,  558,  910,  915,
        8,  917,  538,   59,  959, 1050, 1163,  484, 1063, 1066,
     1064, 1132,  550, 1145, 1150, 1151, 1152, 1154,  603,  605,
      576, 1256, 1257,  620,  580, 1265,  621
  ];

  private static $yylhs = [
        0,    1,    1,    2,    2,    3,    3,    5,    6,    6,
        8,    8,    9,    9,   10,   10,    4,   12,   12,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   23,   23,   14,   27,   19,   26,
       26,   30,   30,   30,   13,   13,   13,   33,   33,   34,
       34,   34,   32,   35,   35,   36,   36,   37,   37,   37,
       37,   37,   37,   37,   37,   37,   37,   15,   38,   38,
       39,   39,   40,   40,   42,   42,   43,   43,   45,   45,
       46,   46,   41,   41,   16,   16,   47,   47,   47,   47,
       51,   51,   51,   51,   52,   52,   50,   48,   48,   48,
       53,   53,   54,   49,   49,   55,   55,   56,   56,   56,
       56,   56,   56,   56,   56,   56,   56,   56,   56,   56,
       56,   57,   57,   57,   60,   60,   61,   61,   17,   17,
       18,   18,   62,   62,   28,   28,   28,   28,   28,   63,
       63,   63,   21,   22,   64,   65,   20,   20,   20,   67,
       67,   69,   69,   66,   66,   68,   68,   70,   70,   58,
       58,   58,   71,   71,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   74,
       74,   73,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   81,   80,   80,   80,   77,
       77,   91,   91,   92,   78,   78,   93,   83,   83,   94,
       94,   94,   94,   84,   85,   85,   95,   95,   96,   97,
       97,   98,   98,   87,   87,   99,  100,  100,  101,  101,
       59,   59,   59,   88,   88,   89,   89,   90,   90,  102,
      102,   82,   82,   79,   79,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,  109,  111,  107,  107,  107,  107,  107,   76,
       76,  105,  105,  105,  112,  112,  113,  113,  113,  108,
      108,  108,  108,  108,  108,  108,  118,  115,    7,    7,
        7,  104,  104,  106,  106,  106,  106,  106,   29,   29,
       29,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  117,
      117,  117,  117,  117,  117,  117,  117,  117,  117,  117,
      117,   86,  114,  114,  114,   31,   31,   31,   31,   31,
       31,  116,  116,  116,  116,  119,  120,  120,  122,  122,
      110,  110,  110,  123,  124,  124,  125,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  121,  121
  ];

  private static $yylen = [
        1,    0,    1,    1,    1,    1,    1,    4,    5,    4,
        0,    1,    1,    2,    1,    1,    1,    1,    2,    1,
        3,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    1,    1,    3,    4,    4,    4,    4,    1,
        4,    1,    3,    4,    3,    5,    5,    1,    3,    1,
        3,    4,    1,    0,    1,    1,    2,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    5,    0,    1,
        1,    3,    1,    3,    1,    3,    1,    3,    3,    3,
        1,    3,    1,    1,    8,    6,    0,    2,    3,    3,
        0,    2,    3,    3,    1,    3,    1,    0,    2,    2,
        1,    3,    1,    0,    1,    1,    2,    1,    1,    1,
        1,    1,    4,    4,    4,    4,    4,    6,    4,    6,
        4,    3,    5,    5,    1,    2,    3,    6,    5,    3,
        6,    4,    1,    2,    1,    1,    1,    3,    2,    1,
        1,    1,    4,    3,    3,    2,    5,    5,    4,    4,
        3,    4,    3,    1,    3,    1,    2,    1,    2,    2,
        3,    3,    1,    3,    1,    2,    3,    2,    3,    4,
        2,    3,    4,    3,    4,    5,    3,    5,    3,    0,
        1,    1,    1,    5,    5,    7,    7,    7,    6,    7,
        5,    2,    2,    3,    3,    4,    5,    3,    2,    3,
        2,    3,    2,    3,    3,    3,    3,    3,    5,    5,
        3,    2,    3,    1,    2,    1,    1,    2,    2,    0,
        1,    1,    2,    3,    0,    1,    2,    1,    2,    2,
        5,    7,    5,    2,    0,    1,    1,    2,    3,    1,
        3,    1,    3,    1,    2,    2,    1,    2,    3,    2,
        2,    3,    3,    2,    1,    2,    1,    2,    1,    1,
        3,    1,    3,    1,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    2,    2,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    2,
        5,    4,    4,    5,    4,    2,    2,    2,    2,    2,
        2,    2,    2,    3,    2,    3,    2,    1,    1,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    2,    2,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    2,    5,    4,    4,    5,    4,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    3,    2,
        3,    2,    1,    1,    1,    1,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    2,    2,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    2,
        5,    4,    4,    5,    4,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    3,    2,    3,    2,    1,    1,
        1,    1,    4,    4,    2,    5,    4,    4,    1,    3,
        3,    2,    3,    3,    1,    3,    1,    3,    2,    1,
        1,    1,    1,    1,    1,    1,    0,    3,    1,    2,
        3,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    9,    3,    3,    2,    1,    3,    2,    1,
        2,    3,    3,    2,    1,    3,    3,    1,    1,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    0,    1
  ];
  
    
  private $yyval;
  private $yyastk;
  private $yysstk;
  private $yysp;
  private $yystate;
  private $yyloc; // current location
  
  private $lex;
  private $invalid = false;
  
  /**
   * returns the current location (last scanned token)
   * 
   * @return Location
   */
  public function loc()
  {
    if (!$this->yyloc)
      return new Location('<unknown>', new Position(0, 0));
    
    return $this->yyloc;
  }
  
  /**
   * consumes semicolons to avoid unnecessary empty-expressions 
   * 
   * @void
   */
  private function eat_semis()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_SEMI) {
      do {
        $this->lex->skip();
        $peek = $this->lex->peek();
      } while ($peek->type === T_SEMI);

    }
  }
  
  /**
   * consumes a T_END token
   * 
   * @void
   */
  private function eat_end()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_END) {
      $this->lex->skip();
    }
  }
  
  /**
   * parse function
   * 
   * @param  Lexer  $lex
   * @return Node
   */
  public function parse(Lexer $lex) 
  {
    $tokid = self::TOKEN_NONE;
    
    // lexer
    $this->lex = $lex;
    
    // stacks
    $this->yysstk = [ 0 ]; 
    $this->yyastk = [];
    
    // current state
    $yystate = 0;
    
    // error flag
    $yyerrflag = 0;

    // stack position
    $this->yysp = 0;
    
    // location stack
    $yylstk = [];

    for (;;) {
      if (self::$yybase[$yystate] == 0)
        $yyn = self::$yydefault[$yystate];
      else {
        if ($tokid === self::TOKEN_NONE) {
          // Fetch the next token id from the lexer
          $token = $this->lex->next();
                    
          // invalid token (regexp-scan failed)
          if ($token->type === T_INVL) {
            $this->error_at($token->loc, ERR_ERROR, 'invalid source/regexp-literal');
            return null;
          }
          
          // map the lexer token id to the internally used token id's
          if ($token->type >= 0 && $token->type < self::TOKEN_MAP_SIZE)
            $tokid = self::$translate[$token->type];
          else {
            $this->error_at($token->loc, ERR_ERROR, 'invalid token %d -> %s', 
              $token->type, $token->value);
            return null;
          }        
          
          $this->yyloc = $token->loc;
          
          // store location
          $yylstk[$this->yysp] = $this->yyloc;
          
        } 

        if ((($yyn = self::$yybase[$yystate] + $tokid) >= 0
          && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid
          || ($yystate < self::YY2TBLSTATE
            && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + $tokid) >= 0
            && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid))
          && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT
        ) {
          /*
           * >= YYNLSTATE: shift and reduce
           * > 0: shift
           * = 0: accept
           * < 0: reduce
           * = -YYUNEXPECTED: error
           */
          if ($yyn > 0) {
            /* shift */
            
            $this->yysp++;
            
            $this->yysstk[$this->yysp] = $yystate = $yyn;
            $this->yyastk[$this->yysp] = $token;
            
            // store location
            $yylstk[$this->yysp] = $this->yyloc;
            
            $tokid = self::TOKEN_NONE;
            
            if ($yyerrflag > 0)
              $yyerrflag--;
            
            if ($yyn < self::YYNLSTATES)
              continue;

            /* $yyn >= YYNLSTATES means shift-and-reduce */
            $yyn -= self::YYNLSTATES;
          } else
            $yyn = -$yyn;
        } else
          $yyn = self::$yydefault[$yystate];
      }
      
      for (;;) {
        /* reduce/error */
        if ($yyn == 0) {
          /* accept */
          if ($this->invalid === true)
            return null;
          return $this->yyval;
        } elseif ($yyn != self::YYUNEXPECTED) {
          /* reduce */
//ifnot -t
          $this->{'yyn' . $yyn}();
//endif          
          /* Goto - shift nonterminal */
          $yylen = self::$yylen[$yyn];
          $yyloc = $yylstk[$this->yysp - $yylen];
          
          $this->yysp -= $yylen;
          
          $yyn = self::$yylhs[$yyn];
          
          if (($yyp = self::$yygbase[$yyn]
           + $this->yysstk[$this->yysp]) >= 0
            && $yyp < self::YYGLAST && self::$yygcheck[$yyp] == $yyn)
            $yystate = self::$yygoto[$yyp];
          else
            $yystate = self::$yygdefault[$yyn];
          
          $this->yysp++;
          
          $this->yysstk[$this->yysp] = $yystate;
          $this->yyastk[$this->yysp] = $this->yyval;
          
          // set location if a real node was produced by $yyn
          if ($this->yyval instanceof Node)
            $this->yyval->loc = $yyloc;
          
          // store position
          $yylstk[$this->yysp] = $this->yyloc;
          
        } else {
          /* error */
          $this->invalid = true;
                    
          switch ($yyerrflag) {
            case 0:
              // let the lexer know
              $this->lex->sync = true;
              
              $expa = [];
              $expn = 0;
              $base = self::$yybase[$yystate];
              
              for ($i = 0; $i < self::TOKEN_MAP_SIZE; ++$i) {
                $n = $base + $i;
                if ($n >= 0 && $n < self::YYLAST && self::$yycheck[$n] == $i
                  || $yystate < self::YY2TBLSTATE
                  && ($n = self::$yybase[$yystate + self::YYNLSTATES] + $i)
                  && $n < self::YYLAST && ($n < 0 || self::$yycheck[$n] == $i)
                ) {
                  if ($n >= 0 && self::$yyaction[$n] != self::YYUNEXPECTED) {
                    if ($expn === 4) {
                      /* Too many expected tokens */
                      $expa = null;
                      $expn = 0;
                      break;
                    }

                    $expa[] = self::$terminals[$i];
                    $expn++;
                  }
                }
              }

              $exps = 'unexpected ' . self::$terminals[$tokid];
              
              if ($expn > 0) {
                $last = array_pop($expa);
                $exps .= ', expected ';
                
                if ($expn > 1)
                  $exps .= implode(', ', $expa) . ' or ';
                
                $exps .= $last;
                unset ($expa, $last);
              }
              
              $this->error_at($this->yyloc, ERR_ERROR, $exps);              
            case 1:
            case 2:
              $yyerrflag = 3;  
              
              while (!(($yyn = self::$yybase[$yystate] + self::YYINTERRTOK) >= 0
                && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK
                || ($yystate < self::YY2TBLSTATE
                  && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + self::YYINTERRTOK) >= 0
                  && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK))
              ) {  
                if ($this->yysp <= 0) 
                  return null;
                
                $yystate = $this->yysstk[--$this->yysp];              
              }
              
              $yyn = self::$yyaction[$yyn];
              $this->yysstk[++$this->yysp] = $yystate = $yyn;
              break;
            
            case 3:
              if ($tokid === 0) 
                return null;
              
              $tokid = -1;
              break;
          }
        }

        if ($yystate < self::YYNLSTATES)
          break;
        
        /* >= YYNLSTATES means shift-and-reduce */
        $yyn = $yystate - self::YYNLSTATES;
      }
    }
  }


  private function yyn0() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn1() 
  {
     $this->yyval = new Unit(null); 
  }


  private function yyn2() 
  {
     $this->yyval = new Unit($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn3() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; $this->eat_end(); 
  }


  private function yyn4() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; $this->eat_end(); 
  }


  private function yyn5() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn6() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn7() 
  {
     $this->yyval = new Module($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn8() 
  {
     $this->yyval = new Module($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); $this->eat_semis(); 
  }


  private function yyn9() 
  {
     $this->yyval = new Module(null, $this->yyastk[$this->yysp-(4-3)]); $this->eat_semis(); 
  }


  private function yyn10() 
  {
     $this->yyval = null; 
  }


  private function yyn11() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn12() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn13() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn14() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn15() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn16() 
  {
     $this->yyval = new Program($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn17() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn18() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn19() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn20() 
  {
     $this->yyval = null; 
  }


  private function yyn21() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn22() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn23() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn24() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn25() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn26() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn27() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn28() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn29() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn30() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn31() 
  {
     $this->yyval = null; 
  }


  private function yyn32() 
  {
     $this->yyval = null; 
  }


  private function yyn33() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn34() 
  {
     $this->yyval = new RequireDecl(false, $this->yyastk[$this->yysp-(3-2)]); $this->eat_semis(); 
  }


  private function yyn35() 
  {
     $this->yyval = new RequireDecl(true, $this->yyastk[$this->yysp-(4-3)]); $this->eat_semis(); 
  }


  private function yyn36() 
  {
     $this->yyval = new AttrDecl($this->yyastk[$this->yysp-(4-2)]); $this->eat_semis(); 
  }


  private function yyn37() 
  {
     $this->yyval = new CompAttr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn38() 
  {
     $this->yyval = new TopexAttr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn39() 
  {
     $this->yyval = new AttrDef($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn40() 
  {
     $this->yyval = new AttrDef($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn41() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn42() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn43() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn44() 
  {
     $this->yyval = new UseDecl($this->yyastk[$this->yysp-(3-2)]); $this->eat_semis(); 
  }


  private function yyn45() 
  {
     $this->yyval = new UseDecl(new UseAlias($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)])); $this->eat_semis(); 
  }


  private function yyn46() 
  {
     $this->yyval = new UseDecl(new UseUnpack($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)])); $this->eat_semis(); 
  }


  private function yyn47() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn48() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn49() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn50() 
  {
     $this->yyval = new UseAlias($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn51() 
  {
     $this->yyval = new UseUnpack($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn52() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn53() 
  {
     $this->yyval = null; 
  }


  private function yyn54() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn55() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn56() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn57() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn58() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn59() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn60() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn61() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn62() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn63() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn64() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn65() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn66() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn67() 
  {
     $this->yyval = new EnumDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); $this->eat_semis(); 
  }


  private function yyn68() 
  {
     $this->yyval = null; 
  }


  private function yyn69() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn70() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn71() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn72() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn73() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn74() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn75() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn76() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn77() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn78() 
  {
     $this->yyval = new ArrDestr($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn79() 
  {
     $this->yyval = new ObjDestr($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn80() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn81() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn82() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn83() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn84() 
  {
     $this->yyval = new ClassDecl($this->yyastk[$this->yysp-(8-1)], $this->yyastk[$this->yysp-(8-3)], $this->yyastk[$this->yysp-(8-4)], $this->yyastk[$this->yysp-(8-5)], $this->yyastk[$this->yysp-(8-7)]); $this->eat_semis(); 
  }


  private function yyn85() 
  {
     $this->yyval = new ClassDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-5)], null); $this->eat_semis(); 
  }


  private function yyn86() 
  {
     $this->yyval = null; 
  }


  private function yyn87() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn88() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn89() 
  {
     $this->yyval = null; 
  }


  private function yyn90() 
  {
     $this->yyval = null; 
  }


  private function yyn91() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn92() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn93() 
  {
     $this->yyval = null; 
  }


  private function yyn94() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn95() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn96() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn97() 
  {
     $this->yyval = null; 
  }


  private function yyn98() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn99() 
  {
     $this->yyval = null; 
  }


  private function yyn100() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn101() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn102() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn103() 
  {
     $this->yyval = []; 
  }


  private function yyn104() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn105() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn106() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn107() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn108() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn109() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn110() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn111() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn112() 
  {
     $this->yyval = new CtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); $this->eat_semis(); 
  }


  private function yyn113() 
  {
     $this->yyval = new CtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn114() 
  {
     $this->yyval = new DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); $this->eat_semis(); 
  }


  private function yyn115() 
  {
     $this->yyval = new DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn116() 
  {
     $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn117() 
  {
     $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); $this->eat_semis(); 
  }


  private function yyn118() 
  {
     $this->yyval = new SetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn119() 
  {
     $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); $this->eat_semis(); 
  }


  private function yyn120() 
  {
     $this->yyval = new NestedMods($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn121() 
  {
     $this->yyval = new TraitUse($this->yyastk[$this->yysp-(3-2)], null, null); $this->eat_semis(); 
  }


  private function yyn122() 
  {
     $this->yyval = new TraitUse($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], null); $this->eat_semis(); 
  }


  private function yyn123() 
  {
     $this->yyval = new TraitUse($this->yyastk[$this->yysp-(5-2)], null, $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn124() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn125() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn126() 
  {
     $this->yyval = new TraitItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, null); $this->eat_semis(); 
  }


  private function yyn127() 
  {
     $this->yyval = new TraitItem($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-6)]); $this->eat_semis(); 
  }


  private function yyn128() 
  {
     $this->yyval = new TraitDecl($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); $this->eat_semis(); 
  }


  private function yyn129() 
  {
     $this->yyval = new TraitDecl($this->yyastk[$this->yysp-(3-2)], null); $this->eat_semis(); 
  }


  private function yyn130() 
  {
     $this->yyval = new IfaceDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); $this->eat_semis(); 
  }


  private function yyn131() 
  {
     $this->yyval = new IfaceDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null); $this->eat_semis(); 
  }


  private function yyn132() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn133() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn134() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn135() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn136() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn137() 
  {
     $this->yyval = null; 
  }


  private function yyn138() 
  {
     $this->yyval = null; 
  }


  private function yyn139() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn140() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn141() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn142() 
  {
     $this->yyval = new LetDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); $this->eat_semis(); 
  }


  private function yyn143() 
  {
     $this->yyval = new VarDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); $this->eat_semis(); 
  }


  private function yyn144() 
  {
     $this->yyval = new LetDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn145() 
  {
     $this->yyval = new VarDecl($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn146() 
  {
     $this->yyval = new FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn147() 
  {
     $this->yyval = new FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], null); $this->eat_semis(); 
  }


  private function yyn148() 
  {
     $this->yyval = new FnDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null, null); $this->eat_semis(); 
  }


  private function yyn149() 
  {
     $this->yyval = new FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn150() 
  {
     $this->yyval = new FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn151() 
  {
     $this->yyval = new FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn152() 
  {
     $this->yyval = new FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn153() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn154() 
  {
     $this->yyval = new Block([ new ReturnStmt($this->yyastk[$this->yysp-(3-2)]) ]); $this->eat_semis(); 
  }


  private function yyn155() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn156() 
  {
     $this->yyval = new Block([ new ReturnStmt($this->yyastk[$this->yysp-(2-2)]) ]); 
  }


  private function yyn157() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn158() 
  {
     $this->yyval = new Block([ new ReturnStmt($this->yyastk[$this->yysp-(2-2)]) ]); 
  }


  private function yyn159() 
  {
     $this->yyval = null; 
  }


  private function yyn160() 
  {
     $this->yyval = null; 
  }


  private function yyn161() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn162() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn163() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn164() 
  {
     $this->yyval = new Param(null, null, $this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn165() 
  {
     $this->yyval = new Param(null, null, $this->yyastk[$this->yysp-(2-1)], null, true); 
  }


  private function yyn166() 
  {
     $this->yyval = new Param(null, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn167() 
  {
     $this->yyval = new Param(null, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn168() 
  {
     $this->yyval = new Param(null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn169() 
  {
     $this->yyval = new Param(null, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn170() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(2-1)], null, $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn171() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(3-1)], null, $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn172() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn173() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn174() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null, true); 
  }


  private function yyn175() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], false); 
  }


  private function yyn176() 
  {
     $this->yyval = new ThisParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn177() 
  {
     $this->yyval = new ThisParam($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn178() 
  {
     $this->yyval = new RestParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn179() 
  {
     $this->yyval = null; 
  }


  private function yyn180() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn181() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn182() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn183() 
  {
     $this->yyval = new DoStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn184() 
  {
     $this->yyval = new IfStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn185() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn186() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn187() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn188() 
  {
     $this->yyval = new ForStmt($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], null, $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn189() 
  {
     $this->yyval = new ForStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn190() 
  {
     $this->yyval = null; 
  }


  private function yyn191() 
  {
     $this->yyval = new ForStmt(null, null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn192() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(2-2)], null, null); 
  }


  private function yyn193() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn194() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(3-2)], null, $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn195() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn196() 
  {
     $this->yyval = new PhpStmt($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn197() 
  {
     $this->yyval = new GotoStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn198() 
  {
     $this->yyval = new TestStmt(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn199() 
  {
     $this->yyval = new TestStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn200() 
  {
     $this->yyval = new BreakStmt(null); 
  }


  private function yyn201() 
  {
     $this->yyval = new BreakStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn202() 
  {
     $this->yyval = new ContinueStmt(null); 
  }


  private function yyn203() 
  {
     $this->yyval = new ContinueStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn204() 
  {
     $this->yyval = new ThrowStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn205() 
  {
     $this->yyval = new WhileStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn206() 
  {
     $this->yyval = new YieldStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn207() 
  {
     $this->yyval = new AssertStmt($this->yyastk[$this->yysp-(3-2)], null); 
  }


  private function yyn208() 
  {
     $this->yyval = new AssertStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn209() 
  {
     $this->yyval = new SwitchStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn210() 
  {
     $this->yyval = new ReturnStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn211() 
  {
     $this->yyval = new ReturnStmt(null); 
  }


  private function yyn212() 
  {
     $this->yyval = new LabeledStmt($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn213() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn214() 
  {
     $this->yyval = null; 
  }


  private function yyn215() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn216() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn217() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn218() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn219() 
  {
     $this->yyval = null; 
  }


  private function yyn220() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn221() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn222() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn223() 
  {
     $this->yyval = new ElsifItem($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn224() 
  {
     $this->yyval = null; 
  }


  private function yyn225() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn226() 
  {
     $this->yyval = new ElseItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn227() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn228() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn229() 
  {
     $this->yyval = new CatchItem(null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn230() 
  {
     $this->yyval = new CatchItem($this->yyastk[$this->yysp-(5-3)], null, $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn231() 
  {
     $this->yyval = new CatchItem($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn232() 
  {
     $this->yyval = null; 
  }


  private function yyn233() 
  {
     $this->yyval = new FinallyItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn234() 
  {
     $this->yyval = null; 
  }


  private function yyn235() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn236() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn237() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn238() 
  {
     $this->yyval = new PhpUse($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn239() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn240() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn241() 
  {
     $this->yyval = new PhpUseItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn242() 
  {
     $this->yyval = new PhpUseItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn243() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn244() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn245() 
  {
     new CaseItem($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn246() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn247() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn248() 
  {
     $this->yyval = new CaseLabel($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn249() 
  {
     $this->yyval = new CaseLabel(null); 
  }


  private function yyn250() 
  {
     $this->yyval = new Block(null); 
  }


  private function yyn251() 
  {
     $this->yyval = new Block($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn252() 
  {
     $this->yyval = null; 
  }


  private function yyn253() 
  {
     $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); $this->eat_semis(); 
  }


  private function yyn254() 
  {
     $this->yyval = new ExprStmt(null); $this->eat_semis(); 
  }


  private function yyn255() 
  {
     $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn256() 
  {
     $this->yyval = new ExprStmt(null); 
  }


  private function yyn257() 
  {
     $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn258() 
  {
     $this->yyval = new ExprStmt(null); 
  }


  private function yyn259() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn260() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn261() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn262() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn263() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn264() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn265() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn266() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn267() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn268() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn269() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn270() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn271() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn272() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn273() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn274() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn275() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn276() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn277() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn278() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn279() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn280() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn281() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn282() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn283() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn284() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn285() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn286() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn287() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn288() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn289() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn290() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn291() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn292() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn293() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn294() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn295() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn296() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn297() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn298() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn299() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn300() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn301() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn302() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn303() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn304() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn305() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn306() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn307() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn308() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn309() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn310() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn311() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn312() 
  {
     $this->yyval = null; 
  }


  private function yyn313() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn314() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn315() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn316() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn317() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn318() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn319() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn320() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn321() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn322() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-1)], null); 
  }


  private function yyn323() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn324() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-1)], null); 
  }


  private function yyn325() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn326() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn327() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn328() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn329() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn330() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn331() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn332() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn333() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn334() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn335() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn336() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn337() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn338() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn339() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn340() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn341() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn342() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn343() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn344() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn345() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn346() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn347() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn348() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn349() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn350() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn351() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn352() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn353() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn354() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn355() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn356() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn357() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn358() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn359() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn360() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn361() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn362() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn363() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn364() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn365() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn366() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn367() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn368() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn369() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn370() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn371() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn372() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn373() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn374() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn375() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn376() 
  {
     $this->yyval = null; 
  }


  private function yyn377() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn378() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn379() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn380() 
  {
     $this->yyval = new YieldExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn381() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn382() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn383() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn384() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn385() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn386() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn387() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-1)], null); 
  }


  private function yyn388() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn389() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-1)], null); 
  }


  private function yyn390() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn391() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn392() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn393() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn394() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn395() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn396() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn397() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn398() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn399() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn400() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn401() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn402() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn403() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn404() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn405() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn406() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn407() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn408() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn409() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn410() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn411() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn412() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn413() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn414() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn415() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn416() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn417() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn418() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn419() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn420() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn421() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn422() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn423() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn424() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn425() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn426() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn427() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn428() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn429() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn430() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn431() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn432() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn433() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn434() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn435() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn436() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn437() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn438() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn439() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn440() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn441() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn442() 
  {
     $this->yyval = null; 
  }


  private function yyn443() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn444() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn445() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn446() 
  {
     $this->yyval = new YieldExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn447() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn448() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn449() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn450() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn451() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn452() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn453() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-1)], null); 
  }


  private function yyn454() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn455() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-1)], null); 
  }


  private function yyn456() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn457() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn458() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn459() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn460() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn461() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn462() 
  {
     
      $this->yyval = new CastExpr($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-2)]); 
      $this->error_at($this->yyastk[$this->yysp-(4-1)]->loc, ERR_WARN, 'legacy cast, use `expr as type` instead'); 
    
  }


  private function yyn463() 
  {
     
      $this->yyval = new CastExpr($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-2)]); 
      $this->error_at($this->yyastk[$this->yysp-(4-1)]->loc, ERR_WARN, 'legacy cast, use `expr as type` instead'); 
    
  }


  private function yyn464() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn465() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn466() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn467() 
  {
     $this->yyval = null; 
  }


  private function yyn468() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn469() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn470() 
  {
     $this->yyval = null; 
  }


  private function yyn471() 
  {
     $this->yyval = null; 
  }


  private function yyn472() 
  {
     $this->yyval = null; 
  }


  private function yyn473() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn474() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn475() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn476() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn477() 
  {
     $this->yyval = new NamedArg($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn478() 
  {
     $this->yyval = new RestArg($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn479() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn480() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn481() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn482() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn483() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn484() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn485() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn486() 
  {
     $this->lex->scan_regexp($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn487() 
  {
     $this->yyval = new RegexpLit($this->yyastk[$this->yysp-(3-3)]->value); 
  }


  private function yyn488() 
  {
     $this->yyval = new Name($this->yyastk[$this->yysp-(1-1)], false); 
  }


  private function yyn489() 
  {
     $this->yyval = new Name($this->yyastk[$this->yysp-(2-2)], true); 
  }


  private function yyn490() 
  {
     $this->yyastk[$this->yysp-(3-1)]->add($this->yyastk[$this->yysp-(3-3)]); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn491() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn492() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn493() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn494() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn495() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn496() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn497() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn498() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn499() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn500() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn501() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn502() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn503() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn504() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn505() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn506() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn507() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn508() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn509() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn510() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn511() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn512() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn513() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn514() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn515() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn516() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn517() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn518() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn519() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn520() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn521() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn522() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn523() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn524() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn525() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn526() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn527() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn528() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn529() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn530() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn531() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn532() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn533() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn534() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn535() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn536() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn537() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn538() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn539() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn540() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn541() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn542() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn543() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn544() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn545() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn546() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn547() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn548() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn549() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn550() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn551() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn552() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn553() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn554() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn555() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn556() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn557() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn558() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn559() 
  {
     $this->yyval = new ThisExpr; 
  }


  private function yyn560() 
  {
     $this->yyval = new SuperExpr; 
  }


  private function yyn561() 
  {
     $this->yyval = new NullLit; 
  }


  private function yyn562() 
  {
     $this->yyval = new TrueLit; 
  }


  private function yyn563() 
  {
     $this->yyval = new FalseLit; 
  }


  private function yyn564() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->file, 'c'); 
  }


  private function yyn565() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->line, 'c'); 
  }


  private function yyn566() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->coln, 'c'); 
  }


  private function yyn567() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn568() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn569() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn570() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn571() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->flag); 
  }


  private function yyn572() 
  {
     $this->yyval = new LNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn573() 
  {
     $this->yyval = new DNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn574() 
  {
     $this->yyval = new SNumLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->suffix); 
  }


  private function yyn575() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn576() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn577() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn578() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn579() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn580() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn581() 
  {
     $this->yyval = new ArrLit(null); 
  }


  private function yyn582() 
  {
     $this->yyval = new ArrGen($this->yyastk[$this->yysp-(9-2)], $this->yyastk[$this->yysp-(9-5)], $this->yyastk[$this->yysp-(9-7)]); 
  }


  private function yyn583() 
  {
     $this->yyval = new ArrLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn584() 
  {
     $this->yyval = null; 
  }


  private function yyn585() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn586() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn587() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn588() 
  {
     $this->yyval = new SpreadExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn589() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn590() 
  {
     $this->yyval = new ObjLit(null); 
  }


  private function yyn591() 
  {
     $this->yyval = new ObjLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn592() 
  {
     $this->yyval = null; 
  }


  private function yyn593() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn594() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn595() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn596() 
  {
     $this->yyval = new ObjPair($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn597() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn598() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn599() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn600() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn601() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn602() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn603() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn604() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn605() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn606() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn607() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn608() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn609() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn610() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn611() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn612() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn613() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn614() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn615() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn616() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn617() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn618() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn619() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn620() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn621() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn622() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn623() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn624() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn625() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn626() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn627() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn628() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn629() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn630() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn631() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn632() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn633() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn634() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn635() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn636() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn637() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn638() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn639() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn640() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn641() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn642() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn643() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn644() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn645() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn646() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn647() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn648() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn649() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn650() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn651() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn652() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn653() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn654() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn655() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn656() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn657() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }

}

