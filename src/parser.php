<?php

/* this parser-skeleton is based on the awesome 
   work of nikic (https://github.com/nikic) 
   with some extensions (error-recovery and location-tracking) */

/**
 * This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *   the grammar file gen/yy-parser-tpl.y
 *   the parser skeleton gen/kymacc.php.parser
 *
 * The skeleton for this parser was written by Moriyoshi Koizumi and is based on
 * the work by Masato Bito and is in the PUBLIC DOMAIN.
 */

namespace phs;


const YYERRTOK = 256;
const T_APLUS = 257;
const T_AMINUS = 258;
const T_AMUL = 259;
const T_ADIV = 260;
const T_AMOD = 261;
const T_APOW = 262;
const T_ABIT_NOT = 263;
const T_ABIT_OR = 264;
const T_ABIT_AND = 265;
const T_ABIT_XOR = 266;
const T_ABOOL_OR = 267;
const T_ABOOL_AND = 268;
const T_ABOOL_XOR = 269;
const T_ASHIFT_L = 270;
const T_ASHIFT_R = 271;
const T_RANGE = 272;
const T_YIELD = 273;
const T_THROW = 274;
const T_BOOL_OR = 275;
const T_BOOL_XOR = 276;
const T_BOOL_AND = 277;
const T_EQ = 278;
const T_NEQ = 279;
const T_IN = 280;
const T_IS = 281;
const T_ISNT = 282;
const T_GTE = 283;
const T_LTE = 284;
const T_SL = 285;
const T_SR = 286;
const T_POW = 287;
const T_AS = 288;
const T_REST = 289;
const T_DEL = 290;
const T_INC = 291;
const T_DEC = 292;
const T_NEW = 293;
const T_ARR = 294;
const T_DDDOT = 295;
const T_FN = 296;
const T_LET = 297;
const T_USE = 298;
const T_ENUM = 299;
const T_CLASS = 300;
const T_TRAIT = 301;
const T_IFACE = 302;
const T_MODULE = 303;
const T_REQUIRE = 304;
const T_IDENT = 305;
const T_LNUM = 306;
const T_DNUM = 307;
const T_SNUM = 308;
const T_STRING = 309;
const T_REGEXP = 310;
const T_TRUE = 311;
const T_FALSE = 312;
const T_NULL = 313;
const T_THIS = 314;
const T_SUPER = 315;
const T_GET = 316;
const T_SET = 317;
const T_DO = 318;
const T_IF = 319;
const T_ELSIF = 320;
const T_ELSE = 321;
const T_FOR = 322;
const T_TRY = 323;
const T_GOTO = 324;
const T_BREAK = 325;
const T_CONTINUE = 326;
const T_CATCH = 327;
const T_FINALLY = 328;
const T_WHILE = 329;
const T_ASSERT = 330;
const T_SWITCH = 331;
const T_CASE = 332;
const T_DEFAULT = 333;
const T_RETURN = 334;
const T_CONST = 335;
const T_FINAL = 336;
const T_GLOBAL = 337;
const T_STATIC = 338;
const T_EXTERN = 339;
const T_PUBLIC = 340;
const T_PRIVATE = 341;
const T_PROTECTED = 342;
const T_SEALED = 343;
const T_INLINE = 344;
const T_PHP = 345;
const T_TEST = 346;
const T_CDIR = 347;
const T_CFILE = 348;
const T_CLINE = 349;
const T_CCOLN = 350;
const T_CFN = 351;
const T_CCLASS = 352;
const T_CMETHOD = 353;
const T_CMODULE = 354;
const T_NL = 355;
const T_TINT = 356;
const T_TBOOL = 357;
const T_TFLOAT = 358;
const T_TSTRING = 359;
const T_TREGEXP = 360;
const T_INVL = 361;
const T_END = 362;
const T_SYNC = 363;

require_once 'context.php';
require_once 'parser_base.php';

require_once 'ast.php';
require_once 'glob.php';
require_once 'lexer.php';

use phs\ast\Node;
use phs\ast\Expr;
use phs\ast\Unit;
use phs\ast\Module;
use phs\ast\Program;
use phs\ast\RequireDecl;
use phs\ast\AttrDecl;
use phs\ast\CompAttr;
use phs\ast\TopexAttr;
use phs\ast\AttrDef;
use phs\ast\AttrVal;
use phs\ast\UseDecl;
use phs\ast\UseAlias;
use phs\ast\UseUnpack;
use phs\ast\EnumDecl;
use phs\ast\VarItem;
use phs\ast\ArrDestr;
use phs\ast\ObjDestr;
use phs\ast\ClassDecl;
use phs\ast\CtorDecl;
use phs\ast\DtorDecl;
use phs\ast\GetterDecl;
use phs\ast\SetterDecl;
use phs\ast\NestedMods;
use phs\ast\TraitUse;
use phs\ast\TraitItem;
use phs\ast\TraitDecl;
use phs\ast\IfaceDecl;
use phs\ast\LetDecl;
use phs\ast\VarDecl;
use phs\ast\FnDecl;
use phs\ast\FnExpr;
use phs\ast\Block;
use phs\ast\ReturnStmt;
use phs\ast\Param;
use phs\ast\ThisParam;
use phs\ast\RestParam;
use phs\ast\DoStmt;
use phs\ast\IfStmt;
use phs\ast\ForInStmt;
use phs\ast\ForStmt;
use phs\ast\TryStmt;
use phs\ast\PhpStmt;
use phs\ast\GotoStmt;
use phs\ast\TestStmt;
use phs\ast\BreakStmt;
use phs\ast\ContinueStmt;
use phs\ast\ThrowStmt;
use phs\ast\WhileStmt;
use phs\ast\YieldStmt;
use phs\ast\AssertStmt;
use phs\ast\SwitchStmt;
use phs\ast\LabeledStmt;
use phs\ast\ElsifItem;
use phs\ast\ElseItem;
use phs\ast\CatchItem;
use phs\ast\FinallyItem;
use phs\ast\PhpUse;
use phs\ast\PhpUseItem;
use phs\ast\CaseItem;
use phs\ast\CaseLabel;
use phs\ast\ExprStmt;
use phs\ast\BinExpr;
use phs\ast\CheckExpr;
use phs\ast\CastExpr;
use phs\ast\UpdateExpr;
use phs\ast\AssignExpr;
use phs\ast\MemberExpr;
use phs\ast\CondExpr;
use phs\ast\CallExpr;
use phs\ast\UnaryExpr;
use phs\ast\NewExpr;
use phs\ast\DelExpr;
use phs\ast\YieldExpr;
use phs\ast\NamedArg;
use phs\ast\RestArg;
use phs\ast\RegexpLit;
use phs\ast\Name;
use phs\ast\TypeId;
use phs\ast\Ident;
use phs\ast\ThisExpr;
use phs\ast\SuperExpr;
use phs\ast\NullLit;
use phs\ast\TrueLit;
use phs\ast\FalseLit;
use phs\ast\StrLit;
use phs\ast\EngineConst;
use phs\ast\LNumLit;
use phs\ast\DNumLit;
use phs\ast\SNumLit;
use phs\ast\ArrLit;
use phs\ast\ArrGen;
use phs\ast\SpreadExpr;
use phs\ast\ObjLit;
use phs\ast\ObjPair;


class Parser extends ParserBase
{
  const TOKEN_NONE    = -1;
  const TOKEN_INVALID = 133;

  const TOKEN_MAP_SIZE = 364;

  const YYLAST       = 1696;
  const YY2TBLSTATE  = 587;
  const YYGLAST      = 1324;
  const YYNLSTATES   = 665;
  const YYINTERRTOK  = 1;
  const YYUNEXPECTED = 32767;
  const YYDEFAULT    = -32766;

  /* @var array Map of token ids to their respective names */
  private static $terminals = [
    "EOF",
    "error",
    "','",
    "T_APLUS",
    "T_AMINUS",
    "T_AMUL",
    "T_ADIV",
    "T_AMOD",
    "T_APOW",
    "T_ABIT_NOT",
    "T_ABIT_OR",
    "T_ABIT_AND",
    "T_ABIT_XOR",
    "T_ABOOL_OR",
    "T_ABOOL_AND",
    "T_ABOOL_XOR",
    "T_ASHIFT_L",
    "T_ASHIFT_R",
    "'='",
    "T_RANGE",
    "T_YIELD",
    "T_THROW",
    "'?'",
    "':'",
    "T_BOOL_OR",
    "T_BOOL_XOR",
    "T_BOOL_AND",
    "'|'",
    "'^'",
    "'&'",
    "T_EQ",
    "T_NEQ",
    "T_IN",
    "T_IS",
    "T_ISNT",
    "T_GTE",
    "T_LTE",
    "'>'",
    "'<'",
    "T_SL",
    "T_SR",
    "'+'",
    "'-'",
    "'~'",
    "'*'",
    "'/'",
    "'%'",
    "T_POW",
    "T_AS",
    "T_REST",
    "T_DEL",
    "T_INC",
    "T_DEC",
    "'!'",
    "T_NEW",
    "'.'",
    "'['",
    "']'",
    "'('",
    "')'",
    "T_ARR",
    "T_DDDOT",
    "T_FN",
    "T_LET",
    "T_USE",
    "T_ENUM",
    "T_CLASS",
    "T_TRAIT",
    "T_IFACE",
    "T_MODULE",
    "T_REQUIRE",
    "T_IDENT",
    "T_LNUM",
    "T_DNUM",
    "T_SNUM",
    "T_STRING",
    "T_REGEXP",
    "T_TRUE",
    "T_FALSE",
    "T_NULL",
    "T_THIS",
    "T_SUPER",
    "T_GET",
    "T_SET",
    "T_DO",
    "T_IF",
    "T_ELSIF",
    "T_ELSE",
    "T_FOR",
    "T_TRY",
    "T_GOTO",
    "T_BREAK",
    "T_CONTINUE",
    "T_CATCH",
    "T_FINALLY",
    "T_WHILE",
    "T_ASSERT",
    "T_SWITCH",
    "T_CASE",
    "T_DEFAULT",
    "T_RETURN",
    "T_CONST",
    "T_FINAL",
    "T_GLOBAL",
    "T_STATIC",
    "T_EXTERN",
    "T_PUBLIC",
    "T_PRIVATE",
    "T_PROTECTED",
    "T_SEALED",
    "T_INLINE",
    "T_PHP",
    "T_TEST",
    "T_CDIR",
    "T_CFILE",
    "T_CLINE",
    "T_CCOLN",
    "T_CFN",
    "T_CCLASS",
    "T_CMETHOD",
    "T_CMODULE",
    "T_NL",
    "T_TINT",
    "T_TBOOL",
    "T_TFLOAT",
    "T_TSTRING",
    "T_TREGEXP",
    "T_END",
    "T_SYNC",
    "';'",
    "'@'",
    "'{'",
    "'}'"
    , "???"
  ];

  /* @var array Map which translates lexer tokens to internal tokens */
  private static $translate = [
        0,  133,  133,  133,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
      133,  133,  133,   53,  133,  133,  133,   46,   29,  133,
       58,   59,   44,   41,    2,   42,   55,   45,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,   23,  129,
       38,   18,   37,   22,  130,  133,  133,  133,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
      133,   56,  133,   57,   28,  133,  133,  133,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  131,   27,  132,   43,  133,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  133,  133,  133,    1,    3,    4,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   19,   20,   21,   24,   25,   26,   30,   31,
       32,   33,   34,   35,   36,   39,   40,   47,   48,   49,
       50,   51,   52,   54,   60,   61,   62,   63,   64,   65,
       66,   67,   68,   69,   70,   71,   72,   73,   74,   75,
       76,   77,   78,   79,   80,   81,   82,   83,   84,   85,
       86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
       96,   97,   98,   99,  100,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
      116,  117,  118,  119,  120,  121,  122,  123,  124,  125,
      126,  133,  127,  128
  ];

  private static $yyaction = [
     1298, 1270,  283,  284,  285,  286,    0,  413,  414,  287,
      288,  289,  290,  291,  292,  293,  294,  295,  296,  297,
      298,  299,  415,  605,  580, 1077, 1078, 1154,  618,   18,
      145,  449,  131,  296,  297,  298,  299,  415, 1155, 1156,
     1077, 1078, 1258, 1259, 1273, 1286, 1276, 1277, 1278, 1274,
     1297, 1154,  317,  603,  431, 1229,  824, 1263, 1264, 1265,
     1279, 1295, 1155, 1156, 1291, 1266, 1267, 1268, 1289, 1269,
     1296, 1292, 1293, 1271, 1272, 1290, 1262, 1287, 1288,  503,
     1294, 1281, 1282, 1299, 1280, 1275, 1283, 1284, 1285, 1305,
     1306, 1260, 1261, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
     1314,  162, 1300, 1301, 1302, 1303, 1304, 1199, 1170, 1239,
      590,  204,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,  432,
      863,-32766,  302,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,  605, 1149, 1150, 1151, 1152, 1153, 1158,
     1159, 1173, 1186, 1176, 1177, 1178, 1174, 1198, 1154, 1248,
       18,  145,  303,  131, 1163, 1164, 1165, 1179, 1196, 1155,
     1156, 1192, 1166, 1167, 1168, 1190, 1169, 1197, 1193, 1194,
     1171, 1172, 1191, 1162, 1187, 1188, 1189, 1195, 1181, 1182,
     1200, 1180, 1175, 1183, 1184, 1185, 1206, 1207, 1160, 1161,
     1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215,  629, 1201,
     1202, 1203, 1204, 1205,   -6,  532,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,   14,  146,  147,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,  280,  281,  282,  148,  149,  150,  144,  913,
      279,  280,  281,  282,  488,  151,  152,  153,  335, 1155,
     1156,  431,  431,  237,  238,  239,  -48,  -48,  446,  -48,
      -48,  490,  491,  439,  136,  300, 1154, 1154,  717,  718,
      719,  720,  726,  721,  722,  723,  724,  725,   20,  567,
      652,  489,  525,  568,  492,  455,  456,   -1,  532,  569,
      154,  570,  164,  486,  137,  717,  718,  719,  720,  726,
      721,  722,  723,  724,  725,  598,  519,  146,  147,  230,
      410,  411,  231,  232,  233,  234,  235,  236,  237,  238,
      239,  690,  133,  910,  450,    9,  432,  380,  148,  149,
      150,  299,  415,  377,  396, 1077, 1078,  488,  151,  152,
      153,  335, 1149, 1150, 1151, 1152, 1153,  281,  282,  -48,
      -48,  446,  -48,  -48,  490,  491,  438,  136,-32766,-32766,
    -32766,-32766,  873,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,   20,  567,  487,  626,  525,  568,  492,  455,  456,
      504,  532,  569,  154,  570,-32766,-32766,  137,  717,  718,
      719,  720,  726,  721,  722,  723,  724,  725,  598,  519,
      146,  147,-32767,-32767,-32767,-32767,-32767,-32767,-32767,  235,
      236,  237,  238,  239,  690,  782,  910,  450,    9,  909,
      894,  148,  149,  150,  593,  506,  509,  633,  594,    6,
      488,  151,  152,  153,  335,  779,  301,  625,  497,  616,
    -32766,-32766,  -48,  -48,  446,  -48,  -48,  490,  491,  439,
      136,-32766,-32766,-32766,-32766,  634,-32767,-32767,-32767,-32767,
    -32767,-32767,  596,  443,   20,  567,   16,  142,  525,  568,
      492,  455,  456,  614,  532,  569,  154,  570,  454,  315,
      137,  717,  718,  719,  720,  726,  721,  722,  723,  724,
      725,  598,  519,  146,  147,  278,  500,  501,  144,  454,
      279,  280,  281,  282,-32766,-32766,  777,  690,  395,  910,
      450,    9,   -7,  434,  148,  149,  150,  500,  501,  704,
      435,  442,  489,  488,  151,  152,  153,  335,  314, -155,
    -32766,-32766,-32766,  874,  445,  -48,  -48,  446,  -48,  -48,
      490,  491,  439,  136,  437,  307,  -95,  320,  803,  821,
      794,  830,  433,  785,  908,  384,  448,   20,  567,   17,
      143,  525,  568,  492,  455,  456,  755,  -94,  569,  154,
      570,  495,  429,  137,  717,  718,  719,  720,  726,  721,
      722,  723,  724,  725,  598,  519, -155,  240,  241,  242,
      243,  412,    1,  311, 1011, 1012,  653,  252,   16,  142,
      690,  131,  910,  450,    9,   -8,  205,  206,  207,  208,
      209,  210,  211,  212,  213,  214,  215,  216,  217,  218,
      219,  220,  221,  378,  135,  141,  489,  222,  223,  224,
      225,  226,  227,  228,  229,  230,  410,  411,  231,  232,
      233,  234,  235,  236,  237,  238,  239,  240,  241,  242,
      243,  412,  532,  245, 1011, 1012,  489,  321,   16,  142,
      306,  131,  431,  489,  630,  745,  787,  386,  385,  257,
      454,  146,  147, 1154,  246,  247,  248, 1154,  616,  496,
      817, 1129,  253,  498,  249,  250,  251,  337,  507,  508,
      319,  129,  148,  149,  150,  453,    5,  904,    2,-32766,
    -32766,  488,  151,  152,  153,  335,  258,  526,  579,  304,
      645,  312,  255,  -48,  -48,  446,  -48,  -48,  490,  491,
      439,  136, 1127,  308, 1149, 1150, 1151, 1152, 1153,   12,
      905,  305,  282,  444,  447,   20,  567,  432,  -94,  525,
      568,  492,  455,  456,-32766,  436,  569,  154,  570,  505,
     1122,  137,  717,  718,  719,  720,  726,  721,  722,  723,
      724,  725,  598,  519,  255,   19,  162,  261, 1031, 1242,
     1241,  967, 1229,  584, 1143,  968, 1032, 1123,  690, 1098,
      910,  450,    9,  165,  166,  167,  168,  169,  170,  171,
      172,  173,  174,  175,  176,  177,  178,  179,  180,  181,
     1240, 1097,  139,  738,  182,  183,  184,  185,  186,  187,
      188,  189,  190,  407,  408,  191,  192,  193,  194,  195,
      196,  197,  198,  199,  200,  201,  202,  203,  409,  541,
      440,  947,  948,  355,  477,   15,  140,  138,  310,-32767,
       59, -161, 1126, 1128,  597,  595,  816,  700,  146,  147,
      309,  244,   30,   23,   26,  703, 1125,  316,  662,   29,
       28,  827,   27,-32766,  256,  322,  323,  163,  489,  148,
      149,  150,  494,  430,   13,  793,  461,   25,  488,  151,
      152,  153,  335,  678,-32766,-32766,-32766,  696,  794,  689,
      -48,  -48,  912,-32766,-32766,-32766,-32766,-32766, -161,  864,
      839,  138,  541,  621,  578,-32766,  705,    0,    0,    0,
        0,    0,   20,  567,    0,    0,  525,  568,  492,  455,
      456,  146,  147,  569,  154,  570, -236, -236,  137,  717,
      718,  719,  720,  726,  721,  722,  723,  724,  725,  598,
      519,    0,  148,  149,  150,  859,  857,  853,  858,  856,
      770,  488,  151,  152,  153,  335,  911,  910,  452,    9,
     -236,  867,  775,  -48,  -48, 1149, 1150, 1151, 1152, 1153,
      799,  798, 1257,  773,-32766,  541,  810,  783,  804,  870,
      768,  695,  866,  694,  860,   20,  567,  778,  862,  525,
      568,  492,  455,  456,  146,  147,  569,  154,  570,  304,
      645,  137,  717,  718,  719,  720,  726,  721,  722,  723,
      724,  725,  598,  519,    9,  148,  149,  150,  517,  560,
      313,    2,  254,  259,  488,  151,  152,  153,  335,  260,
      910,  452,    9,  428,    0,  966,  -48,  -48, 1030, 1121,
     1096,  706,  711,  739,  865,  744,  776,  786,  514,  727,
      852,  692,  784,  693, 1249, 1250,    0,    0,   20,  567,
        0,    0,  525,  568,  492,  455,  456,  146,  147,  569,
      154,  570,    0,    0,  137,  717,  718,  719,  720,  726,
      721,  722,  723,  724,  725,  598,  519,    0,  148,  149,
      150,    0,    0,    0,    0,    0,    0,  488,  151,  152,
      153,  335,    0,  910,  452,    9,  907,    0,    0,  -48,
      -48,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  541,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   20,  567,    0,    0,  525,  568,  492,  455,  456,
      146,  147,  569,  154,  570,    0,    0,  137,  717,  718,
      719,  720,  726,  721,  722,  723,  724,  725,  598,  519,
        0,  148,  149,  150,    0,    0,    0,    0,    0,    0,
      488,  151,  152,  153,  335,    0,  910,  452,    9,  906,
        0,    0,  -48,  -48,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   20,  567,    0,    0,  525,  568,
      492,  455,  456,    0,    0,  569,  154,  570,    0,    0,
      137,  717,  718,  719,  720,  726,  721,  722,  723,  724,
      725,  598,  519,  155,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  910,
      452,    9,    0,    0,  156,  157,  158,    0,  664,  608,
        0,    0,    0,  493,  159,  160,  161,  336,    0,  130,
        0,  128,    0,    0,  489,  451,    0,    0,  146,  147,
        0,    0,    0,    0, 1154, 1230, 1231, 1232, 1229,    0,
     1219, 1220, 1218, 1216, 1217, 1155, 1156,    0,    0,  148,
      149,  150,    0,    0,    0,    0,    0,    0,  488,  151,
      152,  153,  335,    0,    0,    0,    0,    0,    0,    0,
    -32766,    0,  623,    0,    0,    0, 1221, 1222, 1223, 1224,
     1225, 1226, 1227, 1228,    0,    0,    0,    0,    0,    0,
        0,  245,   20,  567,   11,    0,  525,  568,  492,  455,
      456,    0,    0,  569,  154,  570,    0,    0,  137,    0,
        0,    0,  246,  247,  248,    0,    0,    0,    0,  598,
      519,  498,  249,  250,  251,  337,    0,    0,    0,  129,
        0,    0,    0,  453,  -48,    0,    0,  910,    0,    9,
      262,  263,  264,  265,  266,  267,  268,  269,  270,  271,
      272,  273,  274,  275,  276,  277,  278,    0,    0,  144,
        0,  279,  280,  281,  282,    0,    0,    0,    0,  318,
        0,    0,  717,  718,  719,  720,  726,  721,  722,  723,
      724,  725,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,
      914,-32766,    0,-32766,-32766,-32766,-32766,-32766,  262,  263,
      264,  265,  266,  267,  268,  269,  270,  271,  272,  273,
      274,  275,  276,  277,  278,    0,    0,  144,    0,  279,
      280,  281,  282,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
        0,    0,-32766,    0,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,    0,    0,-32766,    0,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,
      632,-32766,    0,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,    0,-32766,-32766,    0,-32766,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,-32766,-32766,-32766,    0, -170,    0,
        0,    0,    0,-32766,-32766,-32766,-32766,-32766,  815,    0,
      489,-32766,    0,    0,-32766,-32766,    0,    0,    0,    0,
     1154,    0,    0,    0,-32766,    0,    0,    0,    0, -170,
        0,    0,    0,    0,    0,-32766,-32766,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1149, 1150, 1151, 1152, 1153
  ];

  private static $yycheck = [
       20,   21,   28,   29,   30,   31,    0,   33,   34,   35,
       36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
       46,   47,   48,    1,   23,   51,   52,   71,    1,   55,
       56,    2,   58,   44,   45,   46,   47,   48,   82,   83,
       51,   52,   62,   63,   64,   65,   66,   67,   68,   69,
       70,   71,   18,    1,   56,   75,   22,   77,   78,   79,
       80,   81,   82,   83,   84,   85,   86,   87,   88,   89,
       90,   91,   92,   93,   94,   95,   96,   97,   98,   49,
      100,  101,  102,  103,  104,  105,  106,  107,  108,  109,
      110,  111,  112,  113,  114,  115,  116,  117,  118,  119,
      120,   49,  122,  123,  124,  125,  126,   20,   21,   57,
       80,  131,    3,    4,    5,    6,    7,    8,    9,   10,
       11,   12,   13,   14,   15,   16,   17,   18,   19,  131,
      129,   22,    2,   24,   25,   26,   27,   28,   29,   28,
       29,   30,   31,    1,  122,  123,  124,  125,  126,   62,
       63,   64,   65,   66,   67,   68,   69,   70,   71,  132,
       55,   56,   32,   58,   77,   78,   79,   80,   81,   82,
       83,   84,   85,   86,   87,   88,   89,   90,   91,   92,
       93,   94,   95,   96,   97,   98,   99,  100,  101,  102,
      103,  104,  105,  106,  107,  108,  109,  110,  111,  112,
      113,  114,  115,  116,  117,  118,  119,  120,    1,  122,
      123,  124,  125,  126,    0,    1,    3,    4,    5,    6,
        7,    8,    9,   10,   11,   12,   13,   14,   15,   16,
       17,   18,   19,    2,   20,   21,    3,    4,    5,    6,
        7,    8,    9,   10,   11,   12,   13,   14,   15,   16,
       17,   18,   25,   26,   27,   41,   42,   43,   22,  129,
       24,   25,   26,   27,   50,   51,   52,   53,   54,   82,
       83,   56,   56,   41,   42,   43,   62,   63,   64,   65,
       66,   67,   68,   69,   70,   32,   71,   71,  101,  102,
      103,  104,  105,  106,  107,  108,  109,  110,   84,   85,
        1,   61,   88,   89,   90,   91,   92,    0,    1,   95,
       96,   97,    2,    2,  100,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,   20,   21,   32,
       33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
       43,  127,    2,  129,  130,  131,  131,  131,   41,   42,
       43,   47,   48,   18,   48,   51,   52,   50,   51,   52,
       53,   54,  122,  123,  124,  125,  126,   26,   27,   62,
       63,   64,   65,   66,   67,   68,   69,   70,   28,   29,
       30,   31,  129,   33,   34,   35,   36,   37,   38,   39,
       40,   84,   85,   58,    1,   88,   89,   90,   91,   92,
       48,    1,   95,   96,   97,   82,   83,  100,  101,  102,
      103,  104,  105,  106,  107,  108,  109,  110,  111,  112,
       20,   21,   32,   33,   34,   35,   36,   37,   38,   39,
       40,   41,   42,   43,  127,  129,  129,  130,  131,  129,
      129,   41,   42,   43,   50,   48,   23,    1,   54,  121,
       50,   51,   52,   53,   54,  132,   32,  129,   48,   65,
       28,   29,   62,   63,   64,   65,   66,   67,   68,   69,
       70,   28,   29,   30,   31,    1,   33,   34,   35,   36,
       37,   38,   59,  131,   84,   85,   55,   56,   88,   89,
       90,   91,   92,    1,    1,   95,   96,   97,   64,   60,
      100,  101,  102,  103,  104,  105,  106,  107,  108,  109,
      110,  111,  112,   20,   21,   19,   82,   83,   22,   64,
       24,   25,   26,   27,   55,   56,  129,  127,  131,  129,
      130,  131,  132,    2,   41,   42,   43,   82,   83,  129,
        2,  131,   61,   50,   51,   52,   53,   54,    2,    2,
       44,   45,   46,  129,    2,   62,   63,   64,   65,   66,
       67,   68,   69,   70,    2,   18,  132,   18,  129,   22,
      128,   22,    2,  129,  132,  131,    2,   84,   85,   55,
       56,   88,   89,   90,   91,   92,    1,  132,   95,   96,
       97,   62,   63,  100,  101,  102,  103,  104,  105,  106,
      107,  108,  109,  110,  111,  112,   59,   44,   45,   46,
       47,   48,  131,   18,   51,   52,    1,   18,   55,   56,
      127,   58,  129,  130,  131,  132,    3,    4,    5,    6,
        7,    8,    9,   10,   11,   12,   13,   14,   15,   16,
       17,   18,   19,    2,    2,   22,   61,   24,   25,   26,
       27,   28,   29,   30,   31,   32,   33,   34,   35,   36,
       37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
       47,   48,    1,   20,   51,   52,   61,   18,   55,   56,
       23,   58,   56,   61,    1,  129,  129,  131,  131,   23,
       64,   20,   21,   71,   41,   42,   43,   71,   65,   66,
       59,   59,   23,   50,   51,   52,   53,   54,   82,   83,
       23,   58,   41,   42,   43,   62,  129,   23,  131,   82,
       83,   50,   51,   52,   53,   54,   23,   93,   94,   98,
       99,   23,   49,   62,   63,   64,   65,   66,   67,   68,
       69,   70,   59,   23,  122,  123,  124,  125,  126,   23,
       23,   23,   27,   38,   38,   84,   85,  131,  132,   88,
       89,   90,   91,   92,   28,   43,   95,   96,   97,   48,
       57,  100,  101,  102,  103,  104,  105,  106,  107,  108,
      109,  110,  111,  112,   49,   55,   49,   58,   57,   57,
       57,   57,   75,   86,   76,   57,   57,   57,  127,   57,
      129,  130,  131,    3,    4,    5,    6,    7,    8,    9,
       10,   11,   12,   13,   14,   15,   16,   17,   18,   19,
       57,   57,   22,   57,   24,   25,   26,   27,   28,   29,
       30,   31,   32,   33,   34,   35,   36,   37,   38,   39,
       40,   41,   42,   43,   44,   45,   46,   47,   48,    1,
       58,   51,   52,   58,   58,   55,   56,   58,   60,   58,
       58,    2,   59,   59,   59,   59,   59,   59,   20,   21,
       59,   59,   59,   59,   59,   59,   59,   18,   59,   59,
       59,   22,   59,   20,   60,   60,   60,  111,   61,   41,
       42,   43,   61,   63,  121,  121,   64,   87,   50,   51,
       52,   53,   54,  121,   41,   42,   43,  121,  128,  128,
       62,   63,  129,   50,   51,   52,   53,   54,   59,  129,
      129,   58,    1,   88,   95,   62,  129,   -1,   -1,   -1,
       -1,   -1,   84,   85,   -1,   -1,   88,   89,   90,   91,
       92,   20,   21,   95,   96,   97,   98,   99,  100,  101,
      102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,   -1,   41,   42,   43,  129,  129,  129,  129,  129,
      129,   50,   51,   52,   53,   54,  129,  129,  130,  131,
      132,  129,  129,   62,   63,  122,  123,  124,  125,  126,
      129,  129,  132,  129,  131,    1,  129,  129,  129,  129,
      129,  129,  129,  129,  129,   84,   85,  129,  129,   88,
       89,   90,   91,   92,   20,   21,   95,   96,   97,   98,
       99,  100,  101,  102,  103,  104,  105,  106,  107,  108,
      109,  110,  111,  112,  131,   41,   42,   43,  131,  131,
      131,  131,  131,  131,   50,   51,   52,   53,   54,  131,
      129,  130,  131,  131,   -1,  132,   62,   63,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,    1,  132,
      132,  132,  132,  132,  132,  132,   -1,   -1,   84,   85,
       -1,   -1,   88,   89,   90,   91,   92,   20,   21,   95,
       96,   97,   -1,   -1,  100,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,   -1,   41,   42,
       43,   -1,   -1,   -1,   -1,   -1,   -1,   50,   51,   52,
       53,   54,   -1,  129,  130,  131,  132,   -1,   -1,   62,
       63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,    1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   84,   85,   -1,   -1,   88,   89,   90,   91,   92,
       20,   21,   95,   96,   97,   -1,   -1,  100,  101,  102,
      103,  104,  105,  106,  107,  108,  109,  110,  111,  112,
       -1,   41,   42,   43,   -1,   -1,   -1,   -1,   -1,   -1,
       50,   51,   52,   53,   54,   -1,  129,  130,  131,  132,
       -1,   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   84,   85,   -1,   -1,   88,   89,
       90,   91,   92,   -1,   -1,   95,   96,   97,   -1,   -1,
      100,  101,  102,  103,  104,  105,  106,  107,  108,  109,
      110,  111,  112,   20,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  129,
      130,  131,   -1,   -1,   41,   42,   43,   -1,   45,    1,
       -1,   -1,   -1,   50,   51,   52,   53,   54,   -1,   56,
       -1,   58,   -1,   -1,   61,   62,   -1,   -1,   20,   21,
       -1,   -1,   -1,   -1,   71,   72,   73,   74,   75,   -1,
       77,   78,   79,   80,   81,   82,   83,   -1,   -1,   41,
       42,   43,   -1,   -1,   -1,   -1,   -1,   -1,   50,   51,
       52,   53,   54,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       62,   -1,    1,   -1,   -1,   -1,  113,  114,  115,  116,
      117,  118,  119,  120,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   20,   84,   85,  131,   -1,   88,   89,   90,   91,
       92,   -1,   -1,   95,   96,   97,   -1,   -1,  100,   -1,
       -1,   -1,   41,   42,   43,   -1,   -1,   -1,   -1,  111,
      112,   50,   51,   52,   53,   54,   -1,   -1,   -1,   58,
       -1,   -1,   -1,   62,   63,   -1,   -1,  129,   -1,  131,
        3,    4,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   -1,   -1,   22,
       -1,   24,   25,   26,   27,   -1,   -1,   -1,   -1,   32,
       -1,   -1,  101,  102,  103,  104,  105,  106,  107,  108,
      109,  110,    3,    4,    5,    6,    7,    8,    9,   10,
       11,   12,   13,   14,   15,   16,   17,   18,   19,   -1,
      129,   22,   -1,   24,   25,   26,   27,   28,    3,    4,
        5,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   -1,   -1,   22,   -1,   24,
       25,   26,   27,    3,    4,    5,    6,    7,    8,    9,
       10,   11,   12,   13,   14,   15,   16,   17,   18,   19,
       -1,   -1,   22,   -1,   24,   25,   26,   27,    3,    4,
        5,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   -1,   -1,   22,   -1,   24,
       25,   26,    3,    4,    5,    6,    7,    8,    9,   10,
       11,   12,   13,   14,   15,   16,   17,   18,   19,   -1,
        1,   22,   -1,   24,   25,    3,    4,    5,    6,    7,
        8,    9,   10,   11,   12,   13,   14,   15,   16,   17,
       18,   19,   -1,   20,   22,   -1,   24,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   41,   42,   43,   -1,   49,   -1,
       -1,   -1,   -1,   50,   51,   52,   53,   54,   59,   -1,
       61,   58,   -1,   -1,   61,   62,   -1,   -1,   -1,   -1,
       71,   -1,   -1,   -1,   71,   -1,   -1,   -1,   -1,   80,
       -1,   -1,   -1,   -1,   -1,   82,   83,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,  122,  123,  124,  125,  126
  ];

  private static $yybase = [
      307,  400,  400,  214,  493,  671,  671,  848,  921, 1067,
      994,   27, 1140, 1140,  -20,  911,  912,  918,  909,   87,
     1278, 1278, 1278, 1278, 1278, 1278, 1278, 1278, 1278, 1278,
     1278,    1,  879,  875,  835,  817,  874,  873,  872,  728,
      734,  860,  720,  731,  713,  923,  926,  927,  687,  764,
      823,  821,  820,  694,  928,  867,  819,  864,  853, 1341,
      800,  623,  623,  623,  623,  623,  623,  623,  623,  623,
      623,  623,  623,  623,  623,  623,  623,  623,  623,  623,
      623,  623,  623,  623,  623,  623,  623,  623,  623,  623,
      623,  623,  623,  623,  623,  623,  623,  623,  623,  623,
      623, 1407,  623,  623,  623,  623,  623,  623,  623, 1475,
     1475, 1475, 1475, 1475, 1475, 1475, 1475, 1475, 1475, 1475,
     1475, 1475, 1475, 1475, 1475, 1475, 1475, 1475,   22,   22,
       52,  683,  783,  737,  815,  735,  776,  852,  142,  679,
      207,  703,  446,  474,  708,  299, 1233, 1233, 1233, 1233,
     1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233,
     1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233,
     1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233,
     1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233,
     1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233,
     1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233,
     1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233,
     1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233,
     1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233,
     1233, 1233, 1233, 1233, 1233,  653,  653,  653,  653,  653,
      653,  653, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233,
     1233,  653,  653,  653,  653,  653,  653,  653,  653,  653,
      653,  653,  653,  653,  653,  653,  653,  653,  653,  653,
      653,  653,  653,  653,  653,  653,  653,  653,  653,  653,
      653,  653,  653,  653,  653,  653,  653,  653,  653,  653,
     1233, 1233,  653, 1233, 1233, 1233, 1233, 1233, 1233,  653,
      653,  653,  653, 1233, 1233, 1233, 1233, 1233, 1233,  653,
     1233, 1233, 1233, 1233,  233,  233,  233,  496,  213,  213,
      496,  213,  213,  236,  236,  863,  863,  863, 1572, 1572,
     1549, 1549,  227, 1525, 1525,  341, 1500, 1500,  725, 1449,
     1449,  -26,  109,  109,  736, 1569,  432,  297,  297,  390,
      390,  390,  390,  390,  297,  297,  390,  390,  390,  390,
      390,  111,  111,  443,  443,  443,  443, 1573,  622,  622,
      626,  215,  215,  216,  455,  455,  455,  434,  232,  232,
      232,  232,  350,  350,  323,  637,  637,  563,  563,  563,
      563,  563,  563,  -11,  -11,  -11,  637,  240,  240,  240,
      240,  240,  240,  240,  240,  240,  506,  506,  506,  506,
      506,  506,  506,  506,  304,  304,  304,  304,   -2,   -2,
       -2,   -2,   -2,   -2,   -2,   -2,  585,   -2,  481,  481,
      615,  394,  827,  827,  827,  827,  827,  827,  827,  827,
      492,  795,  393,  795,  827,  840,  839,  633,  547,  859,
      397,  -44,  932,  431,  431,  431,  431,  431,  431,  524,
      431,  431,  431,  431,  431,  431,  524,  -44,  105,  105,
      105,  105,  105,  105,  524,  439,  -44,  -44,  -44,  -44,
      -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,
      -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,
      -44,  -44,  410,  587,  442,  130,  423,  631,  634,  717,
      824,  634,  824,  798,  798,  802,  792,  869,  825,  826,
      841,  871,  781,  310,  444,  328,  529,  861,  557,  253,
      424,  780,  910,  862,  766,  931,  642,  641,   30,  352,
      929,  847,  311,  335,   34,  813,  556,  549,  930,  306,
      832,  707,  801,  810,  801,  801,  801,  799,  903,  799,
      799,  469,  340,  715,  903,  469,  795,  231,  799,  903,
      717,  717,  832,  716,  799,  707,  469,  795,  538,  722,
      730,  795,  795,  795,  795,  903,  903,  903,  908,    6,
      831,  726,  718,  732,  733,  803,  812,  831,  870,  829,
      838,  837,  836,  907,  782,  796,  922,  599,  943,  942,
      666,  729,  941,  814,  830,  786,  774,  773,  831,  738,
      804,  657,  807,  739,  740,  797,  940,  831,  574,  939,
      791,  811,  595,  531,  790,  727,  721,  938,  808,  937,
      935,  531,  742,  806,  659,  934,  816,  831,   29,  878,
      805,  933,  763,  868,    0, 1233, 1233, 1233, 1233, 1233,
     1233, 1233, 1233, 1233, 1233, 1233,  -20, 1233, 1233,    0,
       87,   87,   87,   87,    0, 1233, 1233, 1233, 1233, 1233,
     1233, 1233, 1233, 1233, 1233, 1233,  623,  623,  623,  623,
      623,  623,  623,  623,  623,  623,  623,  623,  623,  623,
      623,  623,  623,  623,  623,  623,  623,  623,  623,  623,
      623,  623,  623,  623, 1233,  105,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  -26,    0,    0,    0,
        0,    0,    0,    0,  -26,  -26,  -26,  -26,  -26,  -26,
      -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,
      -26,  -26,  -26, 1233, 1233, 1233, 1233, 1233, 1233, 1233,
     1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233,
     1233,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1233, 1233, 1233, 1233, 1233, 1233, 1233,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 1233, 1233, 1233, 1233,
     1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233,
     1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233,
     1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233,
     1233, 1233, 1233, 1233, 1233,    0,    0, 1233,    0,    0,
        0,    0,    0,    0, 1233, 1233, 1233, 1233,    0,    0,
        0,    0,    0,    0, 1233,    0,    0,    0,    0,  623,
      623,  623,  -26,  623,  623,  -26,  623,  623,  -26,  -26,
     1233, 1233, 1233,  623,  623,  623,  623,  -26,  623,  623,
      -26,  623,  623,  -26,  623,  623,    0,  623,  623,  -26,
      187,  -26,  563,  563,  563,  563,  563,  563,  563,  563,
      563,  563,  563,  563,  563,  563,  -26,  -26,  -26,  -26,
      -26,  -26, 1233,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  563,  563,  563,  563,  -26,  -26,  187,
      187,  187,    0,    0,    0,    0,    0,    0,  105,  105,
      105,  187,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,
      -44,  563,  563,  563,  563,  563,  563,  563,  563,  105,
      105,  105,  105,  -44,  -44,  -44,  -44,  -44,  -44,  -44,
      -44,  -44,  -44,  -44,  -44,  -44,  529,  -44,  -44,  -44,
      -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,
      -44,  -44,  529,    0,    0,  831,    0,  631,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,    0,    0,    0,    0,    0,    0,    0,  105,
      903,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  831,  870,
        0,  831,    0,    0,  903,  903,    0,  903,  903,  903,
      903,  903,  795,  903,  903,  903,  903,  870,    0,    0,
        0,    0,  570,    0,    0,    0,  870,  831,  570,  562,
      562,    0,    0,    0,    0,  552,  546,    0,    0,    0,
      546,    0,    0,  552,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  105,    0,    0,    0,
      105,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  105
  ];

  private static $yydefault = [
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,  651,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,  582,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
      250,  581,  251,  285,  286,  287,  288,  289,  290,  291,
      292,  293,  294,  295,  296,  297,  298,  299,  284,  467,
      349,  350,  351,  352,  353,  354,  355,  356,  357,  358,
      359,  360,  361,  362,  363,  348,  582,  252,   68,  469,
      589,32767,  468,  157,  253,  163,  160,  166,  168,  254,
      415,  416,  417,  418,  419,  420,  421,  422,  423,  424,
      425,  426,  427,  428,  429,  414,  255,   72,32767,32767,
    32767,32767,32767,  651,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,  371,  273,  337,  437,  305,  369,
      404,  304,  368,  435,  434,32767,32767,32767,  271,  335,
      272,  336,  402,  270,  334,  403,  264,  328,  401,  265,
      329,  395,  263,  327,  396,32767,  394,  276,  277,  278,
      268,  269,  267,  266,  340,  341,  342,  332,  333,  330,
      331,  407,  408,  399,  400,  397,  398,32767,  170,32767,
       48,   49,   49,   49,   48,   48,   48,   48,  274,  275,
      338,  339,  405,  406,   48,   48,   48,  256,  257,  262,
      320,  321,  326,  387,  388,  393,   49,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,  258,  259,  260,  261,
      322,  323,  324,  325,  389,  390,  391,  392,   63,32767,
    32767,32767,32767,32767,32767,  651,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,  479,  479,
    32767,32767,32767,  308,  307,  309,  311,  312,  310,  315,
      373,  372,  374,  376,  377,  375,  380,32767,  439,  438,
      440,  442,  443,  441,  446,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  171,
    32767,32767,32767,32767,32767,32767,32767,  490,  491,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,  183,32767,
    32767,  184,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,   44,
    32767,32767,32767,   36,  158,32767,32767,  164,32767,32767,
      225,  210,  453,  215,  147,  454,  149,32767,32767,32767,
    32767,  313,  650,   83,32767,  378,32767,  650,32767,32767,
    32767,32767,  226,   81,32767,  211,  444,32767,  650,   88,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
      473,  479,32767,32767,32767,32767,32767,   47,32767,32767,
    32767,32767,32767,32767,32767,   34,32767,   67,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,  482,32767,
    32767,  479,32767,32767,32767,32767,32767,   87,   84,32767,
    32767,32767,   71,  136,32767,32767,  232,32767,32767,32767,
    32767,  135,32767,32767,  167,32767,32767,   93,   89,32767,
    32767,32767,32767,32767,  477
  ];

  private static $yygoto = [
       34,   79,   97,   96,   97,   79,   36,   37, 1115,   39,
       40,   42,   43,   44,   48,   49,   32,   33,  463,  464,
      465,  466,  467,  468,   31,  324,  470,  471,  472,  473,
      474,  475,   61,   38,   62,   63,   64,   65,   66,   67,
       68,   69,   70,   71,   72,   73,   74,   75,   76,   77,
       78,  325,  338,  340,  343,  346,  349,  352,  357,  358,
      359,  360,  361,  362,  363,  388,  389,  397,  398,  399,
      416,  417,  418,  419,   41,   80,   81,   82,   83,   84,
       85,   86,   87,   88,   89,   90,   91,   92,   93,   94,
       95,  326,  339,  341,  344,  347,  350,  353,  364,  365,
      366,  367,  368,  369,  370,  390,  391,  400,  401,  402,
      420,  421,  422,  423,  562,  740,  639,  642,  675,  675,
      903,  698,   98,  328,   45,   99,  564,  100,  329,   46,
       47,  601,  601,  601,  601,  601,  601,  601,  601,  601,
      601,  601, 1255,  601,  601, 1255, 1157, 1157, 1157, 1157,
     1157,  601,  601,  601,  601,  601,  601,  601,  601,  601,
      601,  601,  636,  650,  661,  642,  740,  740, 1251,  642,
       50,   51,  741,   52,   53,  331,  102,  103,  332,  729,
      731,  670,  731,   54,  104,   55,  105,  106,   56,   10,
      107,  108,   57,   58, 1115, 1115, 1115, 1115, 1115, 1115,
     1115,  944,  945,  946, 1008, 1009, 1010, 1074, 1075, 1076,
     1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115,
     1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115,
     1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115,
     1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1253,
      789, 1115,    3,  789,  523,  868,  697,    3, 1115, 1115,
     1115, 1115,  631,  606,  641, 1245,  631,  555, 1115, 1131,
      327,  478,  479,  480,  481,  482,  483,  797,  797,  797,
      797, 1234,  797,  797,  476,  484,  101,  110,  111,  112,
      113,  114,  115,  116,  117,  118,  119,  120,  121,  122,
      123,  124,  125,  330,  342,  345,  348,  351,  354,  356,
      371,  372,  373,  374,  375,  376,  392,  393,  403,  404,
      405,  424,  425,  426,  427,  819, 1237,  126,  485,  716,
     1235,  716,  716,  716,  565,  566,  127,  333,  588,  543,
      747,  751, 1236, 1238,  334,  984,  984,  984,  984,  984,
      984,  984,  984,  984,  984,  984,  716,  984,  984,  502,
      762,  651,  780,  544,  735,  984,  984,  984,  984,  984,
      984,  984,  984,  984,  984,  984,  558,  522,  757,   21,
      708,   22,  613, 1256,  512,  896, 1256,  656,  524,  627,
      640,  899,  528,  529,  530,  531,   24,  884,  983,  983,
      983,  983,  983,  983,  983,  983,  983,  983,  983,  628,
      983,  983,  851,  807,  805,  893,  878,    0,  983,  983,
      983,  983,  983,  983,  983,  983,  983,  983,  983,    0,
        0,    0,  628,  628,    0,  536,  536,  536,  536,  766,
      536,  536,    0,  766,  766,  766,  766,    0,    0,    0,
        0,    0,    0,  796,  796,  796,  796, 1114,  796,  796,
        0,  628,  628,  628,  628,  628,  628,  628,  628,  628,
      571,  575,  586,    0,  971,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  458,  624,    0,    0,
      657,    0,  513,  542,  516,    0,  607,  607,  637,  607,
      607,  637,  637,  657,    0,    0,    0,    0,  460,  458,
      459,  742,  742,  742,  742, 1101,    0,    0,    0,    0,
        0,    0,    0, 1101, 1101, 1101, 1101, 1101, 1101, 1101,
     1101, 1101, 1101, 1101, 1101, 1101, 1101, 1101, 1101, 1101,
     1101, 1101,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  742,
      742,  742,  742,  742,  742,  742,  742,    0,  742,  795,
      795,  795,  795,    0,  795,  795,    0,    0,    0,    0,
        0,  615,  576,  615,  587,    0,  611,  612,    0,    0,
        0,    0,  646,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  553,    0,
        0,    0,    0,    0,    0,    0,    0,  646,  553,  982,
     1145,  534,  573,  610, 1047, 1146,  527,  583,  635, 1113,
      554,  591,  592,  557,  834,  710,  898,  659,  591,  592,
      660,  559,  663, 1114, 1114, 1114, 1114, 1114, 1114, 1114,
      765,    0,    0,    0,  765,  765,  765,  765,    0, 1114,
     1114, 1114, 1114, 1114, 1114, 1114, 1114, 1114, 1114, 1114,
     1114, 1114, 1114, 1114, 1114, 1114, 1114, 1114, 1114, 1114,
     1114, 1114, 1114, 1114, 1114, 1114, 1114, 1114, 1114, 1114,
     1114, 1114, 1114, 1114, 1114, 1114, 1114, 1114,  382,    0,
     1114,    0,    0,    0,    0,    0,    0, 1114, 1114, 1114,
     1114,    0,    0,    0,    0,    0,    0, 1114,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1124, 1124, 1124,    0,    0,    0,    0,
        0, 1101,    0,    0, 1101,    0,    0, 1101, 1101, 1233,
        0,    0,    0,    0,    0,    0, 1101,    0,    0, 1101,
        0,    0, 1101,    0,    0, 1101,    0,    0, 1101,    0,
     1101,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1101, 1101, 1101, 1101, 1101,
     1101,    0,    0,  965,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 1101, 1101,  441,    0,
        0,    0,  441,  441,  441,  441,    0, 1101, 1101, 1101,
        0,    0,  510,  510,  511,    0,  764,  809,    0,    0,
      764,  764,  764,  764, 1095,    0,    0,    0, 1101, 1101,
     1101, 1101, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095,
     1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095,
     1095,  854,  811,    0,  811,  813,  813,  847,  885,    0,
      772,  774,  771,  769,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  981,    0,    0,    0,    0,    0,    0,
     1046,  574, 1101, 1101, 1101, 1101, 1101, 1101, 1112,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      518,    0,  791,  791,  791,  791,  855,  791,  791,    0,
        0,  889,    0,    0,    0,  609,  561,  861,  846,  879,
      882,  844,  841,  842,  843,  845,    0,  888,  886,  887,
        0,    0,  763,    0,    0,    0,  763,  763,  763,  763,
        0,    0,  644,  647,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 1101,
     1101,    0,    0,    0,    0,  979,    0,    0,    0, 1044,
        0,    0,    0,    0,  379,    0,    0,    0,    0,    0,
     1110,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  379,    0,  383,
        0,    0,    0,  383,  383,  383,  383,    0,    0,    0,
        0,    0,    0,  406,  406,  406,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1095,    0,    0, 1095,    0,    0, 1095, 1095,    0,    0,
        0,    0,    0,    0,    0, 1095,    0,    0, 1095,    0,
        0, 1095,    0,    0, 1095,    0,    0, 1095,    0, 1095,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1095, 1095, 1095, 1095, 1095, 1095,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1095, 1095,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 1095, 1095, 1095,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 1095, 1095, 1095,
     1095,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1120,    0,    0,    0,    0,    0,    0, 1120,
        0, 1095, 1095, 1095, 1095, 1095, 1095, 1120,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1095, 1095,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  654
  ];

  private static $yygcheck = [
       22,   22,   22,   22,   22,   22,   22,   22,  108,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   39,    7,   39,    8,    8,
      100,    8,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   47,   47,   47,   39,   39,   39,   37,   39,
       22,   22,   39,   22,   22,   22,   22,   22,   22,   37,
       38,    4,   38,   22,   22,   22,   22,   22,   22,   60,
       22,   22,   22,   22,  108,  108,  108,  108,  108,  108,
      108,   74,   74,   74,   74,   74,   74,   74,   74,   74,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  122,
       25,  108,    6,   25,   56,   25,   25,    6,  108,  108,
      108,  108,   26,  104,  104,  119,   26,   81,  108,  111,
       42,   42,   42,   42,   42,   42,   42,   19,   19,   19,
       19,  112,   19,   19,  105,  105,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   70,  108,   42,   56,   34,
      113,   34,   34,   34,   42,   42,   42,   42,   36,   36,
       48,   48,  114,  115,   42,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,   34,  107,  107,   71,
       54,   40,   59,   44,   41,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,   30,   56,   52,   75,
       31,   75,   75,   85,   29,   97,   85,   27,   56,   23,
       75,   98,   56,   56,   56,   56,   75,   93,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,    5,
      106,  106,   83,   68,   66,   95,   91,   -1,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,   -1,
       -1,   -1,    5,    5,   -1,   32,   32,   32,   32,   12,
       32,   32,   -1,   12,   12,   12,   12,   -1,   -1,   -1,
       -1,   -1,   -1,   18,   18,   18,   18,  106,   18,   18,
       -1,    5,    5,    5,    5,    5,    5,    5,    5,    5,
      104,  104,  104,   -1,  103,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   26,   32,   -1,   -1,
        5,   -1,    5,    5,    5,   -1,    5,    5,    5,    5,
        5,    5,    5,    5,   -1,   -1,   -1,   -1,    5,   26,
       26,   26,   26,   26,   26,  103,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   26,
       26,   26,   26,   26,   26,   26,   26,   -1,   26,   17,
       17,   17,   17,   -1,   17,   17,   -1,   -1,   -1,   -1,
       -1,   26,   26,   26,   26,   -1,   26,   26,   -1,   -1,
       -1,   -1,   26,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   26,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   26,   26,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,  106,  106,  106,  106,  106,  106,  106,
       19,   -1,   -1,   -1,   19,   19,   19,   19,   -1,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,   33,   -1,
      106,   -1,   -1,   -1,   -1,   -1,   -1,  106,  106,  106,
      106,   -1,   -1,   -1,   -1,   -1,   -1,  106,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,  106,  106,  106,   -1,   -1,   -1,   -1,
       -1,  103,   -1,   -1,  103,   -1,   -1,  103,  103,   85,
       -1,   -1,   -1,   -1,   -1,   -1,  103,   -1,   -1,  103,
       -1,   -1,  103,   -1,   -1,  103,   -1,   -1,  103,   -1,
      103,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,  103,  103,  103,  103,  103,
      103,   -1,   -1,   73,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,  103,  103,   32,   -1,
       -1,   -1,   32,   32,   32,   32,   -1,  103,  103,  103,
       -1,   -1,   32,   32,   32,   -1,   18,   57,   -1,   -1,
       18,   18,   18,   18,   73,   -1,   -1,   -1,  103,  103,
      103,  103,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   57,   57,   -1,   57,   57,   57,   57,   57,   -1,
       57,   57,   57,   57,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,  103,   -1,   -1,   -1,   -1,   -1,   -1,
      103,   85,  103,  103,  103,  103,  103,  103,  103,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       57,   -1,   21,   21,   21,   21,   57,   21,   21,   -1,
       -1,   57,   -1,   -1,   -1,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   -1,   57,   57,   57,
       -1,   -1,   17,   -1,   -1,   -1,   17,   17,   17,   17,
       -1,   -1,   85,   85,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  103,
      103,   -1,   -1,   -1,   -1,  103,   -1,   -1,   -1,  103,
       -1,   -1,   -1,   -1,   33,   -1,   -1,   -1,   -1,   -1,
      103,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   33,
       -1,   -1,   -1,   33,   33,   33,   33,   -1,   -1,   -1,
       -1,   -1,   -1,   33,   33,   33,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       73,   -1,   -1,   73,   -1,   -1,   73,   73,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   73,   -1,   -1,   73,   -1,
       -1,   73,   -1,   -1,   73,   -1,   -1,   73,   -1,   73,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   73,   73,   73,   73,   73,   73,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   73,   73,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   73,   73,   73,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   73,   73,   73,
       73,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   73,   -1,   -1,   -1,   -1,   -1,   -1,   73,
       -1,   73,   73,   73,   73,   73,   73,   73,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   73,   73,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   73
  ];

  private static $yygbase = [
        0,    0,    0,    0,  176,   54,  252,  114,  115,    0,
        0,    0,   59,    0,    0,    0,    0,  562,  446,  270,
        0,  905, -130,  -63,    0,  243,  131, -100,    0,  -62,
      -67,  -65,  428,  639,  -50,    0,  -90, -409, -253, -265,
      -69,  -70,   25,    0,  -68,    0,    0, -222, -107,    0,
        0,    0,  -71,    0,  -27,    0, -199,  342,    0,  -33,
      180,    0,    0,    0,    0,    0, -108,    0, -111,    0,
      -53,  -20,    0,  733, -206, -188,    0,    0,    0,    0,
        0,  133,    0, -109,    0,  372,    0,    0,    0,    0,
        0, -169,    0, -124,    0, -167,    0, -101, -126,    0,
      112,    0,    0,  414,  135,  -52,  398,  345,  -51,    0,
        0,  134,  -96,  -47,  -35,  -34,    0,    0,    0,  132,
        0,    0,  235,    0
  ];

  private static $yygdefault = [
    -32768,  599,  667,  668,  669,  600,    4,  622,  674,  676,
      677,  679,  680,  681,  682,  683,  684,  685,  686,  687,
      688,  691,   35,  535,  792,  788, 1144,  648,  702,  549,
      550,  707,  457,  381,  715,  649,  537, 1243,  730,  617,
      643,  734,  109,  743,  545,  589,  556,  655,  750,  538,
      638,  658,  756,  387,  761,  767,  520,  838,  394,  781,
        7,  790,  539,  540,  802, 1050,  806, 1116,  808,  547,
      818,  499,  548, 1029,  837, 1141,  563,  840,  515,  132,
      134,  551,  521,  850,  581, 1140,  462,  869,  871,  872,
      585,  877,  881,  883,  582,  892,  552,  895,  900,    8,
      902,  533,   60, 1035, 1148,  469, 1048, 1051, 1049, 1117,
      546, 1130, 1135, 1136, 1137, 1139,  602,  604,  572, 1244,
      619,  577, 1252,  620
  ];

  private static $yylhs = [
        0,    1,    1,    2,    2,    3,    4,    7,    7,    6,
        6,    8,    8,    8,    8,    8,    8,    8,    8,    8,
        8,    8,    8,    8,    8,    8,    8,    9,    9,   20,
       20,   11,   24,   16,   23,   23,   27,   27,   27,   10,
       10,   10,   30,   30,   31,   31,   31,   29,   32,   32,
       33,   33,   34,   34,   34,   34,   34,   34,   34,   34,
       34,   34,   12,   35,   35,   36,   36,   38,   38,   40,
       40,   41,   41,   43,   43,   44,   44,   39,   39,   13,
       13,   45,   45,   49,   49,   50,   50,   48,   46,   46,
       46,   51,   51,   52,   47,   47,   53,   53,   54,   54,
       54,   54,   54,   54,   54,   54,   54,   54,   54,   54,
       54,   54,   55,   55,   55,   58,   58,   59,   59,   14,
       14,   15,   15,   60,   60,   25,   25,   25,   25,   25,
       61,   61,   61,   18,   19,   62,   63,   17,   17,   17,
       65,   65,   67,   67,   64,   64,   66,   66,   68,   68,
       56,   56,   56,   69,   69,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       72,   72,   71,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   80,   79,   79,   79,
       76,   76,   90,   90,   91,   77,   77,   92,   82,   82,
       93,   93,   93,   93,   83,   84,   84,   94,   94,   95,
       96,   96,   97,   97,   86,   86,   98,   99,   99,  100,
      100,   57,   57,   57,   87,   87,   88,   88,   89,   89,
      101,  101,   81,   81,   78,   78,  102,  102,  102,  102,
      102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
      102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
      102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
      102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
      102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
      102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
       42,   42,   42,  107,  109,  105,  105,  105,  105,  105,
       75,   75,  103,  103,  103,  110,  110,  111,  111,  111,
      106,  106,  106,  106,  106,  106,  106,  116,  113,    5,
        5,    5,   74,   74,  104,  104,  104,  104,  104,   26,
       26,   26,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,  115,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,   85,  112,  112,  112,   28,   28,
       28,   28,   28,   28,  114,  114,  114,  114,  117,  118,
      118,  119,  119,  108,  108,  108,  120,  121,  121,  122,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
       37,   37
  ];

  private static $yylen = [
        1,    0,    1,    1,    1,    4,    1,    0,    1,    1,
        2,    1,    1,    3,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    2,    1,    1,    5,    4,    3,
        4,    4,    4,    4,    1,    4,    1,    3,    4,    3,
        5,    5,    1,    3,    1,    3,    4,    1,    0,    1,
        1,    2,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    5,    0,    2,    1,    3,    1,    3,    1,
        3,    1,    3,    3,    3,    1,    3,    1,    1,    8,
        6,    0,    2,    0,    2,    1,    3,    1,    0,    2,
        2,    1,    3,    1,    0,    1,    1,    2,    1,    1,
        1,    1,    1,    4,    4,    4,    4,    4,    6,    4,
        6,    4,    3,    5,    5,    1,    2,    3,    6,    5,
        3,    6,    4,    1,    2,    1,    1,    1,    3,    2,
        1,    1,    1,    4,    3,    3,    2,    5,    5,    4,
        4,    3,    4,    3,    1,    3,    1,    2,    1,    2,
        2,    3,    3,    1,    3,    1,    2,    3,    2,    3,
        4,    2,    3,    4,    3,    4,    5,    3,    5,    3,
        0,    1,    1,    1,    5,    5,    7,    7,    7,    6,
        7,    5,    2,    2,    3,    3,    4,    5,    3,    2,
        3,    2,    3,    2,    3,    3,    3,    3,    3,    5,
        5,    3,    2,    3,    1,    2,    1,    1,    2,    2,
        0,    1,    1,    2,    3,    0,    1,    2,    1,    2,
        2,    5,    7,    5,    2,    0,    1,    1,    2,    3,
        1,    3,    1,    3,    1,    2,    2,    1,    2,    3,
        2,    2,    3,    3,    2,    1,    2,    1,    2,    1,
        1,    3,    1,    3,    1,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    2,    2,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        2,    5,    4,    4,    5,    4,    2,    2,    2,    2,
        2,    2,    2,    2,    3,    2,    3,    2,    1,    1,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    2,    2,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    2,    5,    4,    4,    5,    4,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    3,
        2,    3,    2,    1,    1,    1,    1,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    2,    2,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        2,    5,    4,    4,    5,    4,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    3,    2,    3,    2,    1,
        1,    1,    1,    4,    4,    2,    5,    4,    4,    1,
        3,    3,    2,    3,    3,    1,    3,    1,    3,    2,
        1,    1,    1,    1,    1,    1,    1,    0,    3,    1,
        2,    3,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    2,    9,    3,    3,    2,    1,
        3,    2,    1,    2,    3,    3,    2,    1,    3,    3,
        1,    1,    3,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        0,    1
  ];
  
    
  private $yyval;
  private $yyastk;
  private $yysstk;
  private $yysp;
  private $yystate;
  private $yyloc; // current location
  
  private $lex;
  private $invalid = false;
  
  /**
   * returns the current location (last scanned token)
   * 
   * @return Location
   */
  public function loc()
  {
    if (!$this->yyloc)
      return new Location('<unknown>', new Position(0, 0));
    
    return $this->yyloc;
  }
  
  /**
   * consumes semicolons to avoid unnecessary empty-expressions 
   * 
   * @void
   */
  private function eat_semis()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_SEMI) {
      do {
        $this->lex->skip();
        $peek = $this->lex->peek();
      } while ($peek->type === T_SEMI);

    }
  }
  
  /**
   * consumes a T_END token
   * 
   * @void
   */
  private function eat_end()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_END) {
      $this->lex->skip();
    }
  }
  
  /**
   * parse function
   * 
   * @param  Lexer  $lex
   * @return Node
   */
  public function parse(Lexer $lex) 
  {
    $tokid = self::TOKEN_NONE;
    
    // lexer
    $this->lex = $lex;
    
    // stacks
    $this->yysstk = [ 0 ]; 
    $this->yyastk = [];
    
    // current state
    $yystate = 0;
    
    // error flag
    $yyerrflag = 0;

    // stack position
    $this->yysp = 0;
    
    // location stack
    $yylstk = [];

    for (;;) {
      if (self::$yybase[$yystate] == 0)
        $yyn = self::$yydefault[$yystate];
      else {
        if ($tokid === self::TOKEN_NONE) {
          // Fetch the next token id from the lexer
          $token = $this->lex->next();
                    
          // invalid token (regexp-scan failed)
          if ($token->type === T_INVL) {
            $this->error_at($token->loc, ERR_ERROR, 'invalid source/regexp-literal');
            return null;
          }
          
          // map the lexer token id to the internally used token id's
          if ($token->type >= 0 && $token->type < self::TOKEN_MAP_SIZE)
            $tokid = self::$translate[$token->type];
          else {
            $this->error_at($token->loc, ERR_ERROR, 'invalid token %d -> %s', 
              $token->type, $token->value);
            return null;
          }        
          
          $this->yyloc = $token->loc;
          
          // store location
          $yylstk[$this->yysp] = $this->yyloc;
          
        } 

        if ((($yyn = self::$yybase[$yystate] + $tokid) >= 0
          && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid
          || ($yystate < self::YY2TBLSTATE
            && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + $tokid) >= 0
            && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid))
          && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT
        ) {
          /*
           * >= YYNLSTATE: shift and reduce
           * > 0: shift
           * = 0: accept
           * < 0: reduce
           * = -YYUNEXPECTED: error
           */
          if ($yyn > 0) {
            /* shift */
            
            $this->yysp++;
            
            $this->yysstk[$this->yysp] = $yystate = $yyn;
            $this->yyastk[$this->yysp] = $token;
            
            // store location
            $yylstk[$this->yysp] = $this->yyloc;
            
            $tokid = self::TOKEN_NONE;
            
            if ($yyerrflag > 0)
              $yyerrflag--;
            
            if ($yyn < self::YYNLSTATES)
              continue;

            /* $yyn >= YYNLSTATES means shift-and-reduce */
            $yyn -= self::YYNLSTATES;
          } else
            $yyn = -$yyn;
        } else
          $yyn = self::$yydefault[$yystate];
      }
      
      for (;;) {
        /* reduce/error */
        if ($yyn == 0) {
          /* accept */
          if ($this->invalid === true)
            return null;
          return $this->yyval;
        } elseif ($yyn != self::YYUNEXPECTED) {
          /* reduce */
//ifnot -t
          $this->{'yyn' . $yyn}();
//endif          
          /* Goto - shift nonterminal */
          $yylen = self::$yylen[$yyn];
          $yyloc = $yylstk[$this->yysp - $yylen];
          
          $this->yysp -= $yylen;
          
          $yyn = self::$yylhs[$yyn];
          
          if (($yyp = self::$yygbase[$yyn]
           + $this->yysstk[$this->yysp]) >= 0
            && $yyp < self::YYGLAST && self::$yygcheck[$yyp] == $yyn)
            $yystate = self::$yygoto[$yyp];
          else
            $yystate = self::$yygdefault[$yyn];
          
          $this->yysp++;
          
          $this->yysstk[$this->yysp] = $yystate;
          $this->yyastk[$this->yysp] = $this->yyval;
          
          // set location if a real node was produced by $yyn
          if ($this->yyval instanceof Node)
            $this->yyval->loc = $yyloc;
          
          // store position
          $yylstk[$this->yysp] = $this->yyloc;
          
        } else {
          /* error */
          $this->invalid = true;
                    
          switch ($yyerrflag) {
            case 0:
              // let the lexer know
              $this->lex->sync = true;
              
              $expa = [];
              $expn = 0;
              $base = self::$yybase[$yystate];
              
              for ($i = 0; $i < self::TOKEN_MAP_SIZE; ++$i) {
                $n = $base + $i;
                if ($n >= 0 && $n < self::YYLAST && self::$yycheck[$n] == $i
                  || $yystate < self::YY2TBLSTATE
                  && ($n = self::$yybase[$yystate + self::YYNLSTATES] + $i)
                  && $n < self::YYLAST && ($n < 0 || self::$yycheck[$n] == $i)
                ) {
                  if ($n >= 0 && self::$yyaction[$n] != self::YYUNEXPECTED) {
                    if ($expn === 4) {
                      /* Too many expected tokens */
                      $expa = null;
                      $expn = 0;
                      break;
                    }

                    $expa[] = self::$terminals[$i];
                    $expn++;
                  }
                }
              }

              $exps = 'unexpected ' . self::$terminals[$tokid];
              
              if ($expn > 0) {
                $last = array_pop($expa);
                $exps .= ', expected ';
                
                if ($expn > 1)
                  $exps .= implode(', ', $expa) . ' or ';
                
                $exps .= $last;
                unset ($expa, $last);
              }
              
              $this->error_at($this->yyloc, ERR_ERROR, $exps);              
            case 1:
            case 2:
              $yyerrflag = 3;  
              
              while (!(($yyn = self::$yybase[$yystate] + self::YYINTERRTOK) >= 0
                && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK
                || ($yystate < self::YY2TBLSTATE
                  && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + self::YYINTERRTOK) >= 0
                  && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK))
              ) {  
                if ($this->yysp <= 0) 
                  return null;
                
                $yystate = $this->yysstk[--$this->yysp];              
              }
              
              $yyn = self::$yyaction[$yyn];
              $this->yysstk[++$this->yysp] = $yystate = $yyn;
              break;
            
            case 3:
              if ($tokid === 0) 
                return null;
              
              $tokid = -1;
              break;
          }
        }

        if ($yystate < self::YYNLSTATES)
          break;
        
        /* >= YYNLSTATES means shift-and-reduce */
        $yyn = $yystate - self::YYNLSTATES;
      }
    }
  }


  private function yyn0() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn1() 
  {
     $this->yyval = new Unit(null); 
  }


  private function yyn2() 
  {
     $this->yyval = new Unit($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn3() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; $this->eat_end(); 
  }


  private function yyn4() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; $this->eat_end(); 
  }


  private function yyn5() 
  {
     $this->yyval = new Module($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn6() 
  {
     $this->yyval = new Program($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn7() 
  {
     $this->yyval = null; 
  }


  private function yyn8() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn9() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn10() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn11() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn12() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn13() 
  {
     $this->yyval = null; 
  }


  private function yyn14() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn15() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn16() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn17() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn18() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn19() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn20() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn21() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn22() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn23() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn24() 
  {
     $this->yyval = null; 
  }


  private function yyn25() 
  {
     $this->yyval = null; 
  }


  private function yyn26() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn27() 
  {
     
      $this->yyval = new Module($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn28() 
  {
     
      $this->yyval = new Module(null, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn29() 
  {
     
      $this->yyval = new RequireDecl(false, $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn30() 
  {
     
      $this->yyval = new RequireDecl(true, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn31() 
  {
     
      $this->yyval = new AttrDecl($this->yyastk[$this->yysp-(4-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn32() 
  {
     $this->yyval = new CompAttr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn33() 
  {
     $this->yyval = new TopexAttr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn34() 
  {
     $this->yyval = new AttrDef($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn35() 
  {
     $this->yyval = new AttrDef($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn36() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn37() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn38() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn39() 
  {
     
      $this->yyval = new UseDecl($this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn40() 
  {
     
      $this->yyval = new UseDecl(new UseAlias($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)])); 
      $this->eat_semis(); 
    
  }


  private function yyn41() 
  {
     
      $this->yyval = new UseDecl(new UseUnpack($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)])); 
      $this->eat_semis(); 
    
  }


  private function yyn42() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn43() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn44() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn45() 
  {
     $this->yyval = new UseAlias($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn46() 
  {
     $this->yyval = new UseUnpack($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn47() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn48() 
  {
     $this->yyval = null; 
  }


  private function yyn49() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn50() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn51() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn52() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn53() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn54() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn55() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn56() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn57() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn58() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn59() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn60() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn61() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn62() 
  {
     
      $this->yyval = new EnumDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn63() 
  {
     $this->yyval = null; 
  }


  private function yyn64() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn65() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn66() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn67() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn68() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn69() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn70() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn71() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn72() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn73() 
  {
     $this->yyval = new ArrDestr($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn74() 
  {
     $this->yyval = new ObjDestr($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn75() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn76() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn77() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn78() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn79() 
  {
     
      $this->yyval = new ClassDecl($this->yyastk[$this->yysp-(8-1)], $this->yyastk[$this->yysp-(8-3)], $this->yyastk[$this->yysp-(8-4)], $this->yyastk[$this->yysp-(8-5)], $this->yyastk[$this->yysp-(8-7)]); 
      $this->eat_semis(); 
    
  }


  private function yyn80() 
  {
     
      $this->yyval = new ClassDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-5)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn81() 
  {
     $this->yyval = null; 
  }


  private function yyn82() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn83() 
  {
     $this->yyval = null; 
  }


  private function yyn84() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn85() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn86() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn87() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn88() 
  {
     $this->yyval = null; 
  }


  private function yyn89() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn90() 
  {
     $this->yyval = null; 
  }


  private function yyn91() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn92() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn93() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn94() 
  {
     $this->yyval = []; 
  }


  private function yyn95() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn96() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn97() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn98() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn99() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn100() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn101() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn102() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn103() 
  {
     
      $this->yyval = new CtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn104() 
  {
     $this->yyval = new CtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn105() 
  {
     
      $this->yyval = new DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn106() 
  {
     $this->yyval = new DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn107() 
  {
     $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn108() 
  {
     
      $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn109() 
  {
     $this->yyval = new SetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn110() 
  {
     
      $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn111() 
  {
     $this->yyval = new NestedMods($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn112() 
  {
     
      $this->yyval = new TraitUse($this->yyastk[$this->yysp-(3-2)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn113() 
  {
     
      $this->yyval = new TraitUse($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn114() 
  {
     $this->yyval = new TraitUse($this->yyastk[$this->yysp-(5-2)], null, $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn115() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn116() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn117() 
  {
     
      $this->yyval = new TraitItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn118() 
  {
     
      $this->yyval = new TraitItem($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-6)]); 
      $this->eat_semis(); 
    
  }


  private function yyn119() 
  {
     
      $this->yyval = new TraitDecl($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn120() 
  {
     
      $this->yyval = new TraitDecl($this->yyastk[$this->yysp-(3-2)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn121() 
  {
     
      $this->yyval = new IfaceDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn122() 
  {
     
      $this->yyval = new IfaceDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn123() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn124() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn125() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn126() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn127() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn128() 
  {
     $this->yyval = null; 
  }


  private function yyn129() 
  {
     $this->yyval = null; 
  }


  private function yyn130() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn131() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn132() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn133() 
  {
     
      $this->yyval = new LetDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn134() 
  {
     
      $this->yyval = new VarDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn135() 
  {
     $this->yyval = new LetDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn136() 
  {
     $this->yyval = new VarDecl($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn137() 
  {
     $this->yyval = new FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn138() 
  {
     
      $this->yyval = new FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn139() 
  {
     
      $this->yyval = new FnDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn140() 
  {
     $this->yyval = new FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn141() 
  {
     $this->yyval = new FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn142() 
  {
     $this->yyval = new FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn143() 
  {
     $this->yyval = new FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn144() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn145() 
  {
     
      /* FIXME */
      $this->yyval = new Block([ new ReturnStmt($this->yyastk[$this->yysp-(3-2)]) ]); 
      $this->eat_semis(); 
    
  }


  private function yyn146() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn147() 
  {
     
      /* FIXME */
      $this->yyval = new Block([ new ReturnStmt($this->yyastk[$this->yysp-(2-2)]) ]); 
    
  }


  private function yyn148() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn149() 
  {
     
      /* FIXME */
      $this->yyval = new Block([ new ReturnStmt($this->yyastk[$this->yysp-(2-2)]) ]); 
    
  }


  private function yyn150() 
  {
     $this->yyval = null; 
  }


  private function yyn151() 
  {
     $this->yyval = null; 
  }


  private function yyn152() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn153() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn154() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn155() 
  {
     $this->yyval = new Param(null, null, $this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn156() 
  {
     $this->yyval = new Param(null, null, $this->yyastk[$this->yysp-(2-1)], null, true); 
  }


  private function yyn157() 
  {
     $this->yyval = new Param(null, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn158() 
  {
     $this->yyval = new Param(null, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn159() 
  {
     $this->yyval = new Param(null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn160() 
  {
     $this->yyval = new Param(null, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn161() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(2-1)], null, $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn162() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(3-1)], null, $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn163() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn164() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn165() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null, true); 
  }


  private function yyn166() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], false); 
  }


  private function yyn167() 
  {
     $this->yyval = new ThisParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn168() 
  {
     $this->yyval = new ThisParam($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn169() 
  {
     $this->yyval = new RestParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn170() 
  {
     $this->yyval = null; 
  }


  private function yyn171() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn172() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn173() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn174() 
  {
     $this->yyval = new DoStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn175() 
  {
     $this->yyval = new IfStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn176() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn177() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn178() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn179() 
  {
     $this->yyval = new ForStmt($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], null, $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn180() 
  {
     $this->yyval = new ForStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn181() 
  {
     $this->yyval = null; 
  }


  private function yyn182() 
  {
     $this->yyval = new ForStmt(null, null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn183() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(2-2)], null, null); 
  }


  private function yyn184() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn185() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(3-2)], null, $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn186() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn187() 
  {
     $this->yyval = new PhpStmt($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn188() 
  {
     $this->yyval = new GotoStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn189() 
  {
     $this->yyval = new TestStmt(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn190() 
  {
     $this->yyval = new TestStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn191() 
  {
     $this->yyval = new BreakStmt(null); 
  }


  private function yyn192() 
  {
     $this->yyval = new BreakStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn193() 
  {
     $this->yyval = new ContinueStmt(null); 
  }


  private function yyn194() 
  {
     $this->yyval = new ContinueStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn195() 
  {
     $this->yyval = new ThrowStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn196() 
  {
     $this->yyval = new WhileStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn197() 
  {
     $this->yyval = new YieldStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn198() 
  {
     $this->yyval = new AssertStmt($this->yyastk[$this->yysp-(3-2)], null); 
  }


  private function yyn199() 
  {
     $this->yyval = new AssertStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn200() 
  {
     $this->yyval = new SwitchStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn201() 
  {
     $this->yyval = new ReturnStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn202() 
  {
     $this->yyval = new ReturnStmt(null); 
  }


  private function yyn203() 
  {
     $this->yyval = new LabeledStmt($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn204() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn205() 
  {
     $this->yyval = null; 
  }


  private function yyn206() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn207() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn208() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn209() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn210() 
  {
     $this->yyval = null; 
  }


  private function yyn211() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn212() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn213() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn214() 
  {
     $this->yyval = new ElsifItem($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn215() 
  {
     $this->yyval = null; 
  }


  private function yyn216() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn217() 
  {
     $this->yyval = new ElseItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn218() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn219() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn220() 
  {
     $this->yyval = new CatchItem(null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn221() 
  {
     $this->yyval = new CatchItem($this->yyastk[$this->yysp-(5-3)], null, $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn222() 
  {
     $this->yyval = new CatchItem($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn223() 
  {
     $this->yyval = null; 
  }


  private function yyn224() 
  {
     $this->yyval = new FinallyItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn225() 
  {
     $this->yyval = null; 
  }


  private function yyn226() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn227() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn228() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn229() 
  {
     $this->yyval = new PhpUse($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn230() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn231() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn232() 
  {
     $this->yyval = new PhpUseItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn233() 
  {
     $this->yyval = new PhpUseItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn234() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn235() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn236() 
  {
     new CaseItem($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn237() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn238() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn239() 
  {
     $this->yyval = new CaseLabel($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn240() 
  {
     $this->yyval = new CaseLabel(null); 
  }


  private function yyn241() 
  {
     $this->yyval = new Block(null); 
  }


  private function yyn242() 
  {
     $this->yyval = new Block($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn243() 
  {
     $this->yyval = null; 
  }


  private function yyn244() 
  {
     
      $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
      $this->eat_semis(); 
    
  }


  private function yyn245() 
  {
     
      $this->yyval = new ExprStmt(null); 
      $this->eat_semis(); 
    
  }


  private function yyn246() 
  {
     $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn247() 
  {
     $this->yyval = new ExprStmt(null); 
  }


  private function yyn248() 
  {
     $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn249() 
  {
     $this->yyval = new ExprStmt(null); 
  }


  private function yyn250() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn251() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn252() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn253() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn254() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn255() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn256() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn257() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn258() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn259() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn260() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn261() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn262() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn263() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn264() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn265() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn266() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn267() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn268() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn269() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn270() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn271() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn272() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn273() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn274() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn275() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn276() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn277() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn278() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn279() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn280() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn281() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn282() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn283() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn284() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn285() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn286() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn287() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn288() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn289() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn290() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn291() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn292() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn293() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn294() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn295() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn296() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn297() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn298() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn299() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn300() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn301() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn302() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn303() 
  {
     $this->yyval = null; 
  }


  private function yyn304() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn305() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn306() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn307() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn308() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn309() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn310() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn311() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn312() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn313() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn314() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn315() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn316() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn317() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn318() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn319() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn320() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn321() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn322() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn323() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn324() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn325() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn326() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn327() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn328() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn329() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn330() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn331() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn332() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn333() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn334() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn335() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn336() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn337() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn338() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn339() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn340() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn341() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn342() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn343() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn344() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn345() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn346() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn347() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn348() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn349() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn350() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn351() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn352() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn353() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn354() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn355() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn356() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn357() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn358() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn359() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn360() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn361() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn362() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn363() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn364() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn365() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn366() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn367() 
  {
     $this->yyval = null; 
  }


  private function yyn368() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn369() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn370() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn371() 
  {
     $this->yyval = new YieldExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn372() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn373() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn374() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn375() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn376() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn377() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn378() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn379() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn380() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn381() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn382() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn383() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn384() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn385() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn386() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn387() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn388() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn389() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn390() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn391() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn392() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn393() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn394() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn395() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn396() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn397() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn398() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn399() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn400() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn401() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn402() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn403() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn404() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn405() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn406() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn407() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn408() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn409() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn410() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn411() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn412() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn413() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn414() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn415() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn416() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn417() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn418() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn419() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn420() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn421() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn422() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn423() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn424() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn425() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn426() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn427() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn428() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn429() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn430() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn431() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn432() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn433() 
  {
     $this->yyval = null; 
  }


  private function yyn434() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn435() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn436() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn437() 
  {
     $this->yyval = new YieldExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn438() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn439() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn440() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn441() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn442() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn443() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn444() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn445() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn446() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn447() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn448() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn449() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn450() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn451() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn452() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn453() 
  {
     
      $this->yyval = new CastExpr($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-2)]); 
      $this->error_at($this->yyastk[$this->yysp-(4-1)]->loc, ERR_WARN, 'legacy cast, use `expr as type` instead'); 
    
  }


  private function yyn454() 
  {
     
      $this->yyval = new CastExpr($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-2)]); 
      $this->error_at($this->yyastk[$this->yysp-(4-1)]->loc, ERR_WARN, 'legacy cast, use `expr as type` instead'); 
    
  }


  private function yyn455() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn456() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn457() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn458() 
  {
     $this->yyval = null; 
  }


  private function yyn459() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn460() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn461() 
  {
     $this->yyval = null; 
  }


  private function yyn462() 
  {
     $this->yyval = null; 
  }


  private function yyn463() 
  {
     $this->yyval = null; 
  }


  private function yyn464() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn465() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn466() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn467() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn468() 
  {
     $this->yyval = new NamedArg($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn469() 
  {
     $this->yyval = new RestArg($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn470() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn471() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn472() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn473() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn474() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn475() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn476() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn477() 
  {
     $this->lex->scan_regexp($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn478() 
  {
     $this->yyval = new RegexpLit($this->yyastk[$this->yysp-(3-3)]->value); 
  }


  private function yyn479() 
  {
     $this->yyval = new Name($this->yyastk[$this->yysp-(1-1)], false); 
  }


  private function yyn480() 
  {
     $this->yyval = new Name($this->yyastk[$this->yysp-(2-2)], true); 
  }


  private function yyn481() 
  {
     $this->yyastk[$this->yysp-(3-1)]->add($this->yyastk[$this->yysp-(3-3)]); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn482() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn483() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn484() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn485() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn486() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn487() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn488() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn489() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn490() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn491() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn492() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn493() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn494() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn495() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn496() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn497() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn498() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn499() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn500() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn501() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn502() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn503() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn504() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn505() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn506() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn507() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn508() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn509() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn510() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn511() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn512() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn513() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn514() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn515() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn516() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn517() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn518() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn519() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn520() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn521() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn522() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn523() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn524() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn525() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn526() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn527() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn528() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn529() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn530() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn531() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn532() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn533() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn534() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn535() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn536() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn537() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn538() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn539() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn540() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn541() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn542() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn543() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn544() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn545() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn546() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn547() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn548() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn549() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn550() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn551() 
  {
     $this->yyval = new ThisExpr; 
  }


  private function yyn552() 
  {
     $this->yyval = new SuperExpr; 
  }


  private function yyn553() 
  {
     $this->yyval = new NullLit; 
  }


  private function yyn554() 
  {
     $this->yyval = new TrueLit; 
  }


  private function yyn555() 
  {
     $this->yyval = new FalseLit; 
  }


  private function yyn556() 
  {
     $this->yyval = new StrLit(dirname($this->yyastk[$this->yysp-(1-1)]->loc->file), 'c'); 
  }


  private function yyn557() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->file, 'c'); 
  }


  private function yyn558() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->line, 'c'); 
  }


  private function yyn559() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->coln, 'c'); 
  }


  private function yyn560() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn561() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn562() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn563() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn564() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->flag); 
  }


  private function yyn565() 
  {
     $this->yyval = new LNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn566() 
  {
     $this->yyval = new DNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn567() 
  {
     $this->yyval = new SNumLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->suffix); 
  }


  private function yyn568() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn569() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn570() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn571() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn572() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn573() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn574() 
  {
     $this->yyval = new ArrLit(null); 
  }


  private function yyn575() 
  {
     $this->yyval = new ArrGen($this->yyastk[$this->yysp-(9-2)], $this->yyastk[$this->yysp-(9-5)], $this->yyastk[$this->yysp-(9-7)]); 
  }


  private function yyn576() 
  {
     $this->yyval = new ArrLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn577() 
  {
     $this->yyval = null; 
  }


  private function yyn578() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn579() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn580() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn581() 
  {
     $this->yyval = new SpreadExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn582() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn583() 
  {
     $this->yyval = new ObjLit(null); 
  }


  private function yyn584() 
  {
     $this->yyval = new ObjLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn585() 
  {
     $this->yyval = null; 
  }


  private function yyn586() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn587() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn588() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn589() 
  {
     $this->yyval = new ObjPair($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn590() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn591() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn592() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn593() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn594() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn595() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn596() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn597() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn598() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn599() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn600() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn601() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn602() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn603() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn604() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn605() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn606() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn607() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn608() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn609() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn610() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn611() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn612() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn613() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn614() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn615() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn616() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn617() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn618() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn619() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn620() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn621() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn622() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn623() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn624() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn625() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn626() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn627() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn628() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn629() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn630() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn631() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn632() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn633() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn634() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn635() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn636() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn637() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn638() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn639() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn640() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn641() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn642() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn643() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn644() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn645() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn646() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn647() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn648() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn649() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn650() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn651() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }

}

