<?php

/* this parser-skeleton is based on the awesome 
   work of nikic (https://github.com/nikic) 
   with some extensions (error-recovery and location-tracking) */

/**
 * This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *   the grammar file gen/parser.y
 *   the parser skeleton gen/kymacc.php.parser
 *
 * The skeleton for this parser was written by Moriyoshi Koizumi and is based on
 * the work by Masato Bito and is in the PUBLIC DOMAIN.
 */

namespace phs;


const YYERRTOK = 256;
const T_ARR = 257;
const T_PRINT = 258;
const T_YIELD = 259;
const T_APLUS = 260;
const T_AMINUS = 261;
const T_AMUL = 262;
const T_ADIV = 263;
const T_AMOD = 264;
const T_APOW = 265;
const T_ACONCAT = 266;
const T_ABIT_OR = 267;
const T_ABIT_AND = 268;
const T_ABIT_XOR = 269;
const T_ABOOL_OR = 270;
const T_ABOOL_AND = 271;
const T_ABOOL_XOR = 272;
const T_ASHIFT_L = 273;
const T_ASHIFT_R = 274;
const T_AREF = 275;
const T_RANGE = 276;
const T_BOOL_OR = 277;
const T_BOOL_XOR = 278;
const T_BOOL_AND = 279;
const T_EQ = 280;
const T_NEQ = 281;
const T_IN = 282;
const T_IS = 283;
const T_ISNT = 284;
const T_GTE = 285;
const T_LTE = 286;
const T_SL = 287;
const T_SR = 288;
const T_POW = 289;
const T_AS = 290;
const T_REST = 291;
const T_DEL = 292;
const T_INC = 293;
const T_DEC = 294;
const T_NEW = 295;
const T_DDDOT = 296;
const T_FN = 297;
const T_LET = 298;
const T_USE = 299;
const T_ENUM = 300;
const T_CLASS = 301;
const T_TRAIT = 302;
const T_IFACE = 303;
const T_MODULE = 304;
const T_REQUIRE = 305;
const T_IDENT = 306;
const T_LNUM = 307;
const T_DNUM = 308;
const T_SNUM = 309;
const T_STRING = 310;
const T_REGEXP = 311;
const T_TRUE = 312;
const T_FALSE = 313;
const T_NULL = 314;
const T_THIS = 315;
const T_SUPER = 316;
const T_GET = 317;
const T_SET = 318;
const T_DO = 319;
const T_IF = 320;
const T_ELSIF = 321;
const T_ELSE = 322;
const T_FOR = 323;
const T_TRY = 324;
const T_GOTO = 325;
const T_BREAK = 326;
const T_CONTINUE = 327;
const T_THROW = 328;
const T_CATCH = 329;
const T_FINALLY = 330;
const T_WHILE = 331;
const T_ASSERT = 332;
const T_SWITCH = 333;
const T_CASE = 334;
const T_DEFAULT = 335;
const T_RETURN = 336;
const T_CONST = 337;
const T_FINAL = 338;
const T_GLOBAL = 339;
const T_STATIC = 340;
const T_EXTERN = 341;
const T_PUBLIC = 342;
const T_PRIVATE = 343;
const T_PROTECTED = 344;
const T_SEALED = 345;
const T_INLINE = 346;
const T_PHP = 347;
const T_TEST = 348;
const T_CDIR = 349;
const T_CFILE = 350;
const T_CLINE = 351;
const T_CCOLN = 352;
const T_CFN = 353;
const T_CCLASS = 354;
const T_CMETHOD = 355;
const T_CMODULE = 356;
const T_NL = 357;
const T_TINT = 358;
const T_TBOOL = 359;
const T_TFLOAT = 360;
const T_TSTRING = 361;
const T_TREGEXP = 362;
const T_INVL = 363;
const T_END = 364;
const T_SYNC = 365;

require_once 'context.php';
require_once 'parser_base.php';

require_once 'ast.php';
require_once 'glob.php';
require_once 'lexer.php';

use phs\ast\Node;
use phs\ast\Expr;
use phs\ast\Unit;
use phs\ast\Module;
use phs\ast\Program;
use phs\ast\LabelDecl;
use phs\ast\RequireDecl;
use phs\ast\AttrDecl;
use phs\ast\CompAttr;
use phs\ast\TopexAttr;
use phs\ast\AttrDef;
use phs\ast\AttrVal;
use phs\ast\UseDecl;
use phs\ast\UseAlias;
use phs\ast\UseUnpack;
use phs\ast\EnumDecl;
use phs\ast\VarItem;
use phs\ast\ArrDestr;
use phs\ast\ObjDestr;
use phs\ast\ClassDecl;
use phs\ast\CtorDecl;
use phs\ast\DtorDecl;
use phs\ast\GetterDecl;
use phs\ast\SetterDecl;
use phs\ast\NestedMods;
use phs\ast\TraitUse;
use phs\ast\TraitItem;
use phs\ast\TraitDecl;
use phs\ast\IfaceDecl;
use phs\ast\LetDecl;
use phs\ast\VarDecl;
use phs\ast\FnDecl;
use phs\ast\FnExpr;
use phs\ast\Block;
use phs\ast\ReturnStmt;
use phs\ast\Param;
use phs\ast\ThisParam;
use phs\ast\RestParam;
use phs\ast\DoStmt;
use phs\ast\IfStmt;
use phs\ast\ForInStmt;
use phs\ast\ForStmt;
use phs\ast\TryStmt;
use phs\ast\PhpStmt;
use phs\ast\GotoStmt;
use phs\ast\TestStmt;
use phs\ast\BreakStmt;
use phs\ast\ContinueStmt;
use phs\ast\ThrowStmt;
use phs\ast\WhileStmt;
use phs\ast\AssertStmt;
use phs\ast\SwitchStmt;
use phs\ast\ElsifItem;
use phs\ast\ElseItem;
use phs\ast\CatchItem;
use phs\ast\FinallyItem;
use phs\ast\PhpUse;
use phs\ast\PhpUseItem;
use phs\ast\CaseItem;
use phs\ast\CaseLabel;
use phs\ast\ExprStmt;
use phs\ast\BinExpr;
use phs\ast\CheckExpr;
use phs\ast\CastExpr;
use phs\ast\UpdateExpr;
use phs\ast\AssignExpr;
use phs\ast\MemberExpr;
use phs\ast\CondExpr;
use phs\ast\CallExpr;
use phs\ast\YieldExpr;
use phs\ast\UnaryExpr;
use phs\ast\NewExpr;
use phs\ast\DelExpr;
use phs\ast\PrintExpr;
use phs\ast\NamedArg;
use phs\ast\RestArg;
use phs\ast\RegexpLit;
use phs\ast\Name;
use phs\ast\TypeId;
use phs\ast\Ident;
use phs\ast\ThisExpr;
use phs\ast\SuperExpr;
use phs\ast\NullLit;
use phs\ast\TrueLit;
use phs\ast\FalseLit;
use phs\ast\StrLit;
use phs\ast\EngineConst;
use phs\ast\LNumLit;
use phs\ast\DNumLit;
use phs\ast\SNumLit;
use phs\ast\ArrLit;
use phs\ast\ArrGen;
use phs\ast\SpreadExpr;
use phs\ast\ObjLit;
use phs\ast\ObjPair;


class Parser extends ParserBase
{
  const TOKEN_NONE    = -1;
  const TOKEN_INVALID = 135;

  const TOKEN_MAP_SIZE = 366;

  const YYLAST       = 1619;
  const YY2TBLSTATE  = 620;
  const YYGLAST      = 1355;
  const YYNLSTATES   = 701;
  const YYINTERRTOK  = 1;
  const YYUNEXPECTED = 32767;
  const YYDEFAULT    = -32766;

  /* @var array Map of token ids to their respective names */
  private static $terminals = [
    "EOF",
    "error",
    "','",
    "T_ARR",
    "T_PRINT",
    "T_YIELD",
    "T_APLUS",
    "T_AMINUS",
    "T_AMUL",
    "T_ADIV",
    "T_AMOD",
    "T_APOW",
    "T_ACONCAT",
    "T_ABIT_OR",
    "T_ABIT_AND",
    "T_ABIT_XOR",
    "T_ABOOL_OR",
    "T_ABOOL_AND",
    "T_ABOOL_XOR",
    "T_ASHIFT_L",
    "T_ASHIFT_R",
    "T_AREF",
    "'='",
    "T_RANGE",
    "'?'",
    "':'",
    "T_BOOL_OR",
    "T_BOOL_XOR",
    "T_BOOL_AND",
    "'|'",
    "'^'",
    "'&'",
    "T_EQ",
    "T_NEQ",
    "T_IN",
    "T_IS",
    "T_ISNT",
    "T_GTE",
    "T_LTE",
    "'>'",
    "'<'",
    "T_SL",
    "T_SR",
    "'+'",
    "'-'",
    "'~'",
    "'*'",
    "'/'",
    "'%'",
    "T_POW",
    "T_AS",
    "T_REST",
    "T_DEL",
    "T_INC",
    "T_DEC",
    "'!'",
    "T_NEW",
    "'.'",
    "'['",
    "']'",
    "'('",
    "')'",
    "T_DDDOT",
    "T_FN",
    "T_LET",
    "T_USE",
    "T_ENUM",
    "T_CLASS",
    "T_TRAIT",
    "T_IFACE",
    "T_MODULE",
    "T_REQUIRE",
    "T_IDENT",
    "T_LNUM",
    "T_DNUM",
    "T_SNUM",
    "T_STRING",
    "T_REGEXP",
    "T_TRUE",
    "T_FALSE",
    "T_NULL",
    "T_THIS",
    "T_SUPER",
    "T_GET",
    "T_SET",
    "T_DO",
    "T_IF",
    "T_ELSIF",
    "T_ELSE",
    "T_FOR",
    "T_TRY",
    "T_GOTO",
    "T_BREAK",
    "T_CONTINUE",
    "T_THROW",
    "T_CATCH",
    "T_FINALLY",
    "T_WHILE",
    "T_ASSERT",
    "T_SWITCH",
    "T_CASE",
    "T_DEFAULT",
    "T_RETURN",
    "T_CONST",
    "T_FINAL",
    "T_GLOBAL",
    "T_STATIC",
    "T_EXTERN",
    "T_PUBLIC",
    "T_PRIVATE",
    "T_PROTECTED",
    "T_SEALED",
    "T_INLINE",
    "T_PHP",
    "T_TEST",
    "T_CDIR",
    "T_CFILE",
    "T_CLINE",
    "T_CCOLN",
    "T_CFN",
    "T_CCLASS",
    "T_CMETHOD",
    "T_CMODULE",
    "T_NL",
    "T_TINT",
    "T_TBOOL",
    "T_TFLOAT",
    "T_TSTRING",
    "T_TREGEXP",
    "T_END",
    "T_SYNC",
    "';'",
    "'@'",
    "'{'",
    "'}'"
    , "???"
  ];

  /* @var array Map which translates lexer tokens to internal tokens */
  private static $translate = [
        0,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,   55,  135,  135,  135,   48,   31,  135,
       60,   61,   46,   43,    2,   44,   57,   47,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,   25,  131,
       40,   22,   39,   24,  132,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,   58,  135,   59,   30,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  133,   29,  134,   45,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,    1,    3,    4,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   20,   21,   23,   26,   27,   28,
       32,   33,   34,   35,   36,   37,   38,   41,   42,   49,
       50,   51,   52,   53,   54,   56,   62,   63,   64,   65,
       66,   67,   68,   69,   70,   71,   72,   73,   74,   75,
       76,   77,   78,   79,   80,   81,   82,   83,   84,   85,
       86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
       96,   97,   98,   99,  100,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
      116,  117,  118,  119,  120,  121,  122,  123,  124,  125,
      126,  127,  128,  135,  129,  130
  ];

  private static $yyaction = [
     1355,    0,  215,  216,  217,  218,  219,  220,  221,  222,
      223,  224,  225,  226,  227,  228,  229,  370,  230,  231,
      149,  314,  232,  233,  234,  235,  236,  237,  238,  239,
      240,  431,  432,  241,  242,  243,  244,  245,  246,  247,
      248,  249,  250,  251,  252,  253,  433,  312,  436, 1062,
     1063, 1131, 1132,   16,  150,  647,  139,-32766, 1315, 1316,
     1330, 1343, 1333, 1334, 1335, 1331, 1354, 1211,-32766,-32766,
      174, 1286, 1256, 1320, 1321, 1322, 1336, 1352, 1212, 1213,
     1348, 1323, 1324, 1325, 1346, 1326, 1353, 1349, 1350, 1327,
     1328, 1329, 1347, 1319, 1344, 1345,  329, 1351, 1338, 1339,
     1356, 1337, 1332, 1340, 1341, 1342, 1362, 1363, 1317, 1318,
     1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,  921, 1357,
     1358, 1359, 1360, 1361,-32766,-32766,-32766,-32766,  214,  511,
     1215, 1216, 1230, 1243, 1233, 1234, 1235, 1231, 1255, 1211,
      636,   18,  153,  658,  139, 1220, 1221, 1222, 1236, 1253,
     1212, 1213, 1249, 1223, 1224, 1225, 1247, 1226, 1254, 1250,
     1251, 1227, 1228, 1229, 1248, 1219, 1244, 1245, 1246, 1252,
     1238, 1239, 1257, 1237, 1232, 1240, 1241, 1242, 1263, 1264,
     1217, 1218, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
      172, 1258, 1259, 1260, 1261, 1262,   -6,  564, 1296,  956,
      154,  155,  296,  297,  298,  299,  665,  434,  435,  300,
      301,  302,  303,  304,  305,  306,  307,  308,  309,  310,
      311,  312,  436,   14,  848, 1131, 1132,  371,  264,   18,
      153,  650,  139,-32766,-32766,-32766,-32766,-32766,-32766,  156,
      157,  158,  152,  661,  292,  293,  294,  295,  513,  159,
      160,  161,  351,  524,  469, -170, -164,  612,  941,  -51,
      -51,  458,  -51,  -51,  515,  516,  461,  144,   -1,  564,
      417,    6,  154,  155,  638,  331,  320,  872,  866,  657,
    -32766,   20,  598,  536,  514,  552,  599,  517,  478,  479,
      162,-32766,-32766,  600,  163,  601,  141,  398,  145,  756,
      757,  758,  759,  765,  760,  761,  762,  763,  764,  631,
      546,  156,  157,  158, -170, -164,  293,  294,  295,  629,
      513,  159,  160,  161,  351,  726,  626,  957,  473,    9,
      627,  -51,  -51,  458,  -51,  -51,  515,  516,  460,  144,
      649,  564,  824,  313,  154,  155, 1206, 1207, 1208, 1209,
     1210,  827,  662,   20,  598,  315,  862,  552,  599,  517,
      478,  479,  162,  911, 1305,  600,  163,  601,  638,  687,
      145,  756,  757,  758,  759,  765,  760,  761,  762,  763,
      764,  631,  546,  156,  157,  158,  750,  316,-32766,-32766,
    -32766,  514,  513,  159,  160,  161,  351,  726,  399,  957,
      473,    9,  267,  -51,  -51,  458,  -51,  -51,  515,  516,
      461,  144, 1184,  564,  842,  452,  154,  155,  955,  666,
      309,  310,  311,  312,  436,   20,  598, 1131, 1132,  552,
      599,  517,  478,  479,  162,  471,  512,  600,  163,  601,
      920,  514,  145,  756,  757,  758,  759,  765,  760,  761,
      762,  763,  764,  631,  546,  156,  157,  158,  452,  525,
      455,  335,  464,  875,  513,  159,  160,  161,  351,  726,
      530,  957,  473,    9,   -7,  -51,  -51,  458,  -51,  -51,
      515,  516,  461,  144,  960,  564,  373,  325,  154,  155,
      453, 1206, 1207, 1208, 1209, 1210, 1211,   20,  598,  456,
      623,  552,  599,  517,  478,  479,  162, 1212, 1213,  600,
      163,  601,    1,  143,  145,  756,  757,  758,  759,  765,
      760,  761,  762,  763,  764,  631,  546,  156,  157,  158,
      332,  522,  869,  401,  294,  295,  513,  159,  160,  161,
      351,  726,  466,  957,  473,    9,   -8,  -51,  -51,  458,
      -51,  -51,  515,  516,  461,  144,  238,  239,  240,  431,
      432,  241,  242,  243,  244,  245,  246,  472, 1211,   20,
      598,  324, 1186,  552,  599,  517,  478,  479,  162, 1212,
     1213,  600,  163,  601,-32766,-32766,  145,  756,  757,  758,
      759,  765,  760,  761,  762,  763,  764,  631,  546,  756,
      757,  758,  759,  765,  760,  761,  762,  763,  764,  832,
      459,  406,  742,  726,  465,  957,  473,    9,  175,  176,
      177,  178,  179,  180,  181,  182,  183,  184,  185,  186,
      187,  188,  189,  368,  190,  191,  147,  688,  192,  193,
      194,  195,  196,  197,  198,  199,  200,  428,  429,  201,
      202,  203,  204,  205,  206,  207,  208,  209,  210,  211,
      212,  213,  430,  533,  575,  994,  995,  154,  155,   15,
      148,  275,  276,  277,  278,  279,  280,  281,  282,  283,
      284,  285,  286,  287,  288,  289,  372,  290,  291,  152,
      454,  292,  293,  294,  295,   16,  150,  800,  514,  333,
      790,  830,  407,  405,   17,  151,  156,  157,  158,    5,
      528,    2,-32766,-32766,  328,  513,  159,  160,  161,  351,
      514,  468,  649,  521,  477,  452,  -51,  -51,  338,  520,
      450,-32766,  477,  337,  553,  611,  575,  317,  677,  154,
      155,  514,  526,  527,  822,  269,  416,  326,   20,  598,
      534,  535,  552,  599,  517,  478,  479,  162,  514,  330,
      600,  163,  601, -247, -247,  145,  756,  757,  758,  759,
      765,  760,  761,  762,  763,  764,  631,  546,  156,  157,
      158,  336, 1206, 1207, 1208, 1209, 1210,  513,  159,  160,
      161,  351,  271, -103,  957,  475,    9, -247,  -51,  -51,
      453, -103,  319, 1206, 1207, 1208, 1209, 1210,  541,  265,
      951,  154,  155,  270,   11,  334,  322,-32766,  321,  318,
       20,  598,  254,  268,  552,  599,  517,  478,  479,  162,
      952,  295,  600,  163,  601,  317,  677,  145,  756,  757,
      758,  759,  765,  760,  761,  762,  763,  764,  631,  546,
      156,  157,  158,  529,  532,  467,  470,  477,  457,  513,
      159,  160,  161,  351,-32766,  172,  957,  475,    9,  531,
      -51,  -51,  267,   28,   19,  526,  527, 1083, 1200, 1015,
      575,  173, 1286,  154,  155, 1179, 1152, 1084, 1180,  783,
     1153, 1299,   20,  598, 1298, 1016,  552,  599,  517,  478,
      479,  162, 1297,   29,  600,  163,  601,  146,  274,  145,
      756,  757,  758,  759,  765,  760,  761,  762,  763,  764,
      631,  546,  156,  157,  158,  502, -104,  462,  369,-32767,
       61,  513,  159,  160,  161,  351,  698,   27,  957,  475,
        9,  953,  -51,  -51,  738,   23,  741,   26,  255,  861,
     1185, 1183,  575,  630, 1182,  154,  155,  628,   30,  323,
      486,  519,  514,  653,   20,  598,  451,  617,  552,  599,
      517,  478,  479,  162,  610,  714,  600,  163,  601,   25,
       12,  145,  756,  757,  758,  759,  765,  760,  761,  762,
      763,  764,  631,  546,  156,  157,  158,  732,  784,    0,
        0,  734,  725,  513,  159,  160,  161,  351,    0,    0,
      957,  475,    9,  954,  -51,  -51,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,  841,  842,   20,  598,  164,  165,
      552,  599,  517,  478,  479,  162,  917,  909,  600,  163,
      601,  745,  914,  145,  756,  757,  758,  759,  765,  760,
      761,  762,  763,  764,  631,  546,-32766,-32766,-32766,-32766,
      733,-32767,-32767,-32767,-32767,-32767,-32767,  166,  167,  168,
      907,  700,  957,  475,    9,  905,  518,  169,  170,  171,
      352,  855,  138,  818,  136,  820,  514,  474,  959,  958,
      888,  915,  844,  843,  908,  902, 1211, 1287, 1288, 1289,
     1286,  906, 1276, 1277, 1275, 1273, 1274, 1212, 1213,  641,
      743,  823,  154,  155,  247,  248,  249,  250,  251,  252,
      253,  433,  813,  655, 1062, 1063,  256,  257,   16,  150,
      815,  139,  744,  912,  849,  828,    0,    0,  273, 1278,
     1279, 1280, 1281, 1282, 1283, 1284, 1285,  272,  266,    2,
      593,  156,  157,  158,  544,  449,    9,   13,  327,    0,
      513,  159,  160,  161,  351,  258,  259,  260,  913, 1151,
     1178,-32766, 1082, 1014,  523,  261,  262,  263,  353, 1314,
      789,  821,  137,  831,  766,  476,  -51,  901,  730,  829,
      731, 1306, 1307,   20,  598,  690,  683,  552,  599,  517,
      478,  479,  162,    0,    0,  600,  163,  601,    0,    0,
      145,-32767,-32767,-32767,-32767,-32767,-32767,-32767,  245,  246,
        0,  631,  546,    0,    0,  756,  757,  758,  759,  765,
      760,  761,  762,  763,  764,    0,    0,    0,    0,  957,
        0,    9,  240,  431,  432,  241,  242,  243,  244,  245,
      246,    0,    0,  961,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,    0,-32766,-32766,-32766,-32766,-32766,  275,
      276,  277,  278,  279,  280,  281,  282,  283,  284,  285,
      286,  287,  288,  289,  372,  290,  291,  152,    0,  292,
      293,  294,  295,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,    0,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,    0,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,    0,-32766,-32766,-32766,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,-32766,-32766,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,-32766,-32766,    0,    0,    0,    0,    0,    0,    0,
        0,    0,-32766,-32766,-32766,    0,    0,    0,    0,    0,
        0,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,  146,
      256,  257,-32766,    0,    0,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,    0,-32766,-32766,    0,    0,-32766,
    -32766,-32766,-32766,-32766,    0,-32766,    0,  146,    0,    0,
    -32766,  664,    0,    0,    0,    0,-32766,-32766,    0,  258,
      259,  260,    0,    0,    0,    0,    0,    0,  523,  261,
      262,  263,  353,    0,    0,    0,  137,    0,    0,  476,
        0,  524,    0, 1206, 1207, 1208, 1209, 1210,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766, -183,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  860,  514,    0,    0,    0,    0,    0,    0,    0,
    -32766,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, -183,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1206, 1207, 1208, 1209, 1210
  ];

  private static $yycheck = [
        5,    0,    6,    7,    8,    9,   10,   11,   12,   13,
       14,   15,   16,   17,   18,   19,   20,   21,   22,   23,
       24,   34,   26,   27,   28,   29,   30,   31,   32,   33,
       34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
       44,   45,   46,   47,   48,   49,   50,   49,   50,   53,
       54,   53,   54,   57,   58,    1,   60,   72,   63,   64,
       65,   66,   67,   68,   69,   70,   71,   72,   83,   84,
        2,   76,    5,   78,   79,   80,   81,   82,   83,   84,
       85,   86,   87,   88,   89,   90,   91,   92,   93,   94,
       95,   96,   97,   98,   99,  100,    3,  102,  103,  104,
      105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
      115,  116,  117,  118,  119,  120,  121,  122,  131,  124,
      125,  126,  127,  128,   30,   31,   32,   33,  133,    2,
       63,   64,   65,   66,   67,   68,   69,   70,   71,   72,
        1,   57,   58,    1,   60,   78,   79,   80,   81,   82,
       83,   84,   85,   86,   87,   88,   89,   90,   91,   92,
       93,   94,   95,   96,   97,   98,   99,  100,  101,  102,
      103,  104,  105,  106,  107,  108,  109,  110,  111,  112,
      113,  114,  115,  116,  117,  118,  119,  120,  121,  122,
       51,  124,  125,  126,  127,  128,    0,    1,   59,  131,
        4,    5,   30,   31,   32,   33,    1,   35,   36,   37,
       38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
       48,   49,   50,    2,  131,   53,   54,   21,   22,   57,
       58,    1,   60,   43,   44,   45,   46,   47,   48,   43,
       44,   45,   24,    1,   26,   27,   28,   29,   52,   53,
       54,   55,   56,   31,    2,    2,    2,   25,  131,   63,
       64,   65,   66,   67,   68,   69,   70,   71,    0,    1,
       50,  123,    4,    5,    1,   22,   22,   24,   24,  131,
       72,   85,   86,   25,   62,   89,   90,   91,   92,   93,
       94,   83,   84,   97,   98,   99,    2,    2,  102,  103,
      104,  105,  106,  107,  108,  109,  110,  111,  112,  113,
      114,   43,   44,   45,   61,   61,   27,   28,   29,   61,
       52,   53,   54,   55,   56,  129,   52,  131,  132,  133,
       56,   63,   64,   65,   66,   67,   68,   69,   70,   71,
       66,    1,  134,   34,    4,    5,  124,  125,  126,  127,
      128,  131,    1,   85,   86,    2,   61,   89,   90,   91,
       92,   93,   94,  131,  134,   97,   98,   99,    1,    1,
      102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,  113,  114,   43,   44,   45,  134,   34,   43,   44,
       45,   62,   52,   53,   54,   55,   56,  129,   22,  131,
      132,  133,   51,   63,   64,   65,   66,   67,   68,   69,
       70,   71,   61,    1,  130,   58,    4,    5,  134,    1,
       46,   47,   48,   49,   50,   85,   86,   53,   54,   89,
       90,   91,   92,   93,   94,    2,   60,   97,   98,   99,
      131,   62,  102,  103,  104,  105,  106,  107,  108,  109,
      110,  111,  112,  113,  114,   43,   44,   45,   58,   50,
        2,   22,  133,   24,   52,   53,   54,   55,   56,  129,
       51,  131,  132,  133,  134,   63,   64,   65,   66,   67,
       68,   69,   70,   71,  131,    1,   21,   22,    4,    5,
      133,  124,  125,  126,  127,  128,   72,   85,   86,    2,
       81,   89,   90,   91,   92,   93,   94,   83,   84,   97,
       98,   99,  133,    2,  102,  103,  104,  105,  106,  107,
      108,  109,  110,  111,  112,  113,  114,   43,   44,   45,
       22,   50,   24,  133,   28,   29,   52,   53,   54,   55,
       56,  129,  133,  131,  132,  133,  134,   63,   64,   65,
       66,   67,   68,   69,   70,   71,   32,   33,   34,   35,
       36,   37,   38,   39,   40,   41,   42,    2,   72,   85,
       86,    3,   61,   89,   90,   91,   92,   93,   94,   83,
       84,   97,   98,   99,   30,   31,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  103,
      104,  105,  106,  107,  108,  109,  110,  111,  112,  131,
        2,  133,  131,  129,  133,  131,  132,  133,    6,    7,
        8,    9,   10,   11,   12,   13,   14,   15,   16,   17,
       18,   19,   20,   21,   22,   23,   24,    1,   26,   27,
       28,   29,   30,   31,   32,   33,   34,   35,   36,   37,
       38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
       48,   49,   50,   50,    1,   53,   54,    4,    5,   57,
       58,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   20,   21,   22,   23,   24,
        2,   26,   27,   28,   29,   57,   58,    1,   62,   34,
      131,  131,  133,  133,   57,   58,   43,   44,   45,  131,
       31,  133,   57,   58,    2,   52,   53,   54,   55,   56,
       62,    2,   66,   67,   65,   58,   63,   64,    3,   63,
       64,   72,   65,    3,   95,   96,    1,  100,  101,    4,
        5,   62,   83,   84,  131,    3,  133,   25,   85,   86,
       83,   84,   89,   90,   91,   92,   93,   94,   62,   22,
       97,   98,   99,  100,  101,  102,  103,  104,  105,  106,
      107,  108,  109,  110,  111,  112,  113,  114,   43,   44,
       45,   22,  124,  125,  126,  127,  128,   52,   53,   54,
       55,   56,   25,  134,  131,  132,  133,  134,   63,   64,
      133,  134,   25,  124,  125,  126,  127,  128,    1,   25,
       25,    4,    5,   25,   25,   25,   25,   30,   25,   25,
       85,   86,   25,   25,   89,   90,   91,   92,   93,   94,
       25,   29,   97,   98,   99,  100,  101,  102,  103,  104,
      105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
       43,   44,   45,   31,   31,   40,   40,   65,   45,   52,
       53,   54,   55,   56,   72,   51,  131,  132,  133,   50,
       63,   64,   51,   61,   57,   83,   84,   59,   77,   59,
        1,  113,   76,    4,    5,   59,   59,   59,   59,   59,
       59,   59,   85,   86,   59,   59,   89,   90,   91,   92,
       93,   94,   59,   61,   97,   98,   99,   60,   60,  102,
      103,  104,  105,  106,  107,  108,  109,  110,  111,  112,
      113,  114,   43,   44,   45,   60,  134,   60,   60,   60,
       60,   52,   53,   54,   55,   56,   61,   61,  131,  132,
      133,  134,   63,   64,   61,   61,   61,   61,   61,   61,
       61,   61,    1,   61,   61,    4,    5,   61,   61,   61,
       65,   62,   62,   89,   85,   86,   64,   87,   89,   90,
       91,   92,   93,   94,   97,  123,   97,   98,   99,   88,
      123,  102,  103,  104,  105,  106,  107,  108,  109,  110,
      111,  112,  113,  114,   43,   44,   45,  131,  134,   -1,
       -1,  123,  130,   52,   53,   54,   55,   56,   -1,   -1,
      131,  132,  133,  134,   63,   64,    6,    7,    8,    9,
       10,   11,   12,   13,   14,   15,   16,   17,   18,   19,
       20,   21,   22,   23,  123,  130,   85,   86,    4,    5,
       89,   90,   91,   92,   93,   94,  131,  131,   97,   98,
       99,  131,  131,  102,  103,  104,  105,  106,  107,  108,
      109,  110,  111,  112,  113,  114,   30,   31,   32,   33,
      131,   35,   36,   37,   38,   39,   40,   43,   44,   45,
      131,   47,  131,  132,  133,  131,   52,   53,   54,   55,
       56,  131,   58,  131,   60,  131,   62,   63,  131,  131,
      131,  131,  131,  131,  131,  131,   72,   73,   74,   75,
       76,  131,   78,   79,   80,   81,   82,   83,   84,    1,
      131,  131,    4,    5,   43,   44,   45,   46,   47,   48,
       49,   50,  131,    1,   53,   54,    4,    5,   57,   58,
      131,   60,  131,  131,  131,  131,   -1,   -1,  133,  115,
      116,  117,  118,  119,  120,  121,  122,  133,  133,  133,
      133,   43,   44,   45,  133,  133,  133,  133,  133,   -1,
       52,   53,   54,   55,   56,   43,   44,   45,  134,  134,
      134,   63,  134,  134,   52,   53,   54,   55,   56,  134,
      134,  134,   60,  134,  134,   63,   64,  134,  134,  134,
      134,  134,  134,   85,   86,  134,  134,   89,   90,   91,
       92,   93,   94,   -1,   -1,   97,   98,   99,   -1,   -1,
      102,   34,   35,   36,   37,   38,   39,   40,   41,   42,
       -1,  113,  114,   -1,   -1,  103,  104,  105,  106,  107,
      108,  109,  110,  111,  112,   -1,   -1,   -1,   -1,  131,
       -1,  133,   34,   35,   36,   37,   38,   39,   40,   41,
       42,   -1,   -1,  131,    6,    7,    8,    9,   10,   11,
       12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
       22,   23,   24,   -1,   26,   27,   28,   29,   30,    6,
        7,    8,    9,   10,   11,   12,   13,   14,   15,   16,
       17,   18,   19,   20,   21,   22,   23,   24,   -1,   26,
       27,   28,   29,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   20,   21,   22,
       23,   24,   -1,   26,   27,   28,   29,    6,    7,    8,
        9,   10,   11,   12,   13,   14,   15,   16,   17,   18,
       19,   20,   21,   22,   23,   24,   -1,   26,   27,   28,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   20,   21,   22,   23,   24,   -1,
       26,   27,    6,    7,    8,    9,   10,   11,   12,   13,
       14,   15,   16,   17,   18,   19,   20,   21,   22,   23,
       24,   -1,   26,    4,    5,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,    4,    5,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,    4,    5,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   43,   44,   45,   -1,   -1,   -1,   -1,   -1,
       -1,   52,   53,   54,   55,   56,   43,   44,   45,   60,
        4,    5,   63,   -1,   -1,   52,   53,   54,   55,   56,
       43,   44,   45,   60,   -1,   62,   63,   -1,   -1,   52,
       53,   54,   55,   56,   -1,   72,   -1,   60,   -1,   -1,
       63,    1,   -1,   -1,   -1,   -1,   83,   84,   -1,   43,
       44,   45,   -1,   -1,   -1,   -1,   -1,   -1,   52,   53,
       54,   55,   56,   -1,   -1,   -1,   60,   -1,   -1,   63,
       -1,   31,   -1,  124,  125,  126,  127,  128,   30,   31,
       32,   33,  133,   35,   36,   37,   38,   39,   40,   41,
       42,   51,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   61,   62,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
      133,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   81,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,  124,  125,  126,  127,  128
  ];

  private static $yybase = [
      268,  340,  340,  196,  412,  484,  484,  663,  735,  807,
      879,  951,  951,  230,   -5, 1025, 1024, 1015, 1035,   67,
     1118, 1118, 1118, 1118, 1118, 1118, 1118, 1118, 1118, 1118,
     1118,  232,  797,  874,  893,  866,  916,  921,  798,  939,
      794,  820, 1055,  793,  818,  826,  791, 1049, 1048, 1046,
      790,  827,  876,  812,  842,  785, 1045,  960,  875,  962,
      964, 1132,  612,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,  665,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4, 1283, 1283, 1283, 1283, 1283,
     1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283,
     1283, 1283, 1283, 1283, 1283, 1283,  367,  367,  139,  351,
      967,  814,  886,  821,  768,  970,  273,  784,  242,  767,
      205,  418,  722,  368, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1034, 1034, 1456, 1034, 1456, 1456,
     1456, 1456, 1456, 1456, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1456, 1456, 1456, 1456, 1456, 1456,
     1456, 1456, 1456, 1456, 1456, 1456, 1456, 1456, 1456, 1456,
     1456, 1456, 1456, 1456, 1456, 1456, 1456, 1456, 1456, 1456,
     1456, 1456, 1456, 1456, 1456, 1456, 1456, 1456, 1456, 1456,
     1456, 1456, 1456, 1034, 1034, 1456, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1456, 1456, 1456, 1456, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1456, 1034, 1034, 1034, 1034, 1010,
     1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010,  218,  218,
      218, 1399, 1399, 1399, 1376, 1376, 1354, 1354,  289, 1331,
     1331,  506, 1307, 1307,  802, 1258, 1258,  172, 1427, 1490,
     1427, 1427, 1427, 1427,  524,  524,  787,  554, 1218, 1218,
     1187, 1187, 1187, 1187, 1187, 1218, 1218, 1187, 1187, 1187,
     1187, 1187,   94,   94, 1036, 1036, 1036, 1036,  222, 1413,
      679,  667,  357,  357,  400,  659,  659,  659,  792, 1081,
     1081, 1081, 1081, 1498, 1498,  208,  -15,  -15,  345,  345,
      345,  345,  345,  345,  374,  374,  374,  -15,  658,  658,
      658,  658,  658,  658,  658,  658,  658,  190,  190,  190,
      190,  190,  190,  190,  190,   -2,   -2,   -2,   -2,  357,
      357,  357,  357,  357,  357,  357,  357,  696,  329,  357,
      379,  379,  636,  274,  900,  900,  900,  900,  900,  900,
      900,  900,  900,   54,  868,  142,  868,  900,  954,  949,
      822,  823,  656,  254,  253,  613,  424, 1044,  638,  638,
      638,  638,  638,  638,  647,  638,  638,  638,  638,  638,
      638,  647,  424,   84,   84,   84,   84,   84,   84,  647,
       93,  424,  424,  424,  424,  424,  424,  424,  424,  424,
      424,  424,  424,  424,  424,  424,  424,  424,  424,  424,
      424,  424,  424,  424,  424,  424,  424,  424,  424,  481,
      578,  284,  353,  258,  637,  639,  806,  742,  639,  742,
      568,  568,  870,  867, 1013,  647,  647,  647,  647,  730,
      725, 1009, 1001,  647,  872,   68,  570,  148,  666,  971,
      206,  409,  478,  309,  -13,  905, 1026,  972,  830,  864,
      511,  295,  419,  465,  968,  127,  376,  508,  252,  897,
      569,  439,  220,  895,  880,  869,  891,  869,  847, 1033,
      847,  847,  655,  294,  815, 1033,  655,  868,  221,  719,
      847, 1033,  806,  806,  895,  816,  719,  847,  880,  655,
      868,  497,  813,  817,  868,  868,  868,  868, 1033, 1033,
     1033, 1027,    1,  899,  789,  801,  832,  835,  890,  887,
      899,  915,  877,  974,  980,  973, 1031,  852,  865, 1032,
     1068, 1067,  788,  848, 1066,  884,  902,  878,  911,  857,
      899,  836,  889,  777,  888,  828,  829, 1072,  989, 1065,
      899,  433, 1064,  969,  898,  458, 1012,  805,  819, 1063,
      883, 1060,  737,  920, 1071, 1059,  458,  831,  896,  759,
     1011, 1057,  885,  899,  565,  990,  892, 1056,  843, 1014,
        0, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1034,   -5,    0,   67,   67,   67,   67,
        0, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4, 1034,   84,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  172,    0,    0,
        0,    0,    0,    0,    0,    0,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1034,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 1034,    0, 1034,
     1034, 1034, 1034, 1034, 1034,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1034,    0,    0, 1034,    0,    0,    0,
        0,    0,    0,    0, 1034, 1034, 1034, 1034,    0,    0,
        0,    0,    0,    0,    0, 1034,    0,    0,    0,    0,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,  172,
      172,  172, 1034, 1034, 1034,   -4,   -4,   -4,   -4,  172,
       -4,   -4,  172,   -4,   -4,  172,   -4,   -4,    0, 1034,
      496, 1034, 1034, 1034, 1034, 1081, 1081,  172,  172, 1081,
     1081, 1081, 1081, 1081, 1081, 1081, 1081, 1081, 1081, 1081,
     1081, 1081, 1081,  172,  172,  172,  172,  172,  172,  496,
     1034,  496,  496,  496,  496,  496,  496,  496,  496,  496,
        0,    0,    0,    0,  172,  172,  496,  496,  496, 1081,
     1081, 1081, 1081, 1081, 1081,   84,   84,   84,  496,  424,
      424,  424,  424,  424,  424,  424,  424,  424, 1081, 1081,
     1081, 1081, 1081, 1081, 1081, 1081,   84,   84,   84,   84,
      424,  424,  424,  424,  424,  424,  424,  424,  424,  424,
      424,  424,  424,  424,  666,  424,  424,  424,  424,  424,
      424,  424,  424,  424,  424,  424,  424,  424,  424,  424,
      424,  424,  424,  666,    0,    0,  899,    0,  637,   84,
       84,   84,   84,   84,   84,   84,   84,   84,   84,   84,
       84,   84,   84,    0,    0,    0,    0,    0,    0,    0,
       84, 1033,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  899,  915,    0,  899,    0,    0, 1033, 1033,    0,
     1033, 1033, 1033, 1033, 1033,  868,    0,    0,    0,    0,
     1033, 1033, 1033, 1033,    0,  915,    0,    0,    0,    0,
      688,    0,    0,    0,    0,    0,  915,  899,  688,  608,
      608,    0,    0,    0,    0,  712,    0,    0,    0,    0,
      712,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   84,    0,    0,    0,   84,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       84
  ];

  private static $yydefault = [
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,  672,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,  319,  603,32767,32767,32767,32767,  387,32767,
    32767,32767,32767,32767,32767,32767,  456,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,  261,  332,  400,  602,  262,  297,  298,  299,
      300,  301,  302,  303,  304,  305,  306,  307,  308,  309,
      310,  311,  295,  488,  365,  366,  367,  368,  369,  370,
      371,  372,  373,  374,  375,  376,  377,  378,  379,  363,
      603,  263,   71,  490,  156,  610,32767,  489,  166,  264,
       81,  172,  169,  175,  177,  265,  469,  434,  435,  436,
      437,  438,  439,  440,  441,  442,  443,  444,  445,  446,
      447,  448,  432,  266,  158,   76,32767,32767,32767,32767,
    32767,  672,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  284,
      352,  320,  317,  388,  385,  316,  384,  457,  422,  454,
      453,32767,32767,32767,  282,  350,  283,  351,  420,  281,
      349,  421,  275,  343,  419,  276,  344,  413,32767,32767,
    32767,32767,32767,32767,  274,  342,  414,  412,  287,  288,
      289,  279,  280,  278,  277,  355,  356,  357,  347,  348,
      345,  346,  425,  426,  417,  418,  415,  416,  183,32767,
    32767,   51,   52,   52,   52,   51,   51,   51,   51,  285,
      286,  353,  354,  423,  424,   51,   51,   51,  267,  268,
      273,  335,  336,  341,  405,  406,  411,   52,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,  269,  270,  271,
      272,  337,  338,  339,  340,  407,  408,  409,  410,   66,
    32767,32767,32767,32767,32767,32767,  672,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,  672,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
      184,32767,32767,  500,  500,32767,32767,32767,  322,  321,
      323,  325,  326,  324,  329,  390,  389,  391,  393,  394,
      392,  397,32767,  459,  458,  460,  462,  463,  461,  466,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,  511,  512,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,  196,32767,32767,  197,32767,
    32767,32767,32767,32767,32767,  296,  364,   72,  433,32767,
    32767,32767,32767,   77,32767,32767,32767,32767,32767,32767,
       70,   47,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,   75,32767,32767,   38,  167,32767,32767,
    32767,  173,32767,  236,  221,  474,  226,  475,32767,32767,
    32767,32767,  327,  671,   92,32767,  395,32767,  671,  671,
    32767,32767,32767,32767,  237,   90,  671,32767,  222,  464,
    32767,  671,   97,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,  494,  500,32767,32767,32767,32767,32767,
       50,32767,32767,32767,32767,32767,32767,32767,   36,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
      503,32767,32767,  500,32767,32767,32767,32767,32767,32767,
       96,   93,32767,32767,32767,  145,32767,32767,  243,32767,
    32767,32767,   80,32767,32767,32767,  144,32767,32767,  176,
    32767,32767,32767,  102,   98,32767,32767,32767,32767,32767,
      498
  ];

  private static $yygoto = [
       33,   83,  101,  100,  101,   83,   35,   37,  672,   40,
       41,   43,   44,   45,   50,   51,   63,   32,  488,  489,
      490,  491,  492,  493,   36,   31,   64,   38,  495,  496,
      497,  498,  499,  500,   65,   39,   66,   67,   68,   69,
       70,   71,   72,   73,   74,   75,   76,   77,   78,   79,
       80,   81,   82,  339,  354,  356,  359,  362,  365,  374,
      378,  379,  380,  381,  382,  383,  384,  409,  410,  418,
      419,  420,  437,  438,  439,  440,   42,   84,   85,   86,
       87,   88,   89,   90,   91,   92,   93,   94,   95,   96,
       97,   98,   99,  340,  355,  357,  360,  363,  366,  375,
      385,  386,  387,  388,  389,  390,  391,  411,  412,  421,
      422,  423,  441,  442,  443,  444,  341,  595,  950,   46,
      838,  838,  838,  838,  838,  838,  102,  342,   47,  103,
      343,  104,  105,  344,   48,   49,  706,  501,  509,   10,
     1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034,  555,    3,  556,  557,  558,  563,    3,
     1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034,  711,  711, 1310,  736,   52,   53, 1302,   54,   55,
      345,  107,  108,  346,  347,  669,  685,  697,  589,   56,
      109,   57,  110,  111,  112,   58, 1188,  113,  114,   59,
       60, 1171,  634,  634,  634,  634,  634,  634,  634,  634,
      634,  634,  634,  634,  634, 1312, 1312, 1214, 1214, 1214,
     1214, 1214,  116,  864,  503,  504,  505,  506,  507,  508,
      568,  568,  568,  568,  568,  568,  403, 1313, 1313, 1291,
      106,  117,  118,  119,  120,  121,  122,  123,  124,  125,
      126,  127,  128,  129,  130,  131,  132,  348,  358,  361,
      364,  367,  376,  377,  392,  393,  394,  395,  396,  397,
      413,  414,  424,  425,  426,  445,  446,  447,  448,  639,
      674,  133,  616,  588,  656,  792,  796,  660, 1295,  597,
      134,  135,  349,  836,  836,  836,  836,  836,  836, 1292,
      350, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
     1035, 1035, 1035, 1035, 1293,  785,  660,  583,  660,  747,
      747, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
     1035, 1035,  991,  992,  993, 1059, 1060, 1061, 1128, 1129,
     1130,  663,  481,  807,  825,  663,  660,  660,  660,  660,
      660,  660,  660,  660,  660,  811,  577,  578,  686,  811,
      811,  811,  811,  682,  770,  583,  785,  785,  775,  583,
      682,  802,  780,  786,  943,  693,  640,  539,  540,  576,
      543,  692,  640,  640,  640,  670,  640,  640,  670,  670,
      693,  946,  659,  900,  931,  485, 1171,  850, 1171, 1171,
     1171, 1171, 1171, 1171,  837,  837,  837,  837,  837,  837,
      852,  940,  925,    0, 1171, 1171, 1171, 1171, 1171, 1171,
     1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171,
     1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171,
     1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171,
     1171, 1171, 1171,  834,    0, 1171,  834,  729,  735,    0,
        0, 1013,    0, 1171, 1171, 1171, 1171,  840,  840,  840,
      840,  840,  840,    0, 1171,  755,    0,  755,  755,  755,
      642,  594,  910,  895,  926,  929,  893,  890,  891,  892,
      894, 1181, 1181, 1181,  602,  606,  619,    0,    0,    0,
      854,    0,  755,    0,    0, 1150,    0,    0, 1181,    0,
     1181, 1181, 1181, 1181, 1150, 1150, 1150, 1150, 1150, 1150,
     1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
     1150, 1150, 1150, 1150, 1150,    0,  903,  856,    0,  856,
      858,  858,  896,  932,  400,   21,    0,   22,  646,  817,
      819,  816,  814,    0,    0,    0,    0,  673,  550,    0,
        0,    0,    0,    0,   24,  835,  835,  835,  835,  835,
      835,  483,    0,  400,    0,    0,  404,    0,    0,    0,
      404,  404,  404,  404,    0, 1308,  667,    0,    0,  545,
      427,  427,  427,  684,    0,  904,    0,    0,  768,    0,
      483,  936,  484,  787,  787,  787,  787,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  935,  933,
      934,    0,    0, 1290,  463,    0,    0,    0,  463,  463,
      463,  463,    0,    0,    0,    0,  510,    0,  537,  537,
      538,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  787,  787,  787,  787,  787,  787,  787,  787,    0,
        0,  787,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  648,  607,  648,  620,    0,
      644,  645,  587,  591,    0,    0,    0,  809,  678,  549,
        0,  809,  809,  809,  809,    0,    0,    0,    0,    0,
        0,    0,  551,    0,  586,    0,  559,  560,  561,  562,
        0,    0,    0,  678,  586, 1032, 1202,  566,  604,  643,
     1100, 1203,  554,  615,  668, 1169,  880,  749,  624,  625,
      882,  881,  879,  945,  883,  695,  624,  625,  696,  592,
      699,    0,    0,    0,    0,    0,    0, 1150, 1150, 1150,
        0,    0,    0,    0,    0,    0,    0, 1150,    0,    0,
     1150,    0,    0, 1150,    0,    0, 1150,    0,    0,    0,
      605,    0,    0,    0,    0, 1150, 1150,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1150, 1150, 1150, 1150, 1150, 1150, 1019,  810,    0,
        0,    0,  810,  810,  810,  810,    0,    0,    0,    0,
        0,    0, 1150, 1150, 1172,    0,    0,    0,    0,    0,
        0,    0,    0, 1150, 1150, 1150,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  676,  679,    0,    0,
        0, 1156,    0,    0, 1150, 1150, 1150, 1150,    0,    0,
     1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156,
     1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156,
     1156,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1177,    0,    0,    0,    0,    0,    0,
     1177,    0, 1150, 1150, 1150, 1150, 1150, 1150, 1177,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1177, 1177, 1177, 1177,    0,  808,
        0,    0, 1177,  808,  808,  808,  808,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 1150,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 1172,
        0, 1172, 1172, 1172, 1172, 1172, 1172,    0,    0,    0,
        0,    0,  689,    0,    0,    0,    0, 1172, 1172, 1172,
     1172, 1172, 1172, 1172, 1172, 1172, 1172, 1172, 1172, 1172,
     1172, 1172, 1172, 1172, 1172, 1172, 1172, 1172, 1172, 1172,
     1172, 1172, 1172, 1172, 1172, 1172, 1172, 1172, 1172, 1172,
     1172, 1172, 1172, 1172, 1172, 1172,    0,    0, 1172,    0,
        0,    0,    0,    0,    0,    0, 1172, 1172, 1172, 1172,
        0,    0,    0, 1156, 1156, 1156,    0, 1172,    0,    0,
        0,    0,    0, 1156,    0,    0, 1156,    0,    0, 1156,
        0,    0, 1156,    0,    0,    0,    0,    0,    0,    0,
        0, 1156, 1156,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 1156, 1156, 1156,
     1156, 1156, 1156,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1156, 1156,
        0,    0, 1294,    0,    0,    0,    0,    0,    0, 1156,
     1156, 1156,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1156, 1156, 1156, 1156,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 1031,
        0,    0,    0,    0,    0,    0, 1099,    0, 1156, 1156,
     1156, 1156, 1156, 1156, 1168,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1156,    0,    0,    0,    0, 1029,    0,    0,
        0, 1097,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1166
  ];

  private static $yygcheck = [
       25,   25,   25,   25,   25,   25,   25,   25,    7,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,  103,   25,
       21,   21,   21,   21,   21,   21,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,    4,   42,   42,   64,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,   42,    6,   42,   42,   42,   42,    6,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,    8,    8,  124,    8,   25,   25,  121,   25,   25,
       25,   25,   25,   25,   25,   51,   51,   51,   84,   25,
       25,   25,   25,   25,   25,   25,  113,   25,   25,   25,
       25,  108,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   45,   73,   45,   45,   45,   45,   45,   45,
       34,   34,   34,   34,   34,   34,   35,   88,   88,  114,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,  107,
      107,   45,   31,   31,   34,   52,   52,    5,  117,   45,
       45,   45,   45,   18,   18,   18,   18,   18,   18,  115,
       45,  109,  109,  109,  109,  109,  109,  109,  109,  109,
      109,  109,  109,  109,  116,   41,    5,   41,    5,   33,
       33,  109,  109,  109,  109,  109,  109,  109,  109,  109,
      109,  109,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   23,   74,   58,   63,   23,    5,    5,    5,    5,
        5,    5,    5,    5,    5,   12,   39,   48,   43,   12,
       12,   12,   12,   41,   40,   41,   41,   41,   44,   41,
       41,   56,   46,   41,  100,    5,    5,   30,    5,    5,
        5,   28,    5,    5,    5,    5,    5,    5,    5,    5,
        5,  101,   26,   86,   96,    5,  108,   69,  108,  108,
      108,  108,  108,  108,   19,   19,   19,   19,   19,   19,
       71,   98,   94,   -1,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,   24,   -1,  108,   24,   24,   24,   -1,
       -1,   76,   -1,  108,  108,  108,  108,   22,   22,   22,
       22,   22,   22,   -1,  108,   36,   -1,   36,   36,   36,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,  108,  108,  108,  107,  107,  107,   -1,   -1,   -1,
       61,   -1,   36,   -1,   -1,   76,   -1,   -1,  108,   -1,
      108,  108,  108,  108,   76,   76,   76,   76,   76,   76,
       76,   76,   76,   76,   76,   76,   76,   76,   76,   76,
       76,   76,   76,   76,   76,   -1,   61,   61,   -1,   61,
       61,   61,   61,   61,   35,   78,   -1,   78,   78,   61,
       61,   61,   61,   -1,   -1,   -1,   -1,   78,   60,   -1,
       -1,   -1,   -1,   -1,   78,   17,   17,   17,   17,   17,
       17,   23,   -1,   35,   -1,   -1,   35,   -1,   -1,   -1,
       35,   35,   35,   35,   -1,   32,   32,   -1,   -1,   61,
       35,   35,   35,   32,   -1,   61,   -1,   -1,   32,   -1,
       23,   61,   23,   23,   23,   23,   23,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   61,   61,
       61,   -1,   -1,   88,   34,   -1,   -1,   -1,   34,   34,
       34,   34,   -1,   -1,   -1,   -1,   60,   -1,   34,   34,
       34,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   23,   23,   23,   23,   23,   23,   23,   23,   -1,
       -1,   23,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   23,   23,   23,   23,   -1,
       23,   23,   23,   23,   -1,   -1,   -1,   18,   23,   60,
       -1,   18,   18,   18,   18,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   60,   -1,   23,   -1,   60,   60,   60,   60,
       -1,   -1,   -1,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   -1,   -1,   -1,   -1,   -1,   -1,   76,   76,   76,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   76,   -1,   -1,
       76,   -1,   -1,   76,   -1,   -1,   76,   -1,   -1,   -1,
       88,   -1,   -1,   -1,   -1,   76,   76,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   76,   76,   76,   76,   76,   76,  106,   19,   -1,
       -1,   -1,   19,   19,   19,   19,   -1,   -1,   -1,   -1,
       -1,   -1,   76,   76,  110,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   76,   76,   76,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   88,   88,   -1,   -1,
       -1,  106,   -1,   -1,   76,   76,   76,   76,   -1,   -1,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   76,   -1,   -1,   -1,   -1,   -1,   -1,
       76,   -1,   76,   76,   76,   76,   76,   76,   76,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   76,   76,   76,   76,   -1,   17,
       -1,   -1,   76,   17,   17,   17,   17,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   76,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  110,
       -1,  110,  110,  110,  110,  110,  110,   -1,   -1,   -1,
       -1,   -1,   76,   -1,   -1,   -1,   -1,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,   -1,   -1,  110,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,  110,  110,  110,  110,
       -1,   -1,   -1,  106,  106,  106,   -1,  110,   -1,   -1,
       -1,   -1,   -1,  106,   -1,   -1,  106,   -1,   -1,  106,
       -1,   -1,  106,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,  106,  106,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,  106,  106,  106,
      106,  106,  106,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  106,  106,
       -1,   -1,  110,   -1,   -1,   -1,   -1,   -1,   -1,  106,
      106,  106,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
      106,  106,  106,  106,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  106,
       -1,   -1,   -1,   -1,   -1,   -1,  106,   -1,  106,  106,
      106,  106,  106,  106,  106,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,  106,   -1,   -1,   -1,   -1,  106,   -1,   -1,
       -1,  106,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,  106
  ];

  private static $yygbase = [
        0,    0,    0,    0,  131,  -82,  154,    6,  168,    0,
        0,    0,  -46,    0,    0,    0,    0,  558,  286,  397,
        0,  113,  460,  202,  446, -138,  -83,    0, -131,    0,
      -81, -183,  -23, -149,  223,  175,   75,    0,    0,  -94,
      -90,  -86, -215,  -93,  -87,  -34,  -84,    0,  -95,    0,
        0, -220, -185,    0,    0,    0, -101,    0,  -65,    0,
       82,  -10,    0,  -72,  130,    0,    0,    0,    0, -152,
        0, -141,    0, -175,  -58,    0,  399,  -96,  -53,    0,
        0,    0,    0,    0,   46,    0, -155,    0,  224,    0,
        0,    0,    0,    0, -206,    0, -154,    0, -203,    0,
     -137, -153,    0,  110,    0,    0,  735,  143,  140,  301,
      753,    0,    0,   53, -160, -100,  -85, -111,    0,    0,
        0,   36,    0,    0,  159,    0
  ];

  private static $yygdefault = [
    -32768,  632,  703,  704,  705,  633,    4,  654,  710,  712,
      713,  715,  716,  717,  718,  719,  720,  721,  722,  723,
      724,  727,  728, 1201,  833,   34,  567,  839,  680,  740,
      571,  609, 1300,  746,  482,  402,  754,  681,  621,  569,
      769,  570,  494,  675,  774,  115,  779,  788,  579,  622,
      590,  691,  795,  572,  671,  694,  801,  408,  806,  812,
      547,  887,  415,  826,    7,  573,  574,  847, 1104,  851,
     1173,  853,  581,  863,  480,  582, 1081,  886, 1198,  596,
      889,  542,  140,  142,  584,  548,  899,  613, 1197,  487,
      916,  918,  919,  618,  924,  928,  930,  614,  939,  585,
      942,  947,    8,  949,  565,   62, 1087, 1205, 1102, 1105,
     1103, 1174,  580, 1187, 1192, 1193, 1194, 1196,  635,  637,
      603, 1301,  651,  608, 1309,  652
  ];

  private static $yylhs = [
        0,    1,    1,    2,    2,    3,    4,    7,    7,    6,
        6,    8,    8,    8,    8,    8,    8,    8,    8,    8,
        8,    8,    8,    8,    8,    8,    8,    8,   21,    9,
        9,   20,   20,   11,   27,   16,   26,   26,   28,   28,
       28,   10,   10,   10,   10,   31,   31,   33,   33,   33,
       30,   34,   34,   35,   35,   36,   36,   36,   36,   36,
       36,   36,   36,   36,   36,   12,   37,   37,   39,   39,
       40,   40,   40,   43,   43,   44,   44,   44,   38,   38,
       46,   46,   47,   47,   48,   48,   41,   41,   13,   13,
       49,   49,   53,   53,   54,   54,   52,   50,   50,   50,
       55,   55,   56,   51,   51,   57,   57,   58,   58,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
       58,   59,   59,   59,   62,   62,   63,   63,   14,   14,
       15,   15,   64,   64,   24,   24,   24,   24,   24,   24,
       24,   24,   18,   19,   65,   66,   17,   17,   17,   68,
       68,   70,   70,   67,   67,   69,   69,   71,   71,   60,
       60,   60,   72,   72,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   75,   75,   74,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   83,   82,   82,
       82,   79,   79,   93,   93,   94,   80,   80,   95,   85,
       85,   96,   96,   96,   96,   86,   87,   87,   97,   97,
       98,   99,   99,  100,  100,   89,   89,  101,  102,  102,
      103,  103,   61,   61,   61,   90,   90,   91,   91,   92,
       92,  104,  104,   84,   84,   81,   81,  105,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,  109,  111,   42,   42,   42,   42,
       42,   78,   78,  106,  106,  106,  112,  112,  113,  113,
      113,  108,  108,  108,  108,  108,  108,  108,  118,  115,
        5,    5,    5,   77,   77,  107,  107,  107,  107,  107,
       23,   23,   23,   76,   76,   76,   76,   76,   76,   76,
       76,   76,   76,   76,   76,   76,   76,   76,   76,   76,
       76,   76,   76,   76,   76,   76,   76,   76,   76,   76,
       76,   76,   76,   76,   76,   76,   76,   76,   76,   76,
       76,   76,   76,   76,   76,   76,   76,   76,   76,   76,
       76,   76,   76,   76,   76,   76,   76,   76,   76,   76,
       76,   76,  117,  117,  117,  117,  117,  117,  117,  117,
      117,  117,  117,  117,  117,   88,  114,  114,  114,   29,
       29,   29,   29,   29,   29,  116,  116,  116,  116,  119,
      120,  120,  121,  121,  110,  110,  110,  122,  123,  123,
      124,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,   32,   32
  ];

  private static $yylen = [
        1,    0,    1,    1,    1,    4,    1,    0,    1,    1,
        2,    1,    1,    3,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    2,    1,    1,    1,    3,    5,
        4,    3,    4,    4,    4,    4,    1,    4,    1,    3,
        4,    3,    5,    7,    6,    1,    3,    1,    3,    4,
        1,    0,    1,    1,    2,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    5,    0,    2,    1,    3,
        1,    3,    3,    1,    3,    1,    3,    3,    1,    3,
        1,    3,    3,    3,    1,    3,    1,    1,    8,    6,
        0,    2,    0,    2,    1,    3,    1,    0,    2,    2,
        1,    3,    1,    0,    1,    1,    2,    1,    1,    1,
        1,    1,    4,    4,    4,    4,    4,    6,    4,    6,
        4,    3,    5,    5,    1,    2,    3,    6,    5,    3,
        6,    4,    1,    2,    1,    1,    1,    1,    1,    1,
        3,    2,    4,    3,    3,    2,    5,    5,    4,    4,
        3,    4,    3,    1,    3,    1,    2,    1,    2,    2,
        3,    3,    1,    3,    1,    2,    3,    2,    3,    4,
        2,    3,    4,    3,    4,    5,    3,    5,    3,    2,
        3,    3,    4,    0,    1,    1,    1,    5,    5,    7,
        7,    7,    6,    7,    5,    2,    2,    3,    3,    4,
        5,    3,    2,    3,    2,    3,    2,    3,    3,    3,
        3,    5,    5,    3,    2,    1,    2,    1,    1,    2,
        2,    0,    1,    1,    2,    3,    0,    1,    2,    1,
        2,    2,    5,    7,    5,    2,    0,    1,    1,    2,
        3,    1,    3,    1,    3,    1,    2,    2,    1,    2,
        3,    2,    2,    3,    3,    2,    1,    2,    1,    2,
        1,    1,    3,    1,    3,    1,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    2,    2,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    2,    5,    4,    4,    5,    4,    2,    2,
        4,    2,    2,    2,    2,    2,    2,    2,    3,    2,
        3,    2,    2,    1,    1,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    2,    2,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        2,    5,    4,    4,    5,    4,    2,    2,    4,    2,
        2,    2,    2,    2,    2,    2,    3,    2,    3,    2,
        2,    1,    1,    1,    1,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        2,    2,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    2,
        5,    4,    4,    5,    4,    2,    2,    4,    2,    2,
        2,    2,    2,    2,    2,    3,    2,    3,    2,    2,
        1,    1,    1,    1,    4,    4,    2,    5,    4,    4,
        1,    3,    3,    2,    3,    3,    1,    3,    1,    3,
        2,    1,    1,    1,    1,    1,    1,    1,    0,    3,
        1,    2,    3,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    2,    9,    3,    3,    2,
        1,    3,    2,    1,    2,    3,    3,    2,    1,    3,
        3,    1,    1,    3,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    0,    1
  ];
  
    
  private $yyval;
  private $yyastk;
  private $yysstk;
  private $yysp;
  private $yystate;
  private $yyloc; // current location
  
  private $lex;
  private $invalid = false;
  
  // current directory and filename
  private $cdir, $cfile;
  
  /**
   * returns the current location (last scanned token)
   * 
   * @return Location
   */
  public function loc()
  {
    if (!$this->yyloc)
      return new Location('<unknown>', new Position(0, 0));
    
    return $this->yyloc;
  }
  
  /**
   * consumes semicolons to avoid unnecessary empty-expressions 
   * 
   * @void
   */
  private function eat_semis()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_SEMI) {
      do {
        $this->lex->skip();
        $peek = $this->lex->peek();
      } while ($peek->type === T_SEMI);

    }
  }
  
  /**
   * consumes a T_END token
   * 
   * @void
   */
  private function eat_end()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_END) {
      $this->lex->skip();
    }
  }
  
  /**
   * parse function
   * 
   * @param  Lexer  $lex
   * @return Node
   */
  public function parse(Lexer $lex) 
  {
    $tokid = self::TOKEN_NONE;
    
    // lexer
    $this->lex = $lex;
    
    $file = $this->lex->get_info()['file'];
    $this->cdir = dirname($file);
    $this->cfile = $file;
    
    // stacks
    $this->yysstk = [ 0 ]; 
    $this->yyastk = [];
    
    // current state
    $yystate = 0;
    
    // error flag
    $yyerrflag = 0;

    // stack position
    $this->yysp = 0;
    
    // location stack
    $yylstk = [];
    
    // ignore semicolons at the beginning
    $this->eat_semis();
    
    for (;;) {
      if (self::$yybase[$yystate] == 0)
        $yyn = self::$yydefault[$yystate];
      else {
        if ($tokid === self::TOKEN_NONE) {
          // Fetch the next token id from the lexer
          $token = $this->lex->next();
                    
          // invalid token (regexp-scan failed)
          if ($token->type === T_INVL) {
            $this->error_at($token->loc, ERR_ERROR, 'invalid source/regexp-literal');
            return null;
          }
          
          // map the lexer token id to the internally used token id's
          if ($token->type >= 0 && $token->type < self::TOKEN_MAP_SIZE)
            $tokid = self::$translate[$token->type];
          else {
            $this->error_at($token->loc, ERR_ERROR, 'invalid token %d -> %s', 
              $token->type, $token->value);
            return null;
          }        
          
          $this->yyloc = $token->loc;
          
          // store location
          $yylstk[$this->yysp] = $this->yyloc;
          
        } 

        if ((($yyn = self::$yybase[$yystate] + $tokid) >= 0
          && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid
          || ($yystate < self::YY2TBLSTATE
            && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + $tokid) >= 0
            && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid))
          && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT
        ) {
          /*
           * >= YYNLSTATE: shift and reduce
           * > 0: shift
           * = 0: accept
           * < 0: reduce
           * = -YYUNEXPECTED: error
           */
          if ($yyn > 0) {
            /* shift */
            
            $this->yysp++;
            
            $this->yysstk[$this->yysp] = $yystate = $yyn;
            $this->yyastk[$this->yysp] = $token;
            
            // store location
            $yylstk[$this->yysp] = $this->yyloc;
            
            $tokid = self::TOKEN_NONE;
            
            if ($yyerrflag > 0)
              $yyerrflag--;
            
            if ($yyn < self::YYNLSTATES)
              continue;

            /* $yyn >= YYNLSTATES means shift-and-reduce */
            $yyn -= self::YYNLSTATES;
          } else
            $yyn = -$yyn;
        } else
          $yyn = self::$yydefault[$yystate];
      }
      
      for (;;) {
        /* reduce/error */
        if ($yyn == 0) {
          /* accept */
          if ($this->invalid === true)
            return null;
          return $this->yyval;
        } elseif ($yyn != self::YYUNEXPECTED) {
          /* reduce */
//ifnot -t
          $this->{'yyn' . $yyn}();
//endif          
          /* Goto - shift nonterminal */
          $yylen = self::$yylen[$yyn];
          $yyloc = $yylstk[$this->yysp - $yylen];
          
          $this->yysp -= $yylen;
          
          $yyn = self::$yylhs[$yyn];
          
          if (($yyp = self::$yygbase[$yyn] + $this->yysstk[$this->yysp]) >= 0
            && $yyp < self::YYGLAST && self::$yygcheck[$yyp] == $yyn)
            $yystate = self::$yygoto[$yyp];
          else
            $yystate = self::$yygdefault[$yyn];
          
          $this->yysp++;
          
          $this->yysstk[$this->yysp] = $yystate;
          $this->yyastk[$this->yysp] = $this->yyval;
          
          // set location if a real node was produced by $yyn
          if ($this->yyval instanceof Node)
            $this->yyval->loc = $yyloc;
          
          // store position
          $yylstk[$this->yysp] = $this->yyloc;
          
        } else {
          /* error */
          $this->invalid = true;
                    
          switch ($yyerrflag) {
            case 0:
              // let the lexer know
              $this->lex->sync = true;
              
              $expa = [];
              $expn = 0;
              $base = self::$yybase[$yystate];
              
              for ($i = 0; $i < self::TOKEN_MAP_SIZE; ++$i) {
                $n = $base + $i;
                if ($n >= 0 && $n < self::YYLAST && self::$yycheck[$n] == $i
                  || $yystate < self::YY2TBLSTATE
                  && ($n = self::$yybase[$yystate + self::YYNLSTATES] + $i)
                  && $n < self::YYLAST && ($n < 0 || self::$yycheck[$n] == $i)
                ) {
                  if ($n >= 0 && self::$yyaction[$n] != self::YYUNEXPECTED) {
                    if ($expn === 4) {
                      /* Too many expected tokens */
                      $expa = null;
                      $expn = 0;
                      break;
                    }

                    $expa[] = self::$terminals[$i];
                    $expn++;
                  }
                }
              }

              $exps = 'unexpected ' . self::$terminals[$tokid];
              
              if ($expn > 0) {
                $last = array_pop($expa);
                $exps .= ', expected ';
                
                if ($expn > 1)
                  $exps .= implode(', ', $expa) . ' or ';
                
                $exps .= $last;
                unset ($expa, $last);
              }
              
              $this->error_at($this->yyloc, ERR_ERROR, $exps);              
            case 1:
            case 2:
              $yyerrflag = 3;  
              
              while (!(($yyn = self::$yybase[$yystate] + self::YYINTERRTOK) >= 0
                && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK
                || ($yystate < self::YY2TBLSTATE
                  && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + self::YYINTERRTOK) >= 0
                  && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK))
              ) {  
                if ($this->yysp <= 0) 
                  return null;
                
                $yystate = $this->yysstk[--$this->yysp];              
              }
              
              $yyn = self::$yyaction[$yyn];
              $this->yysstk[++$this->yysp] = $yystate = $yyn;
              break;
            
            case 3:
              if ($tokid === 0) 
                return null;
              
              $tokid = -1;
              break;
          }
        }

        if ($yystate < self::YYNLSTATES)
          break;
        
        /* >= YYNLSTATES means shift-and-reduce */
        $yyn = $yystate - self::YYNLSTATES;
      }
    }
  }


  private function yyn0() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn1() 
  {
     $this->yyval = null; 
  }


  private function yyn2() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn3() 
  {
     
      $this->yyval = new Unit($this->yyastk[$this->yysp-(1-1)]); 
      $this->eat_end(); 
    
  }


  private function yyn4() 
  {
     
      $this->yyval = new Unit($this->yyastk[$this->yysp-(1-1)]); 
      $this->eat_end(); 
    
  }


  private function yyn5() 
  {
     $this->yyval = new Module($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn6() 
  {
     $this->yyval = new Program($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn7() 
  {
     $this->yyval = null; 
  }


  private function yyn8() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn9() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn10() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn11() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn12() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn13() 
  {
     $this->yyval = null; 
  }


  private function yyn14() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn15() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn16() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn17() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn18() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn19() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn20() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn21() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn22() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn23() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn24() 
  {
     $this->yyval = null; 
  }


  private function yyn25() 
  {
     $this->yyval = null; 
  }


  private function yyn26() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn27() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn28() 
  {
     $this->yyval = new LabelDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn29() 
  {
     
      $this->yyval = new Module($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn30() 
  {
     
      $this->yyval = new Module(null, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn31() 
  {
     
      $this->yyval = new RequireDecl(false, $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn32() 
  {
     
      $this->yyval = new RequireDecl(true, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn33() 
  {
     
      $this->yyval = new AttrDecl($this->yyastk[$this->yysp-(4-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn34() 
  {
     $this->yyval = new CompAttr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn35() 
  {
     $this->yyval = new TopexAttr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn36() 
  {
     $this->yyval = new AttrDef($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn37() 
  {
     $this->yyval = new AttrDef($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn38() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn39() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn40() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn41() 
  {
     
      $this->yyval = new UseDecl($this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn42() 
  {
     
      $this->yyval = new UseDecl(new UseAlias($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)])); 
      $this->eat_semis(); 
    
  }


  private function yyn43() 
  {
     
      $this->yyval = new UseDecl(new UseUnpack($this->yyastk[$this->yysp-(7-2)], $this->yyastk[$this->yysp-(7-4)])); 
      $this->eat_semis(); 
    
  }


  private function yyn44() 
  {
    
      $this->yyval = new UseDecl(new UseUnpack(null, $this->yyastk[$this->yysp-(6-3)]));
      $this->eat_semis();
    
  }


  private function yyn45() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn46() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn47() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn48() 
  {
     $this->yyval = new UseAlias($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn49() 
  {
     $this->yyval = new UseUnpack($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn50() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn51() 
  {
     $this->yyval = null; 
  }


  private function yyn52() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn53() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn54() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn55() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn56() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn57() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn58() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn59() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn60() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn61() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn62() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn63() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn64() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn65() 
  {
     
      $this->yyval = new EnumDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn66() 
  {
     $this->yyval = null; 
  }


  private function yyn67() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn68() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn69() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn70() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn71() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn72() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], true); 
  }


  private function yyn73() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn74() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn75() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn76() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn77() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], true); 
  }


  private function yyn78() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn79() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn80() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn81() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn82() 
  {
     $this->yyval = new ArrDestr($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn83() 
  {
     $this->yyval = new ObjDestr($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn84() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn85() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn86() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn87() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn88() 
  {
     
      $this->yyval = new ClassDecl($this->yyastk[$this->yysp-(8-1)], $this->yyastk[$this->yysp-(8-3)], $this->yyastk[$this->yysp-(8-4)], $this->yyastk[$this->yysp-(8-5)], $this->yyastk[$this->yysp-(8-7)]); 
      $this->eat_semis(); 
    
  }


  private function yyn89() 
  {
     
      $this->yyval = new ClassDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-5)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn90() 
  {
     $this->yyval = null; 
  }


  private function yyn91() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn92() 
  {
     $this->yyval = null; 
  }


  private function yyn93() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn94() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn95() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn96() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn97() 
  {
     $this->yyval = null; 
  }


  private function yyn98() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn99() 
  {
     $this->yyval = null; 
  }


  private function yyn100() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn101() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn102() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn103() 
  {
     $this->yyval = []; 
  }


  private function yyn104() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn105() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn106() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn107() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn108() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn109() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn110() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn111() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn112() 
  {
     
      $this->yyval = new CtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn113() 
  {
     $this->yyval = new CtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn114() 
  {
     
      $this->yyval = new DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn115() 
  {
     $this->yyval = new DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn116() 
  {
     $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn117() 
  {
     
      $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn118() 
  {
     $this->yyval = new SetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn119() 
  {
     
      $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn120() 
  {
     $this->yyval = new NestedMods($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn121() 
  {
     
      $this->yyval = new TraitUse($this->yyastk[$this->yysp-(3-2)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn122() 
  {
     
      $this->yyval = new TraitUse($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn123() 
  {
     $this->yyval = new TraitUse($this->yyastk[$this->yysp-(5-2)], null, $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn124() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn125() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn126() 
  {
     
      $this->yyval = new TraitItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn127() 
  {
     
      $this->yyval = new TraitItem($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-6)]); 
      $this->eat_semis(); 
    
  }


  private function yyn128() 
  {
     
      $this->yyval = new TraitDecl($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn129() 
  {
     
      $this->yyval = new TraitDecl($this->yyastk[$this->yysp-(3-2)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn130() 
  {
     
      $this->yyval = new IfaceDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn131() 
  {
     
      $this->yyval = new IfaceDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn132() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn133() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn134() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn135() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn136() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn137() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn138() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn139() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn140() 
  {
     $this->yyval = null; 
  }


  private function yyn141() 
  {
     $this->yyval = null; 
  }


  private function yyn142() 
  {
     
      $this->yyval = new LetDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn143() 
  {
     
      $this->yyval = new VarDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn144() 
  {
     $this->yyval = new LetDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn145() 
  {
     $this->yyval = new VarDecl($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn146() 
  {
     $this->yyval = new FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn147() 
  {
     
      $this->yyval = new FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn148() 
  {
     
      $this->yyval = new FnDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn149() 
  {
     $this->yyval = new FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn150() 
  {
     $this->yyval = new FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn151() 
  {
     $this->yyval = new FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn152() 
  {
     $this->yyval = new FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn153() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn154() 
  {
     
      /* FIXME */
      $this->yyval = new Block([ new ReturnStmt($this->yyastk[$this->yysp-(3-2)]) ]); 
      $this->eat_semis(); 
    
  }


  private function yyn155() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn156() 
  {
     
      /* FIXME */
      $this->yyval = new Block([ new ReturnStmt($this->yyastk[$this->yysp-(2-2)]) ]); 
    
  }


  private function yyn157() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn158() 
  {
     
      /* FIXME */
      $this->yyval = new Block([ new ReturnStmt($this->yyastk[$this->yysp-(2-2)]) ]); 
    
  }


  private function yyn159() 
  {
     $this->yyval = null; 
  }


  private function yyn160() 
  {
     $this->yyval = null; 
  }


  private function yyn161() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn162() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn163() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn164() 
  {
     $this->yyval = new Param(false, null, null, $this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn165() 
  {
     $this->yyval = new Param(false, null, null, $this->yyastk[$this->yysp-(2-1)], null, true); 
  }


  private function yyn166() 
  {
     $this->yyval = new Param(false, null, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn167() 
  {
     $this->yyval = new Param(false, null, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn168() 
  {
     $this->yyval = new Param(false, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn169() 
  {
     $this->yyval = new Param(false, null, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn170() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(2-1)], null, $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn171() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(3-1)], null, $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn172() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn173() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn174() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null, true); 
  }


  private function yyn175() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], false); 
  }


  private function yyn176() 
  {
     $this->yyval = new ThisParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn177() 
  {
     $this->yyval = new ThisParam($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn178() 
  {
     $this->yyval = new RestParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn179() 
  {
     $this->yyval = new Param(true, null, null, $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn180() 
  {
     $this->yyval = new Param(true, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn181() 
  {
     $this->yyval = new Param(true, $this->yyastk[$this->yysp-(3-1)], null, $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn182() 
  {
     $this->yyval = new Param(true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], null, false); 
  }


  private function yyn183() 
  {
     $this->yyval = null; 
  }


  private function yyn184() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn185() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn186() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn187() 
  {
     $this->yyval = new DoStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn188() 
  {
     $this->yyval = new IfStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn189() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn190() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn191() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn192() 
  {
     $this->yyval = new ForStmt($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], null, $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn193() 
  {
     $this->yyval = new ForStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn194() 
  {
     $this->yyval = null; 
  }


  private function yyn195() 
  {
     $this->yyval = new ForStmt(null, null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn196() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(2-2)], null, null); 
  }


  private function yyn197() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn198() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(3-2)], null, $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn199() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn200() 
  {
     $this->yyval = new PhpStmt($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn201() 
  {
     $this->yyval = new GotoStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn202() 
  {
     $this->yyval = new TestStmt(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn203() 
  {
     $this->yyval = new TestStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn204() 
  {
     $this->yyval = new BreakStmt(null); 
  }


  private function yyn205() 
  {
     $this->yyval = new BreakStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn206() 
  {
     $this->yyval = new ContinueStmt(null); 
  }


  private function yyn207() 
  {
     $this->yyval = new ContinueStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn208() 
  {
     $this->yyval = new ThrowStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn209() 
  {
     $this->yyval = new WhileStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn210() 
  {
     $this->yyval = new AssertStmt($this->yyastk[$this->yysp-(3-2)], null); 
  }


  private function yyn211() 
  {
     $this->yyval = new AssertStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn212() 
  {
     $this->yyval = new SwitchStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn213() 
  {
     $this->yyval = new ReturnStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn214() 
  {
     $this->yyval = new ReturnStmt(null); 
  }


  private function yyn215() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn216() 
  {
     $this->yyval = null; 
  }


  private function yyn217() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn218() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn219() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn220() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn221() 
  {
     $this->yyval = null; 
  }


  private function yyn222() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn223() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn224() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn225() 
  {
     $this->yyval = new ElsifItem($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn226() 
  {
     $this->yyval = null; 
  }


  private function yyn227() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn228() 
  {
     $this->yyval = new ElseItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn229() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn230() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn231() 
  {
     $this->yyval = new CatchItem(null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn232() 
  {
     $this->yyval = new CatchItem($this->yyastk[$this->yysp-(5-3)], null, $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn233() 
  {
     $this->yyval = new CatchItem($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn234() 
  {
     $this->yyval = null; 
  }


  private function yyn235() 
  {
     $this->yyval = new FinallyItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn236() 
  {
     $this->yyval = null; 
  }


  private function yyn237() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn238() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn239() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn240() 
  {
     $this->yyval = new PhpUse($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn241() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn242() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn243() 
  {
     $this->yyval = new PhpUseItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn244() 
  {
     $this->yyval = new PhpUseItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn245() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn246() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn247() 
  {
     $this->yyval = new CaseItem($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn248() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn249() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn250() 
  {
     $this->yyval = new CaseLabel($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn251() 
  {
     $this->yyval = new CaseLabel(null); 
  }


  private function yyn252() 
  {
     $this->yyval = new Block(null); 
  }


  private function yyn253() 
  {
     $this->yyval = new Block($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn254() 
  {
     $this->yyval = null; 
  }


  private function yyn255() 
  {
     
      $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
      $this->eat_semis(); 
    
  }


  private function yyn256() 
  {
     
      $this->yyval = new ExprStmt(null); 
      $this->eat_semis(); 
    
  }


  private function yyn257() 
  {
     $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn258() 
  {
     $this->yyval = new ExprStmt(null); 
  }


  private function yyn259() 
  {
     $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn260() 
  {
     $this->yyval = new ExprStmt(null); 
  }


  private function yyn261() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn262() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn263() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn264() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn265() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn266() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn267() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn268() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn269() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn270() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn271() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn272() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn273() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn274() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn275() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn276() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn277() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn278() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn279() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn280() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn281() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn282() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn283() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn284() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn285() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn286() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn287() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn288() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn289() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn290() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn291() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn292() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn293() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn294() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn295() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn296() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn297() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn298() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn299() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn300() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn301() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn302() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn303() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn304() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn305() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn306() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn307() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn308() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn309() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn310() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn311() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn312() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn313() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn314() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn315() 
  {
     $this->yyval = null; 
  }


  private function yyn316() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn317() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn318() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn319() 
  {
     $this->yyval = new YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn320() 
  {
     $this->yyval = new YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn321() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn322() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn323() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn324() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn325() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn326() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn327() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn328() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn329() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn330() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn331() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn332() 
  {
     $this->yyval = new PrintExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn333() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn334() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn335() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn336() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn337() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn338() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn339() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn340() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn341() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn342() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn343() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn344() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn345() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn346() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn347() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn348() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn349() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn350() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn351() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn352() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn353() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn354() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn355() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn356() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn357() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn358() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn359() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn360() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn361() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn362() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn363() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn364() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn365() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn366() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn367() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn368() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn369() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn370() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn371() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn372() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn373() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn374() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn375() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn376() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn377() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn378() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn379() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn380() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn381() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn382() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn383() 
  {
     $this->yyval = null; 
  }


  private function yyn384() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn385() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn386() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn387() 
  {
     $this->yyval = new YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn388() 
  {
     $this->yyval = new YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn389() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn390() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn391() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn392() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn393() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn394() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn395() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn396() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn397() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn398() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn399() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn400() 
  {
     $this->yyval = new PrintExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn401() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn402() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn403() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn404() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn405() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn406() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn407() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn408() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn409() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn410() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn411() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn412() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn413() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn414() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn415() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn416() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn417() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn418() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn419() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn420() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn421() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn422() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn423() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn424() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn425() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn426() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn427() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn428() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn429() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn430() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn431() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn432() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn433() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn434() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn435() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn436() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn437() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn438() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn439() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn440() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn441() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn442() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn443() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn444() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn445() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn446() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn447() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn448() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn449() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn450() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn451() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn452() 
  {
     $this->yyval = null; 
  }


  private function yyn453() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn454() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn455() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn456() 
  {
     $this->yyval = new YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn457() 
  {
     $this->yyval = new YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn458() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn459() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn460() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn461() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn462() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn463() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn464() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn465() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn466() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn467() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn468() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn469() 
  {
     $this->yyval = new PrintExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn470() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn471() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn472() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn473() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn474() 
  {
     
      $this->yyval = new CastExpr($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-2)]); 
      $this->error_at($this->yyastk[$this->yysp-(4-1)]->loc, ERR_WARN, 'legacy cast, use `expr as type` instead'); 
    
  }


  private function yyn475() 
  {
     
      $this->yyval = new CastExpr($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-2)]); 
      $this->error_at($this->yyastk[$this->yysp-(4-1)]->loc, ERR_WARN, 'legacy cast, use `expr as type` instead'); 
    
  }


  private function yyn476() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn477() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn478() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn479() 
  {
     $this->yyval = null; 
  }


  private function yyn480() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn481() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn482() 
  {
     $this->yyval = null; 
  }


  private function yyn483() 
  {
     $this->yyval = null; 
  }


  private function yyn484() 
  {
     $this->yyval = null; 
  }


  private function yyn485() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn486() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn487() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn488() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn489() 
  {
     $this->yyval = new NamedArg($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn490() 
  {
     $this->yyval = new RestArg($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn491() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn492() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn493() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn494() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn495() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn496() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn497() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn498() 
  {
     $this->lex->scan_regexp($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn499() 
  {
     $this->yyval = new RegexpLit($this->yyastk[$this->yysp-(3-3)]->value); 
  }


  private function yyn500() 
  {
     $this->yyval = new Name($this->yyastk[$this->yysp-(1-1)], false); 
  }


  private function yyn501() 
  {
     $this->yyval = new Name($this->yyastk[$this->yysp-(2-2)], true); 
  }


  private function yyn502() 
  {
     $this->yyastk[$this->yysp-(3-1)]->add($this->yyastk[$this->yysp-(3-3)]); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn503() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn504() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn505() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn506() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn507() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn508() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn509() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn510() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn511() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn512() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn513() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn514() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn515() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn516() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn517() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn518() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn519() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn520() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn521() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn522() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn523() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn524() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn525() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn526() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn527() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn528() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn529() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn530() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn531() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn532() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn533() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn534() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn535() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn536() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn537() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn538() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn539() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn540() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn541() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn542() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn543() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn544() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn545() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn546() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn547() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn548() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn549() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn550() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn551() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn552() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn553() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn554() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn555() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn556() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn557() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn558() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn559() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn560() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn561() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn562() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn563() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn564() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn565() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn566() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn567() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn568() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn569() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn570() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn571() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn572() 
  {
     $this->yyval = new ThisExpr; 
  }


  private function yyn573() 
  {
     $this->yyval = new SuperExpr; 
  }


  private function yyn574() 
  {
     $this->yyval = new NullLit; 
  }


  private function yyn575() 
  {
     $this->yyval = new TrueLit; 
  }


  private function yyn576() 
  {
     $this->yyval = new FalseLit; 
  }


  private function yyn577() 
  {
     $this->yyval = new StrLit($this->cdir, 'c'); 
  }


  private function yyn578() 
  {
     $this->yyval = new StrLit($this->cfile, 'c'); 
  }


  private function yyn579() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->line, 'c'); 
  }


  private function yyn580() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->coln, 'c'); 
  }


  private function yyn581() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn582() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn583() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn584() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn585() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->flag); 
  }


  private function yyn586() 
  {
     $this->yyval = new LNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn587() 
  {
     $this->yyval = new DNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn588() 
  {
     $this->yyval = new SNumLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->suffix); 
  }


  private function yyn589() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn590() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn591() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn592() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn593() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn594() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn595() 
  {
     $this->yyval = new ArrLit(null); 
  }


  private function yyn596() 
  {
     $this->yyval = new ArrGen($this->yyastk[$this->yysp-(9-2)], $this->yyastk[$this->yysp-(9-5)], $this->yyastk[$this->yysp-(9-7)]); 
  }


  private function yyn597() 
  {
     $this->yyval = new ArrLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn598() 
  {
     $this->yyval = null; 
  }


  private function yyn599() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn600() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn601() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn602() 
  {
     $this->yyval = new SpreadExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn603() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn604() 
  {
     $this->yyval = new ObjLit(null); 
  }


  private function yyn605() 
  {
     $this->yyval = new ObjLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn606() 
  {
     $this->yyval = null; 
  }


  private function yyn607() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn608() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn609() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn610() 
  {
     $this->yyval = new ObjPair($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn611() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn612() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn613() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn614() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn615() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn616() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn617() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn618() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn619() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn620() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn621() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn622() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn623() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn624() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn625() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn626() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn627() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn628() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn629() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn630() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn631() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn632() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn633() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn634() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn635() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn636() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn637() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn638() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn639() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn640() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn641() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn642() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn643() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn644() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn645() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn646() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn647() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn648() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn649() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn650() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn651() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn652() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn653() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn654() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn655() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn656() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn657() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn658() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn659() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn660() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn661() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn662() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn663() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn664() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn665() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn666() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn667() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn668() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn669() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn670() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn671() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn672() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }

}

