<?php

/**
 * this parser-skeleton is based on the awesome
 * work of nikic (https://github.com/nikic)
 * with some extensions (error-recovery and location-tracking) 
 */

/**
 * This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *   the grammar file gen/parser.y
 *   the parser skeleton gen/kymacc.php.parser
 *
 * The skeleton for this parser was written by Moriyoshi Koizumi and is based on
 * the work by Masato Bito and is in the PUBLIC DOMAIN.
 */

namespace phs;


const YYERRTOK = 256;
const T_ARR = 257;
const T_YIELD = 258;
const T_APLUS = 259;
const T_AMINUS = 260;
const T_AMUL = 261;
const T_ADIV = 262;
const T_AMOD = 263;
const T_APOW = 264;
const T_ACONCAT = 265;
const T_ABIT_OR = 266;
const T_ABIT_AND = 267;
const T_ABIT_XOR = 268;
const T_ABOOL_OR = 269;
const T_ABOOL_AND = 270;
const T_ABOOL_XOR = 271;
const T_ASHIFT_L = 272;
const T_ASHIFT_R = 273;
const T_AREF = 274;
const T_RANGE = 275;
const T_BOOL_OR = 276;
const T_BOOL_XOR = 277;
const T_BOOL_AND = 278;
const T_EQ = 279;
const T_NEQ = 280;
const T_IN = 281;
const T_NIN = 282;
const T_IS = 283;
const T_NIS = 284;
const T_GTE = 285;
const T_LTE = 286;
const T_SL = 287;
const T_SR = 288;
const T_AS = 289;
const T_REST = 290;
const T_DEL = 291;
const T_INC = 292;
const T_DEC = 293;
const T_POW = 294;
const T_NEW = 295;
const T_DDDOT = 296;
const T_FN = 297;
const T_LET = 298;
const T_USE = 299;
const T_ENUM = 300;
const T_CLASS = 301;
const T_TRAIT = 302;
const T_IFACE = 303;
const T_MODULE = 304;
const T_REQUIRE = 305;
const T_IDENT = 306;
const T_LNUM = 307;
const T_DNUM = 308;
const T_SNUM = 309;
const T_STRING = 310;
const T_REGEXP = 311;
const T_TRUE = 312;
const T_FALSE = 313;
const T_NULL = 314;
const T_THIS = 315;
const T_SUPER = 316;
const T_SELF = 317;
const T_GET = 318;
const T_SET = 319;
const T_DO = 320;
const T_IF = 321;
const T_ELIF = 322;
const T_ELSE = 323;
const T_FOR = 324;
const T_TRY = 325;
const T_GOTO = 326;
const T_BREAK = 327;
const T_CONTINUE = 328;
const T_PRINT = 329;
const T_THROW = 330;
const T_CATCH = 331;
const T_FINALLY = 332;
const T_WHILE = 333;
const T_ASSERT = 334;
const T_SWITCH = 335;
const T_CASE = 336;
const T_DEFAULT = 337;
const T_RETURN = 338;
const T_CONST = 339;
const T_FINAL = 340;
const T_GLOBAL = 341;
const T_STATIC = 342;
const T_EXTERN = 343;
const T_PUBLIC = 344;
const T_PRIVATE = 345;
const T_PROTECTED = 346;
const T_SEALED = 347;
const T_INLINE = 348;
const T_UNSAFE = 349;
const T_NATIVE = 350;
const T_HIDDEN = 351;
const T_REWRITE = 352;
const T_PHP = 353;
const T_TEST = 354;
const T_NL = 355;
const T_SUBST = 356;
const T_TINT = 357;
const T_TBOOL = 358;
const T_TFLOAT = 359;
const T_TSTR = 360;
const T_TTUP = 361;
const T_TDEC = 362;
const T_TOBJ = 363;
const T_TCALLABLE = 364;
const T_CDIR = 365;
const T_CFILE = 366;
const T_CLINE = 367;
const T_CCOLN = 368;
const T_CFN = 369;
const T_CCLASS = 370;
const T_CTRAIT = 371;
const T_CMETHOD = 372;
const T_CMODULE = 373;
const T_INVL = 374;
const T_END = 375;

require_once 'ast.php';
require_once 'lexer.php';

use phs\ast;
use phs\ast\Node;

class Parser
{
  const TOKEN_NONE    = -1;
  const TOKEN_INVALID = 144;

  const TOKEN_MAP_SIZE = 376;

  const YYLAST       = 1900;
  const YY2TBLSTATE  = 627;
  const YYGLAST      = 1029;
  const YYNLSTATES   = 726;
  const YYINTERRTOK  = 1;
  const YYUNEXPECTED = 32767;
  const YYDEFAULT    = -32766;
  
  // @var Session
  private $sess;

  /* @var array Map of token ids to their respective names */
  private static $terminals = [
    "EOF",
    "error",
    "','",
    "T_ARR",
    "T_YIELD",
    "T_APLUS",
    "T_AMINUS",
    "T_AMUL",
    "T_ADIV",
    "T_AMOD",
    "T_APOW",
    "T_ACONCAT",
    "T_ABIT_OR",
    "T_ABIT_AND",
    "T_ABIT_XOR",
    "T_ABOOL_OR",
    "T_ABOOL_AND",
    "T_ABOOL_XOR",
    "T_ASHIFT_L",
    "T_ASHIFT_R",
    "T_AREF",
    "'='",
    "T_RANGE",
    "'?'",
    "':'",
    "T_BOOL_OR",
    "T_BOOL_XOR",
    "T_BOOL_AND",
    "'|'",
    "'^'",
    "'&'",
    "T_EQ",
    "T_NEQ",
    "T_IN",
    "T_NIN",
    "T_IS",
    "T_NIS",
    "T_GTE",
    "T_LTE",
    "'>'",
    "'<'",
    "T_SL",
    "T_SR",
    "'+'",
    "'-'",
    "'~'",
    "'*'",
    "'/'",
    "'%'",
    "T_AS",
    "T_REST",
    "T_DEL",
    "T_INC",
    "T_DEC",
    "'!'",
    "T_POW",
    "T_NEW",
    "'.'",
    "'['",
    "']'",
    "'('",
    "')'",
    "T_DDDOT",
    "T_FN",
    "T_LET",
    "T_USE",
    "T_ENUM",
    "T_CLASS",
    "T_TRAIT",
    "T_IFACE",
    "T_MODULE",
    "T_REQUIRE",
    "T_IDENT",
    "T_LNUM",
    "T_DNUM",
    "T_SNUM",
    "T_STRING",
    "T_REGEXP",
    "T_TRUE",
    "T_FALSE",
    "T_NULL",
    "T_THIS",
    "T_SUPER",
    "T_SELF",
    "T_GET",
    "T_SET",
    "T_DO",
    "T_IF",
    "T_ELIF",
    "T_ELSE",
    "T_FOR",
    "T_TRY",
    "T_GOTO",
    "T_BREAK",
    "T_CONTINUE",
    "T_PRINT",
    "T_THROW",
    "T_CATCH",
    "T_FINALLY",
    "T_WHILE",
    "T_ASSERT",
    "T_SWITCH",
    "T_CASE",
    "T_DEFAULT",
    "T_RETURN",
    "T_CONST",
    "T_FINAL",
    "T_GLOBAL",
    "T_STATIC",
    "T_EXTERN",
    "T_PUBLIC",
    "T_PRIVATE",
    "T_PROTECTED",
    "T_SEALED",
    "T_INLINE",
    "T_UNSAFE",
    "T_NATIVE",
    "T_HIDDEN",
    "T_REWRITE",
    "T_PHP",
    "T_TEST",
    "T_SUBST",
    "T_TINT",
    "T_TBOOL",
    "T_TFLOAT",
    "T_TSTR",
    "T_TTUP",
    "T_TDEC",
    "T_TOBJ",
    "T_TCALLABLE",
    "T_CDIR",
    "T_CFILE",
    "T_CLINE",
    "T_CCOLN",
    "T_CFN",
    "T_CCLASS",
    "T_CTRAIT",
    "T_CMETHOD",
    "T_CMODULE",
    "T_END",
    "';'",
    "'{'",
    "'}'",
    "'$'"
    , "???"
  ];

  /* @var array Map which translates lexer tokens to internal tokens */
  private static $translate = [
        0,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,   54,  144,  144,  143,   48,   30,  144,
       60,   61,   46,   43,    2,   44,   57,   47,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,   24,  140,
       40,   21,   39,   23,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,   58,  144,   59,   29,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  141,   28,  142,   45,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,    1,    3,    4,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   20,   22,   25,   26,   27,   31,
       32,   33,   34,   35,   36,   37,   38,   41,   42,   49,
       50,   51,   52,   53,   55,   56,   62,   63,   64,   65,
       66,   67,   68,   69,   70,   71,   72,   73,   74,   75,
       76,   77,   78,   79,   80,   81,   82,   83,   84,   85,
       86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
       96,   97,   98,   99,  100,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
      116,  117,  118,  119,  120,  144,  121,  122,  123,  124,
      125,  126,  127,  128,  129,  130,  131,  132,  133,  134,
      135,  136,  137,  138,  144,  139
  ];

  private static $yyaction = [
     1341,  249,  250,  251,  298,  299,  300,  301,  431,  257,
      422,  423,  302,  303,  304,  305,  306,  307,  308,  309,
      310,  311,  312,  313,  424,  173,    0, 1161, 1162, 1346,
      314, 1345,   16,  151,  469,  114,  672,  252,  253,  254,
      420,  531,-32766, 1093, 1094, 1344,  255, 1343,   15,  148,
     -221,  114, 1342,  426,  539,  540,  619,-32766,  316, 1295,
     1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1248,-32766,
    -32766,  295,  296,  297, 1304, 1305, 1306, 1307, 1308, 1309,
     1249, 1250, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
     1318, 1328, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326,
     1327, 1329, 1330, 1338, 1331, 1332, 1333, 1334, 1335, 1336,
     1337,  681,  -95,   -7,  638, 1339, 1340,  153, 1347, 1348,
     1349, 1350, 1351, 1352, 1353,  818, 1354, 1355, 1356, 1357,
     1358, 1359, 1360, 1361, 1362,  435,  325, 1268,-32766,-32766,
    -32766,-32766, 1248,  154,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,  653,  469, 1249, 1250,  155,  156,  157,  686,
      270,-32766,  685,  986,  427,  158,  159,  160,  680,  410,
      636, 1211,  940,  539,  540,  714,  -40,  469,  411,  -40,
      -40,  -40,  -40,  405,  142,  664,  333,  683,  311,  312,
      313,  424,  361,  755, 1161, 1162,  990,  314,  517,   25,
      607,  171,  267,  553,  608,  520,  474,  475,  152,  161,
     1272,  141,  609,  162,  610,  699,  492,  143,  770,  771,
      772,  773,  779,  640,  641,  776,  777,  778,  780,  781,
      782,  -94,  642,  547,   -4,  638, -188, -165,  153,-32766,
      150,  514,  294,  295,  296,  297,  439,  886,   17,-32766,
      700,  888,  745,  987,    9,   -7,  320,  665,  892,  805,
    -32766,-32766,-32766, -171,  154,-32766,-32766,-32766,-32766,  651,
     1213,-32767,-32767,-32767,-32767,-32767,-32767,  155,  156,  157,
       16,  151,  329,  114,  898,  427,  158,  159,  160,  424,
      410,  526, 1161, 1162,-32766,  314, -165,  -40,  469,  411,
      -40,  -40,  -40,  -40,  404,  142,-32766,-32766, 1240, 1241,
     1242, 1243, 1244, 1245, 1246, 1247,  214,-32766,-32766,-32766,
       25,  607, -171,  874,  553,  608,  520,  474,  475,  152,
      161,  655, 1266,  609,  162,  610,  971,  817,  143,  770,
      771,  772,  773,  779,  640,  641,  776,  777,  778,  780,
      781,  782,  638,  642,  547,  153,-32766,-32766,-32766,-32766,
      664,  522,  523,  524,  633,  255,   17,   15,  148,  538,
      532,  296,  297,  745,  987,    9, 1248,  214,  537,  266,
      334,  154,  901,  409,  330,  456,  895,  649, 1249, 1250,
      256, 1227,  516, 1266,  155,  156,  157,  455, 1281,-32766,
    -32766,  720,  427,  158,  159,  160,  632,  410,  139,  723,
      490,  149,-32766,-32766,  -40,  469,  411,  -40,  -40,  -40,
      -40,  405,  142,  785,  317,  692, 1240, 1241, 1242, 1243,
     1244, 1245, 1246, 1247,  555,  618,    2,   25,  607,    5,
        3,  553,  608,  520,  474,  475,  152,  161,    2,  437,
      609,  162,  610,  795,  603,  143,  770,  771,  772,  773,
      779,  640,  641,  776,  777,  778,  780,  781,  782,  638,
      642,  547,  153,-32767,-32767,-32767,-32767,-32767,-32767,-32767,
    -32767,  247,  248,  249,  250,  251,  846,  602,  848,  397,
      745,  987,    9,  762,  813,  512,   13,  436,  154,  529,
      519,  360,  338,  272,  336,  337,  324,  335,  328,  322,
      297,  155,  156,  157,  913,  911,  907,  315,-32766,  427,
      158,  159,  160,  331,  410,  406,  536,  909,  535,  982,
      434,  -40,  469,  411,  -40,  -40,  -40,  -40,  405,  142,
      241,  242,  418,  419,  243,  244,  245,  246,  247,  248,
      249,  250,  251,  232,   25,  607,  271,  318,  553,  608,
      520,  474,  475,  152,  161,  466,  425,  609,  162,  610,
      321,  332,  143,  770,  771,  772,  773,  779,  640,  641,
      776,  777,  778,  780,  781,  782,  638,  642,  547,  153,
      981,  274,  319,  326,  273,   11, -110,   17,  268,  537,
      171,  534,  503,  467,  532,  270,   28,  745,  987,    9,
      760,  314, 1183,  560,   22,  154,   23,   21,  651,  631,
     1207, 1115, 1273, 1274, 1275, 1230,  651,  624,  155,  156,
      157,  669,  678,   30, 1046, 1182,  427,  158,  159,  160,
     1114,  410, 1047, 1206,   18,  509,  356,  407,  -40,  469,
      411,  -40,  -40,  -40,  -40,  405,  142, 1240, 1241, 1242,
     1243, 1244, 1245, 1246, 1247,  606,  347,  144,   24,  528,
      513,   25,  607,  515,   20,  553,  608,  520,  474,  475,
      152,  161,  466,   31,  609,  162,  610, 1228, 1226,  143,
      770,  771,  772,  773,  779,  640,  641,  776,  777,  778,
      780,  781,  782,  638,  642,  547,  153, 1210, 1212,  887,
       33,   32,  715,  788,   17, 1209, 1290,  687,  707,  637,
     1266,   19,  721,  604,  745,  987,    9,  764,  414,  413,
      438,  617,  154,  172,  918,  651,  569,  830,  828,  989,
      944,  934,  758,  819,  935,  155,  156,  157,    0,    0,
        0,  933,    0,  427,  158,  159,  160,  930,  410,  936,
      938,  943,    0,  759,  868,  -40,  469,  411,  -40,  -40,
      -40,  -40,  405,  142, 1240, 1241, 1242, 1243, 1244, 1245,
     1246, 1247,  937,  988,    0,  877,    0,    0,   25,  607,
        0,    0,  553,  608,  520,  474,  475,  152,  161,    0,
        0,  609,  162,  610,  929,    0,  143,  770,  771,  772,
      773,  779,  640,  641,  776,  777,  778,  780,  781,  782,
      832,  642,  547,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,  745,  987,    9,  215,  216,  217,  218,  219,  220,
      221,  222,  223,  224,  225,  226,  227,  228,  229,  430,
      230,  231,  147,  834,  233,  234,  235,  236,  237,  238,
      239,  240,  241,  242,  418,  419,  243,  244,  245,  246,
      247,  248,  249,  250,  251,  252,  253,  254,  420,  951,
      946, 1093, 1094,  749,  255,  941,   15,  148,  867,  114,
      174,  175,  176,  177,  178,  179,  180,  181,  182,  183,
      184,  185,  186,  187,  188,  429,  189,  190,  145,  258,
      191,  192,  193,  194,  195,  196,  197,  198,  199,  200,
      415,  416,  201,  202,  203,  204,  205,  206,  207,  208,
      209,  210,  211,  212,  417,  259,  638, 1025, 1026,  153,
      213,  869,   14,  146,    6,  748,  750,  875,  260,  261,
      262,    4,  673,  399,  327,  258,  432,  263,  264,  265,
      275,  421,  269,    3,    9,  154,  510,  545,  472,  600,
      701,  276,    0,  985,  942,  814, 1181, 1205,  155,  156,
      157,  259, 1113, 1045, 1267,  835,  427,  158,  159,  160,
      794,  410,  847,  845,  260,  261,  262,  789,  -40,  469,
      765,  761,  432,  263,  264,  265,  763,  421, 1282, 1283,
        0,    0,    0,    0,  472,  470,    0,    0,    0,    0,
        0,   25,  607,    0,    0,  553,  608,  520,  474,  475,
      152,  161,    0,    0,  609,  162,  610, -252, -252,  143,
      770,  771,  772,  773,  779,  774,  775,  776,  777,  778,
      780,  781,  782,  163,  642,  547,  770,  771,  772,  773,
      779,  774,  775,  776,  777,  778,  780,  781,  782,    0,
        0,    0,    0,    0,    0,  987,    9, -252,    0,  164,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  991,  165,  166,  167,    0,  725,    0,    0,    0,
      428,  168,  169,  170,    0,  412,    0,  113,    0,  116,
        0,   17,  471,    0,    0,    0,    0,    0,    0,    0,
        0, 1248, 1269, 1270, 1271, 1266,    0, 1255, 1256, 1254,
     1251, 1252,  639, 1249, 1250,  277,  278,  279,  280,  281,
      282,  283,  284,  285,  286,  287,  288,  289,  290,  291,
      433,  292,  293,  150,  323,  294,  295,  296,  297,  638,
        0,    0,  153,    0,    0,    0,    0,    0,    0,    0,
        0, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1257,
     1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,  154,    0,
       12,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  155,  156,  157,    0,    0,    0,    0,    0,  427,
      158,  159,  160,    0,  410,    0,    0,    0,    0,    0,
        0,  -40,  469,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,    0,-32766,   25,  607,    0,    0,  553,  608,
      520,  474,  475,  152,  161,    0,    0,  609,  162,  610,
      317,  692,  143,  770,  771,  772,  773,  779,  774,  775,
      776,  777,  778,  780,  781,  782,  567,  642,  547,  153,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  987,    9,
        0,    0,    0,    0,    0,  154,    0,    0,    0, 1248,
        0,    0,    0,    0,    0,    0,    0,    0,  155,  156,
      157, 1249, 1250,    0,    0,    0,  427,  158,  159,  160,
        0,  410,    0,    0,    0,    0,    0,    0,  -40,  469,
        0,    0,  770,  771,  772,  773,  779,  774,  775,  776,
      777,  778,  780,  781,  782,    0,    0,    0,    0,    0,
        0,   25,  607,    0,    0,  553,  608,  520,  474,  475,
      152,  161,  492,    0,  609,  162,  610,    0,    0,  143,
      770,  771,  772,  773,  779,  774,  775,  776,  777,  778,
      780,  781,  782,  638,  642,  547,  153,    0,    0,    0,
        0,    0,    0,    0,   17,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  987,    9,  983,    0,    0,
        0,    0,  154,    0,    0,  651,    0,  533,    0,    0,
        0,    0,    0,    0,    0,  155,  156,  157,    0,    0,
        0,    0,    0,  427,  158,  159,  160,    0,  410,    0,
        0,    0,    0,    0,    0,  -40,  469,    0,    0,   17,
        0,    0,    0,    0, 1240, 1241, 1242, 1243, 1244, 1245,
     1246, 1247,    0,    0,    0,    0,    0,    0,   25,  607,
      651,    0,  553,  608,  520,  474,  475,  152,  161,    0,
        0,  609,  162,  610,    0,    0,  143,  770,  771,  772,
      773,  779,  774,  775,  776,  777,  778,  780,  781,  782,
      638,  642,  547,  153,    0,    0,    0,    0,    0, 1240,
     1241, 1242, 1243, 1244, 1245, 1246, 1247,    0,    0,    0,
        0,    0,  987,    9,  984,    0,    0,    0,    0,  154,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  155,  156,  157,    0,    0,    0,    0,    0,
      427,  158,  159,  160,    0,  410,    0,    0,    0,    0,
        0,    0,  -40,  469,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   25,  607,    0,    0,  553,
      608,  520,  474,  475,  152,  161,    0,    0,  609,  162,
      610,    0,    0,  143,  770,  771,  772,  773,  779,  774,
      775,  776,  777,  778,  780,  781,  782,  638,  642,  547,
      153,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  987,
        9,    0,    0,    0,    0,    0,  154,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  155,
      156,  157,    0,    0,    0,    0,    0,  427,  158,  159,
      160,    0,  410,    0,    0,    0,    0,    0,    0,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,
    -32766,-32766,   25,  607,    0,    0,  553,  608,  520,  474,
      475,  152,  161,    0,    0,  609,  162,  610,    0,    0,
      143,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  642,  547,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  987,    9,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,    0,-32766,-32766,-32766,-32766,-32766,  277,
      278,  279,  280,  281,  282,  283,  284,  285,  286,  287,
      288,  289,  290,  291,  433,  292,  293,  150,    0,  294,
      295,  296,  297,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,    0,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,    0,-32766,-32766,-32766
  ];

  private static $yycheck = [
        4,   43,   44,   45,   29,   30,   31,   32,   20,   21,
       35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
       45,   46,   47,   48,   49,    2,    0,   52,   53,   33,
       55,   35,   57,   58,   64,   60,    1,   46,   47,   48,
       49,   24,   72,   52,   53,   49,   55,   51,   57,   58,
       33,   60,   56,    2,   84,   85,   24,   72,    2,   63,
       64,   65,   66,   67,   68,   69,   70,   71,   72,   84,
       85,   26,   27,   28,   78,   79,   80,   81,   82,   83,
       84,   85,   86,   87,   88,   89,   90,   91,   92,   93,
       94,   95,   96,   97,   98,   99,  100,  101,  102,  103,
      104,  105,  106,  107,  108,  109,  110,  111,  112,  113,
      114,    1,  142,    0,    1,  119,  120,    4,  122,  123,
      124,  125,  126,  127,  128,  140,  130,  131,  132,  133,
      134,  135,  136,  137,  138,   20,   21,   76,   29,   30,
       31,   32,   72,   30,   35,   36,   37,   38,   39,   40,
       41,   42,    1,   64,   84,   85,   43,   44,   45,    1,
       50,   72,    1,  140,   51,   52,   53,   54,    1,   56,
       51,   61,  140,   84,   85,   56,   63,   64,   65,   66,
       67,   68,   69,   70,   71,   66,    3,    1,   46,   47,
       48,   49,    2,  142,   52,   53,  140,   55,    2,   86,
       87,   50,  141,   90,   91,   92,   93,   94,   95,   96,
       59,    2,   99,  100,  101,    1,   30,  104,  105,  106,
      107,  108,  109,  110,  111,  112,  113,  114,  115,  116,
      117,  142,  119,  120,    0,    1,   50,    2,    4,   62,
       23,    2,   25,   26,   27,   28,   49,   61,   62,   72,
        1,   61,  139,  140,  141,  142,   21,    1,   23,    1,
       83,   84,   85,    2,   30,   29,   30,   31,   32,   83,
       61,   35,   36,   37,   38,   39,   40,   43,   44,   45,
       57,   58,   21,   60,   23,   51,   52,   53,   54,   49,
       56,   49,   52,   53,   72,   55,   61,   63,   64,   65,
       66,   67,   68,   69,   70,   71,   84,   85,  122,  123,
      124,  125,  126,  127,  128,  129,   60,   46,   47,   48,
       86,   87,   61,  140,   90,   91,   92,   93,   94,   95,
       96,    1,   76,   99,  100,  101,  140,  140,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
      116,  117,    1,  119,  120,    4,   29,   30,   31,   32,
       66,   67,   68,   69,    2,   55,   62,   57,   58,   24,
       50,   27,   28,  139,  140,  141,   72,   60,   50,    2,
       21,   30,   23,  141,   21,   90,   23,   83,   84,   85,
        2,   61,    2,   76,   43,   44,   45,   90,  142,   29,
       30,   81,   51,   52,   53,   54,   61,   56,    2,   81,
       57,   58,   57,   58,   63,   64,   65,   66,   67,   68,
       69,   70,   71,   61,  102,  103,  122,  123,  124,  125,
      126,  127,  128,  129,   97,   98,  141,   86,   87,  140,
      141,   90,   91,   92,   93,   94,   95,   96,  141,    2,
       99,  100,  101,  140,  141,  104,  105,  106,  107,  108,
      109,  110,  111,  112,  113,  114,  115,  116,  117,    1,
      119,  120,    4,   33,   34,   35,   36,   37,   38,   39,
       40,   41,   42,   43,   44,   45,  140,  141,  140,  141,
      139,  140,  141,  142,  140,  141,    2,    2,   30,    2,
        2,    2,   21,    3,    3,    3,    3,   21,   21,   21,
       28,   43,   44,   45,   23,   23,   23,   33,   29,   51,
       52,   53,   54,   33,   56,   45,   30,   23,   49,   24,
       24,   63,   64,   65,   66,   67,   68,   69,   70,   71,
       33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
       43,   44,   45,   24,   86,   87,   24,   24,   90,   91,
       92,   93,   94,   95,   96,   30,   24,   99,  100,  101,
       24,   24,  104,  105,  106,  107,  108,  109,  110,  111,
      112,  113,  114,  115,  116,  117,    1,  119,  120,    4,
       24,   24,   24,   24,   24,   24,   61,   62,   24,   50,
       50,   50,   30,   30,   50,   50,   61,  139,  140,  141,
      142,   55,   59,   61,   57,   30,   57,   57,   83,   61,
       59,   59,   59,   59,   59,   77,   83,   88,   43,   44,
       45,   90,  118,   89,   59,   59,   51,   52,   53,   54,
       59,   56,   59,   59,   62,   65,   60,   60,   63,   64,
       65,   66,   67,   68,   69,   70,   71,  122,  123,  124,
      125,  126,  127,  128,  129,   60,   60,   60,   60,   60,
       60,   86,   87,   60,   62,   90,   91,   92,   93,   94,
       95,   96,   30,   61,   99,  100,  101,   61,   61,  104,
      105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
      115,  116,  117,    1,  119,  120,    4,   61,   61,   61,
       61,   61,   61,   73,   62,   61,   61,   61,   61,   61,
       76,   62,   81,   63,  139,  140,  141,  142,   65,   65,
       65,   99,   30,  119,  140,   83,  121,  140,  140,  140,
      140,  140,  140,  140,  140,   43,   44,   45,   -1,   -1,
       -1,  140,   -1,   51,   52,   53,   54,  140,   56,  140,
      140,  140,   -1,  140,  140,   63,   64,   65,   66,   67,
       68,   69,   70,   71,  122,  123,  124,  125,  126,  127,
      128,  129,  140,  140,   -1,  140,   -1,   -1,   86,   87,
       -1,   -1,   90,   91,   92,   93,   94,   95,   96,   -1,
       -1,   99,  100,  101,  142,   -1,  104,  105,  106,  107,
      108,  109,  110,  111,  112,  113,  114,  115,  116,  117,
      140,  119,  120,    5,    6,    7,    8,    9,   10,   11,
       12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
       22,  139,  140,  141,    5,    6,    7,    8,    9,   10,
       11,   12,   13,   14,   15,   16,   17,   18,   19,   20,
       21,   22,   23,  140,   25,   26,   27,   28,   29,   30,
       31,   32,   33,   34,   35,   36,   37,   38,   39,   40,
       41,   42,   43,   44,   45,   46,   47,   48,   49,  140,
      140,   52,   53,  140,   55,  140,   57,   58,  140,   60,
        5,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   20,   21,   22,   23,    4,
       25,   26,   27,   28,   29,   30,   31,   32,   33,   34,
       35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
       45,   46,   47,   48,   49,   30,    1,   52,   53,    4,
       55,  140,   57,   58,  140,  140,  140,  140,   43,   44,
       45,  141,    1,  141,  141,    4,   51,   52,   53,   54,
      141,   56,  141,  141,  141,   30,  141,  141,   63,  141,
      143,  141,   -1,  142,  142,  142,  142,  142,   43,   44,
       45,   30,  142,  142,  142,  142,   51,   52,   53,   54,
      142,   56,  142,  142,   43,   44,   45,  142,   63,   64,
      142,  142,   51,   52,   53,   54,  142,   56,  142,  142,
       -1,   -1,   -1,   -1,   63,   64,   -1,   -1,   -1,   -1,
       -1,   86,   87,   -1,   -1,   90,   91,   92,   93,   94,
       95,   96,   -1,   -1,   99,  100,  101,  102,  103,  104,
      105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
      115,  116,  117,    4,  119,  120,  105,  106,  107,  108,
      109,  110,  111,  112,  113,  114,  115,  116,  117,   -1,
       -1,   -1,   -1,   -1,   -1,  140,  141,  142,   -1,   30,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,  140,   43,   44,   45,   -1,   47,   -1,   -1,   -1,
       51,   52,   53,   54,   -1,   56,   -1,   58,   -1,   60,
       -1,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   72,   73,   74,   75,   76,   -1,   78,   79,   80,
       81,   82,   83,   84,   85,    5,    6,    7,    8,    9,
       10,   11,   12,   13,   14,   15,   16,   17,   18,   19,
       20,   21,   22,   23,   24,   25,   26,   27,   28,    1,
       -1,   -1,    4,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,  122,  123,  124,  125,  126,  127,  128,  129,  130,
      131,  132,  133,  134,  135,  136,  137,  138,   30,   -1,
      141,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   43,   44,   45,   -1,   -1,   -1,   -1,   -1,   51,
       52,   53,   54,   -1,   56,   -1,   -1,   -1,   -1,   -1,
       -1,   63,   64,    5,    6,    7,    8,    9,   10,   11,
       12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
       22,   23,   -1,   25,   86,   87,   -1,   -1,   90,   91,
       92,   93,   94,   95,   96,   -1,   -1,   99,  100,  101,
      102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,  113,  114,  115,  116,  117,    1,  119,  120,    4,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  140,  141,
       -1,   -1,   -1,   -1,   -1,   30,   -1,   -1,   -1,   72,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   43,   44,
       45,   84,   85,   -1,   -1,   -1,   51,   52,   53,   54,
       -1,   56,   -1,   -1,   -1,   -1,   -1,   -1,   63,   64,
       -1,   -1,  105,  106,  107,  108,  109,  110,  111,  112,
      113,  114,  115,  116,  117,   -1,   -1,   -1,   -1,   -1,
       -1,   86,   87,   -1,   -1,   90,   91,   92,   93,   94,
       95,   96,   30,   -1,   99,  100,  101,   -1,   -1,  104,
      105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
      115,  116,  117,    1,  119,  120,    4,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   62,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,  140,  141,  142,   -1,   -1,
       -1,   -1,   30,   -1,   -1,   83,   -1,   30,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   43,   44,   45,   -1,   -1,
       -1,   -1,   -1,   51,   52,   53,   54,   -1,   56,   -1,
       -1,   -1,   -1,   -1,   -1,   63,   64,   -1,   -1,   62,
       -1,   -1,   -1,   -1,  122,  123,  124,  125,  126,  127,
      128,  129,   -1,   -1,   -1,   -1,   -1,   -1,   86,   87,
       83,   -1,   90,   91,   92,   93,   94,   95,   96,   -1,
       -1,   99,  100,  101,   -1,   -1,  104,  105,  106,  107,
      108,  109,  110,  111,  112,  113,  114,  115,  116,  117,
        1,  119,  120,    4,   -1,   -1,   -1,   -1,   -1,  122,
      123,  124,  125,  126,  127,  128,  129,   -1,   -1,   -1,
       -1,   -1,  140,  141,  142,   -1,   -1,   -1,   -1,   30,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   43,   44,   45,   -1,   -1,   -1,   -1,   -1,
       51,   52,   53,   54,   -1,   56,   -1,   -1,   -1,   -1,
       -1,   -1,   63,   64,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   86,   87,   -1,   -1,   90,
       91,   92,   93,   94,   95,   96,   -1,   -1,   99,  100,
      101,   -1,   -1,  104,  105,  106,  107,  108,  109,  110,
      111,  112,  113,  114,  115,  116,  117,    1,  119,  120,
        4,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  140,
      141,   -1,   -1,   -1,   -1,   -1,   30,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   43,
       44,   45,   -1,   -1,   -1,   -1,   -1,   51,   52,   53,
       54,   -1,   56,   -1,   -1,   -1,   -1,   -1,   -1,   63,
        5,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   20,   21,   22,   23,   -1,
       25,   26,   86,   87,   -1,   -1,   90,   91,   92,   93,
       94,   95,   96,   -1,   -1,   99,  100,  101,   -1,   -1,
      104,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,  119,  120,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,  140,  141,    5,    6,
        7,    8,    9,   10,   11,   12,   13,   14,   15,   16,
       17,   18,   19,   20,   21,   22,   23,   -1,   25,   26,
       27,   28,   29,   30,    5,    6,    7,    8,    9,   10,
       11,   12,   13,   14,   15,   16,   17,   18,   19,   20,
       21,   22,   23,   -1,   25,   26,   27,   28,   29,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   20,   21,   22,   23,   -1,   25,
       26,   27,   28,    5,    6,    7,    8,    9,   10,   11,
       12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
       22,   23,   -1,   25,   26,   27,   28,    5,    6,    7,
        8,    9,   10,   11,   12,   13,   14,   15,   16,   17,
       18,   19,   20,   21,   22,   23,   -1,   25,   26,   27
  ];

  private static $yybase = [
      234,  113,  351,  468,  585,  702,  702,  945, 1168, 1285,
     1402, 1519,  256,  317,  831,  829,  823,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,  961, 1636, 1636, 1636, 1636, 1636,
     1636, 1636, 1636, 1636,   32,  529,  541,  602,  620,  621,
      532,  623,  654,  533,  575,  655,  546,  581,  584,  852,
      851,  850,  845,  547,  576,  650,  566,  624,  844,  651,
      645,  680,  723,  895,  839,  839,  839,  839,  839,  839,
      839,  839,  839,  839,  839,  839,  839,  839,  839,  839,
      839,  839,  839,  839,  839,  839,  839,  839,  839,  839,
      839,  839,  839,  839,  839,  839,  839,  839,  839,  839,
      839,  839,  839,  839,  839,  839,  839,  839,  839,  839,
      839,  839,  839,  151,  110, 1140,  330, 1824, 1824, 1824,
     1824, 1824, 1824, 1824, 1824, 1824, 1824, 1824, 1824, 1824,
     1824, 1824, 1824, 1824, 1824, 1824, 1824, 1824,  599,  550,
      622,  555,  614,  600,   35,  574,  167,  567,  161,  158,
      569,  214, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,  915,  915,
      915,  915,  915,  915,  915,  915, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059,  915,  915,  915,
      915,  915,  915,  915,  915,  915,  915,  915,  915,  915,
      915,  915,  915,  915,  915,  915,  915,  915,  915,  915,
      915,  915,  915,  915,  915,  915,  915,  915,  915,  915,
      915,  915,  915,  915,  915, 1059,  915, 1059, 1059, 1059,
     1059, 1059, 1059,  915,  915,  915,  915, 1059, 1059, 1059,
     1059, 1059,  915, 1059, 1059,  915, 1059, 1059, 1059,  818,
      818,  818,  818,  818,  818,  818,  818,  186, 1228, 1228,
      217,  217,  217,  217, 1695, 1695,  535, 1872, 1872,   45,
      652, 1352, 1407, 1848, 1848,  344, 1799, 1799,  482, 1773,
     1773,  -25,  489,  507,  507,  440,  440,  440,  440,  440,
      440,  507,  507,  440,  440,  440,  440,  440,  440,  370,
      327,  327,  236,  236,  236,  236,   89,   89,   89,   89,
      -30,  822, 1247, 1247,  307,  295,  258,  249,  -15,  304,
      543,  304,  543,  304,  304,  543,  543,  543,  543,  543,
      543,  543,  543,  543,  543,  304,  304,  304,  304,  304,
      304,  304,  304,  304,  304,  304,  304,  304,  304,  222,
      -42,  -42,  -42,  -42,  109,  109,   -9,   -9,   -9,   -9,
       -9,   -9,  142,  142,  142,  177,  177,  271,  271,  271,
      271,  271,  271,  240,  240,  240,  320,  328,  294,  610,
      613,  606,  606,  843,  611,  604,  310,  310,  310,  310,
      310,  310,  310,  310,  310,  310,  310,  310,  310,  310,
      840,  310,  554,  572,  310,  556,  556,  556,  556,  556,
      556,  556,  496,  549,  556,  573,  235,  261,  119,   70,
       70,  842,   70,   70,   70,   70,   70,   70,  183,   70,
       70,  353,   70,   70,   70,  353,   70,   70,   70,   70,
      353,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  299,  345,  354,  322,  337,  644,  500,  337,
      500,  503,  503,  608,  615,  587,  817,  501,  502,  597,
      598,   23,  353,  -12,  758,  242,  642,  841,  811,   61,
      353,  656,  814,   17,   56,  832,  346,  353,  209,  190,
      353,  353,   51,  353,  115,  643,  755,  196,  662,  348,
      363,  657,  353,  649,  362,  313,  359,  353,  197,  641,
      580,  539,  665,  665,  514,  544,  837,  607,  833,  607,
      607,  355,  406,  388,  355,  606,  494,  607,  833,  644,
      644,  580,  506,  542,  607,  539,  355,  606,  498,  480,
      665,  833,  833,  837,  606,  606,  606,  833,  750,  582,
      664,  663,  838,   26,  659,  612,  571,  615,  548,  582,
      659,  582,  612,  565,  564,  626,  659,  815,  632,  617,
      601,  619,  836,  660,  835,  877,  615,  876,  570,  609,
      627,  874,  646,  545,  749,  484,  753,  816,  605,  659,
      583,  647,  568,  648,  551,  562,  561,  488,  869,  594,
      390,  390,  505,  479,  820,  487,  493,  490,  868,  553,
      558,  640,  865,  659,  495,  492,  504,  486,  659,  447,
      861,  860,  491,  658,  586,  563,  858,  853,  552,  499,
      560,  557,  603,  559,  481,    0, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,   -4,   -4,
       -4,   -4,   -4,    0,    0,    0,    0,    0,    0,    0,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
      839,  839,  839,  839,  839,  839,  839,  839,  839,  839,
      839,  839,  839,  839,  839,  839,  839,  839,  839,  839,
      839,  839,  839,  839,  839,  839,  839,  839,  839,  223,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 1059,
     1059,  -25, 1059,  -25,  -25,  -25,  -25,  -25,  -25,  -25,
      -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,
      -25,  -25,  -25,  -25, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059,    0, 1059,    0,    0,    0,    0,    0,    0, 1059,
     1059, 1059, 1059,    0,    0,    0,    0,    0, 1059,    0,
        0, 1059,    0,    0,    0,  839,  839,  839,  839,  839,
      839,  839,  839, 1247,  839,  839,  -25,  -25,  -25,  -25,
      839,  839, 1247,  839,  839,  -25, 1247, 1247, 1247,  839,
      839,  -25,  839,  839,  -25,  839,  839,    0,  -25,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,  -25,  -25,  -25,  -25,  -25,
      -25,  -25, 1247, 1247, 1247, 1247, 1247, 1247,    0,    0,
      304,  304,  304,  304, 1247,    0,  304,    0,  304,    0,
        0,  304,  304,  304,  304,  304,  304,  304,  304,  304,
      304,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1247,   -9,   -9,   -9,   -9,
      -25,  -25,    0,    0,    0,    0,    0,    0,  223,  223,
      223,  304,  304,   -9,   -9,   -9,   -9,   -9,   -9,  223,
      223,  223,   70,   70,  660,   70,   70,   70,   70,   70,
       70,   70,  223,  223,  223,  223,  223,  223,  223,  223,
      223,  223,  223,  223,  223,  223,   70,  223,   70,   70,
      223,  223,  223,  223,  223,  223,  223,  223,   70,   70,
      223,   70,    0,    0,  660,    0,    0,  322,    0,    0,
        0,    0,    0,    0,  833,    0,    0,  223,    0,    0,
        0,  223,    0,    0,    0,    0,  223,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  659,  659,
      659,    0,    0,  833,  833,    0,  833,  833,  833,  833,
      833,  833,  606,  833,  833,  833,  833,    0,    0,    0,
      239,    0,  377,  750,  239,    0,    0,  497,  820,    0,
        0,  659,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  377,  615,    0,  615,    0,    0,  497,    0,  377,
        0,    0,    0,    0,    0,  551,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  223,    0,    0,
      223,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  223
  ];

  private static $yydefault = [
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,  566,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,  325,  554,32767,32767,32767,
      393,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,  266,  268,  553,  267,  303,  304,  305,
      306,  307,  308,  309,  310,  311,  312,  313,  314,  315,
      316,  317,  301,  490,  371,  372,  373,  374,  375,  376,
      377,  378,  379,  380,  381,  382,  383,  384,  385,  369,
      554,  269,  126,  492,  157,  561,  491,  167,   67,  173,
      170,  176,  116,32767,32767,  461,32767,  270,  439,  440,
      441,  442,  443,  444,  445,  446,  447,  448,  449,  450,
      451,  452,  453,  437,  271,  159,  131,  145,32767,  566,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,  566,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  289,
      357,  326,  323,  394,  391,  322,  390,32767,  287,  355,
      427,  462,  459,  458,  288,  356,  188,  286,  354,  425,
      188,  188,32767,  280,  348,  426,  281,  349,  424,  279,
      347,  418,  419,  292,  293,  294,  295,  284,  285,  283,
      282,  360,  361,  362,  363,  352,  353,  350,  351,  417,
      430,  431,  422,  423,  420,  421,   40,   40,   40,   40,
       40,   41,   41,32767,32767,32767,32767,32767,   41,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,   40,
      290,  291,  358,  359,  428,  429,  272,  273,  278,  340,
      341,  346,  410,  411,  416,32767,32767,  274,  275,  276,
      342,  343,  344,  412,  413,  414,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,  330,  328,  327,  329,
      332,  333,  331,  398,  396,  395,  397,  400,  401,  399,
    32767,  277,32767,  189,  345,  466,  464,  463,  465,  468,
      469,  467,32767,32767,  415,  189,  505,  505,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  566,
    32767,  336,32767,32767,32767,  404,32767,32767,32767,32767,
      472,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,  199,32767,32767,  200,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,  338,  125,32767,   27,32767,32767,32767,32767,
      406,32767,32767,  505,32767,32767,32767,  302,32767,32767,
      370,  127,32767,  474,  130,32767,32767,32767,32767,32767,
      168,32767,  438,32767,32767,32767,  174,  132,32767,32767,
      241,  226,   83,   83,   57,  231,32767,32767,32767,32767,
    32767,  334,  565,  565,  402,32767,  565,32767,32767,32767,
    32767,  242,   70,   72,32767,  227,  470,32767,  565,   77,
       84,32767,32767,32767,32767,32767,32767,32767,32767,  527,
       48,   49,32767,32767,  496,32767,  505,  498,32767,32767,
      482,  513,  512,32767,32767,32767,   30,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,  563,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  510,
    32767,32767,  505,32767,32767,32767,32767,32767,32767,32767,
      144,  146,32767,  248,32767,   66,  180,32767,32767,32767,
    32767,32767,32767,   76,   73,  184,  182,32767,   82,   78,
    32767,32767,  186,32767,32767,32767,32767,32767,32767,  111,
    32767,32767,32767,32767,  115,  503
  ];

  private static $yygoto = [
       36,   83,  666,  666,  663,  663,  663,  663,  663,  862,
      862,  862,  862,  862,  861,  861,  861,  861,  861,  671,
      688,  698,  731,  732,  670,  735,  100, 1284,   83,   37,
       39,   42,   43,   44,   46,   47,   48,   53,   54,  702,
       35,  476,  477,  478,  479,  480,  481,  482,   38,   34,
       40,  483,  484,  485,  486,  487,  488,  489,   65,   41,
       66,   67,   68,   69,   70,   71,   72,   73,   74,   75,
       76,   77,   78,   79,   80,   81,   82,  339,  348,  354,
      357,  363,  366,  369,  373,  374,  375,  376,  377,  378,
      379,  380,  440,  441,  446,  447,  448,  457,  458,  459,
      491,   45,   84,   85,   86,   87,   88,   89,   90,   91,
       92,   93,   94,   95,   96,   97,   98,   99,  340,  341,
      349,  355,  358,  364,  367,  370,  381,  382,  383,  384,
      385,  386,  387,  388,  442,  443,  449,  450,  451,  460,
      461,  462,  494,  101,  102,  863,  863,  863,  863,  863,
      711,  716,  717,  101,   49,  342,   50,  103,  343,  104,
      105,  344,   51,   52,  646,  646,  646,  646,  646,  646,
      646,  646,  646,  646,  646,  646, 1293, 1293, 1293, 1293,
     1293, 1293, 1293, 1293, 1293, 1293, 1293, 1293,  573, 1044,
     1112, 1180, 1234, 1233, 1235, 1232,  843,  724,  844,  585,
      980,  593,   55,   10,   56,  345,  106,  107,  346,   57,
      797, 1278,  801,  566,   58,  108,  109,  110,   59,  769,
       60,  111, 1286,   61,   62,  112,  864,  864,  864,  864,
      864, 1022, 1023, 1024, 1090, 1091, 1092, 1215, 1158, 1159,
     1160,  493,  839,  889,  658,  601,  939,  923,  956,  959,
      921,  920,  922,  525,  807,  493,  502,  890,  769,  769,
      769,  823,  530,  684,  611,  769,  614,  564,  562,  570,
      577,  580,  581,  583,  592,  626,  597,  684,  682,  826,
      826,  826,  826,  826,  860,  690,  815,  860,  757,  850,
      973, 1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065,
     1065, 1065, 1065,  591,  791,  682,  115,  495,  496,  497,
      498,  499,  500,  501,  976, 1201, 1065, 1065, 1065, 1065,
     1065, 1065, 1065, 1065, 1065,  118,  119,  120,  121,  122,
      123,  124,  125,  126,  127,  128,  129,  130,  131,  132,
      133,  350,  359,  365,  368,  371,  372,  389,  390,  391,
      392,  393,  394,  395,  444,  445,  452,  453,  454,  463,
      464,  465,  504,  657,  134,  676,  677,  855,  928,  961,
      880,  351,  135,  136,  352,  679,  878,  970,  752,  955,
      353,  398,  812,  137,  679,    0,    0,    0,  679,  679,
      679,  787,    0,  508,  508,  508,  508,  508,  825,  825,
      825,  825,  825,  824,  824,  824,  824,  824,   27,  662,
        0,    0,    0,    0,    0,    0,  689,    0,    0, 1050,
        0,    0,    0,   29,    0,    0,    0,    0,    0,    0,
        0,    0,  542,  575,  708,  543,  541,  656,  650,  656,
      650,  656,  656,  679,  679,  679,  679,  679,  679,  650,
      679,  679,  679,  703,  656,  650,  650,  650,  650,  650,
      650,  650,  703,  650,  703,  708,  544,    0,    0,    0,
        0, 1186,    0, 1186, 1186, 1186, 1186, 1186, 1186, 1186,
     1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186,
     1186, 1186, 1186, 1186,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1202,    0,    0,    0,    0,    0,    0,
        0,  506,    0,    0,    0,    0,    0,    0,    0,    0,
      506,    0,    0,    0,  506,  506,  507,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  554,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 1201,
     1201, 1201, 1201, 1201, 1201, 1201, 1201,    0,    0,    0,
        0,    0,    0,    0,    0,  563,  563,  584, 1201, 1201,
     1201, 1201, 1201, 1201, 1201, 1201, 1201, 1201, 1201, 1201,
     1201, 1201, 1201, 1201, 1201, 1201, 1201, 1201, 1201, 1201,
     1201, 1201, 1201, 1201, 1201, 1201, 1201, 1201, 1201, 1201,
     1201, 1201, 1201, 1201, 1201, 1201,    0, 1201,    0,  586,
      588,    0,    0,  403, 1201, 1201, 1201, 1201,    0,    0,
        0,    0,    0, 1201,    0,    0, 1201,    0,    0,    0,
      696,  706,    0,  563,  584,  615,  627,  598,  660,  661,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1204,    0,  696,  590,    0,    0,
        0,    0,    0,    0,    0,    0,  596,  706,    0,  590,
      551,    0,    0,  693,  695,    0,  598,  865,  563,  865,
      584,  693,    0,  695,  659,    0,  622,  576,  623,    0,
      754,  556,  697,  866,    0,  948,  905,  705,  903,  975,
      712,  904,  713,  634,  635,  722, 1186, 1186, 1186, 1186,
        0,    0,    0,    0,    0, 1186,    0,    0,    0,    0,
        0, 1186,    0,    0, 1186,    0,    0, 1186, 1186,    0,
        0,    0,    0,    0,    0,    0,    0, 1202, 1202, 1202,
     1202, 1202, 1202, 1202, 1202, 1186, 1186, 1186, 1186, 1186,
     1186, 1186,    0,    0,  518,    0, 1202, 1202, 1202, 1202,
     1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202, 1202,    0, 1202,    0,    0,    0,    0,
     1186, 1186, 1202, 1202, 1202, 1202,    0,    0, 1186, 1186,
     1186, 1202,    0,  550, 1202,    0,    0,    0,    0, 1186,
     1186, 1186,  652,    0,    0,  552,    0,    0,    0,  876,
        0,  652,  557,  558,  559,  652,  652,  652,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1186, 1186, 1186, 1186, 1186, 1186, 1186,  931,  882,
     1186,  882,  884,  884,  924,  932,  962,    0,  831,  833,
      829,  827,    0,    0,    0,    0,    0, 1063,    0,    0,
        0, 1131,    0,    0,    0,  652, 1199,  652,    0,    0,
      652,  652,  652,  652,  652,  652,  652,  652,  652,  652,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  546,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  966,
      572,  694,    0,    0,    0,    0,  362,    0,    0,    0,
        0,    0,  965,  963,    0,  362,    0,    0,  964,  362,
      362,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 1061,    0,    0,
     1129,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1197,    0,    0,  401,  401,  401,  401,  401,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  408
  ];

  private static $yygcheck = [
       25,   25,   86,   86,   26,   26,   26,   26,   26,   16,
       16,   16,   16,   16,   15,   15,   15,   15,   15,    4,
        4,    4,    4,    4,   34,    8,   25,   34,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   34,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   18,   18,   18,   18,   18,
       39,   39,   39,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   82,
      101,   82,   25,   66,   25,   25,   25,   25,   25,   25,
       40,  119,   40,   82,   25,   25,   25,   25,   25,   28,
       25,   25,  122,   25,   25,   25,   19,   19,   19,   19,
       19,   75,   75,   75,   75,   75,   75,  110,   75,   75,
       75,   59,   55,   56,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   62,   44,   59,   59,   56,   28,   28,
       28,   50,   62,   57,  106,   28,  106,   60,   62,   62,
       62,   62,   62,   62,   62,  106,   62,   57,   23,   11,
       11,   11,   11,   11,   24,   63,   48,   24,   24,   61,
       98,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,   67,   35,   23,   65,   65,   65,   65,
       65,   65,   65,   65,   99,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   20,   65,   20,   20,   64,   84,   94,
       73,   65,   65,   65,   65,    5,   71,   96,   20,   92,
       65,   38,   46,   65,    5,   -1,   -1,   -1,    5,    5,
        5,   32,   -1,   26,   26,   26,   26,   26,   16,   16,
       16,   16,   16,   15,   15,   15,   15,   15,   76,   76,
       -1,   -1,   -1,   -1,   -1,   -1,   76,   -1,   -1,  105,
       -1,   -1,   -1,   76,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,    5,    5,    5,    5,   26,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,   -1,   -1,   -1,
       -1,  105,   -1,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,  108,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   23,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       23,   -1,   -1,   -1,   23,   23,   23,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   86,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  107,
      107,  107,  107,  107,  107,  107,  107,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   23,   23,   23,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,   -1,  107,   -1,   86,
       86,   -1,   -1,   27,  107,  107,  107,  107,   -1,   -1,
       -1,   -1,   -1,  107,   -1,   -1,  107,   -1,   -1,   -1,
       23,   23,   -1,   23,   23,   23,   23,   23,   23,   23,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   23,   -1,   23,   23,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   23,   23,   -1,   23,
       53,   -1,   -1,   23,   23,   -1,   23,   23,   23,   23,
       23,   23,   -1,   23,   23,   -1,   23,   23,   23,   -1,
       23,   23,   23,   23,   -1,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,  105,  105,  105,  105,
       -1,   -1,   -1,   -1,   -1,  105,   -1,   -1,   -1,   -1,
       -1,  105,   -1,   -1,  105,   -1,   -1,  105,  105,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,  108,  108,  108,
      108,  108,  108,  108,  108,  105,  105,  105,  105,  105,
      105,  105,   -1,   -1,   53,   -1,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,   -1,  108,   -1,   -1,   -1,   -1,
      105,  105,  108,  108,  108,  108,   -1,   -1,  105,  105,
      105,  108,   -1,   53,  108,   -1,   -1,   -1,   -1,  105,
      105,  105,    6,   -1,   -1,   53,   -1,   -1,   -1,   52,
       -1,    6,   53,   53,   53,    6,    6,    6,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,  105,  105,  105,  105,  105,  105,  105,   52,   52,
      105,   52,   52,   52,   52,   52,   52,   -1,   52,   52,
       52,   52,   -1,   -1,   -1,   -1,   -1,  105,   -1,   -1,
       -1,  105,   -1,   -1,   -1,    6,  105,    6,   -1,   -1,
        6,    6,    6,    6,    6,    6,    6,    6,    6,    6,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   52,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   52,
        6,    6,   -1,   -1,   -1,   -1,   27,   -1,   -1,   -1,
       -1,   -1,   52,   52,   -1,   27,   -1,   -1,   52,   27,
       27,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,  105,   -1,   -1,
      105,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,  105,   -1,   -1,   27,   27,   27,   27,   27,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   27
  ];

  private static $yygbase = [
        0,    0,    0,    0,   17,   28,  475,    0,   24,    0,
        0, -117,    0,    0,    0,    7,    2,    0,  138,  219,
      -48,    0,    0,  164,  277, -113,   -3,  589, -143,    0,
        0,    0, -242,    0, -589, -215,    0,    0, -222, -247,
     -224,    0,    0,    0, -183,    0, -248,    0, -226,    0,
     -139,    0,  311,  198,    0, -118, -104,  -84,  175, -106,
     -202, -225, -159, -185, -149,   48,  194, -212,    0,    0,
        0, -174,    0, -182,    0, -184, -201,    0,    0,    0,
        0,    0,   61,    0, -181,    0,  -10,    0,    0,    0,
        0,    0, -246,    0, -180,    0, -244,    0, -227, -231,
        0,  192,    0,    0,    0,  356, -146,  291,  479,    0,
       96,    0,    0,    0,    0,    0,    0,    0,    0,   72,
        0,    0,  209,    0,    0
  ];

  private static $yygdefault = [
    -32768,  643,  727,  728,  729,  644,  645,    1,  734,  736,
      737,  738,  739,  740,  741,  742,  743,  744,  746,  747,
      751,  582,  565, 1231,  859,   64,  468,  402,  768,  527,
      784,  594,  786,  628, 1276,  790,  629,  595,  396,  710,
      800,  589,  704,  709,  806,  630,  811,  473,  816,  400,
      822,  718,  917,  548,  719,  838,  840,  599, 1288,  505,
      568,  849,  521,  691,  854,  117,    7,  571,  674,  873,
     1135,  879, 1203,  881,  579,  916,   26,  605,  919,  675,
      138,  140,  613,  549,  927,  620,  647,  511,  945,  949,
      950,  625,  954,  958,  960,  621,  969,  587,  972,  977,
        8,  979,  561,  574,   63, 1118, 1237, 1133, 1134,  578,
     1214, 1219, 1220, 1221, 1223, 1225,  648,  654,  612, 1277,
      667,  616, 1285,  668, 1294
  ];

  private static $yylhs = [
        0,    1,    2,    2,    2,    3,    3,    4,    7,    7,
        8,    8,    8,    8,    8,    8,    8,    8,    8,    8,
        8,    8,   10,   10,   10,   21,   21,   20,   20,   20,
       22,   18,   17,   17,    9,    9,    9,    9,    9,    9,
       26,   26,   27,   27,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   29,   29,   30,
       31,   31,   32,   11,   33,   33,   35,   35,   12,   12,
       36,   36,   41,   41,   42,   42,   40,   37,   37,   37,
       43,   43,   44,   38,   38,   45,   45,   46,   46,   47,
       47,   48,   48,   48,   39,   39,   49,   49,   50,   50,
       50,   50,   50,   50,   50,   50,   50,   50,   50,   50,
       51,   51,   54,   54,   55,   55,   55,   55,   55,   13,
       13,   14,   14,   60,   60,   61,   61,   61,   63,   63,
       64,   64,   64,   66,   66,   24,   24,   24,   24,   67,
       67,   16,   16,   16,   68,   68,   68,   15,   15,   15,
       69,   69,   70,   70,   72,   72,   71,   71,   73,   73,
       53,   53,   53,   74,   74,   56,   56,   56,   56,   56,
       56,   56,   56,   56,   56,   56,   56,   56,   56,   56,
       56,   56,   56,   56,   56,   56,   56,   56,   57,   57,
       59,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   79,   79,   81,   80,   80,   77,   77,   91,   91,
       92,   78,   78,   93,   83,   83,   94,   94,   94,   94,
       84,   85,   85,   95,   95,   96,   97,   97,   98,   98,
       87,   87,   99,  100,  100,  101,  101,   52,   52,   52,
       88,   88,   89,   89,   90,   90,  102,  102,   82,   82,
      103,  103,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   62,   62,
       62,   62,   62,   76,   76,  105,  105,  105,  109,  109,
      110,  110,  110,  107,  107,  107,  107,  107,  107,  107,
      115,  115,  115,  116,  112,    5,    5,    5,    5,    5,
       75,   75,  106,  106,    6,    6,    6,    6,    6,    6,
        6,    6,   23,   23,   23,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
       86,   86,   86,  111,  111,  111,  113,  113,  113,  113,
      117,  118,  118,  119,  119,  108,  108,  108,  120,  121,
      121,  122,  123,  123,  123,   34,   34,   58,   58,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124
  ];

  private static $yylen = [
        1,    1,    1,    1,    0,    4,    5,    1,    1,    2,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    3,    4,    4,    1,    3,    1,    3,    4,
        1,    3,    3,    4,    4,    5,    3,    4,    5,    6,
        0,    1,    1,    2,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    0,    1,    4,
        1,    3,    2,    6,    1,    3,    1,    3,    9,    6,
        0,    2,    0,    2,    1,    3,    1,    0,    2,    2,
        1,    3,    1,    0,    1,    1,    2,    3,    5,    1,
        2,    2,    4,    5,    0,    1,    1,    2,    1,    1,
        1,    6,    6,    4,    4,    4,    6,    4,    6,    4,
        0,    1,    1,    3,    1,    4,    6,    4,    5,    7,
        4,    7,    5,    1,    3,    1,    3,    3,    1,    3,
        1,    3,    3,    1,    2,    1,    1,    1,    1,    1,
        3,    3,    7,    3,    2,    6,    2,    6,    6,    5,
        1,    3,    4,    3,    4,    3,    1,    2,    1,    2,
        2,    3,    3,    1,    3,    1,    2,    3,    2,    3,
        4,    2,    3,    4,    3,    4,    5,    3,    4,    3,
        2,    3,    3,    4,    3,    4,    4,    5,    0,    1,
        1,    1,    5,    5,    7,    6,    7,    5,    2,    2,
        3,    3,    4,    5,    3,    2,    3,    2,    3,    2,
        3,    3,    3,    3,    3,    5,    5,    3,    2,    1,
        2,    1,    3,    1,    1,    2,    0,    1,    1,    2,
        3,    0,    1,    2,    1,    2,    2,    5,    7,    5,
        2,    0,    1,    1,    2,    3,    1,    3,    1,    3,
        1,    2,    2,    1,    2,    3,    2,    2,    3,    3,
        2,    1,    2,    1,    2,    1,    1,    3,    1,    3,
        1,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    2,
        2,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    5,
        4,    4,    5,    4,    2,    2,    4,    2,    2,    2,
        2,    2,    2,    2,    2,    3,    2,    3,    2,    1,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    2,    2,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    5,    4,    4,
        5,    4,    2,    2,    4,    2,    2,    2,    2,    2,
        2,    2,    2,    3,    2,    3,    2,    1,    1,    1,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    2,    2,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    5,    4,    4,    5,    4,
        2,    2,    4,    2,    2,    2,    2,    2,    2,    2,
        2,    3,    2,    3,    2,    1,    1,    1,    3,    5,
        4,    4,    1,    3,    3,    2,    3,    3,    1,    3,
        1,    3,    2,    1,    1,    1,    1,    1,    1,    1,
        4,    2,    3,    0,    3,    1,    3,    3,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    5,    3,    1,    1,    1,    2,    9,    3,    3,
        2,    1,    3,    2,    1,    2,    3,    3,    2,    1,
        3,    3,    1,    1,    3,    0,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1
  ];
  
    
  private static $yytokformat = [
    'T_IDENT' => 'identifier',
    'T_LNUM' => 'integer',
    'T_DNUM' => 'floating-point number',
    'T_SNUM' => 'number with suffix',
    'T_STRING' => 'string',
    'T_REGEXP' => 'regular expression',
    'T_TRUE' => '`true`',
    'T_FALSE' => '`false`',
    'T_NULL' => '`null`'
  ];
    
  private $yyval;
  private $yyastk;
  private $yysstk;
  private $yysp;
  private $yystate;
  private $yyloc; // current location
  
  private $lex;
  private $invalid = false;
  
  // current directory, filename and line
  private $cdir;
  private $cfile;
  
  /**
   * constructor
   *
   * @param Session $sess
   */
  public function __construct(Session $sess)
  {
    $this->sess = $sess;
  }
  
  /**
   * returns the current location (last scanned token)
   * 
   * @return Location
   */
  public function loc()
  {
    if (!$this->yyloc)
      return new Location('<unknown>', new Position(0, 0));
    
    return $this->yyloc;
  }
  
  /**
   * consumes semicolons to avoid unnecessary empty-expressions 
   * 
   * @void
   */
  private function eat_semis()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_SEMI) {
      do {
        $this->lex->skip();
        $peek = $this->lex->peek();
      } while ($peek->type === T_SEMI);

    }
  }
  
  /**
   * consumes a T_END token
   * 
   * @void
   */
  private function eat_end()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_END) {
      $this->lex->skip();
    }
  }
  
  /**
   * reports an error
   *
   * @param  Location $loc
   * @param  string   $tok  error token
   * @param  int   $num  number of expected tokens
   * @param  array   $arr expected tokens
   */
  private function report_error(Location $loc, $tok, $num, $arr) 
  {
    $fmt = 'unexpected %s';
    
    if ($num > 0) {
      // filter out T_IDENT, T_GET and T_SET
      $hid = false;
      $tmp = [];
      
      foreach ($arr as $exp) {
        if ($hid && ($exp === 'T_GET' || $exp === 'T_SET')) {
          --$num;
          continue;
        }
        
        $hid = $exp === 'T_IDENT';
        
        if ($exp === 'T_SUBST')
          $exp = 'string-concatenation';
        
        $tmp[] = $exp;
      }
      
      $arr = $tmp;
      $fmt .= ', expected ';
      
      if ($num > 1) {
        $fmt .= rtrim(str_repeat('%s, ', $num - 1), ', ');
        $fmt .= ' or ';
      }
                      
      $fmt .= '%s';
    }
    
    $var = $arr ?: [];
    array_unshift($var, $tok);
    Logger::vlog_at($loc, \phs\LOG_LEVEL_ERROR, $fmt, $var);       
  }
  
  /**
   * parse function
   * 
   * @param  mixed  $lex
   * @return Node
   */
  public function parse($lex) 
  {
    $tokid = self::TOKEN_NONE;
    
    // lexer
    if (!($lex instanceof Lexer)) {
      assert($lex instanceof Source);
      $lex = new Lexer($lex);  
    }
    
    $this->lex = $lex;
    
    $file = $this->lex->get_file();
    $this->cdir = dirname($file);
    $this->cfile = $file;
    
    
    // location
    $this->yyloc = $this->lex->loc();
    
    // stacks
    $this->yysstk = [ 0 ]; 
    $this->yyastk = [];
    
    // current state
    $yystate = 0;
    
    // error flag
    $yyerrflag = 0;

    // stack position
    $this->yysp = 0;
    
    // location stack
    $yylstk = [];
    
    // ignore semicolons at the beginning
    $this->eat_semis();
    
    for (;;) {
      if (self::$yybase[$yystate] == 0)
        $yyn = self::$yydefault[$yystate];
      else {
        if ($tokid === self::TOKEN_NONE) {
          // Fetch the next token id from the lexer
          $token = $this->lex->next();
                    
          // invalid token (regexp-scan failed)
          if ($token->type === T_INVL) {
            Logger::error_at($token->loc, 'invalid source/regexp-literal');
            return null;
          }
          
          // map the lexer token id to the internally used token id's
          if ($token->type >= 0 && $token->type < self::TOKEN_MAP_SIZE)
            $tokid = self::$translate[$token->type];
          else {
            Logger::error_at($token->loc, 'invalid token %d -> %s', $token->type, $token->value);
            return null;
          }        
          
          $this->yyloc = $token->loc;
          
          // store location
          $yylstk[$this->yysp] = $this->yyloc;
          
        } 

        if ((($yyn = self::$yybase[$yystate] + $tokid) >= 0
          && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid
          || ($yystate < self::YY2TBLSTATE
            && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + $tokid) >= 0
            && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid))
          && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT
        ) {
          /*
           * >= YYNLSTATE: shift and reduce
           * > 0: shift
           * = 0: accept
           * < 0: reduce
           * = -YYUNEXPECTED: error
           */
          if ($yyn > 0) {
            /* shift */
            
            $this->yysp++;
            
            $this->yysstk[$this->yysp] = $yystate = $yyn;
            $this->yyastk[$this->yysp] = $token;
            
            // store location
            $yylstk[$this->yysp] = $this->yyloc;
            
            $tokid = self::TOKEN_NONE;
            
            if ($yyerrflag > 0)
              $yyerrflag--;
            
            if ($yyn < self::YYNLSTATES)
              continue;

            /* $yyn >= YYNLSTATES means shift-and-reduce */
            $yyn -= self::YYNLSTATES;
          } else
            $yyn = -$yyn;
        } else
          $yyn = self::$yydefault[$yystate];
      }
      
      for (;;) {
        /* reduce/error */
        if ($yyn == 0) {
          /* accept */
          return $this->yyval;
        } elseif ($yyn != self::YYUNEXPECTED) {
          /* reduce */

          $this->{'yyn' . $yyn}();
          
          /* Goto - shift nonterminal */
          $yylen = self::$yylen[$yyn];
          $yyloc = $yylstk[$this->yysp - $yylen];
          
          $this->yysp -= $yylen;
          
          $yyn = self::$yylhs[$yyn];
          
          if (($yyp = self::$yygbase[$yyn] + $this->yysstk[$this->yysp]) >= 0
            && $yyp < self::YYGLAST && self::$yygcheck[$yyp] == $yyn)
            $yystate = self::$yygoto[$yyp];
          else
            $yystate = self::$yygdefault[$yyn];
          
          $this->yysp++;
          
          $this->yysstk[$this->yysp] = $yystate;
          $this->yyastk[$this->yysp] = $this->yyval;
          
          // set location if a real node was produced by $yyn
          if ($this->yyval instanceof Node)
            $this->yyval->loc = $yyloc;
          
          // store position
          $yylstk[$this->yysp] = $this->yyloc;
          
        } else {
          /* error */
          $this->invalid = true;
                    
          switch ($yyerrflag) {
            case 0:              
              $expa = [];
              $expn = 0;
              $base = self::$yybase[$yystate];
              
              for ($i = 0; $i < self::TOKEN_MAP_SIZE; ++$i) {
                $n = $base + $i;
                if ($n >= 0 && $n < self::YYLAST && self::$yycheck[$n] == $i
                  || $yystate < self::YY2TBLSTATE
                  && ($n = self::$yybase[$yystate + self::YYNLSTATES] + $i)
                  && $n < self::YYLAST && ($n < 0 || self::$yycheck[$n] == $i)
                ) {
                  if ($n >= 0 && self::$yyaction[$n] != self::YYUNEXPECTED) {
                    if ($expn === 4) {
                      /* Too many expected tokens */
                      $expa = null;
                      $expn = 0;
                      break;
                    }

                    $expa[] = self::$terminals[$i];
                    $expn++;
                  }
                }
              }

              $this->report_error($this->yyloc, 
                self::$terminals[$tokid], $expn, $expa);       
            case 1:
            case 2:
              $yyerrflag = 3;  
              
              while (!(($yyn = self::$yybase[$yystate] + self::YYINTERRTOK) >= 0
                && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK
                || ($yystate < self::YY2TBLSTATE
                  && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + self::YYINTERRTOK) >= 0
                  && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK))
              ) {  
                if ($this->yysp <= 0) 
                  return null;
                
                $yystate = $this->yysstk[--$this->yysp];              
              }
              
              $yyn = self::$yyaction[$yyn];
              $this->yysstk[++$this->yysp] = $yystate = $yyn;
              break;
            
            case 3:
              if ($tokid === 0) 
                return null;
              
              $tokid = -1;
              break;
          }
        }

        if ($yystate < self::YYNLSTATES)
          break;
        
        /* >= YYNLSTATES means shift-and-reduce */
        $yyn = $yystate - self::YYNLSTATES;
      }
    }
  }


  private function yyn0() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn1() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn2() 
  {
     
      $this->yyval = new ast\Unit($this->yyastk[$this->yysp-(1-1)]); 
      $this->eat_end(); 
    
  }


  private function yyn3() 
  {
     
      $this->yyval = new ast\Unit($this->yyastk[$this->yysp-(1-1)]); 
      $this->eat_end(); 
    
  }


  private function yyn4() 
  {
    
      $this->yyval = new ast\Unit(null);
      $this->eat_end();
    
  }


  private function yyn5() 
  {
     
      $this->yyval = new ast\Module($this->yyastk[$this->yysp-(4-2)], null, $this->yyastk[$this->yysp-(4-4)]); 
      $this->eat_semis();
    
  }


  private function yyn6() 
  {
    
      $this->yyval = new ast\Module(null, $this->yyastk[$this->yysp-(5-3)]->type, $this->yyastk[$this->yysp-(5-5)]);
      $this->eat_semis();
    
  }


  private function yyn7() 
  {
     $this->yyval = new ast\Content($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn8() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn9() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn10() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn11() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn12() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn13() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn14() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn15() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn16() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn17() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn18() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn19() 
  {
     $this->yyval = null; 
  }


  private function yyn20() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn21() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn22() 
  {
     
      $this->yyval = new ast\UseDecl($this->yyastk[$this->yysp-(3-2)], false); 
      $this->eat_semis(); 
    
  }


  private function yyn23() 
  {
    
      $this->yyval = new ast\UseDecl($this->yyastk[$this->yysp-(4-3)], true);
      $this->eat_semis();
    
  }


  private function yyn24() 
  {
    
      $this->yyval = new ast\UseDecl($this->yyastk[$this->yysp-(4-3)], false); 
      $this->eat_semis(); 
    
  }


  private function yyn25() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn26() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn27() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn28() 
  {
     $this->yyval = new ast\UseAlias($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn29() 
  {
     $this->yyval = new ast\UseUnpack($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn30() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn31() 
  {
     $this->yyval = new ast\LabelDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn32() 
  {
     
      $this->yyval = new ast\RequireDecl(false, $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn33() 
  {
     
      $this->yyval = new ast\RequireDecl(true, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn34() 
  {
    
      $this->yyval = new ast\Module($this->yyastk[$this->yysp-(4-2)], null, null);
      $this->eat_semis();
    
  }


  private function yyn35() 
  {
     
      $this->yyval = new ast\Module($this->yyastk[$this->yysp-(5-2)], null, $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn36() 
  {
    
      $this->yyval = new ast\Module(null, null, null);
      $this->eat_semis();
    
  }


  private function yyn37() 
  {
     
      $this->yyval = new ast\Module(null, null, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn38() 
  {
    
      $this->yyval = new ast\Module(null, $this->yyastk[$this->yysp-(5-3)]->type, null);
      $this->eat_semis();
    
  }


  private function yyn39() 
  {
    
      $this->yyval = new ast\Module(null, $this->yyastk[$this->yysp-(6-3)]->type, $this->yyastk[$this->yysp-(6-5)]);
      $this->eat_semis();
    
  }


  private function yyn40() 
  {
     $this->yyval = null; 
  }


  private function yyn41() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn42() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn43() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn44() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn45() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn46() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn47() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn48() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn49() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn50() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn51() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn52() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn53() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn54() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn55() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn56() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn57() 
  {
     $this->yyval = null; 
  }


  private function yyn58() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn59() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn60() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn61() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn62() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn63() 
  {
     
      $this->yyval = new ast\EnumDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn64() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn65() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn66() 
  {
     $this->yyval = new ast\EnumVar($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn67() 
  {
     $this->yyval = new ast\EnumVar($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn68() 
  {
     
      $this->yyval = new ast\ClassDecl($this->yyastk[$this->yysp-(9-1)], $this->yyastk[$this->yysp-(9-3)], $this->yyastk[$this->yysp-(9-4)], $this->yyastk[$this->yysp-(9-5)], $this->yyastk[$this->yysp-(9-7)], $this->yyastk[$this->yysp-(9-8)]); 
      $this->eat_semis(); 
    
  }


  private function yyn69() 
  {
     
      $this->yyval = new ast\ClassDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-5)], null, null, true); 
      $this->eat_semis(); 
    
  }


  private function yyn70() 
  {
     $this->yyval = null; 
  }


  private function yyn71() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn72() 
  {
     $this->yyval = null; 
  }


  private function yyn73() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn74() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn75() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn76() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn77() 
  {
     $this->yyval = null; 
  }


  private function yyn78() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn79() 
  {
     $this->yyval = null; 
  }


  private function yyn80() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn81() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn82() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn83() 
  {
     $this->yyval = null; 
  }


  private function yyn84() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn85() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn86() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn87() 
  {
     
      $this->yyval = new ast\TraitUse($this->yyastk[$this->yysp-(3-2)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn88() 
  {
     
      $this->yyval = new ast\TraitUse($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis();
    
  }


  private function yyn89() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn90() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn91() 
  {
     
      $this->yyval = new ast\TraitItem($this->yyastk[$this->yysp-(2-1)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn92() 
  {
    
      $this->yyval = new ast\TraitItem($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null);
      $this->eat_semis();
    
  }


  private function yyn93() 
  {
     
      $this->yyval = new ast\TraitItem($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn94() 
  {
     $this->yyval = []; 
  }


  private function yyn95() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn96() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn97() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn98() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn99() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn100() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn101() 
  {
     $this->yyval = new ast\CtorDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn102() 
  {
     
      $this->yyval = new ast\CtorDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn103() 
  {
     $this->yyval = new ast\DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn104() 
  {
     
      $this->yyval = new ast\DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn105() 
  {
     $this->yyval = new ast\GetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn106() 
  {
     
      $this->yyval = new ast\GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn107() 
  {
     $this->yyval = new ast\SetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn108() 
  {
     
      $this->yyval = new ast\GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn109() 
  {
     $this->yyval = new ast\NestedMods($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn110() 
  {
     $this->yyval = []; 
  }


  private function yyn111() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn112() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn113() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn114() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn115() 
  {
     $this->yyval = new ast\ThisParam($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], null, false); 
  }


  private function yyn116() 
  {
     $this->yyval = new ast\ThisParam($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-6)], false); 
  }


  private function yyn117() 
  {
     $this->yyval = new ast\ThisParam(null, $this->yyastk[$this->yysp-(4-4)], null, true); 
  }


  private function yyn118() 
  {
     $this->yyval = new ast\ThisParam($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-5)], null, true); 
  }


  private function yyn119() 
  {
     
      $this->yyval = new ast\TraitDecl($this->yyastk[$this->yysp-(7-1)], $this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-6)]); 
      $this->eat_semis(); 
    
  }


  private function yyn120() 
  {
     
      $this->yyval = new ast\TraitDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null, null, true); 
      $this->eat_semis(); 
    
  }


  private function yyn121() 
  {
     
      $this->yyval = new ast\IfaceDecl($this->yyastk[$this->yysp-(7-1)], $this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-6)]); 
      $this->eat_semis(); 
    
  }


  private function yyn122() 
  {
     
      $this->yyval = new ast\IfaceDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], null, true); 
      $this->eat_semis(); 
    
  }


  private function yyn123() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn124() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn125() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn126() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn127() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], true); 
  }


  private function yyn128() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn129() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn130() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn131() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn132() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], true); 
  }


  private function yyn133() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn134() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn135() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn136() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn137() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn138() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn139() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn140() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn141() 
  {
     
      $this->yyval = new ast\VarDecl(null, $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn142() 
  {
    
      $this->yyval = new ast\VarList($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-6)]);
      $this->eat_semis();
    
  }


  private function yyn143() 
  {
     
      $this->yyval = new ast\VarDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn144() 
  {
     $this->yyval = new ast\VarDecl(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn145() 
  {
     $this->yyval = new ast\VarList($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn146() 
  {
     $this->yyval = new ast\VarDecl($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn147() 
  {
    
      $this->yyval = new ast\FnDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-5)], $this->yyastk[$this->yysp-(6-6)]); 
    
  }


  private function yyn148() 
  {
     
      $this->yyval = new ast\FnDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-5)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn149() 
  {
     
      $this->yyval = new ast\FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn150() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn151() 
  {
     
      $this->yyval = $this->yyastk[$this->yysp-(3-2)];
      $this->eat_semis(); 
    
  }


  private function yyn152() 
  {
     $this->yyval = new ast\FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn153() 
  {
     $this->yyval = new ast\FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn154() 
  {
     $this->yyval = new ast\FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn155() 
  {
     $this->yyval = new ast\FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn156() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn157() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn158() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn159() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn160() 
  {
     $this->yyval = null; 
  }


  private function yyn161() 
  {
     $this->yyval = null; 
  }


  private function yyn162() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn163() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn164() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn165() 
  {
     $this->yyval = new ast\Param(false, null, null, $this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn166() 
  {
     $this->yyval = new ast\Param(false, null, null, $this->yyastk[$this->yysp-(2-1)], null, true); 
  }


  private function yyn167() 
  {
     $this->yyval = new ast\Param(false, null, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn168() 
  {
     $this->yyval = new ast\Param(false, null, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn169() 
  {
     $this->yyval = new ast\Param(false, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn170() 
  {
     $this->yyval = new ast\Param(false, null, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn171() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(2-1)], null, $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn172() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(3-1)], null, $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn173() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn174() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn175() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null, true); 
  }


  private function yyn176() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], false); 
  }


  private function yyn177() 
  {
     $this->yyval = new ast\RestParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn178() 
  {
     $this->yyval = new ast\RestParam($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], true); 
  }


  private function yyn179() 
  {
     $this->yyval = new ast\RestParam(null, $this->yyastk[$this->yysp-(3-3)], true); 
  }


  private function yyn180() 
  {
     $this->yyval = new ast\Param(true, null, null, $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn181() 
  {
     $this->yyval = new ast\Param(true, null, null, $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn182() 
  {
     $this->yyval = new ast\Param(true, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn183() 
  {
     $this->yyval = new ast\Param(true, null, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null, true); 
  }


  private function yyn184() 
  {
     $this->yyval = new ast\Param(true, $this->yyastk[$this->yysp-(3-1)], null, $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn185() 
  {
     $this->yyval = new ast\Param(true, $this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-3)], null, true); 
  }


  private function yyn186() 
  {
     $this->yyval = new ast\Param(true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], null, false); 
  }


  private function yyn187() 
  {
     $this->yyval = new ast\Param(true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], null, true); 
  }


  private function yyn188() 
  {
     $this->yyval = null; 
  }


  private function yyn189() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn190() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn191() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn192() 
  {
     $this->yyval = new ast\DoStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn193() 
  {
     $this->yyval = new ast\IfStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn194() 
  {
     $this->yyval = new ast\ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn195() 
  {
     $this->yyval = new ast\ForStmt($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], null, $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn196() 
  {
     $this->yyval = new ast\ForStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn197() 
  {
     $this->yyval = null; 
  }


  private function yyn198() 
  {
     $this->yyval = new ast\ForStmt(null, null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn199() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(2-2)], null, null); 
  }


  private function yyn200() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn201() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(3-2)], null, $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn202() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn203() 
  {
     $this->yyval = new ast\PhpStmt($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn204() 
  {
     $this->yyval = new ast\GotoStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn205() 
  {
     $this->yyval = new ast\TestStmt(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn206() 
  {
     $this->yyval = new ast\TestStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn207() 
  {
     $this->yyval = new ast\BreakStmt(null); 
  }


  private function yyn208() 
  {
     $this->yyval = new ast\BreakStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn209() 
  {
     $this->yyval = new ast\ContinueStmt(null); 
  }


  private function yyn210() 
  {
     $this->yyval = new ast\ContinueStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn211() 
  {
     $this->yyval = new ast\PrintStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn212() 
  {
     $this->yyval = new ast\ThrowStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn213() 
  {
     $this->yyval = new ast\WhileStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn214() 
  {
     $this->yyval = new ast\AssertStmt($this->yyastk[$this->yysp-(3-2)], null); 
  }


  private function yyn215() 
  {
     $this->yyval = new ast\AssertStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn216() 
  {
     $this->yyval = new ast\SwitchStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn217() 
  {
     $this->yyval = new ast\ReturnStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn218() 
  {
     $this->yyval = new ast\ReturnStmt(null); 
  }


  private function yyn219() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn220() 
  {
     $this->yyval = null; 
  }


  private function yyn221() 
  {
     $this->yyval = new ast\ForInPair(null, $this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn222() 
  {
     $this->yyval = new ast\ForInPair($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn223() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn224() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn225() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn226() 
  {
     $this->yyval = null; 
  }


  private function yyn227() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn228() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn229() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn230() 
  {
     $this->yyval = new ast\ElifItem($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn231() 
  {
     $this->yyval = null; 
  }


  private function yyn232() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn233() 
  {
     $this->yyval = new ast\ElseItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn234() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn235() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn236() 
  {
     $this->yyval = new ast\CatchItem(null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn237() 
  {
     $this->yyval = new ast\CatchItem($this->yyastk[$this->yysp-(5-3)], null, $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn238() 
  {
     $this->yyval = new ast\CatchItem($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn239() 
  {
     $this->yyval = null; 
  }


  private function yyn240() 
  {
     $this->yyval = new ast\FinallyItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn241() 
  {
     $this->yyval = null; 
  }


  private function yyn242() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn243() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn244() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn245() 
  {
     $this->yyval = new ast\PhpUse($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn246() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn247() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn248() 
  {
     $this->yyval = new ast\PhpUseItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn249() 
  {
     $this->yyval = new ast\PhpUseItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn250() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn251() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn252() 
  {
     $this->yyval = new ast\CaseItem($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn253() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn254() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn255() 
  {
     $this->yyval = new ast\CaseLabel($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn256() 
  {
     $this->yyval = new ast\CaseLabel(null); 
  }


  private function yyn257() 
  {
     $this->yyval = new ast\Block([]); 
  }


  private function yyn258() 
  {
     $this->yyval = new ast\Block($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn259() 
  {
     $this->yyval = null; 
  }


  private function yyn260() 
  {
     
      $this->yyval = new ast\ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
      $this->eat_semis(); 
    
  }


  private function yyn261() 
  {
     
      $this->yyval = new ast\ExprStmt(null); 
      $this->eat_semis(); 
    
  }


  private function yyn262() 
  {
     $this->yyval = new ast\ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn263() 
  {
     $this->yyval = new ast\ExprStmt(null); 
  }


  private function yyn264() 
  {
     $this->yyval = new ast\ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn265() 
  {
     $this->yyval = new ast\ExprStmt(null); 
  }


  private function yyn266() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn267() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn268() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn269() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn270() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn271() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn272() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn273() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn274() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn275() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn276() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn277() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn278() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn279() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn280() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn281() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn282() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn283() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn284() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn285() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn286() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn287() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn288() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn289() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn290() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn291() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn292() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn293() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn294() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn295() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn296() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn297() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn298() 
  {
     $this->yyval = new ast\CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn299() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn300() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn301() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn302() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn303() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn304() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn305() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn306() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn307() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn308() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn309() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn310() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn311() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn312() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn313() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn314() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn315() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn316() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn317() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn318() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn319() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)], true); 
  }


  private function yyn320() 
  {
     $this->yyval = new ast\OffsetExpr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn321() 
  {
     $this->yyval = null; 
  }


  private function yyn322() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn323() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn324() 
  {
     $this->yyval = new ast\CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn325() 
  {
     $this->yyval = new ast\YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn326() 
  {
     $this->yyval = new ast\YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn327() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn328() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn329() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn330() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn331() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn332() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn333() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn334() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn335() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn336() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn337() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn338() 
  {
     $this->yyval = new ast\DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn339() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn340() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn341() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn342() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn343() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn344() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn345() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn346() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn347() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn348() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn349() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn350() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn351() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn352() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn353() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn354() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn355() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn356() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn357() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn358() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn359() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn360() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn361() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn362() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn363() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn364() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn365() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn366() 
  {
     $this->yyval = new ast\CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn367() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn368() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn369() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn370() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn371() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn372() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn373() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn374() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn375() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn376() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn377() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn378() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn379() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn380() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn381() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn382() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn383() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn384() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn385() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn386() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn387() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)], true); 
  }


  private function yyn388() 
  {
     $this->yyval = new ast\OffsetExpr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn389() 
  {
     $this->yyval = null; 
  }


  private function yyn390() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn391() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn392() 
  {
     $this->yyval = new ast\CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn393() 
  {
     $this->yyval = new ast\YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn394() 
  {
     $this->yyval = new ast\YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn395() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn396() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn397() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn398() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn399() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn400() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn401() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn402() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn403() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn404() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn405() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn406() 
  {
     $this->yyval = new ast\DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn407() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn408() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn409() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn410() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn411() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn412() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn413() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn414() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn415() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn416() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn417() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn418() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn419() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn420() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn421() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn422() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn423() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn424() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn425() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn426() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn427() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn428() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn429() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn430() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn431() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn432() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn433() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn434() 
  {
     $this->yyval = new ast\CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn435() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn436() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn437() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn438() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn439() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn440() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn441() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn442() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn443() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn444() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn445() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn446() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn447() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn448() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn449() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn450() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn451() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn452() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn453() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn454() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn455() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)], true); 
  }


  private function yyn456() 
  {
     $this->yyval = new ast\OffsetExpr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn457() 
  {
     $this->yyval = null; 
  }


  private function yyn458() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn459() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn460() 
  {
     $this->yyval = new ast\CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn461() 
  {
     $this->yyval = new ast\YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn462() 
  {
     $this->yyval = new ast\YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn463() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn464() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn465() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn466() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn467() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn468() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn469() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn470() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn471() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn472() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn473() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn474() 
  {
     $this->yyval = new ast\DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn475() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn476() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn477() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn478() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn479() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)], true); 
  }


  private function yyn480() 
  {
     $this->yyval = new ast\OffsetExpr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn481() 
  {
     $this->yyval = null; 
  }


  private function yyn482() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn483() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn484() 
  {
     $this->yyval = null; 
  }


  private function yyn485() 
  {
     $this->yyval = null; 
  }


  private function yyn486() 
  {
     $this->yyval = null; 
  }


  private function yyn487() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn488() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn489() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn490() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn491() 
  {
     $this->yyval = new ast\NamedArg($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn492() 
  {
     $this->yyval = new ast\RestArg($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn493() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn494() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn495() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn496() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn497() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn498() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn499() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn500() 
  {
     
      if ($this->yyastk[$this->yysp-(4-2)] === null || (count($this->yyastk[$this->yysp-(4-2)]) === 1 && $this->yyastk[$this->yysp-(4-3)] === null))
        $this->yyval = new ast\ParenExpr($this->yyastk[$this->yysp-(4-2)][0]);
      else
        $this->yyval = new ast\TupleExpr($this->yyastk[$this->yysp-(4-2)]);
    
  }


  private function yyn501() 
  {
     $this->yyval = new ast\TupleExpr(null); 
  }


  private function yyn502() 
  {
     $this->yyval = null; 
  }


  private function yyn503() 
  {
     $this->lex->scan_regexp($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn504() 
  {
     $this->yyval = new ast\RegexpLit($this->yyastk[$this->yysp-(3-3)]->value); 
  }


  private function yyn505() 
  {
     $this->yyval = new ast\Name($this->yyastk[$this->yysp-(1-1)], false); 
  }


  private function yyn506() 
  {
     $this->yyval = new ast\Name($this->yyastk[$this->yysp-(3-3)], false, $this->yyastk[$this->yysp-(3-1)]->type); 
  }


  private function yyn507() 
  {
     $this->yyval = new ast\Name($this->yyastk[$this->yysp-(3-3)], false, $this->yyastk[$this->yysp-(3-1)]->type); 
  }


  private function yyn508() 
  {
     $this->yyval = new ast\Name($this->yyastk[$this->yysp-(2-2)], true); 
  }


  private function yyn509() 
  {
     $this->yyastk[$this->yysp-(3-1)]->add($this->yyastk[$this->yysp-(3-3)]); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn510() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn511() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn512() 
  {
     $this->yyval = new ast\TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn513() 
  {
     $this->yyval = new ast\SelfExpr; 
  }


  private function yyn514() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn515() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn516() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn517() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn518() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn519() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn520() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn521() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn522() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn523() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn524() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn525() 
  {
     $this->yyval = new ast\ThisExpr; 
  }


  private function yyn526() 
  {
     $this->yyval = new ast\SuperExpr; 
  }


  private function yyn527() 
  {
     $this->yyval = new ast\SelfExpr; 
  }


  private function yyn528() 
  {
     $this->yyval = new ast\NullLit; 
  }


  private function yyn529() 
  {
     $this->yyval = new ast\TrueLit; 
  }


  private function yyn530() 
  {
     $this->yyval = new ast\FalseLit; 
  }


  private function yyn531() 
  {
     $this->yyval = new ast\KStrLit($this->cdir); 
  }


  private function yyn532() 
  {
     $this->yyval = new ast\KStrLit($this->cfile); 
  }


  private function yyn533() 
  {
     $this->yyval = new ast\LNumLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->line); 
  }


  private function yyn534() 
  {
     $this->yyval = new ast\LNumLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->coln); 
  }


  private function yyn535() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn536() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn537() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn538() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn539() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn540() 
  {
     $this->yyval = new ast\StrLit($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn541() 
  {
     $this->yyastk[$this->yysp-(5-1)]->add($this->yyastk[$this->yysp-(5-4)]); $this->yyval = $this->yyastk[$this->yysp-(5-1)]; 
  }


  private function yyn542() 
  {
     $this->yyastk[$this->yysp-(3-1)]->add(new ast\StrLit($this->yyastk[$this->yysp-(3-3)])); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn543() 
  {
     $this->yyval = new ast\LNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn544() 
  {
     $this->yyval = new ast\DNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn545() 
  {
     $this->yyval = new ast\SNumLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->suffix); 
  }


  private function yyn546() 
  {
     $this->yyval = new ast\ArrLit(null); 
  }


  private function yyn547() 
  {
     $this->yyval = new ast\ArrGen($this->yyastk[$this->yysp-(9-2)], $this->yyastk[$this->yysp-(9-5)], $this->yyastk[$this->yysp-(9-7)]); 
  }


  private function yyn548() 
  {
     $this->yyval = new ast\ArrLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn549() 
  {
     $this->yyval = null; 
  }


  private function yyn550() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn551() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn552() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn553() 
  {
     $this->yyval = new ast\SpreadExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn554() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn555() 
  {
     $this->yyval = new ast\ObjLit(null); 
  }


  private function yyn556() 
  {
     $this->yyval = new ast\ObjLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn557() 
  {
     $this->yyval = null; 
  }


  private function yyn558() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn559() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn560() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn561() 
  {
     $this->yyval = new ast\ObjPair($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn562() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn563() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn564() 
  {
     $this->yyval = new ast\ObjKey($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn565() 
  {
     $this->yyval = null; 
  }


  private function yyn566() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn567() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn568() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn569() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn570() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn571() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn572() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn573() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn574() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn575() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn576() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn577() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn578() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn579() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn580() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn581() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn582() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn583() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn584() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn585() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn586() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn587() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn588() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn589() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn590() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn591() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn592() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn593() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn594() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn595() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn596() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn597() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn598() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn599() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn600() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn601() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn602() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn603() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn604() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn605() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn606() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn607() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn608() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn609() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn610() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn611() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn612() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn613() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn614() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn615() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn616() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn617() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn618() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn619() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn620() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn621() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn622() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn623() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn624() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn625() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn626() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn627() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn628() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn629() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn630() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn631() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn632() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn633() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn634() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn635() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn636() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }

}

