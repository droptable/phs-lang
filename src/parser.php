<?php

/* this parser-skeleton is based on the awesome 
   work of nikic (https://github.com/nikic) 
   with some extensions (error-recovery and location-tracking) */

/**
 * This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *   the grammar file gen/yy-parser-tpl.y
 *   the parser skeleton gen/kymacc.php.parser
 *
 * The skeleton for this parser was written by Moriyoshi Koizumi and is based on
 * the work by Masato Bito and is in the PUBLIC DOMAIN.
 */

namespace phs;


const YYERRTOK = 256;
const T_APLUS = 257;
const T_AMINUS = 258;
const T_AMUL = 259;
const T_ADIV = 260;
const T_AMOD = 261;
const T_APOW = 262;
const T_ABIT_NOT = 263;
const T_ABIT_OR = 264;
const T_ABIT_AND = 265;
const T_ABIT_XOR = 266;
const T_ABOOL_OR = 267;
const T_ABOOL_AND = 268;
const T_ABOOL_XOR = 269;
const T_ASHIFT_L = 270;
const T_ASHIFT_R = 271;
const T_RANGE = 272;
const T_YIELD = 273;
const T_BOOL_OR = 274;
const T_BOOL_XOR = 275;
const T_BOOL_AND = 276;
const T_EQ = 277;
const T_NEQ = 278;
const T_IN = 279;
const T_IS = 280;
const T_ISNT = 281;
const T_GTE = 282;
const T_LTE = 283;
const T_SL = 284;
const T_SR = 285;
const T_POW = 286;
const T_AS = 287;
const T_ARR = 288;
const T_REST = 289;
const T_DEL = 290;
const T_INC = 291;
const T_DEC = 292;
const T_NEW = 293;
const T_DDDOT = 294;
const T_FN = 295;
const T_LET = 296;
const T_USE = 297;
const T_ENUM = 298;
const T_CLASS = 299;
const T_TRAIT = 300;
const T_IFACE = 301;
const T_MODULE = 302;
const T_REQUIRE = 303;
const T_IDENT = 304;
const T_LNUM = 305;
const T_DNUM = 306;
const T_SNUM = 307;
const T_STRING = 308;
const T_REGEXP = 309;
const T_TRUE = 310;
const T_FALSE = 311;
const T_NULL = 312;
const T_THIS = 313;
const T_SUPER = 314;
const T_GET = 315;
const T_SET = 316;
const T_DO = 317;
const T_IF = 318;
const T_ELSIF = 319;
const T_ELSE = 320;
const T_FOR = 321;
const T_TRY = 322;
const T_GOTO = 323;
const T_BREAK = 324;
const T_CONTINUE = 325;
const T_THROW = 326;
const T_CATCH = 327;
const T_FINALLY = 328;
const T_WHILE = 329;
const T_ASSERT = 330;
const T_SWITCH = 331;
const T_CASE = 332;
const T_DEFAULT = 333;
const T_RETURN = 334;
const T_CONST = 335;
const T_FINAL = 336;
const T_GLOBAL = 337;
const T_STATIC = 338;
const T_EXTERN = 339;
const T_PUBLIC = 340;
const T_PRIVATE = 341;
const T_PROTECTED = 342;
const T_SEALED = 343;
const T_INLINE = 344;
const T_PHP = 345;
const T_TEST = 346;
const T_CFILE = 347;
const T_CLINE = 348;
const T_CCOLN = 349;
const T_CFN = 350;
const T_CCLASS = 351;
const T_CMETHOD = 352;
const T_CMODULE = 353;
const T_NL = 354;
const T_TINT = 355;
const T_TBOOL = 356;
const T_TFLOAT = 357;
const T_TSTRING = 358;
const T_TREGEXP = 359;
const T_INVL = 360;
const T_END = 361;
const T_SYNC = 362;

require_once 'context.php';
require_once 'parser_base.php';

require_once 'ast.php';
require_once 'glob.php';
require_once 'lexer.php';

use phs\ast\Node;
use phs\ast\Unit;
use phs\ast\Module;
use phs\ast\Program;
use phs\ast\RequireDecl;
use phs\ast\AttrDecl;
use phs\ast\CompAttr;
use phs\ast\TopexAttr;
use phs\ast\AttrDef;
use phs\ast\AttrVal;
use phs\ast\UseDecl;
use phs\ast\UseAlias;
use phs\ast\UseUnpack;
use phs\ast\EnumDecl;
use phs\ast\VarItem;
use phs\ast\ArrDestr;
use phs\ast\ObjDestr;
use phs\ast\ClassDecl;
use phs\ast\CtorDecl;
use phs\ast\DtorDecl;
use phs\ast\GetterDecl;
use phs\ast\SetterDecl;
use phs\ast\NestedMods;
use phs\ast\TraitUse;
use phs\ast\TraitItem;
use phs\ast\TraitDecl;
use phs\ast\IfaceDecl;
use phs\ast\LetDecl;
use phs\ast\VarDecl;
use phs\ast\FnDecl;
use phs\ast\FnExpr;
use phs\ast\Param;
use phs\ast\ThisParam;
use phs\ast\RestParam;
use phs\ast\DoStmt;
use phs\ast\IfStmt;
use phs\ast\ForInStmt;
use phs\ast\ForStmt;
use phs\ast\TryStmt;
use phs\ast\PhpStmt;
use phs\ast\GotoStmt;
use phs\ast\TestStmt;
use phs\ast\BreakStmt;
use phs\ast\ContinueStmt;
use phs\ast\ThrowStmt;
use phs\ast\WhileStmt;
use phs\ast\YieldStmt;
use phs\ast\AssertStmt;
use phs\ast\SwitchStmt;
use phs\ast\ReturnStmt;
use phs\ast\LabeledStmt;
use phs\ast\ElsifItem;
use phs\ast\ElseItem;
use phs\ast\CatchItem;
use phs\ast\FinallyItem;
use phs\ast\PhpUse;
use phs\ast\PhpUseItem;
use phs\ast\CaseItem;
use phs\ast\CaseLabel;
use phs\ast\Block;
use phs\ast\ExprStmt;
use phs\ast\BinExpr;
use phs\ast\CheckExpr;
use phs\ast\CastExpr;
use phs\ast\UpdateExpr;
use phs\ast\AssignExpr;
use phs\ast\MemberExpr;
use phs\ast\CondExpr;
use phs\ast\CallExpr;
use phs\ast\UnaryExpr;
use phs\ast\NewExpr;
use phs\ast\DelExpr;
use phs\ast\YieldExpr;
use phs\ast\NamedArg;
use phs\ast\RestArg;
use phs\ast\RegexpLit;
use phs\ast\Name;
use phs\ast\TypeId;
use phs\ast\Ident;
use phs\ast\ThisExpr;
use phs\ast\SuperExpr;
use phs\ast\NullLit;
use phs\ast\TrueLit;
use phs\ast\FalseLit;
use phs\ast\StrLit;
use phs\ast\EngineConst;
use phs\ast\LNumLit;
use phs\ast\DNumLit;
use phs\ast\SNumLit;
use phs\ast\ArrayLit;
use phs\ast\ArrayGen;
use phs\ast\SpreadExpr;
use phs\ast\ObjectLit;
use phs\ast\ObjectPair;


class Parser extends ParserBase
{
  const TOKEN_NONE    = -1;
  const TOKEN_INVALID = 132;

  const TOKEN_MAP_SIZE = 363;

  const YYLAST       = 1648;
  const YY2TBLSTATE  = 553;
  const YYGLAST      = 1163;
  const YYNLSTATES   = 659;
  const YYINTERRTOK  = 1;
  const YYUNEXPECTED = 32767;
  const YYDEFAULT    = -32766;

  /* @var array Map of token ids to their respective names */
  private static $terminals = [
    "EOF",
    "error",
    "','",
    "T_APLUS",
    "T_AMINUS",
    "T_AMUL",
    "T_ADIV",
    "T_AMOD",
    "T_APOW",
    "T_ABIT_NOT",
    "T_ABIT_OR",
    "T_ABIT_AND",
    "T_ABIT_XOR",
    "T_ABOOL_OR",
    "T_ABOOL_AND",
    "T_ABOOL_XOR",
    "T_ASHIFT_L",
    "T_ASHIFT_R",
    "'='",
    "T_RANGE",
    "T_YIELD",
    "'?'",
    "':'",
    "T_BOOL_OR",
    "T_BOOL_XOR",
    "T_BOOL_AND",
    "'|'",
    "'^'",
    "'&'",
    "T_EQ",
    "T_NEQ",
    "T_IN",
    "T_IS",
    "T_ISNT",
    "T_GTE",
    "T_LTE",
    "'>'",
    "'<'",
    "T_SL",
    "T_SR",
    "'+'",
    "'-'",
    "'*'",
    "'/'",
    "'%'",
    "T_POW",
    "T_AS",
    "T_ARR",
    "T_REST",
    "T_DEL",
    "'!'",
    "'~'",
    "T_INC",
    "T_DEC",
    "T_NEW",
    "'.'",
    "T_DDDOT",
    "'['",
    "']'",
    "'('",
    "')'",
    "T_FN",
    "T_LET",
    "T_USE",
    "T_ENUM",
    "T_CLASS",
    "T_TRAIT",
    "T_IFACE",
    "T_MODULE",
    "T_REQUIRE",
    "T_IDENT",
    "T_LNUM",
    "T_DNUM",
    "T_SNUM",
    "T_STRING",
    "T_REGEXP",
    "T_TRUE",
    "T_FALSE",
    "T_NULL",
    "T_THIS",
    "T_SUPER",
    "T_GET",
    "T_SET",
    "T_DO",
    "T_IF",
    "T_ELSIF",
    "T_ELSE",
    "T_FOR",
    "T_TRY",
    "T_GOTO",
    "T_BREAK",
    "T_CONTINUE",
    "T_THROW",
    "T_CATCH",
    "T_FINALLY",
    "T_WHILE",
    "T_ASSERT",
    "T_SWITCH",
    "T_CASE",
    "T_DEFAULT",
    "T_RETURN",
    "T_CONST",
    "T_FINAL",
    "T_GLOBAL",
    "T_STATIC",
    "T_EXTERN",
    "T_PUBLIC",
    "T_PRIVATE",
    "T_PROTECTED",
    "T_SEALED",
    "T_INLINE",
    "T_PHP",
    "T_TEST",
    "T_CFILE",
    "T_CLINE",
    "T_CCOLN",
    "T_CFN",
    "T_CCLASS",
    "T_CMETHOD",
    "T_CMODULE",
    "T_NL",
    "T_TINT",
    "T_TBOOL",
    "T_TFLOAT",
    "T_TSTRING",
    "T_TREGEXP",
    "T_END",
    "T_SYNC",
    "';'",
    "'{'",
    "'}'",
    "'@'"
    , "???"
  ];

  /* @var array Map which translates lexer tokens to internal tokens */
  private static $translate = [
        0,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,   50,  132,  132,  132,   44,   28,  132,
       59,   60,   42,   40,    2,   41,   55,   43,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,   22,  128,
       37,   18,   36,   21,  131,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,   57,  132,   58,   27,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  129,   26,  130,   51,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  132,    1,    3,    4,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   19,   20,   23,   24,   25,   29,   30,   31,
       32,   33,   34,   35,   38,   39,   45,   46,   47,   48,
       49,   52,   53,   54,   56,   61,   62,   63,   64,   65,
       66,   67,   68,   69,   70,   71,   72,   73,   74,   75,
       76,   77,   78,   79,   80,   81,   82,   83,   84,   85,
       86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
       96,   97,   98,   99,  100,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
      116,  117,  118,  119,  120,  121,  122,  123,  124,  125,
      132,  126,  127
  ];

  private static $yyaction = [
     1283,  228,  229,  230,  231,    0,  403,  404,  232,  233,
      234,  235,  236,  237,  238,  239,  240,  241,  242,  243,
      405,-32766,-32766,-32766,-32766,  244, 1071, 1072,  605,   17,
      624,   91,  644,   78,  619,-32767,-32767,  150,   16,  616,
       89, 1243, 1244, 1258, 1271, 1261, 1262, 1263, 1259, 1282,
     1141,  596,  262,  594, 1214,  828, 1248, 1249, 1250, 1264,
     1280, 1142, 1143, 1276, 1251, 1252, 1253, 1274, 1254, 1281,
     1277, 1278, 1255, 1256, 1257, 1275, 1247, 1272, 1273, 1186,
     1279, 1266, 1267, 1284, 1265, 1260, 1268, 1269, 1270, 1290,
     1291, 1245, 1246, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
      108, 1285, 1286, 1287, 1288, 1289,-32766,-32766,-32766,-32766,
     1224,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,  110,
     1145, 1146, 1160, 1173, 1163, 1164, 1165, 1161, 1185, 1141,
    -32766,-32766,-32766,-32766,-32766, 1150, 1151, 1152, 1166, 1183,
     1142, 1143, 1179, 1153, 1154, 1155, 1177, 1156, 1184, 1180,
     1181, 1157, 1158, 1159, 1178, 1149, 1174, 1175, 1176, 1182,
     1168, 1169, 1187, 1167, 1162, 1170, 1171, 1172, 1193, 1194,
     1147, 1148, 1195, 1196, 1197, 1198, 1199, 1200, 1201,   80,
     1188, 1189, 1190, 1191, 1192,   -1,  526,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,  469,   92,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,  492,  493,  441,   93,   94,   90,  392,  224,
      225,  226,  227,  459,  480,   95,   96,   97,   98,  394,
      240,  241,  242,  243,  405,  907,  -55,  -55,  461,  -55,
      -55,  482,  483,  446,   83,  176,  399,  400,  177,  178,
      179,  180,  181,  182,  183,  184,   14,  609,   20,  559,
      440, -106,  513,  560,  484,  470,  471,   99,  457,  526,
      561,  100,  562,  442,  495,   84,  718,  719,  720,  721,
      727,  722,  723,  724,  725,  726,  588,  511,   92,-32766,
    -32766,-32766,-32766,  478,-32766,-32766,-32766,-32766,-32766,-32766,
      787,  693,  464,  908,    9,  580,  465,  620,   93,   94,
      498,  596,  181,  182,  183,  184, 1141,  480,   95,   96,
       97,   98,  394,  225,  226,  227,  821, 1142, 1143,  -55,
      -55,  461,  -55,  -55,  482,  483,  451,   83,  718,  719,
      720,  721,  727,  722,  723,  724,  725,  726,-32766,-32767,
    -32767,   20,  559,  572,  201,  513,  560,  484,  470,  471,
       99,  622,  526,  561,  100,  562, 1114,  462,   84,  718,
      719,  720,  721,  727,  722,  723,  724,  725,  726,  588,
      511,   92,  438,  244, 1071, 1072, 1233,   17,  469,   91,
      460,   78,  782,  391,  693, 1141,  908,    9,  -13,  465,
      489,   93,   94,  496,  444,  760,  499,  500, -174,  481,
      480,   95,   96,   97,   98,  394,  481,  260,  247,  892,
      819,  445,  -55,  -55,  461,  -55,  -55,  482,  483,  451,
       83, 1136, 1137, 1138, 1139, 1140,  223,  481,   90, -174,
      224,  225,  226,  227,   20,  559,  463,  248,  513,  560,
      484,  470,  471,   99,  439, -105,  561,  100,  562,  861,
      481,   84,  718,  719,  720,  721,  727,  722,  723,  724,
      725,  726,  588,  511, 1136, 1137, 1138, 1139, 1140,-32766,
    -32766,-32766,  705,  456,  438,  245,  458,  693,  246,  908,
        9,  -12,  465,  151,  152,  153,  154,  155,  156,  157,
      158,  159,  160,  161,  162,  163,  164,  165,  166,  167,
        1,   88,  352,  168,  169,  170,  171,  172,  173,  174,
      175,  176,  399,  400,  177,  178,  179,  180,  181,  182,
      183,  184,  185,  186,  187,  188,  401,  -18,  526,  438,
      191,  189, 1007, 1008,  911,   16,  501,   89,  469,   78,
      583,  198, 1141,  479,  261,  584,  439,   92,   82,  646,
      192,  193,  629, 1142, 1143,  607,  492,  493,  645,  490,
      194,  195,  196,  197,  402,  226,  227,   93,   94,   76,
      257,  468,  871,  438,  586,  872,  480,   95,   96,   97,
       98,  394,  799, -165,  266,  906, 1141,    6,  -55,  -55,
      461,  -55,  -55,  482,  483,  618,   83, 1142, 1143,  252,
      250,  439,  825,  227,  481, -105, 1116,  481,  183,  184,
       20,  559,   12,  481,  513,  560,  484,  470,  471,   99,
    -32766,-32766,  561,  100,  562,  809,-32766,   84,  718,  719,
      720,  721,  727,  722,  723,  724,  725,  726,  588,  511,
      254, -165,  243,  405,  265,  353,  487,  436,  607,  488,
      902,  516,  571,  693,  258,  908,    9,  204,  465,  111,
      112,  113,  114,  115,  116,  117,  118,  119,  120,  121,
      122,  123,  124,  125,  126,  127,  199,   86,  253,  128,
      129,  130,  131,  132,  133,  134,  135,  136,  396,  397,
      137,  138,  139,  140,  141,  142,  143,  144,  145,  146,
      147,  148,  398,  526,  249,  636,  903,  149,  945,  946,
      251,   15,  203,   87,  185,  186,  187,  188,  401,  792,
      372,  497,   92,  189, 1007, 1008,  267,   16,  264,   89,
      256,   78,  746,  373,  202,  790,  371,    5,    2,  268,
      443,  201,   93,   94,  108,  206,   18,  437, 1214,  575,
      481,  480,   95,   96,   97,   98,  394,  486,  739,  820,
      475, 1027,  966,  -55,  -55,  461,  -55,  -55,  482,  483,
     1028,   83,  965, 1227, 1091, 1225, 1242, 1226, 1092,  109,
       78,  477,  454,  406,   71,   20,  559,-32767,   85,  513,
      560,  484,  470,  471,   99,  753,  535,  561,  100,  562,
      754,  749,   84,  718,  719,  720,  721,  727,  722,  723,
      724,  725,  726,  588,  511,   92, 1113,  704,  701,  587,
      750,  585,  255,  190,   23,   26, 1115,   30,  693, 1112,
      908,    9,  656,  465,   29,   93,   94,   28,   27,   25,
      570,  612,  509, 1130,  480,   95,   96,   97,   98,  394,
      697,  681,  798,   13,  799,  435,  -55,  -55,    0,    0,
      663,    0,    0,  692,    0,  780,  778,  856,    0,  535,
      854,  808,  696,    0,  864,  858,  909,  860,   20,  559,
      862, 1026,  513,  560,  484,  470,  471,   99,   92,    0,
      561,  100,  562, -240, -240,   84,  718,  719,  720,  721,
      727,  722,  723,  724,  725,  726,  588,  511,   93,   94,
      804,  803,  837,  775,  706,  773,  783,  480,   95,   96,
       97,   98,  394,  908,    9, -240,  467,  788,  857,  -55,
      -55,  855,  851,  868,  910,  865,  810,  695,    0,  554,
        2,  200,  535,  205,  259,    9,    0, 1090,  740,  863,
      707,   20,  559,  784,  712,  513,  560,  484,  470,  471,
       99,   92,  964,  561,  100,  562,  249,  636,   84,  718,
      719,  720,  721,  727,  722,  723,  724,  725,  726,  588,
      511,   93,   94,  745,  781,  791,  728,  850,  669,  789,
      480,   95,   96,   97,   98,  394,  908,    9,    0,  467,
      670, 1234,  -55,  -55, 1235,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  506,    0,    0,    0,    0,
        0,    0,    0,    0,   20,  559,    0,    0,  513,  560,
      484,  470,  471,   99,   92,    0,  561,  100,  562,    0,
        0,   84,  718,  719,  720,  721,  727,  722,  723,  724,
      725,  726,  588,  511,   93,   94,    0,    0,    0,    0,
        0,    0,    0,  480,   95,   96,   97,   98,  394,  908,
        9,  905,  467,    0,    0,  -55,  -55,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  535,    0,
        0,    0,    0,    0,    0,    0,    0,   20,  559,    0,
        0,  513,  560,  484,  470,  471,   99,   92,    0,  561,
      100,  562,    0,    0,   84,  718,  719,  720,  721,  727,
      722,  723,  724,  725,  726,  588,  511,   93,   94,    0,
        0,    0,    0,    0,    0,    0,  480,   95,   96,   97,
       98,  394,  908,    9,  904,  467,    0,    0,  -55,  -55,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       20,  559,    0,    0,  513,  560,  484,  470,  471,   99,
        0,    0,  561,  100,  562,    0,    0,   84,  718,  719,
      720,  721,  727,  722,  723,  724,  725,  726,  588,  511,
      101,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  908,    9,    0,  467,    0,
      102,  103,    0,  658,  599,    0,    0,    0,    0,  485,
      104,  105,  106,  107,  395,    0,  481,   77,    0,   75,
        0,  466,    0,   92,    0,    0,    0,    0,    0,    0,
     1141, 1215, 1216, 1217, 1214,    0, 1205, 1206, 1204, 1202,
     1203, 1142, 1143,   93,   94,    0,    0,    0,    0,    0,
        0,    0,  480,   95,   96,   97,   98,  394,    0,    0,
        0,    0,    0,    0,-32766,    0,    0,    0,    0,  614,
        0,    0,    0, 1207, 1208, 1209, 1210, 1211, 1212, 1213,
        0,    0,    0,    0,    0,    0,   20,  559,  191,   11,
      513,  560,  484,  470,  471,   99,    0,    0,  561,  100,
      562,    0,    0,   84,    0,    0,    0,    0,  192,  193,
        0,    0,    0,    0,  588,  511,    0,  490,  194,  195,
      196,  197,  402,    0,    0,    0,    0,   76,    0,  468,
      -55,  908,    9,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
        0,-32766,    0,-32766,-32766,-32766,-32766,-32766,-32766,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  718,
      719,  720,  721,  727,  722,  723,  724,  725,  726,  207,
      208,  209,  210,  211,  212,  213,  214,  215,  216,  217,
      218,  219,  220,  221,  222,  223,  912,   90,    0,  224,
      225,  226,  227,    0,    0,    0,    0,  263,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,    0,-32766,    0,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
        0,-32766,    0,-32766,-32766,-32766,-32766,  207,  208,  209,
      210,  211,  212,  213,  214,  215,  216,  217,  218,  219,
      220,  221,  222,  223,    0,   90,    0,  224,  225,  226,
      227,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,-32766,
        0,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,    0,-32766,    0,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,    0,-32766,-32766,-32766,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,-32766,-32766,    0,    0,    0,
        0,    0,    0,    0,-32766,-32766,-32766,-32766,-32766,-32766,
        0,-32766,    0,    0,-32766,    0,-32766,    0,    0,    0,
        0,    0,    0,    0,    0,-32766,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,-32766,-32766
  ];

  private static $yycheck = [
       20,   27,   28,   29,   30,    0,   32,   33,   34,   35,
       36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
       46,   27,   28,   29,   30,   51,   52,   53,    1,   55,
        1,   57,    1,   59,    1,   52,   53,   57,   55,    1,
       57,   61,   62,   63,   64,   65,   66,   67,   68,   69,
       70,    1,   18,    1,   74,   21,   76,   77,   78,   79,
       80,   81,   82,   83,   84,   85,   86,   87,   88,   89,
       90,   91,   92,   93,   94,   95,   96,   97,   98,   20,
      100,  101,  102,  103,  104,  105,  106,  107,  108,  109,
      110,  111,  112,  113,  114,  115,  116,  117,  118,  119,
       48,  121,  122,  123,  124,  125,   27,   28,   29,   30,
       58,   32,   33,   34,   35,   36,   37,   38,   39,    2,
       61,   62,   63,   64,   65,   66,   67,   68,   69,   70,
       42,   43,   44,   45,   46,   76,   77,   78,   79,   80,
       81,   82,   83,   84,   85,   86,   87,   88,   89,   90,
       91,   92,   93,   94,   95,   96,   97,   98,   99,  100,
      101,  102,  103,  104,  105,  106,  107,  108,  109,  110,
      111,  112,  113,  114,  115,  116,  117,  118,  119,    2,
      121,  122,  123,  124,  125,    0,    1,    3,    4,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   63,   20,    3,    4,    5,    6,
        7,    8,    9,   10,   11,   12,   13,   14,   15,   16,
       17,   18,   81,   82,    2,   40,   41,   21,   46,   23,
       24,   25,   26,   22,   49,   50,   51,   52,   53,   54,
       42,   43,   44,   45,   46,  128,   61,   62,   63,   64,
       65,   66,   67,   68,   69,   31,   32,   33,   34,   35,
       36,   37,   38,   39,   40,   41,    2,    1,   83,   84,
       59,  130,   87,   88,   89,   90,   91,   92,    2,    1,
       95,   96,   97,    2,   48,  100,  101,  102,  103,  104,
      105,  106,  107,  108,  109,  110,  111,  112,   20,   27,
       28,   29,   30,    2,   32,   33,   34,   35,   36,   37,
      128,  126,    2,  128,  129,   79,  131,    1,   40,   41,
       46,    1,   38,   39,   40,   41,   70,   49,   50,   51,
       52,   53,   54,   24,   25,   26,   60,   81,   82,   61,
       62,   63,   64,   65,   66,   67,   68,   69,  101,  102,
      103,  104,  105,  106,  107,  108,  109,  110,   51,   52,
       53,   83,   84,   22,   48,   87,   88,   89,   90,   91,
       92,    1,    1,   95,   96,   97,   60,   22,  100,  101,
      102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,   20,   57,   51,   52,   53,  130,   55,   63,   57,
        2,   59,  128,  129,  126,   70,  128,  129,  130,  131,
       46,   40,   41,   46,   59,    1,   81,   82,   48,   56,
       49,   50,   51,   52,   53,   54,   56,    2,    2,  128,
       60,    2,   61,   62,   63,   64,   65,   66,   67,   68,
       69,  121,  122,  123,  124,  125,   19,   56,   21,   79,
       23,   24,   25,   26,   83,   84,    2,   31,   87,   88,
       89,   90,   91,   92,  129,  130,   95,   96,   97,  128,
       56,  100,  101,  102,  103,  104,  105,  106,  107,  108,
      109,  110,  111,  112,  121,  122,  123,  124,  125,   42,
       43,   44,  128,  129,   57,   31,  129,  126,   31,  128,
      129,  130,  131,    3,    4,    5,    6,    7,    8,    9,
       10,   11,   12,   13,   14,   15,   16,   17,   18,   19,
      129,   21,   18,   23,   24,   25,   26,   27,   28,   29,
       30,   31,   32,   33,   34,   35,   36,   37,   38,   39,
       40,   41,   42,   43,   44,   45,   46,    0,    1,   57,
       20,   51,   52,   53,  128,   55,   22,   57,   63,   59,
       49,   18,   70,   59,   47,   54,  129,   20,    2,    1,
       40,   41,    1,   81,   82,   64,   81,   82,    1,   49,
       50,   51,   52,   53,   54,   25,   26,   40,   41,   59,
       18,   61,  128,   57,   60,  128,   49,   50,   51,   52,
       53,   54,  127,    2,   18,  130,   70,  120,   61,   62,
       63,   64,   65,   66,   67,  128,   69,   81,   82,   18,
       22,  129,   21,   26,   56,  130,   60,   56,   40,   41,
       83,   84,   22,   56,   87,   88,   89,   90,   91,   92,
       27,   28,   95,   96,   97,  128,   27,  100,  101,  102,
      103,  104,  105,  106,  107,  108,  109,  110,  111,  112,
       22,   60,   45,   46,   22,  129,   61,   62,   64,   65,
       22,   93,   94,  126,   22,  128,  129,   22,  131,    3,
        4,    5,    6,    7,    8,    9,   10,   11,   12,   13,
       14,   15,   16,   17,   18,   19,   22,   21,   47,   23,
       24,   25,   26,   27,   28,   29,   30,   31,   32,   33,
       34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
       44,   45,   46,    1,   98,   99,   22,   51,   52,   53,
       22,   55,   22,   57,   42,   43,   44,   45,   46,  128,
      129,   46,   20,   51,   52,   53,   47,   55,   47,   57,
       47,   59,  128,  129,   47,  128,  129,  128,  129,   47,
       51,   48,   40,   41,   48,   59,   55,   62,   74,   85,
       56,   49,   50,   51,   52,   53,   54,   56,   58,   60,
       63,   58,   58,   61,   62,   63,   64,   65,   66,   67,
       58,   69,   58,   58,   58,   58,   58,   58,   58,  111,
       59,   59,   59,   59,   59,   83,   84,   59,   59,   87,
       88,   89,   90,   91,   92,   60,    1,   95,   96,   97,
       60,   60,  100,  101,  102,  103,  104,  105,  106,  107,
      108,  109,  110,  111,  112,   20,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,  126,   60,
      128,  129,   60,  131,   60,   40,   41,   60,   60,   86,
       95,   87,  129,   75,   49,   50,   51,   52,   53,   54,
      120,  120,  120,  120,  127,  129,   61,   62,   -1,   -1,
      126,   -1,   -1,  127,   -1,  128,  128,  128,   -1,    1,
      128,  128,  128,   -1,  128,  128,  128,  128,   83,   84,
      128,  130,   87,   88,   89,   90,   91,   92,   20,   -1,
       95,   96,   97,   98,   99,  100,  101,  102,  103,  104,
      105,  106,  107,  108,  109,  110,  111,  112,   40,   41,
      128,  128,  128,  128,  128,  128,  128,   49,   50,   51,
       52,   53,   54,  128,  129,  130,  131,  128,  128,   61,
       62,  128,  128,  128,  128,  128,  128,  128,   -1,  129,
      129,  129,    1,  129,  129,  129,   -1,  130,  130,  130,
      130,   83,   84,  130,  130,   87,   88,   89,   90,   91,
       92,   20,  130,   95,   96,   97,   98,   99,  100,  101,
      102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,   40,   41,  130,  130,  130,  130,  130,  130,  130,
       49,   50,   51,   52,   53,   54,  128,  129,   -1,  131,
      130,  130,   61,   62,  130,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,    1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   83,   84,   -1,   -1,   87,   88,
       89,   90,   91,   92,   20,   -1,   95,   96,   97,   -1,
       -1,  100,  101,  102,  103,  104,  105,  106,  107,  108,
      109,  110,  111,  112,   40,   41,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   49,   50,   51,   52,   53,   54,  128,
      129,  130,  131,   -1,   -1,   61,   62,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   83,   84,   -1,
       -1,   87,   88,   89,   90,   91,   92,   20,   -1,   95,
       96,   97,   -1,   -1,  100,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,   40,   41,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   49,   50,   51,   52,
       53,   54,  128,  129,  130,  131,   -1,   -1,   61,   62,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       83,   84,   -1,   -1,   87,   88,   89,   90,   91,   92,
       -1,   -1,   95,   96,   97,   -1,   -1,  100,  101,  102,
      103,  104,  105,  106,  107,  108,  109,  110,  111,  112,
       20,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,  128,  129,   -1,  131,   -1,
       40,   41,   -1,   43,    1,   -1,   -1,   -1,   -1,   49,
       50,   51,   52,   53,   54,   -1,   56,   57,   -1,   59,
       -1,   61,   -1,   20,   -1,   -1,   -1,   -1,   -1,   -1,
       70,   71,   72,   73,   74,   -1,   76,   77,   78,   79,
       80,   81,   82,   40,   41,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   49,   50,   51,   52,   53,   54,   -1,   -1,
       -1,   -1,   -1,   -1,   61,   -1,   -1,   -1,   -1,    1,
       -1,   -1,   -1,  113,  114,  115,  116,  117,  118,  119,
       -1,   -1,   -1,   -1,   -1,   -1,   83,   84,   20,  129,
       87,   88,   89,   90,   91,   92,   -1,   -1,   95,   96,
       97,   -1,   -1,  100,   -1,   -1,   -1,   -1,   40,   41,
       -1,   -1,   -1,   -1,  111,  112,   -1,   49,   50,   51,
       52,   53,   54,   -1,   -1,   -1,   -1,   59,   -1,   61,
       62,  128,  129,    3,    4,    5,    6,    7,    8,    9,
       10,   11,   12,   13,   14,   15,   16,   17,   18,   19,
       -1,   21,   -1,   23,   24,   25,   26,   27,   28,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  101,
      102,  103,  104,  105,  106,  107,  108,  109,  110,    3,
        4,    5,    6,    7,    8,    9,   10,   11,   12,   13,
       14,   15,   16,   17,   18,   19,  128,   21,   -1,   23,
       24,   25,   26,   -1,   -1,   -1,   -1,   31,    3,    4,
        5,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   -1,   21,   -1,   23,   24,
       25,   26,   27,    3,    4,    5,    6,    7,    8,    9,
       10,   11,   12,   13,   14,   15,   16,   17,   18,   19,
       -1,   21,   -1,   23,   24,   25,   26,    3,    4,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   -1,   21,   -1,   23,   24,   25,
       26,    3,    4,    5,    6,    7,    8,    9,   10,   11,
       12,   13,   14,   15,   16,   17,   18,   19,   -1,   21,
       -1,   23,   24,   25,    3,    4,    5,    6,    7,    8,
        9,   10,   11,   12,   13,   14,   15,   16,   17,   18,
       19,   -1,   21,   -1,   23,   24,    3,    4,    5,    6,
        7,    8,    9,   10,   11,   12,   13,   14,   15,   16,
       17,   18,   19,   -1,   21,   20,   23,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   40,   41,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   49,   50,   51,   52,   53,   54,
       -1,   56,   -1,   -1,   59,   -1,   61,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   70,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   81,   82
  ];

  private static $yybase = [
      185,  371,  371,  278,  547,  722,  722,  815,  888, 1034,
      961,  266, 1107, 1107,  -20,  832,  834,  835,   59,  341,
     1243, 1243, 1243, 1243, 1243, 1243, 1243, 1243, 1243, 1243,
     1243,  769,  774,  789,  829,  767,  766,  764,  598,  734,
      738,  638,  723,  852,  771,  642,  736,  798,  797,  794,
      648,  837,  763,  792,  758,  757,  676,  500,  500,  500,
      500,  500,  500,  500,  500, 1416,  500,  500,  500,  500,
      500, 1308, 1494, 1494, 1494,  320,  320,   52,  316,  826,
      716,  785,  713,  688,  827,   50,  674,   33,  655,   29,
      652,   31, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200,
     1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200,
     1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200,
     1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200,
     1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200,
     1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200,
     1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200,
     1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200,
     1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200,
     1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200,
     1200,  530,  530,  530,  530,  530,  530,  530, 1200, 1200,
     1200, 1200, 1200, 1200, 1200, 1200,  530,  530,  530,  530,
      530,  530,  530,  530,  530,  530,  530,  530,  530,  530,
      530,  530,  530,  530,  530,  530,  530,  530,  530,  530,
      530,  530,  530,  530,  530,  530,  530,  530,  530,  530,
      530,  530,  530,  530,  530, 1200, 1200,  530, 1200, 1200,
     1200, 1200, 1200, 1200, 1200,  530,  530,  530,  530, 1200,
     1200, 1200, 1200, 1200,  530,  530, 1200, 1200, 1200,  203,
      203,  203,  203,  203,  203,  203,  203,  203,  203,  203,
      203,  203,  203,  203,  203,  203,  203,  203,  203,  203,
      203,  203,  203,  203,  203,  203,  203,  203,  203,  203,
      203,  203,  203,  184,  184,  184,  427,  427,  427,  427,
      427,  427,  427,  427,  427,  427,  427,  427,  427,  427,
      427,  427,  427,  184,  184,  206,  206,  206, 1563, 1563,
     1541, 1541,  309, 1518, 1518,  560, 1470, 1470,  597, 1445,
     1445,  -26, 1370, 1370,  619,  613,  224,  224,  224,  224,
       -6,   -6, 1565,  335,  492,  492,  536,  284,  284,  284,
      284,  284,  284,  284,  284,  284,  284,  272,  272,  272,
      272,  495,  495,  495,  141,  588,  588,  588,  588,   79,
       79,  843,  692,  692,  692,  692,  692,  692,  198,  198,
      198,  247,  247,  247,  363,  363,  363,  363,  363,  363,
      363,  363,  363,  363,  363,  363,  370,  447,  447,  447,
      447,  447,  447,  447,  447,  617,  617,  617,  617,   88,
       88,   88,   88,   88,   88,   88,   88,  342,  342,  342,
      342,   88,   88,  342,  342,  437,  437,  437,  437,  437,
      571,  437,  437,  414,  568,  437,  391,  -17,  -17,  -17,
      -17,  391,  307,  307,  577,  511,  714,  714,  714,  714,
      714,  714,  714,  714,  714,   27,  744,   38,  744,  714,
      762,  759,  604,  601,  274,  256,  839,  256,  256,  256,
      256,  256,  256,  256,  256,  256,  256,  256,  256,  256,
      256,  256,  256,  256,  517,  256,  256,  256,  256,  256,
      256,  256,  256,  256,  364,  629,  475,  426,  534,  626,
      578,  694,  578,  745,  211,  707,  743,  828,  355,  651,
      703,  701,  699,  712,  805,  807,  756,  117,  627,  605,
      487,  802,  611,  464,  467,  747,  803,  720,  838,  566,
      276,  236,  367,  840,  755,  831,  768,  301,  504,   34,
      787,  624,  844,  182,  717,  684,  748,  773,  748,  749,
      836,  749,  749,  754,  741,  177,  836,  741,  744,  264,
      749,  836,  694,  694,  717,  749,  684,  741,  744,  709,
      711,  744,  744,  744,  744,  836,  836,  836,  830,    5,
      721,  610,  788,  721,  735,  739,  776,  783,  721,  825,
      765,  824,  823,  820,  733,  751,  742,  746,  543,  894,
      891,  710,  706,  890,  784,  705,  752,  753,  750,  724,
      786,  708,  719,  721,  732,  806,  879,  721,  454,  760,
      878,  804,  782,  572,  281,  772,  704,  695,  877,  778,
      876,  222,  875,  281,  740,  781,  780,  761,  586,  874,
      777,  721,  310,  808,  779,  873,  737,  819,    0, 1200,
     1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200,
      -20, 1200, 1200,    0,   59,   59,   59,    0,  500, 1200,
     1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200,
      500,  500,  500,  500,  500,  500,  500,  500,  500,  500,
      500,  500,  500,  500,  500,  500,  500,  500,  500,  500,
      500,  500,  500,  500,  500,  741,    0,    0,    0,    0,
        0,    0,    0,    0,  -26,    0,    0,    0,    0,    0,
     1200,  -26,  -26,  -26, 1200, 1200, 1200, 1200, 1200, 1200,
     1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200,
     1200,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1200, 1200, 1200, 1200, 1200, 1200, 1200,    0,    0,    0,
        0,    0,    0,    0,    0, 1200, 1200, 1200, 1200, 1200,
     1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200,
     1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200,
     1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200,
     1200, 1200, 1200, 1200,    0,    0, 1200,    0,    0,    0,
        0,    0,    0,    0, 1200, 1200, 1200, 1200,    0,    0,
        0,    0,    0, 1200, 1200,    0,    0,    0,  500,  500,
      500,  500,  500,  500,  500,  500,  500,  500,  500,  500,
      500,  500,  500,  500,  500,  500,  500,  500,  500,  500,
      500,  500,  500,  500,  500,  500,  500,  500,  500,  500,
      500,  500,  500,  500,  500,  -26,  -26,  -26,  -26,  -26,
      -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,
      -26,  -26,  500,  500,  -26,  -26,  -26,  500,  500,  500,
      500,  -26,  500,  500,  -26,  500,  500,  -26,  500,  500,
        0,  500,  500,  -26,  -26,  692,  692,  692,  692,  -26,
      -26, 1200,  247,  247,  247,  247,  692,  692,  692,  692,
      692,  692,  692,  692,  692,  692,  -26,  -26,  -26,  -26,
      247,  247,  247,  247,  692,  692,  692,  692,  -26,  -26,
      247,    0,    0,    0,    0,    0,    0,  342,  342,  342,
        0,    0,    0,  256,  256,  256,  256,  256,  256,  256,
      256,  256,  256,  256,  256,  256,  692,  692,  692,  692,
      692,  692,  692,  692,  342,  342,  342,  342,  692,  692,
      692,  692,  692,  692,  692,  692,    0,    0,    0,    0,
      692,  692,    0,    0,  256,  256,  256,  256,  256,  256,
      256,  256,  256,  256,  256,  256,  741,  741,  741,  741,
      256,  342,  342,  256,  605,  256,  256,  256,  256,  256,
      256,  256,  256,  256,  256,  256,  256,  256,  256,  256,
      256,  605,    0,  721,    0,  626,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  836,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  721,  825,    0,  721,    0,    0,
      836,    0,  836,    0,  836,  836,  744,    0,  836,  836,
      836,  836,  836,  836,  836,  825,    0,    0,    0,    0,
      222,    0,    0,    0,  825,  222,  429,  429,    0,    0,
        0,    0,  398,  454,  721,  425,    0,    0,    0,  425,
        0,  398
  ];

  private static $yydefault = [
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,  641,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,  573,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,  254,  572,  255,  460,
      573,  256,   75,  462,  580,32767,  461,  167,  257,  170,
      172,32767,  258,  259,   79,32767,32767,32767,32767,32767,
      641,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  289,
      290,  291,  292,  293,  294,  295,  296,  297,  298,  299,
      300,  301,  302,  303,  288,  277,  351,  352,  353,  354,
      355,  356,  357,  358,  359,  360,  361,  362,  363,  364,
      365,  350,  339,  373,  309,  371,  415,  416,  417,  418,
      419,  420,  421,  422,  423,  424,  425,  426,  427,  428,
      429,  414,  404,  308,  370,  437,  435,  434,  275,  337,
      276,  338,  402,  274,  336,  403,  268,  330,  401,  269,
      331,  395,  267,  329,  396,  394,  280,  281,  342,  343,
      407,  408,32767,   55,   56,   56,   56,  282,  272,  273,
      271,  270,  344,  334,  335,  332,  333,  399,  400,  397,
      398,   55,   55,   55,   55,  278,  279,  340,  341,  405,
      406,   55,  260,  261,  266,  322,  323,  328,  387,  388,
      393,   55,   55,   56,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,  262,  263,  264,
      265,  324,  325,  326,  327,  389,  390,  391,  392,  312,
      311,  314,  313,  375,  374,  377,  376,  439,  438,  441,
      440,  155,  153,  159,  157,   70,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,  315,  316,  378,
      379,32767,  442,  443,32767,32767,32767,  174,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,  472,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,  175,32767,32767,32767,32767,32767,32767,32767,  483,
      484,32767,32767,32767,32767,32767,32767,32767,32767,32767,
      187,32767,  188,32767,   92,32767,32767,32767,   88,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,   51,32767,32767,32767,32767,32767,   43,  168,
    32767,32767,32767,32767,  229,  214,  451,  219,  452,32767,
    32767,32767,32767,    3,  317,  640,32767,  380,32767,  640,
    32767,32767,32767,32767,  230,32767,  215,  444,32767,   99,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
      466,  472,32767,  475,32767,32767,32767,32767,   54,32767,
    32767,32767,32767,32767,32767,32767,   41,32767,   74,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,  472,32767,  176,32767,32767,32767,   98,   93,32767,
    32767,32767,32767,   78,  147,32767,32767,  236,32767,32767,
    32767,   71,32767,  146,32767,32767,32767,32767,  171,32767,
    32767,  104,  100,32767,32767,32767,32767,32767,  470
  ];

  private static $yygoto = [
       32,   59,   61,   60,   61,   59,   34,   36,  667,   38,
       39,   41,   42,   45,   46,   31,  419,  420,  421,  422,
      447,  448,   35,   19,  303,  423,  424,  425,  426,  449,
      450,   57,   37,   58,  269,  270,  271,  272,  273,  274,
      275,  276,  277,  278,  279,  280,  281,  282,  283,  284,
      285,  328,  330,  333,  336,  339,  342,  346,  347,  357,
      358,  359,  360,  361,  375,  376,  382,  383,  407,  408,
      409,  410,  384,   40,  286,  287,  288,  289,  290,  291,
      292,  293,  294,  295,  296,  297,  298,  299,  300,  301,
      302,  329,  331,  334,  337,  340,  343,  348,  349,  362,
      363,  364,  365,  366,  377,  378,  385,  386,  411,  412,
      413,  414,  387,  556,  678,  626,  642,  655,  679,  678,
      699,   62,  304,   43,   63,  431,   64,  305,   44,  591,
      591,  591,  591,  591,  591,  591,  591,  591,  591,  591,
     1240,  591,  591, 1240, 1144, 1144, 1144, 1144,  630,  591,
      591,  591,  591,  591,  591,  591,  591,  591,  591,  591,
     1107,  647,  597,  632,  717,  717,  717,  674,   47,   48,
      668,   49,   50,  323,   66,   67,  432,  324,  901,  748,
      756,   10,   51,   68,   52,   69,   53,  641,  536,   70,
       54,   55,  979,  979,  979,  979,  979,  979,  979,  979,
      979,  979,  979,  717,  979,  979, 1230,  621, 1238,  550,
     1221,  621,  979,  979,  979,  979,  979,  979,  979,  979,
      979,  979,  979,  980,  980,  980,  980,  980,  980,  980,
      980,  980,  980,  980,  794,  980,  980,  794, 1118,  866,
      698, 1219, 1223,  980,  980,  980,  980,  980,  980,  980,
      980,  980,  980,  980,  796,  796,  796,  796, 1220,  796,
      796,  767,  785, 1106,  643,  732,  537,  600,  555,  859,
      844,  877,  880,  842,  839,  840,  841,  843,  736,  823,
     1107, 1107, 1107, 1107, 1107, 1107, 1107,  741,  552,  633,
      628,  894,  709,  762,  504, 1107, 1107, 1107, 1107, 1107,
     1107, 1107, 1107, 1107, 1107, 1107, 1107, 1107, 1107, 1107,
     1107, 1107, 1107, 1107, 1107, 1107, 1107, 1107, 1107, 1107,
     1107, 1107, 1107, 1107, 1107, 1107, 1107, 1107, 1107, 1107,
     1107, 1107, 1107, 1107,  617,  650, 1107,  882,  849, 1236,
      891,  876,    0,  897, 1107, 1107, 1107, 1107,  771,    0,
        0,    0,    0, 1107, 1107,  567,  942,  943,  944, 1004,
     1005, 1006,  577, 1068, 1069, 1070,  771,  771,  771,  771,
        0,  633,  741,  741,    0,    0,  633,    0,    0,  742,
        0,    0,    0, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
        0,    0,    0,    0,    0,    0,    0,    0, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106,  969,    0, 1106,
        0, 1222,    0,    0,    0,    0, 1095, 1106, 1106, 1106,
     1106,    0,    0, 1095, 1095, 1095, 1106, 1106,    0,    0,
        0,    0,    0, 1241,    0,    0, 1241,    0,    0,    0,
        0,    0,  325,  427,  428,  429,  430,  452,  453,    0,
        0,    0,  743,  743,  743,  743,    0,   65,  306,  307,
      308,  309,  310,  311,  312,  313,  314,  315,  316,  317,
      318,  319,  320,  321,  322,  332,  335,  338,  341,  344,
      345,  350,  351,  367,  368,  369,  370,  379,  380,  388,
      389,  415,  416,  417,  418,  390,    0,    0,   73,    0,
        0,   21,    0,   22,  604,  473,  558,  433,   74,  326,
        0,    0,  631,    0,    0,  434,  327,   24,    0,  355,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  743,  743,  743,  743,  743,    0,
      743,  743,    0,    0,  743,    0,  800,  800,  800,  800,
        0,  800,  800,    0,    0,    0,  473,    0,    0,    0,
        0,    0,    0,    0,  606,  568,  606,  578,    0,  602,
      603,    0,    0,    0,  637,    0,  548,  637,  548,  978,
     1132,  528,  514,  601, 1041, 1133,  517,  518,  625, 1105,
      549,  581,  582,    0,  832,  711,  896,  653,  581,  582,
      654,  553,  657,    0,    0,    0,    0,    0,  963,  802,
      802,  802,  802,  807,  802,  802,    0, 1089,    0,    0,
        0,    0,    0,    0, 1089, 1089, 1089,    0,    0,    0,
      852,    0,  845,    0,  813,  883,    0,    0,  811,  817,
      815,  777,  779,  776,  774,  529,  529,  529,  529,    0,
      529,  529,    0,    0,    0,    0,    0, 1095, 1095, 1095,
     1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095,
     1095, 1095, 1095, 1095,    0,    0, 1095, 1095, 1095,  510,
        0,    0,    0, 1095,    0,  853, 1095,    0,    0, 1095,
      887,    0, 1095,    0,    0, 1095, 1095,    0,    0,    0,
        0, 1095, 1095,    0,  886,  884,  885,    0,    0,  615,
      801,  801,  801,  801,    0,  801,  801,    0, 1095, 1095,
     1095, 1095,    0,    0,    0,    0,    0,    0,  520,    0,
     1095, 1095,    0,    0,    0,    0,    0,    0,    0, 1095,
     1095, 1095,    0,    0,    0,    0,    0,    0,  593,  593,
      593,  593,  593,  593,  593,  593,  593,  593,  593,  593,
      623,    0,    0,    0,    0,    0, 1095, 1095, 1095, 1095,
        0,    0,    0,    0, 1218,    0,    0,  494, 1095, 1095,
     1095, 1095,    0,    0, 1095, 1095,    0,    0,    0,    0,
        0,    0,    0,    0,  627,    0,    0,  651,  627,    0,
      505,  356,    0, 1095, 1095,  545,    0,    0,  508,    0,
      598,  623,  598,  627,  598,  598,  627,  627,  651,  356,
      356,  356,  356,  474,    0,    0,    0,    0,  519,  393,
        0,    0,    0,    0,    0,    0,    0,    0,  521,  393,
      393,  522,  523,  524,  525,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1089, 1089,
     1089, 1089, 1089, 1089, 1089, 1089, 1089, 1089, 1089, 1089,
     1089, 1089, 1089, 1089, 1089,    0,    0, 1089, 1089, 1089,
        0,    0,    0,    0, 1089,    0,    0, 1089,    0,    0,
     1089,    0,  768, 1089,    0,    0, 1089, 1089,    0,    0,
        0,    0, 1089, 1089,    0,    0,    0,    0,    0, 1095,
      768,  768,  768,  768,    0,  977,    0,    0, 1040, 1089,
     1089, 1089, 1089,    0,    0,    0,    0,    0, 1104,    0,
        0, 1089, 1089,  566,    0,    0,    0,    0,    0,    0,
     1089, 1089, 1089,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  770,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 1089, 1089, 1089,
     1089,    0,    0,  770,  770,  770,  770,    0,    0, 1089,
     1089, 1089, 1089,    0,    0, 1089, 1089,    0,    0,    0,
        0,  455,    0,    0,  635,  638,    0,    0,    0,    0,
        0,    0,    0,    0, 1089, 1089,    0,    0,    0,  455,
      455,  455,  455,    0,    0,    0,    0,    0,    0,  502,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  502,
      503,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  769,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  769,  769,  769,  769,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1089,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  648
  ];

  private static $yygcheck = [
       26,   26,   26,   26,   26,   26,   26,   26,    7,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   12,   50,   50,   50,   12,   12,
       12,   26,   26,   26,   26,   26,   26,   26,   26,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,    9,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
      106,   51,  108,  108,   38,   38,   38,   11,   26,   26,
        5,   26,   26,   26,   26,   26,   26,   26,   99,   51,
       51,   63,   26,   26,   26,   26,   26,   40,   40,   26,
       26,   26,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,   38,  104,  104,  119,   30,  122,   80,
      113,   30,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,   29,  105,  105,   29,  110,   29,
       29,  111,  114,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,   25,   25,   25,   25,  112,   25,
       25,   57,   62,  104,   43,   41,   47,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   44,   70,
      106,  106,  106,  106,  106,  106,  106,   42,   34,   42,
       53,   96,   35,   55,   33,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,   27,   31,  106,   92,   82,  118,
       94,   90,   -1,   97,  106,  106,  106,  106,   16,   -1,
       -1,   -1,   -1,  106,  106,  102,  102,  102,  102,  102,
      102,  102,  102,  102,  102,  102,   16,   16,   16,   16,
       -1,   42,   42,   42,   -1,   -1,   42,   -1,   -1,   42,
       -1,   -1,   -1,  104,  104,  104,  104,  104,  104,  104,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  103,   -1,  104,
       -1,  106,   -1,   -1,   -1,   -1,  103,  104,  104,  104,
      104,   -1,   -1,  103,  103,  103,  104,  104,   -1,   -1,
       -1,   -1,   -1,   84,   -1,   -1,   84,   -1,   -1,   -1,
       -1,   -1,   45,   45,   45,   45,   45,   45,   45,   -1,
       -1,   -1,   30,   30,   30,   30,   -1,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   -1,   -1,   45,   -1,
       -1,   74,   -1,   74,   74,   30,   45,   45,   45,   45,
       -1,   -1,   74,   -1,   -1,   45,   45,   74,   -1,   37,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   30,   30,   30,   30,   30,   -1,
       30,   30,   -1,   -1,   30,   -1,   21,   21,   21,   21,
       -1,   21,   21,   -1,   -1,   -1,   30,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   30,   30,   30,   30,   -1,   30,
       30,   -1,   -1,   -1,   30,   -1,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   -1,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   -1,   -1,   -1,   -1,   -1,   73,   23,
       23,   23,   23,   60,   23,   23,   -1,   73,   -1,   -1,
       -1,   -1,   -1,   -1,   73,   73,   73,   -1,   -1,   -1,
       60,   -1,   60,   -1,   60,   60,   -1,   -1,   60,   60,
       60,   60,   60,   60,   60,   36,   36,   36,   36,   -1,
       36,   36,   -1,   -1,   -1,   -1,   -1,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,   -1,   -1,  103,  103,  103,   60,
       -1,   -1,   -1,  103,   -1,   60,  103,   -1,   -1,  103,
       60,   -1,  103,   -1,   -1,  103,  103,   -1,   -1,   -1,
       -1,  103,  103,   -1,   60,   60,   60,   -1,   -1,   36,
       22,   22,   22,   22,   -1,   22,   22,   -1,  103,  103,
      103,  103,   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,
      103,  103,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  103,
      103,  103,   -1,   -1,   -1,   -1,   -1,   -1,    8,    8,
        8,    8,    8,    8,    8,    8,    8,    8,    8,    8,
        8,   -1,   -1,   -1,   -1,   -1,  103,  103,  103,  103,
       -1,   -1,   -1,   -1,   84,   -1,   -1,   59,  103,  103,
      103,  103,   -1,   -1,  103,  103,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,    8,   -1,   -1,    8,    8,   -1,
        8,   37,   -1,  103,  103,    8,   -1,   -1,    8,   -1,
        8,    8,    8,    8,    8,    8,    8,    8,    8,   37,
       37,   37,   37,    8,   -1,   -1,   -1,   -1,   59,   37,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   37,
       37,   59,   59,   59,   59,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   -1,   -1,   73,   73,   73,
       -1,   -1,   -1,   -1,   73,   -1,   -1,   73,   -1,   -1,
       73,   -1,   21,   73,   -1,   -1,   73,   73,   -1,   -1,
       -1,   -1,   73,   73,   -1,   -1,   -1,   -1,   -1,  103,
       21,   21,   21,   21,   -1,  103,   -1,   -1,  103,   73,
       73,   73,   73,   -1,   -1,   -1,   -1,   -1,  103,   -1,
       -1,   73,   73,   84,   -1,   -1,   -1,   -1,   -1,   -1,
       73,   73,   73,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   23,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   73,   73,   73,
       73,   -1,   -1,   23,   23,   23,   23,   -1,   -1,   73,
       73,   73,   73,   -1,   -1,   73,   73,   -1,   -1,   -1,
       -1,   36,   -1,   -1,   84,   84,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   73,   73,   -1,   -1,   -1,   36,
       36,   36,   36,   -1,   -1,   -1,   -1,   -1,   -1,   36,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   36,
       36,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   22,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   22,   22,   22,   22,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       73,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   73
  ];

  private static $yygbase = [
        0,    0,    0,    0,    0,  165,    0,    8,  384,  146,
        0,  164,  114,    0,    0,    0,   -5,    0,    0,    0,
        0,  569,  733,  632,    0,  247,  -77, -133,    0,  227,
      129, -144,    0, -167, -170, -168,  668,  478, -190,    0,
     -248, -176,  -66, -173, -164,  281,    0, -172,    0,    0,
     -256, -283,    0, -169,    0, -171,    0, -113,    0,  290,
      149,    0, -129,  172,    0,    0,    0,    0,    0,    0,
     -178,    0,    0,  582,  -28,    0,    0,    0,    0,    0,
      128,    0, -174,    0,  452,    0,    0,    0,    0,    0,
     -235,    0, -175,    0, -234,    0, -187, -166,    0,  170,
        0,    0,  -40,  381,  192,  223,   89,    0,   87,    0,
      156, -111,  -94, -142, -110,    0,    0,    0, -230,  126,
        0,    0,  194,    0
  ];

  private static $yygdefault = [
    -32768,  589,  563,  661,  664,  665,  666,  676,  590,  613,
        3,  673,  675,    4,  680,  682,  683,  684,  685,  686,
      687,  688,  689,  690,  691,  694,   33,  530,  797,  793,
     1131,  639,  703,  542,  543,  708,  472,  354,  716,  640,
      531,  731,  608,  634,  735,   72,  744,  538,  579,  551,
      649,  755,  532,  544,  652,  761,  374,  766,  772,  515,
      836,  381,  786,    7,  795,  533,  534, 1044, 1108,  540,
      822,  491,  541, 1025, 1128,  557,  838,  507,   79,   81,
      546,  512,  848,  573, 1127,  476,  867,  869,  870,  576,
      875,  879,  881,  574,  890,  547,  893,  898,    8,  900,
      527,   56,  564, 1031, 1042, 1045, 1043, 1109, 1135,  539,
     1117, 1122, 1123, 1124, 1126,  592,  595,  565, 1228, 1229,
      610,  569, 1237,  611
  ];

  private static $yylhs = [
        0,    1,    1,    3,    3,    2,    2,    4,    4,    6,
        7,    7,    9,    9,   10,   10,   11,   11,    5,   13,
       13,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   24,   24,   15,   28,
       20,   27,   27,   31,   31,   31,   14,   14,   14,   34,
       34,   35,   35,   35,   33,   36,   36,   37,   37,   38,
       38,   38,   38,   38,   38,   38,   38,   38,   38,   16,
       39,   39,   40,   40,   41,   41,   43,   43,   44,   44,
       46,   46,   47,   47,   42,   42,   17,   17,   48,   48,
       48,   48,   52,   52,   52,   52,   53,   53,   51,   49,
       49,   49,   54,   54,   55,   50,   50,   56,   56,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   58,   58,   58,   61,   61,   62,   62,
       18,   18,   19,   19,   63,   63,   29,   29,   29,   29,
       29,   64,   64,   64,   22,   23,   65,   66,   21,   21,
       21,   21,   67,   67,   67,   67,   68,   68,   68,   68,
       59,   59,   59,   69,   69,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   72,   72,   71,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       79,   78,   78,   78,   75,   75,   89,   89,   90,   76,
       76,   91,   81,   81,   92,   92,   92,   92,   82,   83,
       83,   93,   93,   94,   95,   95,   96,   96,   85,   85,
       97,   98,   98,   99,   99,   60,   60,   60,   86,   86,
       87,   87,   88,   88,  100,  100,   80,   80,   77,   77,
      101,  101,  101,  101,  101,  101,  101,  101,  101,  101,
      101,  101,  101,  101,  101,  101,  101,  101,  101,  101,
      101,  101,  101,  101,  101,  101,  101,  101,  101,  101,
      101,  101,  101,  101,  101,  101,  101,  101,  101,  101,
      101,  101,  101,  101,  101,  101,  101,  101,  101,  101,
      101,  101,  101,  101,  101,  101,  101,  101,  101,  101,
      101,  101,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   26,   26,   26,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,  105,  107,   74,   74,  103,  103,  103,  109,  109,
      110,  110,  110,  104,  104,  104,  104,  104,  104,  104,
      115,  112,    8,    8,    8,  102,  102,  108,  108,  108,
      108,  108,   30,   30,   30,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,   84,  111,  111,  111,   32,
       32,   32,   32,   32,   32,  113,  113,  113,  113,  116,
      117,  117,  119,  119,  106,  106,  106,  120,  121,  121,
      122,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      118,  118
  ];

  private static $yylen = [
        1,    0,    2,    0,    1,    1,    1,    1,    1,    4,
        5,    4,    0,    1,    1,    2,    1,    1,    1,    1,
        2,    1,    3,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    2,    1,    1,    3,    4,    4,    4,
        4,    1,    4,    1,    3,    4,    3,    5,    5,    1,
        3,    1,    3,    4,    1,    0,    1,    1,    2,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    5,
        0,    1,    1,    3,    1,    3,    1,    3,    1,    3,
        3,    3,    1,    3,    1,    1,    8,    6,    0,    2,
        3,    3,    0,    2,    3,    3,    1,    3,    1,    0,
        2,    2,    1,    3,    1,    0,    1,    1,    2,    1,
        1,    1,    1,    1,    4,    4,    4,    4,    4,    6,
        4,    6,    4,    3,    5,    5,    1,    2,    3,    6,
        5,    3,    6,    4,    1,    2,    1,    1,    1,    3,
        2,    1,    1,    1,    4,    3,    3,    2,    5,    7,
        5,    4,    4,    5,    3,    4,    4,    5,    3,    4,
        2,    3,    3,    1,    3,    1,    2,    3,    2,    3,
        4,    3,    5,    3,    0,    1,    1,    1,    5,    5,
        7,    7,    7,    6,    7,    5,    2,    2,    3,    3,
        4,    5,    3,    2,    3,    2,    3,    2,    3,    3,
        3,    3,    3,    5,    5,    3,    2,    3,    1,    2,
        1,    1,    2,    2,    0,    1,    1,    2,    3,    0,
        1,    2,    1,    2,    2,    5,    7,    5,    2,    0,
        1,    1,    2,    3,    1,    3,    1,    3,    1,    2,
        2,    1,    2,    3,    2,    2,    3,    3,    2,    1,
        2,    1,    2,    1,    1,    3,    1,    3,    1,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    2,    2,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    2,    5,    4,    4,    5,    4,
        2,    2,    2,    2,    2,    2,    2,    2,    3,    2,
        1,    1,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    2,    2,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    2,    5,    4,    4,
        5,    4,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    3,    2,    1,    1,    1,    1,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    2,    2,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        2,    5,    4,    4,    5,    4,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    3,    2,    1,    1,    1,
        1,    4,    4,    3,    3,    2,    3,    3,    1,    3,
        1,    3,    2,    1,    1,    1,    1,    1,    1,    1,
        0,    3,    1,    2,    3,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    2,    9,    3,    3,    2,
        1,    3,    2,    1,    2,    3,    3,    2,    1,    3,
        3,    1,    1,    3,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        0,    1
  ];
  
    
  private $yyval;
  private $yyastk;
  private $yysstk;
  private $yysp;
  private $yystate;
  private $yyloc; // current location
  
  private $lex;
  private $invalid = false;
  
  /**
   * returns the current location (last scanned token)
   * 
   * @return Location
   */
  public function loc()
  {
    if (!$this->yyloc)
      return new Location('<unknown>', new Position(0, 0));
    
    return $this->yyloc;
  }
  
  /**
   * consumes semicolons to avoid unnecessary empty-expressions 
   * 
   * @void
   */
  private function eat_semis()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_SEMI) {
      do {
        $this->lex->skip();
        $peek = $this->lex->peek();
      } while ($peek->type === T_SEMI);

    }
  }
  
  /**
   * parse function
   * 
   * @param  Lexer  $lex
   * @return Node
   */
  public function parse(Lexer $lex) 
  {
    $tokid = self::TOKEN_NONE;
    
    // lexer
    $this->lex = $lex;
    
    // stacks
    $this->yysstk = [ 0 ]; 
    $this->yyastk = [];
    
    // current state
    $yystate = 0;
    
    // error flag
    $yyerrflag = 0;

    // stack position
    $this->yysp = 0;
    
    // location stack
    $yylstk = [];

    for (;;) {
      if (self::$yybase[$yystate] == 0)
        $yyn = self::$yydefault[$yystate];
      else {
        if ($tokid === self::TOKEN_NONE) {
          // Fetch the next token id from the lexer
          $token = $this->lex->next();
                    
          // invalid token (regexp-scan failed)
          if ($token->type === T_INVL) {
            $this->error_at($token->loc, ERR_ERROR, 'invalid source/regexp-literal');
            return null;
          }
          
          // map the lexer token id to the internally used token id's
          if ($token->type >= 0 && $token->type < self::TOKEN_MAP_SIZE)
            $tokid = self::$translate[$token->type];
          else {
            $this->error_at($token->loc, ERR_ERROR, 'invalid token %d -> %s', 
              $token->type, $token->value);
            return null;
          }        
          
          $this->yyloc = $token->loc;
          
          // store location
          $yylstk[$this->yysp] = $this->yyloc;
          
        } 

        if ((($yyn = self::$yybase[$yystate] + $tokid) >= 0
          && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid
          || ($yystate < self::YY2TBLSTATE
            && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + $tokid) >= 0
            && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid))
          && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT
        ) {
          /*
           * >= YYNLSTATE: shift and reduce
           * > 0: shift
           * = 0: accept
           * < 0: reduce
           * = -YYUNEXPECTED: error
           */
          if ($yyn > 0) {
            /* shift */
            
            $this->yysp++;
            
            $this->yysstk[$this->yysp] = $yystate = $yyn;
            $this->yyastk[$this->yysp] = $token;
            
            // store location
            $yylstk[$this->yysp] = $this->yyloc;
            
            $tokid = self::TOKEN_NONE;
            
            if ($yyerrflag > 0)
              $yyerrflag--;
            
            if ($yyn < self::YYNLSTATES)
              continue;

            /* $yyn >= YYNLSTATES means shift-and-reduce */
            $yyn -= self::YYNLSTATES;
          } else
            $yyn = -$yyn;
        } else
          $yyn = self::$yydefault[$yystate];
      }
      
      for (;;) {
        /* reduce/error */
        if ($yyn == 0) {
          /* accept */
          if ($this->invalid === true)
            return null;
          return $this->yyval;
        } elseif ($yyn != self::YYUNEXPECTED) {
          /* reduce */
//ifnot -t
          $this->{'yyn' . $yyn}();
//endif          
          /* Goto - shift nonterminal */
          $yylen = self::$yylen[$yyn];
          $yyloc = $yylstk[$this->yysp - $yylen];
          
          $this->yysp -= $yylen;
          
          $yyn = self::$yylhs[$yyn];
          
          if (($yyp = self::$yygbase[$yyn]
           + $this->yysstk[$this->yysp]) >= 0
            && $yyp < self::YYGLAST && self::$yygcheck[$yyp] == $yyn)
            $yystate = self::$yygoto[$yyp];
          else
            $yystate = self::$yygdefault[$yyn];
          
          $this->yysp++;
          
          $this->yysstk[$this->yysp] = $yystate;
          $this->yyastk[$this->yysp] = $this->yyval;
          
          // set location if a real node was produced by $yyn
          if ($this->yyval instanceof Node)
            $this->yyval->loc = $yyloc;
          
          // store position
          $yylstk[$this->yysp] = $this->yyloc;
          
        } else {
          /* error */
          $this->invalid = true;
                    
          switch ($yyerrflag) {
            case 0:
              // let the lexer know
              $this->lex->sync = true;
              
              $expa = [];
              $expn = 0;
              $base = self::$yybase[$yystate];
              
              for ($i = 0; $i < self::TOKEN_MAP_SIZE; ++$i) {
                $n = $base + $i;
                if ($n >= 0 && $n < self::YYLAST && self::$yycheck[$n] == $i
                  || $yystate < self::YY2TBLSTATE
                  && ($n = self::$yybase[$yystate + self::YYNLSTATES] + $i)
                  && $n < self::YYLAST && ($n < 0 || self::$yycheck[$n] == $i)
                ) {
                  if ($n >= 0 && self::$yyaction[$n] != self::YYUNEXPECTED) {
                    if ($expn === 4) {
                      /* Too many expected tokens */
                      $expa = null;
                      $expn = 0;
                      break;
                    }

                    $expa[] = self::$terminals[$i];
                    $expn++;
                  }
                }
              }

              $exps = 'unexpected ' . self::$terminals[$tokid];
              
              if ($expn > 0) {
                $last = array_pop($expa);
                $exps .= ', expected ';
                
                if ($expn > 1)
                  $exps .= implode(', ', $expa) . ' or ';
                
                $exps .= $last;
                unset ($expa, $last);
              }
              
              $this->error_at($this->yyloc, ERR_ERROR, $exps);              
            case 1:
            case 2:
              $yyerrflag = 3;  
              
              while (!(($yyn = self::$yybase[$yystate] + self::YYINTERRTOK) >= 0
                && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK
                || ($yystate < self::YY2TBLSTATE
                  && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + self::YYINTERRTOK) >= 0
                  && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK))
              ) {  
                if ($this->yysp <= 0) 
                  return null;
                
                $yystate = $this->yysstk[--$this->yysp];              
              }
              
              $yyn = self::$yyaction[$yyn];
              $this->yysstk[++$this->yysp] = $yystate = $yyn;
              break;
            
            case 3:
              if ($tokid === 0) 
                return null;
              
              $tokid = -1;
              break;
          }
        }

        if ($yystate < self::YYNLSTATES)
          break;
        
        /* >= YYNLSTATES means shift-and-reduce */
        $yyn = $yystate - self::YYNLSTATES;
      }
    }
  }


  private function yyn0() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn1() 
  {
     $this->yyval = new Unit(null); 
  }


  private function yyn2() 
  {
     $this->yyval = new Unit($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn3() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn4() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn5() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn6() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn7() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn8() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn9() 
  {
     $this->yyval = new Module($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn10() 
  {
     $this->yyval = new Module($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); $this->eat_semis(); 
  }


  private function yyn11() 
  {
     $this->yyval = new Module(null, $this->yyastk[$this->yysp-(4-3)]); $this->eat_semis(); 
  }


  private function yyn12() 
  {
     $this->yyval = null; 
  }


  private function yyn13() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn14() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn15() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn16() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn17() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn18() 
  {
     $this->yyval = new Program($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn19() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn20() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn21() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn22() 
  {
     $this->yyval = null; 
  }


  private function yyn23() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn24() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn25() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn26() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn27() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn28() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn29() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn30() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn31() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn32() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn33() 
  {
     $this->yyval = null; 
  }


  private function yyn34() 
  {
     $this->yyval = null; 
  }


  private function yyn35() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn36() 
  {
     $this->yyval = new RequireDecl(false, $this->yyastk[$this->yysp-(3-2)]); $this->eat_semis(); 
  }


  private function yyn37() 
  {
     $this->yyval = new RequireDecl(true, $this->yyastk[$this->yysp-(4-3)]); $this->eat_semis(); 
  }


  private function yyn38() 
  {
     $this->yyval = new AttrDecl($this->yyastk[$this->yysp-(4-2)]); $this->eat_semis(); 
  }


  private function yyn39() 
  {
     $this->yyval = new CompAttr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn40() 
  {
     $this->yyval = new TopexAttr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn41() 
  {
     $this->yyval = new AttrDef($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn42() 
  {
     $this->yyval = new AttrDef($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn43() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn44() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn45() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn46() 
  {
     $this->yyval = new UseDecl($this->yyastk[$this->yysp-(3-2)]); $this->eat_semis(); 
  }


  private function yyn47() 
  {
     $this->yyval = new UseDecl(new UseAlias($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)])); $this->eat_semis(); 
  }


  private function yyn48() 
  {
     $this->yyval = new UseDecl(new UseUnpack($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)])); $this->eat_semis(); 
  }


  private function yyn49() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn50() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn51() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn52() 
  {
     $this->yyval = new UseAlias($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn53() 
  {
     $this->yyval = new UseUnpack($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn54() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn55() 
  {
     $this->yyval = null; 
  }


  private function yyn56() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn57() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn58() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn59() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn60() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn61() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn62() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn63() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn64() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn65() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn66() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn67() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn68() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn69() 
  {
     $this->yyval = new EnumDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); $this->eat_semis(); 
  }


  private function yyn70() 
  {
     $this->yyval = null; 
  }


  private function yyn71() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn72() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn73() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn74() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn75() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn76() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn77() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn78() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn79() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn80() 
  {
     $this->yyval = new ArrDestr($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn81() 
  {
     $this->yyval = new ObjDestr($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn82() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn83() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn84() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn85() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn86() 
  {
     $this->yyval = new ClassDecl($this->yyastk[$this->yysp-(8-1)], $this->yyastk[$this->yysp-(8-3)], $this->yyastk[$this->yysp-(8-4)], $this->yyastk[$this->yysp-(8-5)], $this->yyastk[$this->yysp-(8-7)]); $this->eat_semis(); 
  }


  private function yyn87() 
  {
     $this->yyval = new ClassDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-5)], null); $this->eat_semis(); 
  }


  private function yyn88() 
  {
     $this->yyval = null; 
  }


  private function yyn89() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn90() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn91() 
  {
     $this->yyval = null; 
  }


  private function yyn92() 
  {
     $this->yyval = null; 
  }


  private function yyn93() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn94() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn95() 
  {
     $this->yyval = null; 
  }


  private function yyn96() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn97() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn98() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn99() 
  {
     $this->yyval = null; 
  }


  private function yyn100() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn101() 
  {
     $this->yyval = null; 
  }


  private function yyn102() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn103() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn104() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn105() 
  {
     $this->yyval = []; 
  }


  private function yyn106() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn107() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn108() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn109() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn110() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn111() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn112() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn113() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn114() 
  {
     $this->yyval = new CtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); $this->eat_semis(); 
  }


  private function yyn115() 
  {
     $this->yyval = new CtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn116() 
  {
     $this->yyval = new DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); $this->eat_semis(); 
  }


  private function yyn117() 
  {
     $this->yyval = new DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn118() 
  {
     $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn119() 
  {
     $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); $this->eat_semis(); 
  }


  private function yyn120() 
  {
     $this->yyval = new SetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn121() 
  {
     $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); $this->eat_semis(); 
  }


  private function yyn122() 
  {
     $this->yyval = new NestedMods($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn123() 
  {
     $this->yyval = new TraitUse($this->yyastk[$this->yysp-(3-2)], null, null); $this->eat_semis(); 
  }


  private function yyn124() 
  {
     $this->yyval = new TraitUse($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], null); $this->eat_semis(); 
  }


  private function yyn125() 
  {
     $this->yyval = new TraitUse($this->yyastk[$this->yysp-(5-2)], null, $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn126() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn127() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn128() 
  {
     $this->yyval = new TraitItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, null); $this->eat_semis(); 
  }


  private function yyn129() 
  {
     $this->yyval = new TraitItem($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-6)]); $this->eat_semis(); 
  }


  private function yyn130() 
  {
     $this->yyval = new TraitDecl($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); $this->eat_semis(); 
  }


  private function yyn131() 
  {
     $this->yyval = new TraitDecl($this->yyastk[$this->yysp-(3-2)], null); $this->eat_semis(); 
  }


  private function yyn132() 
  {
     $this->yyval = new IfaceDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); $this->eat_semis(); 
  }


  private function yyn133() 
  {
     $this->yyval = new IfaceDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null); $this->eat_semis(); 
  }


  private function yyn134() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn135() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn136() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn137() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn138() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn139() 
  {
     $this->yyval = null; 
  }


  private function yyn140() 
  {
     $this->yyval = null; 
  }


  private function yyn141() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn142() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn143() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn144() 
  {
     $this->yyval = new LetDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); $this->eat_semis(); 
  }


  private function yyn145() 
  {
     $this->yyval = new VarDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); $this->eat_semis(); 
  }


  private function yyn146() 
  {
     $this->yyval = new LetDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn147() 
  {
     $this->yyval = new VarDecl($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn148() 
  {
     $this->yyval = new FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn149() 
  {
     $this->yyval = new FnDecl($this->yyastk[$this->yysp-(7-1)], $this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-6)]); $this->eat_semis(); 
  }


  private function yyn150() 
  {
     $this->yyval = new FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], null); $this->eat_semis(); 
  }


  private function yyn151() 
  {
     $this->yyval = new FnDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null, null); $this->eat_semis(); 
  }


  private function yyn152() 
  {
     $this->yyval = new FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn153() 
  {
     $this->yyval = new FnExpr($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn154() 
  {
     $this->yyval = new FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn155() 
  {
     $this->yyval = new FnExpr(null, $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn156() 
  {
     $this->yyval = new FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn157() 
  {
     $this->yyval = new FnExpr($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn158() 
  {
     $this->yyval = new FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn159() 
  {
     $this->yyval = new FnExpr(null, $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn160() 
  {
     $this->yyval = null; 
  }


  private function yyn161() 
  {
     $this->yyval = null; 
  }


  private function yyn162() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn163() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn164() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn165() 
  {
     $this->yyval = new Param(null, $this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn166() 
  {
     $this->yyval = new Param(null, $this->yyastk[$this->yysp-(2-1)], null, true); 
  }


  private function yyn167() 
  {
     $this->yyval = new Param(null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn168() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn169() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn170() 
  {
     $this->yyval = new Param($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn171() 
  {
     $this->yyval = new ThisParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn172() 
  {
     $this->yyval = new ThisParam($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn173() 
  {
     $this->yyval = new RestParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn174() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn175() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn176() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn177() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn178() 
  {
     $this->yyval = new DoStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn179() 
  {
     $this->yyval = new IfStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn180() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn181() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn182() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn183() 
  {
     $this->yyval = new ForStmt($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], null, $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn184() 
  {
     $this->yyval = new ForStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn185() 
  {
     $this->yyval = null; 
  }


  private function yyn186() 
  {
     $this->yyval = new ForStmt(null, null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn187() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(2-2)], null, null); 
  }


  private function yyn188() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn189() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(3-2)], null, $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn190() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn191() 
  {
     $this->yyval = new PhpStmt($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn192() 
  {
     $this->yyval = new GotoStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn193() 
  {
     $this->yyval = new TestStmt(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn194() 
  {
     $this->yyval = new TestStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn195() 
  {
     $this->yyval = new BreakStmt(null); 
  }


  private function yyn196() 
  {
     $this->yyval = new BreakStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn197() 
  {
     $this->yyval = new ContinueStmt(null); 
  }


  private function yyn198() 
  {
     $this->yyval = new ContinueStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn199() 
  {
     $this->yyval = new ThrowStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn200() 
  {
     $this->yyval = new WhileStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn201() 
  {
     $this->yyval = new YieldStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn202() 
  {
     $this->yyval = new AssertStmt($this->yyastk[$this->yysp-(3-2)], null); 
  }


  private function yyn203() 
  {
     $this->yyval = new AssertStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn204() 
  {
     $this->yyval = new SwitchStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn205() 
  {
     $this->yyval = new ReturnStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn206() 
  {
     $this->yyval = new ReturnStmt(null); 
  }


  private function yyn207() 
  {
     $this->yyval = new LabeledStmt($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn208() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn209() 
  {
     $this->yyval = null; 
  }


  private function yyn210() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn211() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn212() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn213() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn214() 
  {
     $this->yyval = null; 
  }


  private function yyn215() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn216() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn217() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn218() 
  {
     $this->yyval = new ElsifItem($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn219() 
  {
     $this->yyval = null; 
  }


  private function yyn220() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn221() 
  {
     $this->yyval = new ElseItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn222() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn223() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn224() 
  {
     $this->yyval = new CatchItem(null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn225() 
  {
     $this->yyval = new CatchItem($this->yyastk[$this->yysp-(5-3)], null, $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn226() 
  {
     $this->yyval = new CatchItem($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn227() 
  {
     $this->yyval = null; 
  }


  private function yyn228() 
  {
     $this->yyval = new FinallyItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn229() 
  {
     $this->yyval = null; 
  }


  private function yyn230() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn231() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn232() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn233() 
  {
     $this->yyval = new PhpUse($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn234() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn235() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn236() 
  {
     $this->yyval = new PhpUseItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn237() 
  {
     $this->yyval = new PhpUseItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn238() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn239() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn240() 
  {
     new CaseItem($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn241() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn242() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn243() 
  {
     $this->yyval = new CaseLabel($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn244() 
  {
     $this->yyval = new CaseLabel(null); 
  }


  private function yyn245() 
  {
     $this->yyval = new Block(null); 
  }


  private function yyn246() 
  {
     $this->yyval = new Block($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn247() 
  {
     $this->yyval = null; 
  }


  private function yyn248() 
  {
     $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); $this->eat_semis(); 
  }


  private function yyn249() 
  {
     $this->yyval = new ExprStmt(null); $this->eat_semis(); 
  }


  private function yyn250() 
  {
     $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn251() 
  {
     $this->yyval = new ExprStmt(null); 
  }


  private function yyn252() 
  {
     $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn253() 
  {
     $this->yyval = new ExprStmt(null); 
  }


  private function yyn254() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn255() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn256() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn257() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn258() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn259() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn260() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn261() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn262() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn263() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn264() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn265() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn266() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn267() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn268() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn269() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn270() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn271() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn272() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn273() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn274() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn275() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn276() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn277() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn278() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn279() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn280() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn281() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn282() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn283() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn284() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn285() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn286() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn287() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn288() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn289() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn290() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn291() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn292() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn293() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn294() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn295() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn296() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn297() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn298() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn299() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn300() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn301() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn302() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn303() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn304() 
  {
     $this->yyval = new MemberExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn305() 
  {
     $this->yyval = new MemberExpr(false, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn306() 
  {
     $this->yyval = new MemberExpr(true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn307() 
  {
     $this->yyval = null; 
  }


  private function yyn308() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn309() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn310() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn311() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn312() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn313() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn314() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn315() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn316() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn317() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn318() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn319() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn320() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn321() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn322() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn323() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn324() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn325() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn326() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn327() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn328() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn329() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn330() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn331() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn332() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn333() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn334() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn335() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn336() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn337() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn338() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn339() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn340() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn341() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn342() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn343() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn344() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn345() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn346() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn347() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn348() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn349() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn350() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn351() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn352() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn353() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn354() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn355() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn356() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn357() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn358() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn359() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn360() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn361() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn362() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn363() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn364() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn365() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn366() 
  {
     $this->yyval = new MemberExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn367() 
  {
     $this->yyval = new MemberExpr(false, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn368() 
  {
     $this->yyval = new MemberExpr(true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn369() 
  {
     $this->yyval = null; 
  }


  private function yyn370() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn371() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn372() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn373() 
  {
     $this->yyval = new YieldExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn374() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn375() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn376() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn377() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn378() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn379() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn380() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn381() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn382() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn383() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn384() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn385() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn386() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn387() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn388() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn389() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn390() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn391() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn392() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn393() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn394() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn395() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn396() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn397() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn398() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn399() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn400() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn401() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn402() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn403() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn404() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn405() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn406() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn407() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn408() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn409() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn410() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn411() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn412() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn413() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn414() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn415() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn416() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn417() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn418() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn419() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn420() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn421() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn422() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn423() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn424() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn425() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn426() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn427() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn428() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn429() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn430() 
  {
     $this->yyval = new MemberExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn431() 
  {
     $this->yyval = new MemberExpr(false, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn432() 
  {
     $this->yyval = new MemberExpr(true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn433() 
  {
     $this->yyval = null; 
  }


  private function yyn434() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn435() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn436() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn437() 
  {
     $this->yyval = new YieldExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn438() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn439() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn440() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn441() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn442() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn443() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn444() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn445() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn446() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn447() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn448() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn449() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn450() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn451() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-2)]); $this->error_at($this->yyastk[$this->yysp-(4-1)]->loc, ERR_WARN, 'legacy cast, use `expr as type` instead'); 
  }


  private function yyn452() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-2)]); $this->error_at($this->yyastk[$this->yysp-(4-1)]->loc, ERR_WARN, 'legacy cast, use `expr as type` instead'); 
  }


  private function yyn453() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn454() 
  {
     $this->yyval = null; 
  }


  private function yyn455() 
  {
     $this->yyval = null; 
  }


  private function yyn456() 
  {
     $this->yyval = null; 
  }


  private function yyn457() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn458() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn459() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn460() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn461() 
  {
     $this->yyval = new NamedArg($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn462() 
  {
     $this->yyval = new RestArg($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn463() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn464() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn465() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn466() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn467() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn468() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn469() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn470() 
  {
     $this->lex->scan_regexp($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn471() 
  {
     $this->yyval = new RegexpLit($this->yyastk[$this->yysp-(3-3)]->value); 
  }


  private function yyn472() 
  {
     $this->yyval = new Name($this->yyastk[$this->yysp-(1-1)], false); 
  }


  private function yyn473() 
  {
     $this->yyval = new Name($this->yyastk[$this->yysp-(2-2)], true); 
  }


  private function yyn474() 
  {
     $this->yyastk[$this->yysp-(3-1)]->add($this->yyastk[$this->yysp-(3-3)]); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn475() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn476() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn477() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn478() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn479() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn480() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn481() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn482() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn483() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn484() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn485() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn486() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn487() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn488() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn489() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn490() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn491() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn492() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn493() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn494() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn495() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn496() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn497() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn498() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn499() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn500() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn501() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn502() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn503() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn504() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn505() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn506() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn507() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn508() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn509() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn510() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn511() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn512() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn513() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn514() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn515() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn516() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn517() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn518() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn519() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn520() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn521() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn522() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn523() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn524() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn525() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn526() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn527() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn528() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn529() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn530() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn531() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn532() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn533() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn534() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn535() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn536() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn537() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn538() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn539() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn540() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn541() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn542() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn543() 
  {
     $this->yyval = new ThisExpr; 
  }


  private function yyn544() 
  {
     $this->yyval = new SuperExpr; 
  }


  private function yyn545() 
  {
     $this->yyval = new NullLit; 
  }


  private function yyn546() 
  {
     $this->yyval = new TrueLit; 
  }


  private function yyn547() 
  {
     $this->yyval = new FalseLit; 
  }


  private function yyn548() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->file, 'c'); 
  }


  private function yyn549() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->line, 'c'); 
  }


  private function yyn550() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->coln, 'c'); 
  }


  private function yyn551() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn552() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn553() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn554() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn555() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->flag); 
  }


  private function yyn556() 
  {
     $this->yyval = new LNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn557() 
  {
     $this->yyval = new DNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn558() 
  {
     $this->yyval = new SNumLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->suffix); 
  }


  private function yyn559() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn560() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn561() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn562() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn563() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn564() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn565() 
  {
     $this->yyval = new ArrayLit(null); 
  }


  private function yyn566() 
  {
     $this->yyval = new ArrayGen($this->yyastk[$this->yysp-(9-2)], $this->yyastk[$this->yysp-(9-5)], $this->yyastk[$this->yysp-(9-7)]); 
  }


  private function yyn567() 
  {
     $this->yyval = new ArrayLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn568() 
  {
     $this->yyval = null; 
  }


  private function yyn569() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn570() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn571() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn572() 
  {
     $this->yyval = new SpreadExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn573() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn574() 
  {
     $this->yyval = new ObjectLit(null); 
  }


  private function yyn575() 
  {
     $this->yyval = new ObjectLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn576() 
  {
     $this->yyval = null; 
  }


  private function yyn577() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn578() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn579() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn580() 
  {
     $this->yyval = new ObjectPair($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn581() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn582() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn583() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn584() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn585() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn586() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn587() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn588() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn589() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn590() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn591() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn592() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn593() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn594() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn595() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn596() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn597() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn598() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn599() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn600() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn601() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn602() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn603() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn604() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn605() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn606() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn607() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn608() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn609() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn610() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn611() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn612() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn613() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn614() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn615() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn616() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn617() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn618() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn619() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn620() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn621() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn622() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn623() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn624() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn625() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn626() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn627() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn628() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn629() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn630() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn631() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn632() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn633() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn634() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn635() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn636() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn637() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn638() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn639() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn640() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn641() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }

}

