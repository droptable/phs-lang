<?php

/* this parser-skeleton is based on the awesome 
   work of nikic (https://github.com/nikic) 
   with some extensions (error-recovery and location-tracking) */

/**
 * This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *   the grammar file gen/parser.y
 *   the parser skeleton gen/kymacc.php.parser
 *
 * The skeleton for this parser was written by Moriyoshi Koizumi and is based on
 * the work by Masato Bito and is in the PUBLIC DOMAIN.
 */

namespace phs\front;


const YYERRTOK = 256;
const T_ARR = 257;
const T_YIELD = 258;
const T_APLUS = 259;
const T_AMINUS = 260;
const T_AMUL = 261;
const T_ADIV = 262;
const T_AMOD = 263;
const T_APOW = 264;
const T_ACONCAT = 265;
const T_ABIT_OR = 266;
const T_ABIT_AND = 267;
const T_ABIT_XOR = 268;
const T_ABOOL_OR = 269;
const T_ABOOL_AND = 270;
const T_ABOOL_XOR = 271;
const T_ASHIFT_L = 272;
const T_ASHIFT_R = 273;
const T_AREF = 274;
const T_RANGE = 275;
const T_BOOL_OR = 276;
const T_BOOL_XOR = 277;
const T_BOOL_AND = 278;
const T_EQ = 279;
const T_NEQ = 280;
const T_IN = 281;
const T_NIN = 282;
const T_IS = 283;
const T_NIS = 284;
const T_GTE = 285;
const T_LTE = 286;
const T_SL = 287;
const T_SR = 288;
const T_POW = 289;
const T_AS = 290;
const T_REST = 291;
const T_DEL = 292;
const T_INC = 293;
const T_DEC = 294;
const T_NEW = 295;
const T_DDDOT = 296;
const T_FN = 297;
const T_LET = 298;
const T_USE = 299;
const T_ENUM = 300;
const T_CLASS = 301;
const T_TRAIT = 302;
const T_IFACE = 303;
const T_MODULE = 304;
const T_REQUIRE = 305;
const T_IDENT = 306;
const T_LNUM = 307;
const T_DNUM = 308;
const T_SNUM = 309;
const T_STRING = 310;
const T_REGEXP = 311;
const T_TRUE = 312;
const T_FALSE = 313;
const T_NULL = 314;
const T_THIS = 315;
const T_SUPER = 316;
const T_GET = 317;
const T_SET = 318;
const T_DO = 319;
const T_IF = 320;
const T_ELSIF = 321;
const T_ELSE = 322;
const T_FOR = 323;
const T_TRY = 324;
const T_GOTO = 325;
const T_BREAK = 326;
const T_CONTINUE = 327;
const T_PRINT = 328;
const T_THROW = 329;
const T_CATCH = 330;
const T_FINALLY = 331;
const T_WHILE = 332;
const T_ASSERT = 333;
const T_SWITCH = 334;
const T_CASE = 335;
const T_DEFAULT = 336;
const T_RETURN = 337;
const T_CONST = 338;
const T_FINAL = 339;
const T_GLOBAL = 340;
const T_STATIC = 341;
const T_EXTERN = 342;
const T_PUBLIC = 343;
const T_PRIVATE = 344;
const T_PROTECTED = 345;
const T_SEALED = 346;
const T_INLINE = 347;
const T_PHP = 348;
const T_TEST = 349;
const T_CDIR = 350;
const T_CFILE = 351;
const T_CLINE = 352;
const T_CCOLN = 353;
const T_CFN = 354;
const T_CCLASS = 355;
const T_CMETHOD = 356;
const T_CMODULE = 357;
const T_NL = 358;
const T_TINT = 359;
const T_TBOOL = 360;
const T_TFLOAT = 361;
const T_TSTRING = 362;
const T_TREGEXP = 363;
const T_INVL = 364;
const T_END = 365;
const T_SYNC = 366;

require_once 'ast.php';
require_once 'lexer.php';

use phs\Logger;

use phs\front\ast;
use phs\front\ast\Node;

class Parser
{
  const TOKEN_NONE    = -1;
  const TOKEN_INVALID = 136;

  const TOKEN_MAP_SIZE = 367;

  const YYLAST       = 1732;
  const YY2TBLSTATE  = 616;
  const YYGLAST      = 1358;
  const YYNLSTATES   = 700;
  const YYINTERRTOK  = 1;
  const YYUNEXPECTED = 32767;
  const YYDEFAULT    = -32766;

  /* @var array Map of token ids to their respective names */
  private static $terminals = [
    "EOF",
    "error",
    "','",
    "T_ARR",
    "T_YIELD",
    "T_APLUS",
    "T_AMINUS",
    "T_AMUL",
    "T_ADIV",
    "T_AMOD",
    "T_APOW",
    "T_ACONCAT",
    "T_ABIT_OR",
    "T_ABIT_AND",
    "T_ABIT_XOR",
    "T_ABOOL_OR",
    "T_ABOOL_AND",
    "T_ABOOL_XOR",
    "T_ASHIFT_L",
    "T_ASHIFT_R",
    "T_AREF",
    "'='",
    "T_RANGE",
    "'?'",
    "':'",
    "T_BOOL_OR",
    "T_BOOL_XOR",
    "T_BOOL_AND",
    "'|'",
    "'^'",
    "'&'",
    "T_EQ",
    "T_NEQ",
    "T_IN",
    "T_NIN",
    "T_IS",
    "T_NIS",
    "T_GTE",
    "T_LTE",
    "'>'",
    "'<'",
    "T_SL",
    "T_SR",
    "'+'",
    "'-'",
    "'~'",
    "'*'",
    "'/'",
    "'%'",
    "T_POW",
    "T_AS",
    "T_REST",
    "T_DEL",
    "T_INC",
    "T_DEC",
    "'!'",
    "T_NEW",
    "'.'",
    "'['",
    "']'",
    "'('",
    "')'",
    "T_DDDOT",
    "T_FN",
    "T_LET",
    "T_USE",
    "T_ENUM",
    "T_CLASS",
    "T_TRAIT",
    "T_IFACE",
    "T_MODULE",
    "T_REQUIRE",
    "T_IDENT",
    "T_LNUM",
    "T_DNUM",
    "T_SNUM",
    "T_STRING",
    "T_REGEXP",
    "T_TRUE",
    "T_FALSE",
    "T_NULL",
    "T_THIS",
    "T_SUPER",
    "T_GET",
    "T_SET",
    "T_DO",
    "T_IF",
    "T_ELSIF",
    "T_ELSE",
    "T_FOR",
    "T_TRY",
    "T_GOTO",
    "T_BREAK",
    "T_CONTINUE",
    "T_PRINT",
    "T_THROW",
    "T_CATCH",
    "T_FINALLY",
    "T_WHILE",
    "T_ASSERT",
    "T_SWITCH",
    "T_CASE",
    "T_DEFAULT",
    "T_RETURN",
    "T_CONST",
    "T_FINAL",
    "T_GLOBAL",
    "T_STATIC",
    "T_EXTERN",
    "T_PUBLIC",
    "T_PRIVATE",
    "T_PROTECTED",
    "T_SEALED",
    "T_INLINE",
    "T_PHP",
    "T_TEST",
    "T_CDIR",
    "T_CFILE",
    "T_CLINE",
    "T_CCOLN",
    "T_CFN",
    "T_CCLASS",
    "T_CMETHOD",
    "T_CMODULE",
    "T_NL",
    "T_TINT",
    "T_TBOOL",
    "T_TFLOAT",
    "T_TSTRING",
    "T_TREGEXP",
    "T_END",
    "T_SYNC",
    "';'",
    "'{'",
    "'}'",
    "'@'"
    , "???"
  ];

  /* @var array Map which translates lexer tokens to internal tokens */
  private static $translate = [
        0,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,   55,  136,  136,  136,   48,   30,  136,
       60,   61,   46,   43,    2,   44,   57,   47,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,   24,  132,
       40,   21,   39,   23,  135,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,   58,  136,   59,   29,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  133,   28,  134,   45,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,    1,    3,    4,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   20,   22,   25,   26,   27,   31,
       32,   33,   34,   35,   36,   37,   38,   41,   42,   49,
       50,   51,   52,   53,   54,   56,   62,   63,   64,   65,
       66,   67,   68,   69,   70,   71,   72,   73,   74,   75,
       76,   77,   78,   79,   80,   81,   82,   83,   84,   85,
       86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
       96,   97,   98,   99,  100,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
      116,  117,  118,  119,  120,  121,  122,  123,  124,  125,
      126,  127,  128,  129,  136,  130,  131
  ];

  private static $yyaction = [
     1350,    0,  210,  211,  212,  213,  214,  215,  216,  217,
      218,  219,  220,  221,  222,  223,  224,  367,  225,  226,
      143,  651,  228,  229,  230,  231,  232,  233,  234,  235,
      236,  237,  430,  431,  238,  239,  240,  241,  242,  243,
      244,  245,  246,  247,  248,  249,  250,  432,  308,  435,
     1059, 1060, 1127, 1128,   17,  144,  209,  133,  655, 1310,
     1311, 1325, 1338, 1328, 1329, 1330, 1326, 1349, 1206, 1251,
      643,  646, 1281,  461, 1315, 1316, 1317, 1331, 1347, 1207,
     1208, 1343, 1318, 1319, 1320, 1341, 1321, 1348, 1344, 1345,
      607, 1322, 1323, 1324, 1342, 1314, 1339, 1340,  681, 1346,
     1333, 1334, 1351, 1332, 1327, 1335, 1336, 1337, 1357, 1358,
     1312, 1313, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366,
      663, 1352, 1353, 1354, 1355, 1356,  464,  508, 1210, 1211,
     1225, 1238, 1228, 1229, 1230, 1226, 1250, 1206, 1201, 1202,
     1203, 1204, 1205, 1215, 1216, 1217, 1231, 1248, 1207, 1208,
     1244, 1218, 1219, 1220, 1242, 1221, 1249, 1245, 1246,  511,
     1222, 1223, 1224, 1243, 1214, 1239, 1240, 1241, 1247, 1233,
     1234, 1252, 1232, 1227, 1235, 1236, 1237, 1258, 1259, 1212,
     1213, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267,  511,
     1253, 1254, 1255, 1256, 1257,   -1,  560,  322,  906,  150,
      292,  293,  294,  295, 1300,  718,  433,  434,  296,  297,
      298,  299,  300,  301,  302,  303,  304,  305,  306,  307,
      308,  435,  310,  664, 1127, 1128,  477,  467,   19,  147,
      146,  133,  288,  289,  290,  291,  530,  529,  151,  152,
      153,-32766,-32766,-32766,-32766,  526,  527,  364,  154,  155,
      156,  346, 1201, 1202, 1203, 1204, 1205,  937,  -55,  477,
      449,  -55,  -55,  -55,  -55,  450,  138,  838,   -6,  560,
      951,  680,  150,  518,  621,  305,  306,  307,  308,  435,
       22,  593, 1127, 1128,  545,  594,  512,  468,  469,  148,
      157,  498,  168,  595,  158,  596,  -89,  476,  139,  759,
      760,  761,  762,  768,  763,  764,  765,  766,  767,  627,
      539,  151,  152,  153,  645,  515,  516,  517,  809,  415,
      364,  154,  155,  156,  346,  734,  844,  953,   10,  624,
      457,  -55,  477,  625,  -55,  -55,  -55,  -55,  451,  138,
      463,   -7,  560,  645,  328,  150,  871,  659,-32766,-32766,
      477,  467,  956,   22,  593,  710,  455,  545,  594,  512,
      468,  469,  148,  157,  660,  331,  595,  158,  596,  526,
      527,  139,  759,  760,  761,  762,  768,  763,  764,  765,
      766,  767,  627,  539,  151,  152,  153,   19,  147,  520,
      133,  371,  319,  364,  154,  155,  156,  346,  734,  811,
      953,   10,   -6,  457,  -55,  477,   15,  -55,  -55,  -55,
      -55,  451,  138,  507,  263,  560,  416, 1206,  150,  511,
      -90,  476,  952,  496, 1179,  785,   22,  593, 1207, 1208,
      545,  594,  512,  468,  469,  148,  157,  632,  330,  595,
      158,  596, -161, -167,  139,  759,  760,  761,  762,  768,
      763,  764,  765,  766,  767,  627,  539,  151,  152,  153,
      135,  314,  324,  862,  868,  511,  364,  154,  155,  156,
      346,  734,  456,  953,   10,   -7,  457,  -55,  477,  449,
      -55,  -55,  -55,  -55,  451,  138,  511,  166,  560,    7,
      454,  150,  289,  290,  291, 1291,  477,  657,  814,   22,
      593, -161, -167,  545,  594,  512,  468,  469,  148,  157,
      290,  291,  595,  158,  596,-32766,-32766,  139,  759,  760,
      761,  762,  768,  763,  764,  765,  766,  767,  627,  539,
      151,  152,  153,  244,  245,  246,    1,  368,  253,  364,
      154,  155,  156,  346,  734,  397,  953,   10,  740,  457,
      -55,  477,  449,  -55,  -55,  -55,  -55,  451,  138,-32767,
    -32767,-32767,-32767,-32767,-32767,-32767,-32767,  242,  243,  244,
      245,  246,   22,  593,-32766,-32766,  545,  594,  512,  468,
      469,  148,  157,  396,  509,  595,  158,  596,  524,  510,
      139,  759,  760,  761,  762,  768,  763,  764,  765,  766,
      767,  627,  539,  236,  237,  430,  431,  238,  239,  240,
      241,  242,  243,  244,  245,  246,  251,  734,  619,  953,
       10,  738,  457,  169,  170,  171,  172,  173,  174,  175,
      176,  177,  178,  179,  180,  181,  182,  183,  366,  184,
      185,  141,  858,  186,  187,  188,  189,  190,  191,  192,
      193,  194,  195,  427,  428,  196,  197,  198,  199,  200,
      201,  202,  203,  204,  205,  206,  207,  208,  429, 1206,
      560,  991,  992,  150,  318,   16,  142,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,  459,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,  137,  521,  325,  265,
      865,  329,  151,  152,  153,  227, -213,   17,  144,   18,
      145,  364,  154,  155,  156,  346,  323,-32766,-32766,  291,
      402,  261,  -55,  477,  449,  -55,  -55,  -55,  -55,  451,
      138,-32766,-32766,  560,  548,  606,  150,  311,  673,  819,
      400,  775,  401,  264,   22,  593,  817,  399,  545,  594,
      512,  468,  469,  148,  157, 1181,-32766,  595,  158,  596,
        5,    2,  139,  759,  760,  761,  762,  768,  763,  764,
      765,  766,  767,  627,  539,  151,  152,  153,  320,  312,
      315,  316,  327,  947,  364,  154,  155,  156,  346,  734,
      267,  953,   10,  948,  457,  -55,  477,  313,  -55,  -55,
      -55,  -55,  451,  138,  266,   12,  571,  528,  523,  150,
      462,  460,  309,  448,  525,  511,  263,   22,  593,   20,
     1012,  545,  594,  512,  468,  469,  148,  157,   29, 1195,
      595,  158,  596,  166, 1293,  139,  759,  760,  761,  762,
      768,  763,  764,  765,  766,  767,  627,  539,  151,  152,
      153,  522, 1294, 1174, 1149, 1175, 1148,  364,  154,  155,
      156,  346,  734, 1081,  953,   10, 1292,  457,  -55,  477,
     1080, 1013,  513,  247,  248,  249,  250,  432,  363,  571,
     1059, 1060,  150,  511,   17,  144,  452,  133,  270,  140,
       22,  593,  497, 1206,  545,  594,  512,  468,  469,  148,
      157,  109,-32767,  595,  158,  596, -244, -244,  139,  759,
      760,  761,  762,  768,  763,  764,  765,  766,  767,  627,
      539,  151,  152,  153,  519,  696,   28, 1309,  751,  754,
      364,  154,  155,  156,  346,  857, 1180,  953,   10, -244,
      458,  -55,  477, 1178,  626,  620, 1201, 1202, 1203, 1204,
     1205,  252,  535, 1177,   30,  150,  511,  317, 1193,   25,
      479, 1206,  514,   22,  593,   27, 1206,  545,  594,  512,
      468,  469,  148,  157,  613,  649,  595,  158,  596,  311,
      673,  139,  759,  760,  761,  762,  768,  763,  764,  765,
      766,  767,  627,  539,  151,  152,  153, 1281,  605,  167,
      837,  733,  838,  364,  154,  155,  156,  346,    0,    0,
      953,   10,  744,  458,  -55,  477,    0,    0,    0, 1201,
     1202, 1203, 1204, 1205,   10,  571,   13,  723,  150,  413,
        0,    0,    0,  711,    0,    0,   22,  593,  742,  884,
      545,  594,  512,  468,  469,  148,  157,  907,  917,  595,
      158,  596,  899, 1079,  139,  759,  760,  761,  762,  768,
      763,  764,  765,  766,  767,  627,  539,  151,  152,  153,
      902,  900,  896,  904,  903,  954,  364,  154,  155,  156,
      346,  713,  845,  953,   10,  949,  458,  -55,  477,  909,
      743,  712,  847,  803,  910,  839,  840,  805,  571,  912,
      955,  150,  901,  815,  810,  798,  800,    0,  537,   22,
      593,  588,    2,  545,  594,  512,  468,  469,  148,  157,
      262,  321,  595,  158,  596,  269,  268,  139,  759,  760,
      761,  762,  768,  763,  764,  765,  766,  767,  627,  539,
      151,  152,  153,  480,    0, 1011, 1173, 1147,  908,  364,
      154,  155,  156,  346,  806,  774,  953,   10,  950,  458,
      -55,  477,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
      818,  816,   22,  593,  769,  159,  545,  594,  512,  468,
      469,  148,  157, 1207, 1208,  595,  158,  596,  895,  739,
      139,  759,  760,  761,  762,  768,  763,  764,  765,  766,
      767,  627,  539,  741,  759,  760,  761,  762,  768,  763,
      764,  765,  766,  767,  160,  161,  162, 1301,  699,  953,
       10,    0,  458,  365,  163,  164,  165,  347, 1302,  132,
      687,  130,  678,  511,  465,  662,    0,    0,    0,    0,
        0,    0,    0, 1206, 1282, 1283, 1284, 1281,    0, 1271,
     1272, 1270, 1268, 1269, 1207, 1208,  636,    0,    0,  150,
        0,    0,    0,    0,  519,    0,    0,    0,    0,    0,
      652,    0,    0,  254,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, -180,    0, 1273, 1274, 1275,
     1276, 1277, 1278, 1279, 1280,  856,  511,    0,  151,  152,
      153,    0,    0,    0,   14,    0, 1206,  364,  154,  155,
      156,  346,  255,  256,  257, -180,    0,    0,-32766,    0,
        0,  369,  258,  259,  260,  348,    0,    0,    0,  131,
        0,    0,  466,  478,    0,    0,    0,    0,    0,    0,
       22,  593,    0,    0,  545,  594,  512,  468,  469,  148,
      157,    0,    0,  595,  158,  596,    0,    0,  139, 1201,
     1202, 1203, 1204, 1205,    0,    0,    0,    0,    0,  627,
      539,    0,    0,  759,  760,  761,  762,  768,  763,  764,
      765,  766,  767,-32766,-32766,-32766,-32766,  953,   10,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,    0,    0,
        0,  957,  271,  272,  273,  274,  275,  276,  277,  278,
      279,  280,  281,  282,  283,  284,  285,  370,  286,  287,
      146,    0,  288,  289,  290,  291,    0,    0,    0,    0,
      326,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
        0,-32766,-32766,-32766,-32766,-32766,  271,  272,  273,  274,
      275,  276,  277,  278,  279,  280,  281,  282,  283,  284,
      285,  370,  286,  287,  146,    0,  288,  289,  290,  291,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,    0,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,    0,    0,-32767,-32767,-32767,-32767,
    -32767,-32767,-32766,    0,    0,-32766,-32766,-32766,    0,    0,
        0,    0,    0,    0,-32766,-32766,-32766,-32766,-32766,    0,
        0,    0,  149,  254,    0,-32766,    0,-32766,-32766,-32766,
        0,    0,    0,    0,    0,    0,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,    0,-32766,-32766,    0,    0,
    -32766,-32766,-32766,-32766,-32766,    0,-32766,    0,  149,    0,
        0,-32766,  255,  256,  257,    0,    0,-32766,-32766,    0,
        0,  369,  258,  259,  260,  348,    0,    0,    0,  131,
        0,    0,  466,    0,    0,    0,    0, 1201, 1202, 1203,
     1204, 1205,    0,    0,    0,-32766,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,-32766
  ];

  private static $yycheck = [
        4,    0,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   20,   21,   22,
       23,    1,   25,   26,   27,   28,   29,   30,   31,   32,
       33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
       43,   44,   45,   46,   47,   48,   49,   50,   49,   50,
       53,   54,   53,   54,   57,   58,   60,   60,    1,   63,
       64,   65,   66,   67,   68,   69,   70,   71,   72,    4,
        1,    1,   76,    2,   78,   79,   80,   81,   82,   83,
       84,   85,   86,   87,   88,   89,   90,   91,   92,   93,
       24,   95,   96,   97,   98,   99,  100,  101,    1,  103,
      104,  105,  106,  107,  108,  109,  110,  111,  112,  113,
      114,  115,  116,  117,  118,  119,  120,  121,  122,  123,
        1,  125,  126,  127,  128,  129,    2,    2,   63,   64,
       65,   66,   67,   68,   69,   70,   71,   72,  125,  126,
      127,  128,  129,   78,   79,   80,   81,   82,   83,   84,
       85,   86,   87,   88,   89,   90,   91,   92,   93,   62,
       95,   96,   97,   98,   99,  100,  101,  102,  103,  104,
      105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
      115,  116,  117,  118,  119,  120,  121,  122,  123,   62,
      125,  126,  127,  128,  129,    0,    1,    3,  132,    4,
       29,   30,   31,   32,  134,  134,   35,   36,   37,   38,
       39,   40,   41,   42,   43,   44,   45,   46,   47,   48,
       49,   50,    2,    1,   53,   54,   64,   65,   57,   58,
       23,   60,   25,   26,   27,   28,   50,   24,   43,   44,
       45,   29,   30,   31,   32,   83,   84,   52,   53,   54,
       55,   56,  125,  126,  127,  128,  129,  132,   63,   64,
       65,   66,   67,   68,   69,   70,   71,  131,    0,    1,
      134,    1,    4,   50,   61,   46,   47,   48,   49,   50,
       85,   86,   53,   54,   89,   90,   91,   92,   93,   94,
       95,    2,    2,   98,   99,  100,  134,  135,  103,  104,
      105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
      115,   43,   44,   45,   66,   67,   68,   69,  132,  133,
       52,   53,   54,   55,   56,  130,  132,  132,  133,   52,
      135,   63,   64,   56,   66,   67,   68,   69,   70,   71,
        2,    0,    1,   66,   21,    4,   23,    1,   83,   84,
       64,   65,  132,   85,   86,  132,  133,   89,   90,   91,
       92,   93,   94,   95,    1,    3,   98,   99,  100,   83,
       84,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,  113,  114,  115,   43,   44,   45,   57,   58,   50,
       60,   20,   21,   52,   53,   54,   55,   56,  130,  134,
      132,  133,  134,  135,   63,   64,    2,   66,   67,   68,
       69,   70,   71,    2,   51,    1,   50,   72,    4,   62,
      134,  135,  132,    2,   61,    1,   85,   86,   83,   84,
       89,   90,   91,   92,   93,   94,   95,    1,    3,   98,
       99,  100,    2,    2,  103,  104,  105,  106,  107,  108,
      109,  110,  111,  112,  113,  114,  115,   43,   44,   45,
        2,   21,   21,   23,   23,   62,   52,   53,   54,   55,
       56,  130,  133,  132,  133,  134,  135,   63,   64,   65,
       66,   67,   68,   69,   70,   71,   62,   51,    1,  124,
      133,    4,   26,   27,   28,   59,   64,  132,  132,   85,
       86,   61,   61,   89,   90,   91,   92,   93,   94,   95,
       27,   28,   98,   99,  100,   83,   84,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
       43,   44,   45,   43,   44,   45,  133,   20,   21,   52,
       53,   54,   55,   56,  130,   21,  132,  133,  134,  135,
       63,   64,   65,   66,   67,   68,   69,   70,   71,   33,
       34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
       44,   45,   85,   86,   29,   30,   89,   90,   91,   92,
       93,   94,   95,    2,   60,   98,   99,  100,   51,    2,
      103,  104,  105,  106,  107,  108,  109,  110,  111,  112,
      113,  114,  115,   33,   34,   35,   36,   37,   38,   39,
       40,   41,   42,   43,   44,   45,    2,  130,   81,  132,
      133,  134,  135,    5,    6,    7,    8,    9,   10,   11,
       12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
       22,   23,   61,   25,   26,   27,   28,   29,   30,   31,
       32,   33,   34,   35,   36,   37,   38,   39,   40,   41,
       42,   43,   44,   45,   46,   47,   48,   49,   50,   72,
        1,   53,   54,    4,    3,   57,   58,    5,    6,    7,
        8,    9,   10,   11,   12,   13,   14,   15,   16,   17,
       18,   19,   20,   21,   22,   23,    2,   25,   26,   27,
       28,   29,   30,   46,   47,   48,    2,   24,   21,    3,
       23,   21,   43,   44,   45,   24,   33,   57,   58,   57,
       58,   52,   53,   54,   55,   56,   21,   57,   58,   28,
      133,   24,   63,   64,   65,   66,   67,   68,   69,   70,
       71,   83,   84,    1,   96,   97,    4,  101,  102,  132,
      133,  132,  133,   24,   85,   86,  132,  133,   89,   90,
       91,   92,   93,   94,   95,   61,   29,   98,   99,  100,
      132,  133,  103,  104,  105,  106,  107,  108,  109,  110,
      111,  112,  113,  114,  115,   43,   44,   45,   24,   24,
       24,   24,   24,   24,   52,   53,   54,   55,   56,  130,
       24,  132,  133,   24,  135,   63,   64,   24,   66,   67,
       68,   69,   70,   71,   24,   24,    1,   30,   30,    4,
       40,   40,   33,   45,   50,   62,   51,   85,   86,   57,
       59,   89,   90,   91,   92,   93,   94,   95,   61,   77,
       98,   99,  100,   51,   59,  103,  104,  105,  106,  107,
      108,  109,  110,  111,  112,  113,  114,  115,   43,   44,
       45,   30,   59,   59,   59,   59,   59,   52,   53,   54,
       55,   56,  130,   59,  132,  133,   59,  135,   63,   64,
       59,   59,   62,   46,   47,   48,   49,   50,   60,    1,
       53,   54,    4,   62,   57,   58,   60,   60,   60,   60,
       85,   86,   60,   72,   89,   90,   91,   92,   93,   94,
       95,   60,   60,   98,   99,  100,  101,  102,  103,  104,
      105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
      115,   43,   44,   45,   30,   61,   61,   61,   61,   61,
       52,   53,   54,   55,   56,   61,   61,  132,  133,  134,
      135,   63,   64,   61,   61,   61,  125,  126,  127,  128,
      129,   61,    1,   61,   61,    4,   62,   61,   61,   61,
       65,   72,   63,   85,   86,   88,   72,   89,   90,   91,
       92,   93,   94,   95,   87,   89,   98,   99,  100,  101,
      102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,  113,  114,  115,   43,   44,   45,   76,   98,  114,
      124,  131,  131,   52,   53,   54,   55,   56,   -1,   -1,
      132,  133,  124,  135,   63,   64,   -1,   -1,   -1,  125,
      126,  127,  128,  129,  133,    1,  124,  124,    4,  124,
       -1,   -1,   -1,  132,   -1,   -1,   85,   86,  132,  132,
       89,   90,   91,   92,   93,   94,   95,  132,  132,   98,
       99,  100,  132,  134,  103,  104,  105,  106,  107,  108,
      109,  110,  111,  112,  113,  114,  115,   43,   44,   45,
      132,  132,  132,  132,  132,  132,   52,   53,   54,   55,
       56,  132,  132,  132,  133,  134,  135,   63,   64,  132,
      132,  132,  132,  132,  132,  132,  132,  132,    1,  132,
      132,    4,  132,  132,  132,  132,  132,   -1,  133,   85,
       86,  133,  133,   89,   90,   91,   92,   93,   94,   95,
      133,  133,   98,   99,  100,  133,  133,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
       43,   44,   45,  133,   -1,  134,  134,  134,  134,   52,
       53,   54,   55,   56,  134,  134,  132,  133,  134,  135,
       63,   64,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   20,   21,   22,
      134,  134,   85,   86,  134,    4,   89,   90,   91,   92,
       93,   94,   95,   83,   84,   98,   99,  100,  134,  134,
      103,  104,  105,  106,  107,  108,  109,  110,  111,  112,
      113,  114,  115,  134,  104,  105,  106,  107,  108,  109,
      110,  111,  112,  113,   43,   44,   45,  134,   47,  132,
      133,   -1,  135,   52,   53,   54,   55,   56,  134,   58,
      134,   60,  134,   62,   63,    1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   72,   73,   74,   75,   76,   -1,   78,
       79,   80,   81,   82,   83,   84,    1,   -1,   -1,    4,
       -1,   -1,   -1,   -1,   30,   -1,   -1,   -1,   -1,   -1,
        1,   -1,   -1,    4,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   51,   -1,  116,  117,  118,
      119,  120,  121,  122,  123,   61,   62,   -1,   43,   44,
       45,   -1,   -1,   -1,  133,   -1,   72,   52,   53,   54,
       55,   56,   43,   44,   45,   81,   -1,   -1,   63,   -1,
       -1,   52,   53,   54,   55,   56,   -1,   -1,   -1,   60,
       -1,   -1,   63,   64,   -1,   -1,   -1,   -1,   -1,   -1,
       85,   86,   -1,   -1,   89,   90,   91,   92,   93,   94,
       95,   -1,   -1,   98,   99,  100,   -1,   -1,  103,  125,
      126,  127,  128,  129,   -1,   -1,   -1,   -1,   -1,  114,
      115,   -1,   -1,  104,  105,  106,  107,  108,  109,  110,
      111,  112,  113,   29,   30,   31,   32,  132,  133,   35,
       36,   37,   38,   39,   40,   41,   42,   -1,   -1,   -1,
       -1,  132,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   20,   21,   22,
       23,   -1,   25,   26,   27,   28,   -1,   -1,   -1,   -1,
       33,    5,    6,    7,    8,    9,   10,   11,   12,   13,
       14,   15,   16,   17,   18,   19,   20,   21,   22,   23,
       -1,   25,   26,   27,   28,   29,    5,    6,    7,    8,
        9,   10,   11,   12,   13,   14,   15,   16,   17,   18,
       19,   20,   21,   22,   23,   -1,   25,   26,   27,   28,
        5,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   20,   21,   22,   23,   -1,
       25,   26,   27,   28,    5,    6,    7,    8,    9,   10,
       11,   12,   13,   14,   15,   16,   17,   18,   19,   20,
       21,   22,   23,   -1,   25,   26,   27,    5,    6,    7,
        8,    9,   10,   11,   12,   13,   14,   15,   16,   17,
       18,   19,   20,   21,   22,   23,    4,   25,   26,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   20,   21,   22,   23,    4,   25,
       29,   30,   31,   32,   -1,   -1,   35,   36,   37,   38,
       39,   40,    4,   -1,   -1,   43,   44,   45,   -1,   -1,
       -1,   -1,   -1,   -1,   52,   53,   54,   55,   56,   -1,
       -1,   -1,   60,    4,   -1,   63,   -1,   43,   44,   45,
       -1,   -1,   -1,   -1,   -1,   -1,   52,   53,   54,   55,
       56,   43,   44,   45,   60,   -1,   62,   63,   -1,   -1,
       52,   53,   54,   55,   56,   -1,   72,   -1,   60,   -1,
       -1,   63,   43,   44,   45,   -1,   -1,   83,   84,   -1,
       -1,   52,   53,   54,   55,   56,   -1,   -1,   -1,   60,
       -1,   -1,   63,   -1,   -1,   -1,   -1,  125,  126,  127,
      128,  129,   -1,   -1,   -1,  133,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,  133
  ];

  private static $yybase = [
      195,  414,  487,  341,  268,  669,  669,  742,  815,  888,
      961, 1034, 1107, 1107,   70,   -4,  997, 1003, 1002,  998,
       65,   66, 1275, 1275, 1275, 1275, 1275, 1275, 1275, 1275,
     1275,  691,  896,  916,  951,  967,  729,  968,  902,  765,
      771,  876,  766,  821,  804,  767, 1021,  929, 1022,  768,
      807,  777,  769, 1023,  970,  874,  971,  975,  618,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3, 1417, 1289,
     1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471,
     1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471,
       13,   13,  436,  363,  978,  792,  875,  775,  895,  972,
       20,  707,  346,  776,  119,  222,  764,  270, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1619, 1619, 1619, 1619, 1619,
     1619, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1619, 1619, 1619, 1619, 1619, 1619, 1619, 1619, 1619, 1619,
     1619, 1619, 1619, 1619, 1619, 1619, 1619, 1619, 1619, 1619,
     1619, 1619, 1619, 1619, 1619, 1619, 1619, 1619, 1619, 1619,
     1619, 1619, 1619, 1619, 1619, 1619, 1619, 1619, 1619, 1191,
     1619, 1191, 1191, 1191, 1191, 1191, 1191, 1619, 1619, 1619,
     1619, 1191, 1191, 1191, 1191, 1191, 1191, 1619, 1191, 1191,
     1191, 1191, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167,
     1167, 1564, 1564,  207,  207,  207, 1562, 1562, 1562, 1542,
     1542, 1519, 1519,  466, 1495, 1495,  483, 1446, 1446,  701,
      672,  672,  171, 1254, 1598, 1598, 1598, 1598, 1598, 1598,
     1598, 1598,  737,  570,  570,  526,  526,  526,  526,  526,
      526,  570,  570,  526,  526,  526,  526,  526,  526,  545,
      212,  212, 1561, 1561, 1561, 1561,  904, 1584,  831,  162,
      162,  162,  162,  286,  597,  899,  899,  490,  490,  490,
      490, 1374, 1374,  432,  265,  658,  658,  837,  837,  837,
      837,  837,  837,  229,  229,  229,  658,  127,  127,  127,
      127,  127,  127,  127,  127,  127,  657,  657,  657,  657,
      657,  657,  657,  657,   -1,   -1,   -1,   -1,  424,  357,
      403,  403,   97,  248,  763,  763,  763,   69,   57,  763,
      763,  763,  763,  763,  763,  828,  828,  763,  930,  980,
      788,  787,  440,  441,  277,  186,  345,  345,  345,  345,
      345, 1024,  660,  660,  660,  660,  660,  660,  662,  660,
      660,  660,  660,  660,  660,  662,  345,  345,  345,  330,
      330,  330,  330,  330,  330,  662,  194,  345,  345,  345,
      345,  345,  345,  345,  345,  345,  345,  345,  345,  345,
      345,  345,  345,  345,  345,  345,  345,  345,  345,  345,
      345,  345,  345,  223,  638,  136,  213,  646,  648,  931,
      706,  648,  706,  671,  671,  851,  662,  662,  836,  960,
      662,  662,  662,  662,  662,  662,  435,  362,  984,  983,
      880,  290,  907,  517,  973,  952,  365,  974,  339,  683,
      220,  881,  989,  624,  704,  581,  537,  371,  953,  125,
      524,  617,  687,   71,  903,  619,  323,  366,  905,  897,
      852,  887,  852,  839,  901,  839,  839,  670,  458,  901,
      289,  670,  828,  404,  694,  839,  901,  931,  931,  905,
      780,  781,  694,  839,  897,  670,  828,  587,  778,  772,
      901,  901,  828,  828,  828,  828,  901,  988,    1,  820,
      791,  762,  803,  785,  900,  820,  977,  910,  950,  949,
      948,  985,  909,  913,  842, 1020, 1114, 1103,  790,  838,
     1089,  892,  908,  926,  789,  886,  912,  898,  820,  822,
      885,  783,  884,  814,  806, 1118,  911, 1075,  917,  906,
      411,  411,  925,  779,  774, 1074,  877,  705,  959, 1116,
      805,  894, 1060,  820, 1057,  338,  690,  969,  878,  820,
      124,  915, 1056,  893, 1031, 1030,  817,  982,  981,    0,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191,   -4,    0,   65,   65,   65,   65,
        0,   -3, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,  330,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  171, 1191,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1191, 1191, 1191, 1191, 1191,
     1191,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,    0,
     1191,    0,    0,    0,    0,    0,    0, 1191, 1191, 1191,
     1191,    0,    0,    0,    0,    0,    0, 1191,    0,    0,
        0,    0,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,  171,  171,  171, 1191, 1191, 1191,   -3,
       -3,   -3,   -3,  171,   -3,   -3,  171,   -3,   -3,  171,
       -3,   -3,    0, 1120, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191,  171,  837,  837,  837,  837,  837,  837,  837,
      837,  837,  837,  837,  837,  837,  837,  837,  837,  171,
      171,  171,  171,  171,  171,  171, 1120, 1191, 1120, 1120,
     1120, 1120, 1120, 1120, 1120, 1120, 1120,  837,  837,  837,
      837,  171,  171, 1120, 1120, 1120, 1120,    0,    0,    0,
        0,    0,    0,  330,  330,  330, 1120,  345,  345,  345,
      345,  345,  345,  345,  345,  345,  837,  837,  837,  837,
      837,  837,  837,  837,  330,  330,  330,  330,  345,  345,
      345,  345,  345,  909,  345,  345,  345,  345,  345,  345,
      345,  345,  345,  345,  345,  345,  345,  345,  345,  345,
      345,  345,    0,    0,  909,  820,    0,    0,    0,    0,
        0,  646,  330,  330,  330,  330,  330,  330,  330,  330,
      330,  330,  330,  330,  330,  330,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  330,  901,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  820,  977,  820,    0,    0,  901,
      901,    0,  901,  901,  901,  901,    0,    0,  901,  828,
        0,    0,    0,    0,    0,    0,  901,  901,  901,  901,
      977,    0,  614,    0,  421,  614,    0,  421,    0,    0,
        0,  977,  820,    0,    0,    0,    0,    0,  614,    0,
        0,    0,    0,    0,  614,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  330,    0,    0,
        0,  330,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  330
  ];

  private static $yydefault = [
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,  668,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,  317,  599,32767,32767,32767,  385,32767,32767,32767,
    32767,32767,32767,32767,32767,  453,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,  258,  260,
      598,  259,  295,  296,  297,  298,  299,  300,  301,  302,
      303,  304,  305,  306,  307,  308,  309,  293,  484,  363,
      364,  365,  366,  367,  368,  369,  370,  371,  372,  373,
      374,  375,  376,  377,  361,  599,  261,  123,  486,  153,
      606,  485,  163,   73,  169,  166,  172,  174,32767,32767,
      262,  431,  432,  433,  434,  435,  436,  437,  438,  439,
      440,  441,  442,  443,  444,  445,  429,  263,  155,  128,
    32767,32767,32767,32767,32767,  668,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,  281,  349,  318,  315,  386,  383,  314,  382,
      454,  279,  347,  419,  451,  450,32767,32767,32767,  280,
      348,  278,  346,  417,  272,  340,  418,  273,  341,  416,
      271,  339,  410,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,  411,  284,  285,  286,  287,  276,  277,  275,
      274,  352,  353,  354,  355,  344,  345,  342,  343,  409,
      422,  423,  414,  415,  412,  413,  180,32767,32767,   55,
       55,   55,   55,   55,   56,   56,32767,  282,  283,  350,
      351,  420,  421,   55,   55,   55,   55,  264,  265,  270,
      332,  333,  338,  402,  403,  408,   56,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,  266,  267,  268,  269,
      334,  335,  336,  337,  404,  405,  406,  407,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  668,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
      181,32767,  496,  496,32767,32767,32767,32767,32767,32767,
    32767,32767,  320,  319,  321,  323,  324,  322,  327,  388,
      387,  389,  391,  392,  390,  395,32767,32767,  668,  456,
      455,  457,  459,  460,  458,  463,32767,32767,32767,32767,
      668,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,  191,32767,
    32767,  192,32767,32767,32767,32767,  329,  397,32767,32767,
      294,  362,  124,  465,  430,  129,32767,32767,32767,32767,
    32767,32767,32767,  122,32767,32767,32767,32767,   16,  496,
    32767,32767,32767,32767,32767,32767,32767,  127,32767,32767,
       52,32767,  164,32767,32767,32767,  170,32767,  233,  218,
      470,  223,  471,32767,32767,32767,32767,  325,  667,32767,
      667,  393,32767,  667,  667,32767,32767,32767,32767,  234,
       76,   78,  667,32767,  219,  461,32767,  667,   83,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  490,
      496,32767,32767,32767,32767,   19,32767,32767,32767,32767,
    32767,32767,32767,32767,   50,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,  499,32767,
    32767,  496,32767,32767,32767,32767,32767,32767,32767,32767,
      141,  142,32767,32767,  240,32767,32767,   72,32767,32767,
    32767,32767,32767,   82,32767,   79,  173,32767,32767,   88,
       84,32767,32767,32767,32767,32767,32767,32767,32767,  494
  ];

  private static $yygoto = [
       32,   78,  715,   95,  715,   78,   33,   35,   38,   39,
       40,   42,   43,   44,   49,   50,  612,  583,   31,  482,
      483,  484,  485,  486,  487,   34,   21,   36,  489,  490,
      491,  492,  493,  494,   60,   37,   61,   62,   63,   64,
       65,   66,   67,   68,   69,   70,   71,   72,   73,   74,
       75,   76,   77,  332,  341,  349,  351,  354,  357,  360,
      373,  374,  375,  376,  377,  378,  379,  380,  407,  408,
      417,  418,  419,  436,  437,  438,  439,   41,   79,   80,
       81,   82,   83,   84,   85,   86,   87,   88,   89,   90,
       91,   92,   93,   94,  333,  334,  342,  350,  352,  355,
      358,  361,  381,  382,  383,  384,  385,  386,  387,  388,
      409,  410,  420,  421,  422,  440,  441,  442,  443,   96,
      590,   97,   45,  834,  834,  834,  834,  834,  834,  335,
       46,   98,  336,   99,  100,  337,   47,   48, 1030, 1030,
     1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030,
     1030, 1030,  642,  642,  642,  642,  642,  642,  777,  781,
     1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030,  795,
      795,  795,  795,  795,  578,    4,  584,   51,  709,   52,
      338,  101,  102,  339,  340,  634,  669,  946,  565,   53,
       54,  103,  104,  105,   55,   11,  106,  107,   56,   57,
      630,  630,  630,  630,  630,  630,  630,  630,  630,  630,
      630,  630,  630,  630, 1307, 1307, 1209, 1209, 1209, 1209,
     1209,  988,  989,  990, 1056, 1057, 1058, 1124, 1125, 1126,
      692,  694,  695,  499,  500,  501,  502,  503,  504,  833,
      833,  833,  833,  833,  833, 1305, 1297, 1166,  108,  111,
      112,  113,  114,  115,  116,  117,  118,  119,  120,  121,
      122,  123,  124,  125,  126,  343,  353,  356,  359,  362,
      372,  389,  390,  391,  392,  393,  394,  395,  411,  412,
      423,  424,  425,  444,  445,  446,  447,  658,  127,  831,
     1308, 1308,  831,  737,  745,  592,  128,  129,  344,  832,
      832,  832,  832,  832,  832,  345,  860, 1183, 1286,  569,
      836,  836,  836,  836,  836,  836, 1288,  650,  667, 1287,
      658,  705,  658,  656,  637,  589,  905,  889,  922,  925,
      887,  886,  888,  661,  406,  721,  721,  661, 1290,  746,
      758,  691,  471,  495,  505,  812,  758,  758,  758,  792,
      533,  658,  658,  658,  658,  658,  658,  658,  658,  658,
      546,  547,  550,  551,  552,  553,  554,  555,  758,  787,
      564,  821,  689,  635,  534,  572,  536,  670,  635,  635,
      635,  749,  939,  635,  683,  635,  683,  683,  689,  826,
      688,  475,  942, 1166, 1166, 1166, 1166, 1166, 1166,  771,
      894,  597,  601,  615,  927,  850,  848,  936, 1166, 1166,
     1166, 1166, 1166, 1166, 1166, 1166, 1166, 1166, 1166, 1166,
     1166, 1166, 1166, 1166, 1166, 1166, 1166, 1166, 1166, 1166,
     1166, 1166, 1166, 1166, 1166, 1166, 1166, 1166, 1166, 1166,
     1166, 1166, 1166, 1166, 1166, 1166, 1166,  747, 1166,  921,
     1303,  665,    0,    0,    0, 1166, 1166, 1166, 1166,  679,
     1010,    0,    0,    0,  682, 1166, 1031, 1031, 1031, 1031,
     1031, 1031, 1031, 1031, 1031, 1031, 1031, 1031, 1031, 1031,
        0,    0,    0,    0, 1176, 1176, 1176,    0, 1031, 1031,
     1031, 1031, 1031, 1031, 1031, 1031, 1031,    0,    0,  846,
        0,    0, 1176, 1176, 1176, 1176, 1176, 1176, 1176, 1176,
     1146,    0, 1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146,
     1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146,
     1146, 1146,  897,  852,    0,  852,  854,  854,  890,    0,
        0,  928,    0,  474,  474,  474,  474,  474,    0,  802,
      804,  801,  799,    0,   24,  641,    0,  642,  531,  531,
      532,    0,    0,  472,  668,    0,    0,    0,    0,    0,
        0,    0,   26,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  538,  398,    0,
        0,    0,  898,    0,    0,    0,  472,    0,  473,  932,
        0,    0,    0,    0,  563,  563,  577,    0,    0,    0,
        0,    0,  543,  931,  929,    0,    0,    0,    0,  930,
        0,  398,    0,    0,  404,  404,  404,  404,  404,    0,
      794,  794,  794,  794,  794,    0,    0,    0,    0,  426,
      426,  426,    0,    0,  808,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  644,  644,    0,
        0,    0,    0,    0,    0,  602,  616,    0,  639,  640,
      582,  586,    0, 1285,    0,    0,  644,  563,  577,  674,
      677,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      793,  793,  793,  793,  793,  506,  563,  580,  644,    0,
        0,    0,    0,    0,  807,    0,    0,  577,  674,  580,
      677, 1197,  638, 1198,  549,  610,  573,  611,  666,  876,
      717,  914,  878,  877,  875,  941,  622,  623,  879,  693,
      697,  587,  698,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1146, 1146, 1146,  542,    0,
        0,    0,    0,    0,    0, 1146,    0,    0, 1146,    0,
        0, 1146,  544,    0, 1146,    0,    0,    0,  556,  557,
      558,  559,    0,    0, 1146,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1146, 1146, 1146, 1146, 1146, 1146, 1146,    0,    0,
     1016,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1146, 1146,  599,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1146, 1146, 1146,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 1146, 1146, 1146, 1146,
     1152,    0, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
     1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
     1152, 1152,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1167,    0,  672,  675,    0,    0,    0,    0,    0,
     1172,    0,    0,    0,    0,    0,    0, 1172,    0,    0,
        0, 1146, 1146, 1146, 1146, 1146, 1146, 1172,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1172, 1172,
        0,    0, 1172, 1172, 1172, 1172, 1172, 1172,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1146,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  686,    0,    0,    0,    0,    0, 1167, 1167, 1167,
     1167, 1167, 1167,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167,
     1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167,
     1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167,
     1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167,
     1167,    0, 1167,    0,    0, 1152, 1152, 1152,    0, 1167,
     1167, 1167, 1167,    0,    0, 1152,    0,    0, 1152, 1167,
        0, 1152,    0,    0, 1152,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1152,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1152, 1152, 1152, 1152, 1152, 1152, 1152,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1152, 1152,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1152, 1152, 1152,    0, 1289,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 1152, 1152, 1152, 1152,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1028,    0,    0,    0,    0,    0,    0, 1096,    0,    0,
        0, 1152, 1152, 1152, 1152, 1152, 1152, 1164,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1152,    0,    0,    0,    0, 1026,
        0,    0,    0, 1094,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 1162
  ];

  private static $yygcheck = [
       28,   28,   13,   28,   13,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   11,   11,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   25,   25,   25,   25,   25,   25,   28,
       28,   28,   28,   28,   28,   28,   28,   28,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  106,   35,   35,   35,   35,   35,   35,   43,   43,
      106,  106,  106,  106,  106,  106,  106,  106,  106,   17,
       17,   17,   17,   17,   81,    7,   81,   28,    8,   28,
       28,   28,   28,   28,   28,  105,  105,  100,   81,   28,
       28,   28,   28,   28,   28,   62,   28,   28,   28,   28,
       10,   10,   10,   10,   10,   10,   10,   10,   10,   10,
       10,   10,   10,   10,   10,   10,   10,   10,   10,   10,
       10,   74,   74,   74,   74,   74,   74,   74,   74,   74,
       42,   42,   42,   61,   61,   61,   61,   61,   61,   23,
       23,   23,   23,   23,   23,  122,  119,  106,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,    5,   61,   27,
       85,   85,   27,   27,   27,   61,   61,   61,   61,   22,
       22,   22,   22,   22,   22,   61,   70,  111,  112,   10,
       26,   26,   26,   26,   26,   26,  114,    4,    4,  113,
        5,    4,    5,   29,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   10,   36,   14,   14,   10,  115,   14,
       37,   29,   71,   58,   58,   55,   37,   37,   37,   49,
        9,    5,    5,    5,    5,    5,    5,    5,    5,    5,
       58,   58,   58,   58,   58,   58,   58,   58,   37,   47,
       56,   57,    5,    5,    5,    5,    5,   59,    5,    5,
        5,   32,   97,    5,    5,    5,    5,    5,    5,   60,
       33,    5,   98,  106,  106,  106,  106,  106,  106,   39,
       83,  105,  105,  105,   93,   68,   66,   95,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,  106,   12,  106,   91,
       12,   12,   -1,   -1,   -1,  106,  106,  106,  106,   12,
       73,   -1,   -1,   -1,   12,  106,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
       -1,   -1,   -1,   -1,  106,  106,  106,   -1,  107,  107,
      107,  107,  107,  107,  107,  107,  107,   -1,   -1,   53,
       -1,   -1,  106,  106,  106,  106,  106,  106,  106,  106,
       73,   -1,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   53,   53,   -1,   53,   53,   53,   53,   -1,
       -1,   53,   -1,   35,   35,   35,   35,   35,   -1,   53,
       53,   53,   53,   -1,   75,   75,   -1,   35,   35,   35,
       35,   -1,   -1,   10,   75,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   75,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   53,   36,   -1,
       -1,   -1,   53,   -1,   -1,   -1,   10,   -1,   10,   53,
       -1,   -1,   -1,   -1,   10,   10,   10,   -1,   -1,   -1,
       -1,   -1,   52,   53,   53,   -1,   -1,   -1,   -1,   53,
       -1,   36,   -1,   -1,   36,   36,   36,   36,   36,   -1,
       23,   23,   23,   23,   23,   -1,   -1,   -1,   -1,   36,
       36,   36,   -1,   -1,   23,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   10,   -1,
       -1,   -1,   -1,   -1,   -1,   10,   10,   -1,   10,   10,
       10,   10,   -1,   85,   -1,   -1,   10,   10,   10,   10,
       10,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       22,   22,   22,   22,   22,   52,   10,   10,   10,   -1,
       -1,   -1,   -1,   -1,   22,   -1,   -1,   10,   10,   10,
       10,   10,   10,   10,   10,   10,   10,   10,   10,   10,
       10,   10,   10,   10,   10,   10,   10,   10,   10,   10,
       10,   10,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   73,   73,   73,   52,   -1,
       -1,   -1,   -1,   -1,   -1,   73,   -1,   -1,   73,   -1,
       -1,   73,   52,   -1,   73,   -1,   -1,   -1,   52,   52,
       52,   52,   -1,   -1,   73,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   73,   73,   73,   73,   73,   73,   73,   -1,   -1,
      104,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   73,   73,   85,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   73,   73,   73,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   73,   73,   73,   73,
      104,   -1,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,  108,   -1,   85,   85,   -1,   -1,   -1,   -1,   -1,
       73,   -1,   -1,   -1,   -1,   -1,   -1,   73,   -1,   -1,
       -1,   73,   73,   73,   73,   73,   73,   73,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   73,   73,
       -1,   -1,   73,   73,   73,   73,   73,   73,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   73,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   73,   -1,   -1,   -1,   -1,   -1,  108,  108,  108,
      108,  108,  108,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,   -1,  108,   -1,   -1,  104,  104,  104,   -1,  108,
      108,  108,  108,   -1,   -1,  104,   -1,   -1,  104,  108,
       -1,  104,   -1,   -1,  104,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,  104,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,  104,  104,  104,  104,  104,  104,  104,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,  104,  104,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,  104,  104,  104,   -1,  108,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,  104,  104,  104,  104,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
      104,   -1,   -1,   -1,   -1,   -1,   -1,  104,   -1,   -1,
       -1,  104,  104,  104,  104,  104,  104,  104,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,  104,   -1,   -1,   -1,   -1,  104,
       -1,   -1,   -1,  104,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,  104
  ];

  private static $yygbase = [
        0,    0,    0,    0,  316,  -76,    0,  169,  172,  -99,
      200, -439, -153, -457,  332,    0,    0, -230,    0,    0,
        0,    0,  291,  231,    0,  115,  302,  281, -132, -135,
        0,    0, -117, -119,    0,  144,  225,  -58,    0, -111,
        0,    0, -170, -304,    0,    0,    0,  -95,    0,  -54,
        0,    0,  146,   -7,    0,  -70, -107, -125,   -4, -101,
     -118,  -22,  185,    0,    0,    0, -136,    0, -139,    0,
      -90,  -56,    0,  402, -206,  -41,    0,    0,    0,    0,
        0,   40,    0, -141,    0,  276,    0,    0,    0,    0,
        0, -165,    0, -137,    0, -202,    0, -126, -145,    0,
      178,    0,    0,    0,  742,   55,  138,  466,  772,    0,
        0,  170,  -89,  -78,  -81,  -59,    0,    0,    0,  111,
        0,    0,  230,    0
  ];

  private static $yygdefault = [
    -32768,  628,  702,  703,  704,  629,    6,    3,  708,  568,
     1196,  604, 1295,  714,  720,  722,  724,  725,  726,  727,
      728,  729,  730,  731,  732,  735,  736,  830,   59,  566,
      835,  600,  748,  676,  753,  453,  405,  757,  617,  770,
      618,  585,  684,  780,  581,  685,  690,  786,  403,  791,
      796,  797,  540,  883,  414,  813,  567,  820,  488,  671,
      825,  110,    8,  653,  843, 1100,  849, 1168,  851,  575,
      859,  470,  576, 1078,  882,   23,  591,  885,  654,  134,
      136,  562,  541,  893,  608, 1192,  481,  911,  915,  916,
      614,  920,  924,  926,  609,  935,  579,  938,  943,    9,
      945,  561,  570,   58, 1084, 1200, 1098, 1101, 1099, 1169,
      574, 1182, 1187, 1188, 1189, 1191,  631,  633,  598, 1296,
      647,  603, 1304,  648
  ];

  private static $yylhs = [
        0,    1,    1,    2,    2,    3,    4,    4,    6,    6,
        8,    8,    8,    8,   11,   11,   13,   13,   13,    9,
        7,    7,   14,   14,   14,   14,   14,   14,   14,   14,
       14,   14,   14,   14,   14,   14,   14,   25,   15,   15,
       15,   15,   24,   24,   16,   30,   21,   29,   31,   31,
       32,   32,   33,   33,   33,   35,   35,   36,   36,   37,
       37,   37,   37,   37,   37,   37,   37,   37,   37,   17,
       38,   38,   39,   39,   18,   18,   40,   40,   44,   44,
       45,   45,   43,   41,   41,   41,   46,   46,   47,   42,
       42,   48,   48,   49,   49,   49,   49,   49,   49,   49,
       49,   49,   49,   49,   49,   49,   49,   51,   51,   50,
       50,   50,   54,   54,   55,   55,   19,   19,   20,   20,
       56,   56,   57,   57,   57,   59,   59,   60,   60,   60,
       62,   62,   27,   27,   27,   27,   27,   27,   27,   23,
       23,   63,   63,   22,   22,   22,   64,   64,   65,   65,
       67,   67,   66,   66,   68,   68,   52,   52,   52,   69,
       69,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       72,   72,   71,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   78,   78,   80,   79,   79,   76,   76,
       90,   90,   91,   77,   77,   92,   82,   82,   93,   93,
       93,   93,   83,   84,   84,   94,   94,   95,   96,   96,
       97,   97,   86,   86,   98,   99,   99,  100,  100,   53,
       53,   53,   87,   87,   88,   88,   89,   89,  101,  101,
       81,   81,  102,  102,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
      107,  109,   58,   58,   58,   58,   58,   75,   75,  104,
      104,  104,  110,  110,  111,  111,  111,  106,  106,  106,
      106,  106,  106,  106,  116,  113,    5,    5,    5,   74,
       74,  105,  105,  105,  105,  105,   10,   10,   10,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,  115,  115,
      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
      115,   85,  112,  112,  112,   34,   34,   34,   34,   34,
       34,  114,  114,  114,  114,  117,  118,  118,  119,  119,
      108,  108,  108,  120,  121,  121,  122,  123,  123,  123,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      123,  123,  123,  123,  123,  123,  123,   12,   12
  ];

  private static $yylen = [
        1,    0,    1,    1,    1,    4,    2,    1,    1,    2,
        3,    5,    7,    6,    1,    3,    1,    3,    4,    1,
        1,    2,    1,    3,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    2,    1,    1,    1,    3,    4,    5,
        3,    4,    3,    4,    4,    4,    4,    2,    1,    3,
        1,    4,    1,    3,    4,    0,    1,    1,    2,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    6,
        1,    3,    1,    3,    8,    6,    0,    2,    0,    2,
        1,    3,    1,    0,    2,    2,    1,    3,    1,    0,
        1,    1,    2,    1,    1,    1,    1,    1,    4,    4,
        4,    4,    4,    6,    4,    6,    4,    4,    4,    3,
        5,    5,    1,    2,    3,    6,    6,    4,    7,    5,
        1,    3,    1,    3,    3,    1,    3,    1,    3,    3,
        1,    2,    1,    1,    1,    1,    1,    3,    2,    3,
        3,    2,    2,    5,    5,    4,    1,    3,    4,    3,
        4,    3,    1,    2,    1,    2,    2,    3,    3,    1,
        3,    1,    2,    3,    2,    3,    4,    2,    3,    4,
        3,    4,    5,    3,    5,    3,    2,    3,    3,    4,
        0,    1,    1,    1,    5,    5,    7,    6,    7,    5,
        2,    2,    3,    3,    4,    5,    3,    2,    3,    2,
        3,    2,    3,    3,    3,    3,    3,    5,    5,    3,
        2,    1,    2,    1,    3,    1,    1,    2,    0,    1,
        1,    2,    3,    0,    1,    2,    1,    2,    2,    5,
        7,    5,    2,    0,    1,    1,    2,    3,    1,    3,
        1,    3,    1,    2,    2,    1,    2,    3,    2,    2,
        3,    3,    2,    1,    2,    1,    2,    1,    1,    3,
        1,    3,    1,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    2,    2,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        2,    5,    4,    4,    5,    4,    2,    2,    4,    2,
        2,    2,    2,    2,    2,    2,    3,    2,    3,    2,
        1,    1,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    2,
        2,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    2,    5,
        4,    4,    5,    4,    2,    2,    4,    2,    2,    2,
        2,    2,    2,    2,    3,    2,    3,    2,    1,    1,
        1,    1,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    2,    2,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    2,    5,    4,    4,
        5,    4,    2,    2,    4,    2,    2,    2,    2,    2,
        2,    2,    3,    2,    3,    2,    1,    1,    1,    1,
        4,    4,    2,    5,    4,    4,    1,    3,    3,    2,
        3,    3,    1,    3,    1,    3,    2,    1,    1,    1,
        1,    1,    1,    3,    0,    3,    1,    2,    3,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    9,    3,    3,    2,    1,    3,    2,    1,
        2,    3,    3,    2,    1,    3,    3,    1,    1,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    0,    1
  ];
  
    
  private $yyval;
  private $yyastk;
  private $yysstk;
  private $yysp;
  private $yystate;
  private $yyloc; // current location
  
  private $lex;
  private $invalid = false;
  
  // current directory and filename
  private $cdir, $cfile;
  
  /**
   * returns the current location (last scanned token)
   * 
   * @return Location
   */
  public function loc()
  {
    if (!$this->yyloc)
      return new Location('<unknown>', new Position(0, 0));
    
    return $this->yyloc;
  }
  
  /**
   * consumes semicolons to avoid unnecessary empty-expressions 
   * 
   * @void
   */
  private function eat_semis()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_SEMI) {
      do {
        $this->lex->skip();
        $peek = $this->lex->peek();
      } while ($peek->type === T_SEMI);

    }
  }
  
  /**
   * consumes a T_END token
   * 
   * @void
   */
  private function eat_end()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_END) {
      $this->lex->skip();
    }
  }
  
  /**
   * parse function
   * 
   * @param  Lexer  $lex
   * @return Node
   */
  public function parse(Lexer $lex) 
  {
    $tokid = self::TOKEN_NONE;
    
    // lexer
    $this->lex = $lex;
    
    $file = $this->lex->get_info()['file'];
    $this->cdir = dirname($file);
    $this->cfile = $file;
    
    
    // stacks
    $this->yysstk = [ 0 ]; 
    $this->yyastk = [];
    
    // current state
    $yystate = 0;
    
    // error flag
    $yyerrflag = 0;

    // stack position
    $this->yysp = 0;
    
    // location stack
    $yylstk = [];
    
    // ignore semicolons at the beginning
    $this->eat_semis();
    
    for (;;) {
      if (self::$yybase[$yystate] == 0)
        $yyn = self::$yydefault[$yystate];
      else {
        if ($tokid === self::TOKEN_NONE) {
          // Fetch the next token id from the lexer
          $token = $this->lex->next();
                    
          // invalid token (regexp-scan failed)
          if ($token->type === T_INVL) {
            Logger::error_at($token->loc, 'invalid source/regexp-literal');
            return null;
          }
          
          // map the lexer token id to the internally used token id's
          if ($token->type >= 0 && $token->type < self::TOKEN_MAP_SIZE)
            $tokid = self::$translate[$token->type];
          else {
            Logger::error_at($token->loc, 'invalid token %d -> %s', $token->type, $token->value);
            return null;
          }        
          
          $this->yyloc = $token->loc;
          
          // store location
          $yylstk[$this->yysp] = $this->yyloc;
          
        } 

        if ((($yyn = self::$yybase[$yystate] + $tokid) >= 0
          && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid
          || ($yystate < self::YY2TBLSTATE
            && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + $tokid) >= 0
            && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid))
          && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT
        ) {
          /*
           * >= YYNLSTATE: shift and reduce
           * > 0: shift
           * = 0: accept
           * < 0: reduce
           * = -YYUNEXPECTED: error
           */
          if ($yyn > 0) {
            /* shift */
            
            $this->yysp++;
            
            $this->yysstk[$this->yysp] = $yystate = $yyn;
            $this->yyastk[$this->yysp] = $token;
            
            // store location
            $yylstk[$this->yysp] = $this->yyloc;
            
            $tokid = self::TOKEN_NONE;
            
            if ($yyerrflag > 0)
              $yyerrflag--;
            
            if ($yyn < self::YYNLSTATES)
              continue;

            /* $yyn >= YYNLSTATES means shift-and-reduce */
            $yyn -= self::YYNLSTATES;
          } else
            $yyn = -$yyn;
        } else
          $yyn = self::$yydefault[$yystate];
      }
      
      for (;;) {
        /* reduce/error */
        if ($yyn == 0) {
          /* accept */
          return $this->yyval;
        } elseif ($yyn != self::YYUNEXPECTED) {
          /* reduce */

          $this->{'yyn' . $yyn}();
          
          /* Goto - shift nonterminal */
          $yylen = self::$yylen[$yyn];
          $yyloc = $yylstk[$this->yysp - $yylen];
          
          $this->yysp -= $yylen;
          
          $yyn = self::$yylhs[$yyn];
          
          if (($yyp = self::$yygbase[$yyn] + $this->yysstk[$this->yysp]) >= 0
            && $yyp < self::YYGLAST && self::$yygcheck[$yyp] == $yyn)
            $yystate = self::$yygoto[$yyp];
          else
            $yystate = self::$yygdefault[$yyn];
          
          $this->yysp++;
          
          $this->yysstk[$this->yysp] = $yystate;
          $this->yyastk[$this->yysp] = $this->yyval;
          
          // set location if a real node was produced by $yyn
          if ($this->yyval instanceof Node)
            $this->yyval->loc = $yyloc;
          
          // store position
          $yylstk[$this->yysp] = $this->yyloc;
          
        } else {
          /* error */
          $this->invalid = true;
                    
          switch ($yyerrflag) {
            case 0:
              // let the lexer know
              $this->lex->sync = true;
              
              $expa = [];
              $expn = 0;
              $base = self::$yybase[$yystate];
              
              for ($i = 0; $i < self::TOKEN_MAP_SIZE; ++$i) {
                $n = $base + $i;
                if ($n >= 0 && $n < self::YYLAST && self::$yycheck[$n] == $i
                  || $yystate < self::YY2TBLSTATE
                  && ($n = self::$yybase[$yystate + self::YYNLSTATES] + $i)
                  && $n < self::YYLAST && ($n < 0 || self::$yycheck[$n] == $i)
                ) {
                  if ($n >= 0 && self::$yyaction[$n] != self::YYUNEXPECTED) {
                    if ($expn === 4) {
                      /* Too many expected tokens */
                      $expa = null;
                      $expn = 0;
                      break;
                    }

                    $expa[] = self::$terminals[$i];
                    $expn++;
                  }
                }
              }

              $exps = 'unexpected ' . self::$terminals[$tokid];
              
              if ($expn > 0) {
                $last = array_pop($expa);
                $exps .= ', expected ';
                
                if ($expn > 1)
                  $exps .= implode(', ', $expa) . ' or ';
                
                $exps .= $last;
                unset ($expa, $last);
              }
              
              Logger::error_at($this->yyloc, $exps);              
            case 1:
            case 2:
              $yyerrflag = 3;  
              
              while (!(($yyn = self::$yybase[$yystate] + self::YYINTERRTOK) >= 0
                && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK
                || ($yystate < self::YY2TBLSTATE
                  && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + self::YYINTERRTOK) >= 0
                  && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK))
              ) {  
                if ($this->yysp <= 0) 
                  return null;
                
                $yystate = $this->yysstk[--$this->yysp];              
              }
              
              $yyn = self::$yyaction[$yyn];
              $this->yysstk[++$this->yysp] = $yystate = $yyn;
              break;
            
            case 3:
              if ($tokid === 0) 
                return null;
              
              $tokid = -1;
              break;
          }
        }

        if ($yystate < self::YYNLSTATES)
          break;
        
        /* >= YYNLSTATES means shift-and-reduce */
        $yyn = $yystate - self::YYNLSTATES;
      }
    }
  }


  private function yyn0() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn1() 
  {
     $this->yyval = null; 
  }


  private function yyn2() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn3() 
  {
     
      $this->yyval = new ast\Unit($this->yyastk[$this->yysp-(1-1)]); 
      $this->eat_end(); 
    
  }


  private function yyn4() 
  {
     
      $this->yyval = new ast\Unit($this->yyastk[$this->yysp-(1-1)]); 
      $this->eat_end(); 
    
  }


  private function yyn5() 
  {
     $this->yyval = new ast\Module($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn6() 
  {
     $this->yyval = new ast\Content($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn7() 
  {
     $this->yyval = new ast\Content(null, $this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn8() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn9() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn10() 
  {
     
      $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
      $this->eat_semis(); 
    
  }


  private function yyn11() 
  {
     
      $this->yyval = new ast\UseAlias($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn12() 
  {
     
      $this->yyval = new ast\UseUnpack($this->yyastk[$this->yysp-(7-2)], $this->yyastk[$this->yysp-(7-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn13() 
  {
    
      $this->yyval = new ast\UseUnpack(null, $this->yyastk[$this->yysp-(6-3)]);
      $this->eat_semis();
    
  }


  private function yyn14() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn15() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn16() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn17() 
  {
     $this->yyval = new ast\UseAlias($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn18() 
  {
     $this->yyval = new ast\UseUnpack($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn19() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn20() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn21() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn22() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn23() 
  {
     $this->yyval = null; 
  }


  private function yyn24() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn25() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn26() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn27() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn28() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn29() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn30() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn31() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn32() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn33() 
  {
     $this->yyval = null; 
  }


  private function yyn34() 
  {
     $this->yyval = null; 
  }


  private function yyn35() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn36() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn37() 
  {
     $this->yyval = new ast\LabelDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn38() 
  {
    
      $this->yyval = new ast\Module($this->yyastk[$this->yysp-(4-2)], null);
      $this->eat_semis();
    
  }


  private function yyn39() 
  {
     
      $this->yyval = new ast\Module($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn40() 
  {
    
      $this->yyval = new ast\Module(null, null);
      $this->eat_semis();
    
  }


  private function yyn41() 
  {
     
      $this->yyval = new ast\Module(null, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn42() 
  {
     
      $this->yyval = new ast\RequireDecl(false, $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn43() 
  {
     
      $this->yyval = new ast\RequireDecl(true, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn44() 
  {
     
      $this->yyval = new ast\AttrDecl($this->yyastk[$this->yysp-(4-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn45() 
  {
     $this->yyval = new ast\CompAttr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn46() 
  {
     $this->yyval = new ast\TopexAttr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn47() 
  {
     $this->yyval = new ast\AttrDef($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn48() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn49() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn50() 
  {
     $this->yyval = new ast\AttrItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn51() 
  {
     $this->yyval = new ast\AttrItem($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn52() 
  {
     $this->yyval = new ast\AttrVal($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn53() 
  {
     $this->yyval = new ast\AttrVal($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn54() 
  {
     $this->yyval = new ast\AttrVal($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn55() 
  {
     $this->yyval = null; 
  }


  private function yyn56() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn57() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn58() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn59() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn60() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn61() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn62() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn63() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn64() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn65() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn66() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn67() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn68() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn69() 
  {
     
      $this->yyval = new ast\EnumDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn70() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn71() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn72() 
  {
     $this->yyval = new ast\EnumVar($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn73() 
  {
     $this->yyval = new ast\EnumVar($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn74() 
  {
     
      $this->yyval = new ast\ClassDecl($this->yyastk[$this->yysp-(8-1)], $this->yyastk[$this->yysp-(8-3)], $this->yyastk[$this->yysp-(8-4)], $this->yyastk[$this->yysp-(8-5)], $this->yyastk[$this->yysp-(8-7)]); 
      $this->eat_semis(); 
    
  }


  private function yyn75() 
  {
     
      $this->yyval = new ast\ClassDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-5)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn76() 
  {
     $this->yyval = null; 
  }


  private function yyn77() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn78() 
  {
     $this->yyval = null; 
  }


  private function yyn79() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn80() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn81() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn82() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn83() 
  {
     $this->yyval = null; 
  }


  private function yyn84() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn85() 
  {
     $this->yyval = null; 
  }


  private function yyn86() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn87() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn88() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn89() 
  {
     $this->yyval = []; 
  }


  private function yyn90() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn91() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn92() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn93() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn94() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn95() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn96() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn97() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn98() 
  {
     
      $this->yyval = new ast\CtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn99() 
  {
     $this->yyval = new ast\CtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn100() 
  {
     
      $this->yyval = new ast\DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn101() 
  {
     $this->yyval = new ast\DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn102() 
  {
     $this->yyval = new ast\GetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn103() 
  {
     
      $this->yyval = new ast\GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn104() 
  {
     $this->yyval = new ast\SetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn105() 
  {
     
      $this->yyval = new ast\GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn106() 
  {
     $this->yyval = new ast\NestedMods($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn107() 
  {
     $this->yyval = new ast\MemberAttr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn108() 
  {
     $this->yyval = new ast\MemberAttr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn109() 
  {
     
      $this->yyval = new ast\TraitUse($this->yyastk[$this->yysp-(3-2)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn110() 
  {
     
      $this->yyval = new ast\TraitUse($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn111() 
  {
     $this->yyval = new ast\TraitUse($this->yyastk[$this->yysp-(5-2)], null, $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn112() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn113() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn114() 
  {
     
      $this->yyval = new ast\TraitItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn115() 
  {
     
      $this->yyval = new ast\TraitItem($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-6)]); 
      $this->eat_semis(); 
    
  }


  private function yyn116() 
  {
     
      $this->yyval = new ast\TraitDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn117() 
  {
     
      $this->yyval = new ast\TraitDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn118() 
  {
     
      $this->yyval = new ast\IfaceDecl($this->yyastk[$this->yysp-(7-1)], $this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-6)]); 
      $this->eat_semis(); 
    
  }


  private function yyn119() 
  {
     
      $this->yyval = new ast\IfaceDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn120() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn121() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn122() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn123() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn124() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], true); 
  }


  private function yyn125() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn126() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn127() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn128() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn129() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], true); 
  }


  private function yyn130() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn131() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn132() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn133() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn134() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn135() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn136() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn137() 
  {
     $this->yyval = null; 
  }


  private function yyn138() 
  {
     $this->yyval = null; 
  }


  private function yyn139() 
  {
     
      $this->yyval = new ast\VarDecl(null, $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn140() 
  {
     
      $this->yyval = new ast\VarDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn141() 
  {
     $this->yyval = new ast\VarDecl(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn142() 
  {
     $this->yyval = new ast\VarDecl($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn143() 
  {
    
      $this->yyval = new ast\FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
    
  }


  private function yyn144() 
  {
     
      $this->yyval = new ast\FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn145() 
  {
     
      $this->yyval = new ast\FnDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn146() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn147() 
  {
     
      $this->yyval = $this->yyastk[$this->yysp-(3-2)];
      $this->eat_semis(); 
    
  }


  private function yyn148() 
  {
     $this->yyval = new ast\FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn149() 
  {
     $this->yyval = new ast\FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn150() 
  {
     $this->yyval = new ast\FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn151() 
  {
     $this->yyval = new ast\FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn152() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn153() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn154() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn155() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn156() 
  {
     $this->yyval = null; 
  }


  private function yyn157() 
  {
     $this->yyval = null; 
  }


  private function yyn158() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn159() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn160() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn161() 
  {
     $this->yyval = new ast\Param(false, null, null, $this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn162() 
  {
     $this->yyval = new ast\Param(false, null, null, $this->yyastk[$this->yysp-(2-1)], null, true); 
  }


  private function yyn163() 
  {
     $this->yyval = new ast\Param(false, null, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn164() 
  {
     $this->yyval = new ast\Param(false, null, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn165() 
  {
     $this->yyval = new ast\Param(false, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn166() 
  {
     $this->yyval = new ast\Param(false, null, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn167() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(2-1)], null, $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn168() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(3-1)], null, $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn169() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn170() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn171() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null, true); 
  }


  private function yyn172() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], false); 
  }


  private function yyn173() 
  {
     $this->yyval = new ast\ThisParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn174() 
  {
     $this->yyval = new ast\ThisParam($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn175() 
  {
     $this->yyval = new ast\RestParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn176() 
  {
     $this->yyval = new ast\Param(true, null, null, $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn177() 
  {
     $this->yyval = new ast\Param(true, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn178() 
  {
     $this->yyval = new ast\Param(true, $this->yyastk[$this->yysp-(3-1)], null, $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn179() 
  {
     $this->yyval = new ast\Param(true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], null, false); 
  }


  private function yyn180() 
  {
     $this->yyval = null; 
  }


  private function yyn181() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn182() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn183() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn184() 
  {
     $this->yyval = new ast\DoStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn185() 
  {
     $this->yyval = new ast\IfStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn186() 
  {
     $this->yyval = new ast\ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn187() 
  {
     $this->yyval = new ast\ForStmt($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], null, $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn188() 
  {
     $this->yyval = new ast\ForStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn189() 
  {
     $this->yyval = null; 
  }


  private function yyn190() 
  {
     $this->yyval = new ast\ForStmt(null, null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn191() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(2-2)], null, null); 
  }


  private function yyn192() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn193() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(3-2)], null, $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn194() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn195() 
  {
     $this->yyval = new ast\PhpStmt($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn196() 
  {
     $this->yyval = new ast\GotoStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn197() 
  {
     $this->yyval = new ast\TestStmt(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn198() 
  {
     $this->yyval = new ast\TestStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn199() 
  {
     $this->yyval = new ast\BreakStmt(null); 
  }


  private function yyn200() 
  {
     $this->yyval = new ast\BreakStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn201() 
  {
     $this->yyval = new ast\ContinueStmt(null); 
  }


  private function yyn202() 
  {
     $this->yyval = new ast\ContinueStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn203() 
  {
     $this->yyval = new ast\PrintStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn204() 
  {
     $this->yyval = new ast\ThrowStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn205() 
  {
     $this->yyval = new ast\WhileStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn206() 
  {
     $this->yyval = new ast\AssertStmt($this->yyastk[$this->yysp-(3-2)], null); 
  }


  private function yyn207() 
  {
     $this->yyval = new ast\AssertStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn208() 
  {
     $this->yyval = new ast\SwitchStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn209() 
  {
     $this->yyval = new ast\ReturnStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn210() 
  {
     $this->yyval = new ast\ReturnStmt(null); 
  }


  private function yyn211() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn212() 
  {
     $this->yyval = null; 
  }


  private function yyn213() 
  {
     $this->yyval = new ast\ForInPair(null, $this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn214() 
  {
     $this->yyval = new ast\ForInPair($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn215() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn216() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn217() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn218() 
  {
     $this->yyval = null; 
  }


  private function yyn219() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn220() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn221() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn222() 
  {
     $this->yyval = new ast\ElsifItem($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn223() 
  {
     $this->yyval = null; 
  }


  private function yyn224() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn225() 
  {
     $this->yyval = new ast\ElseItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn226() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn227() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn228() 
  {
     $this->yyval = new ast\CatchItem(null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn229() 
  {
     $this->yyval = new ast\CatchItem($this->yyastk[$this->yysp-(5-3)], null, $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn230() 
  {
     $this->yyval = new ast\CatchItem($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn231() 
  {
     $this->yyval = null; 
  }


  private function yyn232() 
  {
     $this->yyval = new ast\FinallyItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn233() 
  {
     $this->yyval = null; 
  }


  private function yyn234() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn235() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn236() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn237() 
  {
     $this->yyval = new ast\PhpUse($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn238() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn239() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn240() 
  {
     $this->yyval = new ast\PhpUseItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn241() 
  {
     $this->yyval = new ast\PhpUseItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn242() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn243() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn244() 
  {
     $this->yyval = new ast\CaseItem($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn245() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn246() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn247() 
  {
     $this->yyval = new ast\CaseLabel($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn248() 
  {
     $this->yyval = new ast\CaseLabel(null); 
  }


  private function yyn249() 
  {
     $this->yyval = new ast\Block(null); 
  }


  private function yyn250() 
  {
     $this->yyval = new ast\Block($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn251() 
  {
     $this->yyval = null; 
  }


  private function yyn252() 
  {
     
      $this->yyval = new ast\ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
      $this->eat_semis(); 
    
  }


  private function yyn253() 
  {
     
      $this->yyval = new ast\ExprStmt(null); 
      $this->eat_semis(); 
    
  }


  private function yyn254() 
  {
     $this->yyval = new ast\ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn255() 
  {
     $this->yyval = new ast\ExprStmt(null); 
  }


  private function yyn256() 
  {
     $this->yyval = new ast\ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn257() 
  {
     $this->yyval = new ast\ExprStmt(null); 
  }


  private function yyn258() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn259() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn260() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn261() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn262() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn263() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn264() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn265() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn266() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn267() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn268() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn269() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn270() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn271() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn272() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn273() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn274() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn275() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn276() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn277() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn278() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn279() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn280() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn281() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn282() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn283() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn284() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn285() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn286() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn287() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn288() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn289() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn290() 
  {
     $this->yyval = new ast\CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn291() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn292() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn293() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn294() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn295() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn296() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn297() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn298() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn299() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn300() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn301() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn302() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn303() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn304() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn305() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn306() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn307() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn308() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn309() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn310() 
  {
     $this->yyval = new ast\MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn311() 
  {
     $this->yyval = new ast\MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn312() 
  {
     $this->yyval = new ast\MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn313() 
  {
     $this->yyval = null; 
  }


  private function yyn314() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn315() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn316() 
  {
     $this->yyval = new ast\CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn317() 
  {
     $this->yyval = new ast\YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn318() 
  {
     $this->yyval = new ast\YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn319() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn320() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn321() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn322() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn323() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn324() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn325() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn326() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn327() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn328() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn329() 
  {
     $this->yyval = new ast\DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn330() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn331() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn332() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn333() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn334() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn335() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn336() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn337() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn338() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn339() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn340() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn341() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn342() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn343() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn344() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn345() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn346() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn347() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn348() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn349() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn350() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn351() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn352() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn353() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn354() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn355() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn356() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn357() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn358() 
  {
     $this->yyval = new ast\CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn359() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn360() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn361() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn362() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn363() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn364() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn365() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn366() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn367() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn368() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn369() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn370() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn371() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn372() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn373() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn374() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn375() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn376() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn377() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn378() 
  {
     $this->yyval = new ast\MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn379() 
  {
     $this->yyval = new ast\MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn380() 
  {
     $this->yyval = new ast\MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn381() 
  {
     $this->yyval = null; 
  }


  private function yyn382() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn383() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn384() 
  {
     $this->yyval = new ast\CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn385() 
  {
     $this->yyval = new ast\YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn386() 
  {
     $this->yyval = new ast\YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn387() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn388() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn389() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn390() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn391() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn392() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn393() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn394() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn395() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn396() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn397() 
  {
     $this->yyval = new ast\DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn398() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn399() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn400() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn401() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn402() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn403() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn404() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn405() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn406() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn407() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn408() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn409() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn410() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn411() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn412() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn413() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn414() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn415() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn416() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn417() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn418() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn419() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn420() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn421() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn422() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn423() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn424() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn425() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn426() 
  {
     $this->yyval = new ast\CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn427() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn428() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn429() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn430() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn431() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn432() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn433() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn434() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn435() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn436() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn437() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn438() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn439() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn440() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn441() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn442() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn443() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn444() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn445() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn446() 
  {
     $this->yyval = new ast\MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn447() 
  {
     $this->yyval = new ast\MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn448() 
  {
     $this->yyval = new ast\MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn449() 
  {
     $this->yyval = null; 
  }


  private function yyn450() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn451() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn452() 
  {
     $this->yyval = new ast\CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn453() 
  {
     $this->yyval = new ast\YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn454() 
  {
     $this->yyval = new ast\YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn455() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn456() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn457() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn458() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn459() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn460() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn461() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn462() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn463() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn464() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn465() 
  {
     $this->yyval = new ast\DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn466() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn467() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn468() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn469() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn470() 
  {
     
      $this->yyval = new ast\CastExpr($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-2)]); 
      $this->error_at($this->yyastk[$this->yysp-(4-1)]->loc, ERR_WARN, 'legacy cast, use `expr as type` instead'); 
    
  }


  private function yyn471() 
  {
     
      $this->yyval = new ast\CastExpr($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-2)]); 
      $this->error_at($this->yyastk[$this->yysp-(4-1)]->loc, ERR_WARN, 'legacy cast, use `expr as type` instead'); 
    
  }


  private function yyn472() 
  {
     $this->yyval = new ast\MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn473() 
  {
     $this->yyval = new ast\MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn474() 
  {
     $this->yyval = new ast\MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn475() 
  {
     $this->yyval = null; 
  }


  private function yyn476() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn477() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn478() 
  {
     $this->yyval = null; 
  }


  private function yyn479() 
  {
     $this->yyval = null; 
  }


  private function yyn480() 
  {
     $this->yyval = null; 
  }


  private function yyn481() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn482() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn483() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn484() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn485() 
  {
     $this->yyval = new ast\NamedArg($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn486() 
  {
     $this->yyval = new ast\RestArg($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn487() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn488() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn489() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn490() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn491() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn492() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn493() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn494() 
  {
     $this->lex->scan_regexp($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn495() 
  {
     $this->yyval = new ast\RegexpLit($this->yyastk[$this->yysp-(3-3)]->value); 
  }


  private function yyn496() 
  {
     $this->yyval = new ast\Name($this->yyastk[$this->yysp-(1-1)], false); 
  }


  private function yyn497() 
  {
     $this->yyval = new ast\Name($this->yyastk[$this->yysp-(2-2)], true); 
  }


  private function yyn498() 
  {
     $this->yyastk[$this->yysp-(3-1)]->add($this->yyastk[$this->yysp-(3-3)]); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn499() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn500() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn501() 
  {
     $this->yyval = new ast\TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn502() 
  {
     $this->yyval = new ast\TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn503() 
  {
     $this->yyval = new ast\TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn504() 
  {
     $this->yyval = new ast\TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn505() 
  {
     $this->yyval = new ast\TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn506() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn507() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn508() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn509() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn510() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn511() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn512() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn513() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn514() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn515() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn516() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn517() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn518() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn519() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn520() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn521() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn522() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn523() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn524() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn525() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn526() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn527() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn528() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn529() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn530() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn531() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn532() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn533() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn534() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn535() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn536() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn537() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn538() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn539() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn540() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn541() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn542() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn543() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn544() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn545() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn546() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn547() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn548() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn549() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn550() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn551() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn552() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn553() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn554() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn555() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn556() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn557() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn558() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn559() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn560() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn561() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn562() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn563() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn564() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn565() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn566() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn567() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn568() 
  {
     $this->yyval = new ast\ThisExpr; 
  }


  private function yyn569() 
  {
     $this->yyval = new ast\SuperExpr; 
  }


  private function yyn570() 
  {
     $this->yyval = new ast\NullLit; 
  }


  private function yyn571() 
  {
     $this->yyval = new ast\TrueLit; 
  }


  private function yyn572() 
  {
     $this->yyval = new ast\FalseLit; 
  }


  private function yyn573() 
  {
     $this->yyval = new ast\StrLit($this->cdir, 'c'); 
  }


  private function yyn574() 
  {
     $this->yyval = new ast\StrLit($this->cfile, 'c'); 
  }


  private function yyn575() 
  {
     $this->yyval = new ast\StrLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->line, 'c'); 
  }


  private function yyn576() 
  {
     $this->yyval = new ast\StrLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->coln, 'c'); 
  }


  private function yyn577() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn578() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn579() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn580() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn581() 
  {
     $this->yyval = new ast\StrLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->flag); 
  }


  private function yyn582() 
  {
     $this->yyval = new ast\LNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn583() 
  {
     $this->yyval = new ast\DNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn584() 
  {
     $this->yyval = new ast\SNumLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->suffix); 
  }


  private function yyn585() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn586() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn587() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn588() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn589() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn590() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn591() 
  {
     $this->yyval = new ast\ArrLit(null); 
  }


  private function yyn592() 
  {
     $this->yyval = new ast\ArrGen($this->yyastk[$this->yysp-(9-2)], $this->yyastk[$this->yysp-(9-5)], $this->yyastk[$this->yysp-(9-7)]); 
  }


  private function yyn593() 
  {
     $this->yyval = new ast\ArrLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn594() 
  {
     $this->yyval = null; 
  }


  private function yyn595() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn596() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn597() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn598() 
  {
     $this->yyval = new ast\SpreadExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn599() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn600() 
  {
     $this->yyval = new ast\ObjLit(null); 
  }


  private function yyn601() 
  {
     $this->yyval = new ast\ObjLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn602() 
  {
     $this->yyval = null; 
  }


  private function yyn603() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn604() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn605() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn606() 
  {
     $this->yyval = new ast\ObjPair($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn607() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn608() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn609() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn610() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn611() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn612() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn613() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn614() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn615() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn616() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn617() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn618() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn619() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn620() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn621() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn622() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn623() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn624() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn625() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn626() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn627() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn628() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn629() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn630() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn631() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn632() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn633() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn634() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn635() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn636() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn637() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn638() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn639() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn640() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn641() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn642() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn643() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn644() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn645() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn646() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn647() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn648() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn649() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn650() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn651() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn652() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn653() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn654() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn655() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn656() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn657() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn658() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn659() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn660() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn661() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn662() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn663() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn664() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn665() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn666() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn667() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn668() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }

}

