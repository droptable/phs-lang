<?php

/* this parser-skeleton is based on the awesome 
   work of nikic (https://github.com/nikic) 
   with some extensions (error-recovery and location-tracking) */

/**
 * This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *   the grammar file gen/parser.y
 *   the parser skeleton gen/kymacc.php.parser
 *
 * The skeleton for this parser was written by Moriyoshi Koizumi and is based on
 * the work by Masato Bito and is in the PUBLIC DOMAIN.
 */

namespace phs\front;


const YYERRTOK = 256;
const T_ARR = 257;
const T_YIELD = 258;
const T_APLUS = 259;
const T_AMINUS = 260;
const T_AMUL = 261;
const T_ADIV = 262;
const T_AMOD = 263;
const T_APOW = 264;
const T_ACONCAT = 265;
const T_ABIT_OR = 266;
const T_ABIT_AND = 267;
const T_ABIT_XOR = 268;
const T_ABOOL_OR = 269;
const T_ABOOL_AND = 270;
const T_ABOOL_XOR = 271;
const T_ASHIFT_L = 272;
const T_ASHIFT_R = 273;
const T_AREF = 274;
const T_RANGE = 275;
const T_BOOL_OR = 276;
const T_BOOL_XOR = 277;
const T_BOOL_AND = 278;
const T_EQ = 279;
const T_NEQ = 280;
const T_IN = 281;
const T_IS = 282;
const T_ISNT = 283;
const T_GTE = 284;
const T_LTE = 285;
const T_SL = 286;
const T_SR = 287;
const T_POW = 288;
const T_AS = 289;
const T_REST = 290;
const T_DEL = 291;
const T_INC = 292;
const T_DEC = 293;
const T_NEW = 294;
const T_DDDOT = 295;
const T_FN = 296;
const T_LET = 297;
const T_USE = 298;
const T_ENUM = 299;
const T_CLASS = 300;
const T_TRAIT = 301;
const T_IFACE = 302;
const T_MODULE = 303;
const T_REQUIRE = 304;
const T_IDENT = 305;
const T_LNUM = 306;
const T_DNUM = 307;
const T_SNUM = 308;
const T_STRING = 309;
const T_REGEXP = 310;
const T_TRUE = 311;
const T_FALSE = 312;
const T_NULL = 313;
const T_THIS = 314;
const T_SUPER = 315;
const T_GET = 316;
const T_SET = 317;
const T_DO = 318;
const T_IF = 319;
const T_ELSIF = 320;
const T_ELSE = 321;
const T_FOR = 322;
const T_TRY = 323;
const T_GOTO = 324;
const T_BREAK = 325;
const T_CONTINUE = 326;
const T_PRINT = 327;
const T_THROW = 328;
const T_CATCH = 329;
const T_FINALLY = 330;
const T_WHILE = 331;
const T_ASSERT = 332;
const T_SWITCH = 333;
const T_CASE = 334;
const T_DEFAULT = 335;
const T_RETURN = 336;
const T_CONST = 337;
const T_FINAL = 338;
const T_GLOBAL = 339;
const T_STATIC = 340;
const T_EXTERN = 341;
const T_PUBLIC = 342;
const T_PRIVATE = 343;
const T_PROTECTED = 344;
const T_SEALED = 345;
const T_INLINE = 346;
const T_PHP = 347;
const T_TEST = 348;
const T_CDIR = 349;
const T_CFILE = 350;
const T_CLINE = 351;
const T_CCOLN = 352;
const T_CFN = 353;
const T_CCLASS = 354;
const T_CMETHOD = 355;
const T_CMODULE = 356;
const T_NL = 357;
const T_TINT = 358;
const T_TBOOL = 359;
const T_TFLOAT = 360;
const T_TSTRING = 361;
const T_TREGEXP = 362;
const T_INVL = 363;
const T_END = 364;
const T_SYNC = 365;

require_once 'ast.php';
require_once 'lexer.php';

use phs\Logger;

use phs\front\ast\Node;
use phs\front\ast\Decl;
use phs\front\ast\Stmt;
use phs\front\ast\Expr;
use phs\front\ast\Unit;
use phs\front\ast\Module;
use phs\front\ast\Program;
use phs\front\ast\LabelDecl;
use phs\front\ast\RequireDecl;
use phs\front\ast\AttrDecl;
use phs\front\ast\CompAttr;
use phs\front\ast\TopexAttr;
use phs\front\ast\AttrDef;
use phs\front\ast\AttrItem;
use phs\front\ast\AttrVal;
use phs\front\ast\UseDecl;
use phs\front\ast\UseAlias;
use phs\front\ast\UseUnpack;
use phs\front\ast\EnumDecl;
use phs\front\ast\EnumVar;
use phs\front\ast\ClassDecl;
use phs\front\ast\CtorDecl;
use phs\front\ast\DtorDecl;
use phs\front\ast\GetterDecl;
use phs\front\ast\SetterDecl;
use phs\front\ast\NestedMods;
use phs\front\ast\MemberAttr;
use phs\front\ast\TraitUse;
use phs\front\ast\TraitItem;
use phs\front\ast\TraitDecl;
use phs\front\ast\IfaceDecl;
use phs\front\ast\VarItem;
use phs\front\ast\LetDecl;
use phs\front\ast\VarDecl;
use phs\front\ast\FnDecl;
use phs\front\ast\FnExpr;
use phs\front\ast\Block;
use phs\front\ast\ReturnStmt;
use phs\front\ast\Param;
use phs\front\ast\ThisParam;
use phs\front\ast\RestParam;
use phs\front\ast\DoStmt;
use phs\front\ast\IfStmt;
use phs\front\ast\ForInStmt;
use phs\front\ast\ForStmt;
use phs\front\ast\TryStmt;
use phs\front\ast\PhpStmt;
use phs\front\ast\GotoStmt;
use phs\front\ast\TestStmt;
use phs\front\ast\BreakStmt;
use phs\front\ast\ContinueStmt;
use phs\front\ast\PrintStmt;
use phs\front\ast\ThrowStmt;
use phs\front\ast\WhileStmt;
use phs\front\ast\AssertStmt;
use phs\front\ast\SwitchStmt;
use phs\front\ast\ElsifItem;
use phs\front\ast\ElseItem;
use phs\front\ast\CatchItem;
use phs\front\ast\FinallyItem;
use phs\front\ast\PhpUse;
use phs\front\ast\PhpUseItem;
use phs\front\ast\CaseItem;
use phs\front\ast\CaseLabel;
use phs\front\ast\ExprStmt;
use phs\front\ast\BinExpr;
use phs\front\ast\CheckExpr;
use phs\front\ast\CastExpr;
use phs\front\ast\UpdateExpr;
use phs\front\ast\AssignExpr;
use phs\front\ast\MemberExpr;
use phs\front\ast\CondExpr;
use phs\front\ast\CallExpr;
use phs\front\ast\YieldExpr;
use phs\front\ast\UnaryExpr;
use phs\front\ast\NewExpr;
use phs\front\ast\DelExpr;
use phs\front\ast\NamedArg;
use phs\front\ast\RestArg;
use phs\front\ast\RegexpLit;
use phs\front\ast\Name;
use phs\front\ast\TypeId;
use phs\front\ast\Ident;
use phs\front\ast\ThisExpr;
use phs\front\ast\SuperExpr;
use phs\front\ast\NullLit;
use phs\front\ast\TrueLit;
use phs\front\ast\FalseLit;
use phs\front\ast\StrLit;
use phs\front\ast\EngineConst;
use phs\front\ast\LNumLit;
use phs\front\ast\DNumLit;
use phs\front\ast\SNumLit;
use phs\front\ast\ArrLit;
use phs\front\ast\ArrGen;
use phs\front\ast\SpreadExpr;
use phs\front\ast\ObjLit;
use phs\front\ast\ObjPair;


class Parser
{
  const TOKEN_NONE    = -1;
  const TOKEN_INVALID = 135;

  const TOKEN_MAP_SIZE = 366;

  const YYLAST       = 1581;
  const YY2TBLSTATE  = 613;
  const YYGLAST      = 1157;
  const YYNLSTATES   = 695;
  const YYINTERRTOK  = 1;
  const YYUNEXPECTED = 32767;
  const YYDEFAULT    = -32766;

  /* @var array Map of token ids to their respective names */
  private static $terminals = [
    "EOF",
    "error",
    "','",
    "T_ARR",
    "T_YIELD",
    "T_APLUS",
    "T_AMINUS",
    "T_AMUL",
    "T_ADIV",
    "T_AMOD",
    "T_APOW",
    "T_ACONCAT",
    "T_ABIT_OR",
    "T_ABIT_AND",
    "T_ABIT_XOR",
    "T_ABOOL_OR",
    "T_ABOOL_AND",
    "T_ABOOL_XOR",
    "T_ASHIFT_L",
    "T_ASHIFT_R",
    "T_AREF",
    "'='",
    "T_RANGE",
    "'?'",
    "':'",
    "T_BOOL_OR",
    "T_BOOL_XOR",
    "T_BOOL_AND",
    "'|'",
    "'^'",
    "'&'",
    "T_EQ",
    "T_NEQ",
    "T_IN",
    "T_IS",
    "T_ISNT",
    "T_GTE",
    "T_LTE",
    "'>'",
    "'<'",
    "T_SL",
    "T_SR",
    "'+'",
    "'-'",
    "'~'",
    "'*'",
    "'/'",
    "'%'",
    "T_POW",
    "T_AS",
    "T_REST",
    "T_DEL",
    "T_INC",
    "T_DEC",
    "'!'",
    "T_NEW",
    "'.'",
    "'['",
    "']'",
    "'('",
    "')'",
    "T_DDDOT",
    "T_FN",
    "T_LET",
    "T_USE",
    "T_ENUM",
    "T_CLASS",
    "T_TRAIT",
    "T_IFACE",
    "T_MODULE",
    "T_REQUIRE",
    "T_IDENT",
    "T_LNUM",
    "T_DNUM",
    "T_SNUM",
    "T_STRING",
    "T_REGEXP",
    "T_TRUE",
    "T_FALSE",
    "T_NULL",
    "T_THIS",
    "T_SUPER",
    "T_GET",
    "T_SET",
    "T_DO",
    "T_IF",
    "T_ELSIF",
    "T_ELSE",
    "T_FOR",
    "T_TRY",
    "T_GOTO",
    "T_BREAK",
    "T_CONTINUE",
    "T_PRINT",
    "T_THROW",
    "T_CATCH",
    "T_FINALLY",
    "T_WHILE",
    "T_ASSERT",
    "T_SWITCH",
    "T_CASE",
    "T_DEFAULT",
    "T_RETURN",
    "T_CONST",
    "T_FINAL",
    "T_GLOBAL",
    "T_STATIC",
    "T_EXTERN",
    "T_PUBLIC",
    "T_PRIVATE",
    "T_PROTECTED",
    "T_SEALED",
    "T_INLINE",
    "T_PHP",
    "T_TEST",
    "T_CDIR",
    "T_CFILE",
    "T_CLINE",
    "T_CCOLN",
    "T_CFN",
    "T_CCLASS",
    "T_CMETHOD",
    "T_CMODULE",
    "T_NL",
    "T_TINT",
    "T_TBOOL",
    "T_TFLOAT",
    "T_TSTRING",
    "T_TREGEXP",
    "T_END",
    "T_SYNC",
    "';'",
    "'@'",
    "'{'",
    "'}'"
    , "???"
  ];

  /* @var array Map which translates lexer tokens to internal tokens */
  private static $translate = [
        0,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,   54,  135,  135,  135,   47,   30,  135,
       59,   60,   45,   42,    2,   43,   56,   46,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,   24,  131,
       39,   21,   38,   23,  132,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,   57,  135,   58,   29,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  133,   28,  134,   44,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,    1,    3,    4,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   20,   22,   25,   26,   27,   31,
       32,   33,   34,   35,   36,   37,   40,   41,   48,   49,
       50,   51,   52,   53,   55,   61,   62,   63,   64,   65,
       66,   67,   68,   69,   70,   71,   72,   73,   74,   75,
       76,   77,   78,   79,   80,   81,   82,   83,   84,   85,
       86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
       96,   97,   98,   99,  100,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
      116,  117,  118,  119,  120,  121,  122,  123,  124,  125,
      126,  127,  128,  135,  129,  130
  ];

  private static $yyaction = [
     1346,    0,  211,  212,  213,  214,  215,  216,  217,  218,
      219,  220,  221,  222,  223,  224,  225,  365,  226,  227,
      146,  651,  229,  230,  231,  232,  233,  234,  235,  236,
      237,  427,  428,  238,  239,  240,  241,  242,  243,  244,
      245,  246,  247,  248,  249,  250,  429,  308,  432, 1055,
     1056, 1123, 1124,   16,  147,  654,  136, 1202, 1306, 1307,
     1321, 1334, 1324, 1325, 1326, 1322, 1345, 1202, 1203, 1204,
      675, 1277, 1247, 1311, 1312, 1313, 1327, 1343, 1203, 1204,
     1339, 1314, 1315, 1316, 1337, 1317, 1344, 1340, 1341,    6,
     1318, 1319, 1320, 1338, 1310, 1335, 1336,  650, 1342, 1329,
     1330, 1347, 1328, 1323, 1331, 1332, 1333, 1353, 1354, 1308,
     1309, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,  631,
     1348, 1349, 1350, 1351, 1352,-32766,-32766,-32766,-32766,  210,
     1206, 1207, 1221, 1234, 1224, 1225, 1226, 1222, 1246, 1202,
      642,  514,  515,  516,  170, 1211, 1212, 1213, 1227, 1244,
     1203, 1204, 1240, 1214, 1215, 1216, 1238, 1217, 1245, 1241,
     1242,  459, 1218, 1219, 1220, 1239, 1210, 1235, 1236, 1237,
     1243, 1229, 1230, 1248, 1228, 1223, 1231, 1232, 1233, 1254,
     1255, 1208, 1209, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
     1263,  509, 1249, 1250, 1251, 1252, 1253,   -1,  557,  324,
      309,  152,  292,  293,  294,  295, 1202,  430,  431,  296,
      297,  298,  299,  300,  301,  302,  303,  304,  305,  306,
      307,  308,  432,-32766,-32766, 1123, 1124,  835,  505,   18,
      150,  949,  136,-32766,-32766,-32766,-32766,-32766,-32766,  153,
      154,  155, 1197, 1198, 1199, 1200, 1201,  310,  508,  156,
      157,  158,  346,  659, 1197, 1198, 1199, 1200, 1201,  -54,
      -54,  447,  -54,  -54,  -54,  -54,  448,  141,  399,  517,
       -6,  557,  631,  950,  152,  807,  305,  306,  307,  308,
      432,   20,  590, 1123, 1124,  545,  591,  510,  466,  467,
      151,  159,  629,  747,  592,  160,  593,  655,  914,  142,
      753,  754,  755,  756,  762,  757,  758,  759,  760,  761,
      624,  539,  153,  154,  155,  149,  658,  288,  289,  290,
      291,  508,  156,  157,  158,  346,  718,  841,  951,  455,
        9, -169,  -54,  -54,  447,  -54,  -54,  -54,  -54,  449,
      141,  168,  529,  413,  557,  915,  263,  152,  640, 1287,
      326,  739,  865,  453,   20,  590, 1175,  935,  545,  591,
      510,  466,  467,  151,  159,  643,  604,  592,  160,  593,
      138, -163,  142,  753,  754,  755,  756,  762,  757,  758,
      759,  760,  761,  624,  539,  153,  154,  155,  311, -169,
      316,   14,  859,  509,  508,  156,  157,  158,  346,  718,
      621,  951,  455,    9,  622,  -54,  -54,  447,  -54,  -54,
      -54,  -54,  449,  141,  642,   18,  150,  557,  136,  312,
      152,  289,  290,  291,  805,  810,  412,   20,  590, -163,
      393,  545,  591,  510,  466,  467,  151,  159,  140,  509,
      592,  160,  593,  366,  260,  142,  753,  754,  755,  756,
      762,  757,  758,  759,  760,  761,  624,  539,  153,  154,
      155,-32766,-32766,-32766,  394,    1,  495,  508,  156,  157,
      158,  346,  718,  905,  951,  455,    9,  -29,  -54,  -54,
      447,  -54,  -54,  -54,  -54,  449,  141,  327,  855,  862,
      557,  520,  330,  152,  868,  461, 1177,  462, 1296,  528,
       20,  590,  506,  494,  545,  591,  510,  466,  467,  151,
      159,  452,  504,  592,  160,  593,  779,  954,  142,  753,
      754,  755,  756,  762,  757,  758,  759,  760,  761,  624,
      539,  153,  154,  155,  523,  618,  769,  815,  398,  397,
      508,  156,  157,  158,  346,  718,  507,  951,  455,    9,
      -30,  -54,  -54,  447,  -54,  -54,  -54,  -54,  449,  141,
    -32766,-32766,-32766,-32766,  616,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,   20,  590,  454,  509,  545,  591,  510,
      466,  467,  151,  159, 1203, 1204,  592,  160,  593,  368,
      321,  142,  753,  754,  755,  756,  762,  757,  758,  759,
      760,  761,  624,  539,  259,  753,  754,  755,  756,  762,
      757,  758,  759,  760,  761,  290,  291,    5,  718,    2,
      951,  455,    9,  171,  172,  173,  174,  175,  176,  177,
      178,  179,  180,  181,  182,  183,  184,  185,  363,  186,
      187,  144,  676,  188,  189,  190,  191,  192,  193,  194,
      195,  196,  424,  425,  197,  198,  199,  200,  201,  202,
      203,  204,  205,  206,  207,  208,  209,  426,  457,  567,
      988,  989,  152,  265,   15,  145,  271,  272,  273,  274,
      275,  276,  277,  278,  279,  280,  281,  282,  283,  284,
      285,  367,  286,  287,  149,  332,  288,  289,  290,  291,
      333,  813,  509,  396,  328,-32766,-32766,   17,  148,  320,
      153,  154,  155,-32766,-32766,   16,  147,  513,  474,  508,
      156,  157,  158,  346,-32766,-32766,  546,  603,  313,  667,
      -54,  -54,  325,  244,  245,  246,  247,  248,  249,  250,
      429,  331,  567, 1055, 1056,  152,  329,   16,  147,  318,
      136,  945,   20,  590,  317,  315,  545,  591,  510,  466,
      467,  151,  159,  266,   11,  592,  160,  593, -247, -247,
      142,  753,  754,  755,  756,  762,  757,  758,  759,  760,
      761,  624,  539,  153,  154,  155,  261,  267,  314,  264,
      946,  322,  508,  156,  157,  158,  346,  228,  291,  951,
      456,    9, -247,  -54,  -54,-32767,-32767,-32767,-32767,-32767,
    -32767,-32767,  242,  243,-32766,  567,  522,  527,  152,  460,
      458,  446,  512,  524,   19,   20,  590, 1288,  168,  545,
      591,  510,  466,  467,  151,  159,  738, 1289,  592,  160,
      593,  313,  667,  142,  753,  754,  755,  756,  762,  757,
      758,  759,  760,  761,  624,  539,  153,  154,  155,  521,
      263, 1010, 1145, 1171, 1290,  508,  156,  157,  158,  346,
     1077, 1144,  951,  456,    9, 1170,  -54,  -54,  237,  427,
      428,  238,  239,  240,  241,  242,  243,  143,  534, 1076,
      509,  152, 1009,   26,  450,  364,  270,  112,   20,  590,
     1202,-32767,  545,  591,  510,  466,  467,  151,  159,  493,
      509,  592,  160,  593,   27,   28,  142,  753,  754,  755,
      756,  762,  757,  758,  759,  760,  761,  624,  539,  153,
      154,  155,   29,  691, 1173,   30,   23, 1176,  508,  156,
      157,  158,  346,  319,  617,  951,  456,    9,  948,  -54,
      -54,  623, 1174, 1197, 1198, 1199, 1200, 1201,  251,  854,
      735,  567, 1191, 1277,  152,  477, 1202,  475,  610,  646,
      169,   20,  590,  835,  706,  545,  591,  510,  466,  467,
      151,  159,  602,   25,  592,  160,  593,  728,   12,  142,
      753,  754,  755,  756,  762,  757,  758,  759,  760,  761,
      624,  539,  153,  154,  155, 1305,    0,    0,  717,    0,
      795,  508,  156,  157,  158,  346,  834,  411,  951,  456,
        9,  947,  -54,  -54,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,  465,  842,   20,  590,  741,  161,  545,  591,
      510,  466,  467,  151,  159,  742,  906,  592,  160,  593,
      525,  526,  142,  753,  754,  755,  756,  762,  757,  758,
      759,  760,  761,  624,  539,  953,  900,  898,  909,  881,
      911,  895,  902,  952,  899,  162,  163,  164,  800,  694,
      798,  951,  456,    9,  511,  165,  166,  167,  347,  252,
      135,  793,  133,  848,  509,  463,  727,  908,  903,    0,
      473,  519,  -89,  837, 1202, 1278, 1279, 1280, 1277,  836,
     1267, 1268, 1266, 1264, 1265, 1203, 1204,  634,  726,  740,
      152,  901,  811,  806,    0,    0,    9,  253,  254,  255,
      323,  648,  509,  269,  252,  268,  518,  256,  257,  258,
      348,  262, 1202,    2,  134,  537,  476,  464, 1269, 1270,
     1271, 1272, 1273, 1274, 1275, 1276,  585,  465,  153,  154,
      155, 1075, 1143, 1169, 1008,  907,   13,  508,  156,  157,
      158,  346,  253,  254,  255,  525,  526,  801,-32766,  768,
      814,  518,  256,  257,  258,  348,  812,  763,  894,  134,
      722,  723,  464,  -54, 1297, 1197, 1198, 1199, 1200, 1201,
       20,  590, 1298,  682,  545,  591,  510,  466,  467,  151,
      159,  672,    0,  592,  160,  593,    0,    0,  142,    0,
        0,    0,    0,    0,    0,  473,    0,  -88,    0,  624,
      539,    0,    0,  753,  754,  755,  756,  762,  757,  758,
      759,  760,  761,    0,    0,    0,    0,  951,    0,    9,
      235,  236,  237,  427,  428,  238,  239,  240,  241,  242,
      243,  955,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,    0,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,    0,-32766,-32766,-32766,
    -32766,  271,  272,  273,  274,  275,  276,  277,  278,  279,
      280,  281,  282,  283,  284,  285,  367,  286,  287,  149,
        0,  288,  289,  290,  291,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,    0,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,    0,-32767,-32767,-32767,-32767,
    -32767,-32767,    0,-32766,    0,-32766,-32766,-32766,    0,    0,
        0,    0,    0,    0,-32766,-32766,-32766,-32766,-32766,    0,
        0,    0,  143,    0,    0,-32766,    0,-32766,-32766,-32766,
        0,    0,    0,  657,    0,    0,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,    0,-32766,-32766,    0,    0,
    -32766,-32766,-32766,-32766,-32766,    0,-32766,    0,  143,    0,
        0,-32766,  519,    0,    0,    0,    0,-32766,-32766,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, -182,    0,    0,    0,    0, 1197, 1198, 1199,
     1200, 1201,  853,  509,    0,    0,-32766,    0,    0,    0,
        0,    0,    0, 1202,    0,    0,    0,    0,    0,    0,
        0,    0, -182,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,-32766,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 1197, 1198, 1199, 1200,
     1201
  ];

  private static $yycheck = [
        4,    0,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   20,   21,   22,
       23,    1,   25,   26,   27,   28,   29,   30,   31,   32,
       33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
       43,   44,   45,   46,   47,   48,   49,   48,   49,   52,
       53,   52,   53,   56,   57,    1,   59,   71,   62,   63,
       64,   65,   66,   67,   68,   69,   70,   71,   82,   83,
        1,   75,    4,   77,   78,   79,   80,   81,   82,   83,
       84,   85,   86,   87,   88,   89,   90,   91,   92,  123,
       94,   95,   96,   97,   98,   99,  100,  131,  102,  103,
      104,  105,  106,  107,  108,  109,  110,  111,  112,  113,
      114,  115,  116,  117,  118,  119,  120,  121,  122,    1,
      124,  125,  126,  127,  128,   29,   30,   31,   32,  133,
       62,   63,   64,   65,   66,   67,   68,   69,   70,   71,
       65,   66,   67,   68,    2,   77,   78,   79,   80,   81,
       82,   83,   84,   85,   86,   87,   88,   89,   90,   91,
       92,    2,   94,   95,   96,   97,   98,   99,  100,  101,
      102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,  113,  114,  115,  116,  117,  118,  119,  120,  121,
      122,   61,  124,  125,  126,  127,  128,    0,    1,    3,
       33,    4,   29,   30,   31,   32,   71,   34,   35,   36,
       37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
       47,   48,   49,   82,   83,   52,   53,  130,    2,   56,
       57,  134,   59,   42,   43,   44,   45,   46,   47,   42,
       43,   44,  124,  125,  126,  127,  128,   33,   51,   52,
       53,   54,   55,    1,  124,  125,  126,  127,  128,   62,
       63,   64,   65,   66,   67,   68,   69,   70,  133,   49,
        0,    1,    1,  131,    4,  134,   45,   46,   47,   48,
       49,   84,   85,   52,   53,   88,   89,   90,   91,   92,
       93,   94,    1,  134,   97,   98,   99,    1,  131,  102,
      103,  104,  105,  106,  107,  108,  109,  110,  111,  112,
      113,  114,   42,   43,   44,   23,    1,   25,   26,   27,
       28,   51,   52,   53,   54,   55,  129,  131,  131,  132,
      133,    2,   62,   63,   64,   65,   66,   67,   68,   69,
       70,   50,   49,   49,    1,  131,   50,    4,    1,   58,
       21,  131,   23,  133,   84,   85,   60,  131,   88,   89,
       90,   91,   92,   93,   94,    1,   24,   97,   98,   99,
        2,    2,  102,  103,  104,  105,  106,  107,  108,  109,
      110,  111,  112,  113,  114,   42,   43,   44,    2,   60,
       21,    2,   23,   61,   51,   52,   53,   54,   55,  129,
       51,  131,  132,  133,   55,   62,   63,   64,   65,   66,
       67,   68,   69,   70,   65,   56,   57,    1,   59,   33,
        4,   26,   27,   28,  131,  131,  133,   84,   85,   60,
        2,   88,   89,   90,   91,   92,   93,   94,    2,   61,
       97,   98,   99,   20,   21,  102,  103,  104,  105,  106,
      107,  108,  109,  110,  111,  112,  113,  114,   42,   43,
       44,   42,   43,   44,   21,  133,    2,   51,   52,   53,
       54,   55,  129,  131,  131,  132,  133,  134,   62,   63,
       64,   65,   66,   67,   68,   69,   70,   21,   60,   23,
        1,   49,   21,    4,   23,    2,   60,    2,  134,   24,
       84,   85,   59,    2,   88,   89,   90,   91,   92,   93,
       94,  133,    2,   97,   98,   99,    1,  131,  102,  103,
      104,  105,  106,  107,  108,  109,  110,  111,  112,  113,
      114,   42,   43,   44,   50,   60,  131,  131,  133,  133,
       51,   52,   53,   54,   55,  129,    2,  131,  132,  133,
      134,   62,   63,   64,   65,   66,   67,   68,   69,   70,
       29,   30,   31,   32,   80,   34,   35,   36,   37,   38,
       39,   40,   41,   84,   85,  133,   61,   88,   89,   90,
       91,   92,   93,   94,   82,   83,   97,   98,   99,   20,
       21,  102,  103,  104,  105,  106,  107,  108,  109,  110,
      111,  112,  113,  114,    2,  103,  104,  105,  106,  107,
      108,  109,  110,  111,  112,   27,   28,  131,  129,  133,
      131,  132,  133,    5,    6,    7,    8,    9,   10,   11,
       12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
       22,   23,    1,   25,   26,   27,   28,   29,   30,   31,
       32,   33,   34,   35,   36,   37,   38,   39,   40,   41,
       42,   43,   44,   45,   46,   47,   48,   49,    2,    1,
       52,   53,    4,    3,   56,   57,    5,    6,    7,    8,
        9,   10,   11,   12,   13,   14,   15,   16,   17,   18,
       19,   20,   21,   22,   23,    3,   25,   26,   27,   28,
        3,  131,   61,  133,   33,   29,   30,   56,   57,    3,
       42,   43,   44,   56,   57,   56,   57,   62,   63,   51,
       52,   53,   54,   55,   82,   83,   95,   96,  100,  101,
       62,   63,   21,   42,   43,   44,   45,   46,   47,   48,
       49,   21,    1,   52,   53,    4,   24,   56,   57,   24,
       59,   24,   84,   85,   24,   24,   88,   89,   90,   91,
       92,   93,   94,   24,   24,   97,   98,   99,  100,  101,
      102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,  113,  114,   42,   43,   44,   24,   24,   24,   24,
       24,   24,   51,   52,   53,   54,   55,   24,   28,  131,
      132,  133,  134,   62,   63,   33,   34,   35,   36,   37,
       38,   39,   40,   41,   29,    1,   30,   30,    4,   39,
       39,   44,   61,   49,   56,   84,   85,   58,   50,   88,
       89,   90,   91,   92,   93,   94,   60,   58,   97,   98,
       99,  100,  101,  102,  103,  104,  105,  106,  107,  108,
      109,  110,  111,  112,  113,  114,   42,   43,   44,   30,
       50,   58,   58,   58,   58,   51,   52,   53,   54,   55,
       58,   58,  131,  132,  133,   58,   62,   63,   33,   34,
       35,   36,   37,   38,   39,   40,   41,   59,    1,   58,
       61,    4,   58,   60,   59,   59,   59,   59,   84,   85,
       71,   59,   88,   89,   90,   91,   92,   93,   94,   59,
       61,   97,   98,   99,   60,   60,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,   42,
       43,   44,   60,   60,   60,   60,   60,   60,   51,   52,
       53,   54,   55,   60,   60,  131,  132,  133,  134,   62,
       63,   60,   60,  124,  125,  126,  127,  128,   60,   60,
       60,    1,   76,   75,    4,   63,   71,   64,   86,   88,
      113,   84,   85,  130,  123,   88,   89,   90,   91,   92,
       93,   94,   97,   87,   97,   98,   99,  123,  123,  102,
      103,  104,  105,  106,  107,  108,  109,  110,  111,  112,
      113,  114,   42,   43,   44,  134,   -1,   -1,  130,   -1,
      131,   51,   52,   53,   54,   55,  123,  123,  131,  132,
      133,  134,   62,   63,    5,    6,    7,    8,    9,   10,
       11,   12,   13,   14,   15,   16,   17,   18,   19,   20,
       21,   22,   64,  131,   84,   85,  131,    4,   88,   89,
       90,   91,   92,   93,   94,  131,  131,   97,   98,   99,
       82,   83,  102,  103,  104,  105,  106,  107,  108,  109,
      110,  111,  112,  113,  114,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,   42,   43,   44,  131,   46,
      131,  131,  132,  133,   51,   52,   53,   54,   55,    4,
       57,  131,   59,  131,   61,   62,  131,  131,  131,   -1,
      132,   30,  134,  131,   71,   72,   73,   74,   75,  131,
       77,   78,   79,   80,   81,   82,   83,    1,  131,  131,
        4,  131,  131,  131,   -1,   -1,  133,   42,   43,   44,
      133,    1,   61,  133,    4,  133,   51,   52,   53,   54,
       55,  133,   71,  133,   59,  133,  133,   62,  115,  116,
      117,  118,  119,  120,  121,  122,  133,   64,   42,   43,
       44,  134,  134,  134,  134,  134,  133,   51,   52,   53,
       54,   55,   42,   43,   44,   82,   83,  134,   62,  134,
      134,   51,   52,   53,   54,   55,  134,  134,  134,   59,
      134,  134,   62,   63,  134,  124,  125,  126,  127,  128,
       84,   85,  134,  134,   88,   89,   90,   91,   92,   93,
       94,  134,   -1,   97,   98,   99,   -1,   -1,  102,   -1,
       -1,   -1,   -1,   -1,   -1,  132,   -1,  134,   -1,  113,
      114,   -1,   -1,  103,  104,  105,  106,  107,  108,  109,
      110,  111,  112,   -1,   -1,   -1,   -1,  131,   -1,  133,
       31,   32,   33,   34,   35,   36,   37,   38,   39,   40,
       41,  131,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   20,   21,   22,
       23,   -1,   25,   26,   27,   28,   29,    5,    6,    7,
        8,    9,   10,   11,   12,   13,   14,   15,   16,   17,
       18,   19,   20,   21,   22,   23,   -1,   25,   26,   27,
       28,    5,    6,    7,    8,    9,   10,   11,   12,   13,
       14,   15,   16,   17,   18,   19,   20,   21,   22,   23,
       -1,   25,   26,   27,   28,    5,    6,    7,    8,    9,
       10,   11,   12,   13,   14,   15,   16,   17,   18,   19,
       20,   21,   22,   23,   -1,   25,   26,   27,    5,    6,
        7,    8,    9,   10,   11,   12,   13,   14,   15,   16,
       17,   18,   19,   20,   21,   22,   23,    4,   25,   26,
        5,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   20,   21,   22,   23,    4,
       25,   29,   30,   31,   32,   -1,   34,   35,   36,   37,
       38,   39,   -1,    4,   -1,   42,   43,   44,   -1,   -1,
       -1,   -1,   -1,   -1,   51,   52,   53,   54,   55,   -1,
       -1,   -1,   59,   -1,   -1,   62,   -1,   42,   43,   44,
       -1,   -1,   -1,    1,   -1,   -1,   51,   52,   53,   54,
       55,   42,   43,   44,   59,   -1,   61,   62,   -1,   -1,
       51,   52,   53,   54,   55,   -1,   71,   -1,   59,   -1,
       -1,   62,   30,   -1,   -1,   -1,   -1,   82,   83,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   50,   -1,   -1,   -1,   -1,  124,  125,  126,
      127,  128,   60,   61,   -1,   -1,  133,   -1,   -1,   -1,
       -1,   -1,   -1,   71,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   80,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,  133,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,  124,  125,  126,  127,
      128
  ];

  private static $yybase = [
      197,  343,  343,  270,  416,  489,  489,  668,  741,  887,
      814,  960,  960,  364,   -4, 1018, 1012, 1010, 1007,   68,
     1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126,
     1126,  342,  773,  881,  874,  997,  977,  976,  765,  975,
      764,  834,  871,  730,  831,  817,  725, 1040, 1037, 1039,
      722,  813,  854,  855,  872,  727, 1038,  972,  873,  959,
      957,  618,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,  671,   -3,   -3,   -3,   -3,   -3,
       -3,   -3, 1140, 1316, 1316, 1316, 1316, 1316, 1316, 1316,
     1316, 1316, 1316, 1316, 1316, 1316, 1316, 1316, 1316, 1316,
     1316, 1316, 1316,  118,  118,  291,  296,  944,  778,  833,
      810,  857,  947,  271,  762,   54,  763,  315,  252,  767,
       69, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1095, 1095, 1095, 1095, 1095, 1095, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095,
     1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095,
     1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095,
     1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1043,
     1043, 1095, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1095,
     1095, 1095, 1095, 1043, 1043, 1043, 1043, 1043, 1043, 1095,
     1043, 1043, 1043, 1043, 1019, 1019, 1019, 1019, 1019, 1019,
     1019, 1019, 1019,  292,  292,  292, 1383, 1383, 1383, 1385,
     1385, 1363, 1363,  395, 1340, 1340,  588, 1292, 1292,  770,
     1267, 1267,  173, 1419, 1452, 1419, 1419, 1419, 1419, 1229,
     1229,  785,  676,  845,  845,  772,  772,  772,  772,  772,
      845,  845,  772,  772,  772,  772,  772,   96,   96, 1382,
     1382, 1382, 1382, 1081, 1405,  829, 1103, 1103, 1103, 1103,
      978,  135,  895,  895,  691,  691,  691,  691,  531,  531,
      141,  642,  642,  642,  419,  419,  419,  419,  419,  419,
      231,  231,  231,  642,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  191,  191,  191,  191,  191,  191,  191,
      191,   -1,   -1,   -1,   -1,   75,  515,  378,  332,  332,
      641,  349,  849,  849,  849,  347,   20,  849,  849,  849,
      849,  849,  849,  836,  836,  849,  946,  945,  786,  787,
      369,  329,  293,  -14,  -14,  -14,  -14,  -14, 1041,  659,
      659,  659,  659,  659,  659,  651,  659,  659,  659,  659,
      659,  659,  651,  -14,  -14,  -14,  359,  359,  359,  359,
      359,  359,  651,  196,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  220,  486,   97,  386,  475,  628,  631,  888,
      670,  631,  670,  706,  706,  838,  835,  912,  651,  651,
      651,  651,  651,  692,  697,  879,  970,  878,  142,  951,
      -34,  655,  423,  982,  442,  167,  214,  843, 1020,  988,
      570,  436,  428,  484,  569,  952,  226,  443,  406,  466,
      159,  875,  405,  471,  294,  903,  882,  842,  896,  842,
      828, 1003,  828,  828,  657,  368, 1003,  501,  657,  836,
      389,  666,  828, 1003,  888,  888,  903,  780,  781,  666,
      828,  882,  657,  836,  544,  777,  768, 1003, 1003,  836,
      836,  836,  836, 1003, 1033,    1,  761,  740,  886,  806,
      779,  892,  898,  761,  949,  885,  950,  953, 1000, 1022,
      851,  850, 1023, 1078, 1070,  739,  837, 1067,  876,  902,
      864,  893,  865,  761,  803,  877,  731,  899,  812,  805,
     1087,  998, 1066,  948,  883,  510,  925,  766,  774, 1064,
      900,  711,  924, 1079,  510,  804,  884, 1063,  761, 1062,
      493,  720,  915,  776,  761,  495,  894, 1056,  891, 1055,
     1053,  769, 1002, 1001,    0, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,   -4,    0,
       68,   68,   68,   68,    0, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,  359,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  173,
        0,    0,    0,    0,    0,    0,    0, 1043,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1043, 1043,
     1043, 1043, 1043, 1043,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043,    0,    0, 1043,    0,    0,    0,
        0,    0,    0,    0, 1043, 1043, 1043, 1043,    0,    0,
        0,    0,    0,    0, 1043,    0,    0,    0,    0,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,  173,  173,
      173, 1043, 1043, 1043,   -3,   -3,   -3,   -3,  173,   -3,
       -3,  173,   -3,   -3,  173,   -3,   -3,    0, 1043,  502,
     1043, 1043, 1043, 1043,  691,  691,  173,  173,  691,  691,
      691,  691,  691,  691,  691,  691,  691,  691,  691,  691,
      691,  691,  173,  173,  173,  173,  173,  173,  502, 1043,
      502,  502,  502,  502,  502,  502,  502,  502,  502,    0,
        0,    0,    0,  173,  173,  502,  502,  502,  502,  691,
      691,  691,  691,  691,  691,  359,  359,  359,  502,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  691,  691,
      691,  691,  691,  691,  691,  691,  359,  359,  359,  359,
      655,  -14,  -14,  -14,  -14,  -14,  655,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,    0,    0,  761,    0,    0,
        0,    0,    0,  628,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  359, 1003,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  761,  949,
        0,  761,    0,    0, 1003, 1003,    0, 1003, 1003, 1003,
     1003, 1003,  836,    0,    0,    0,    0,    0, 1003, 1003,
     1003, 1003,  949,    0,  602,    0,    0,    0,  464,    0,
        0,    0,  949,  761,  464,    0,    0,    0,    0,    0,
      602,    0,    0,    0,    0,    0,  602,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  359,
        0,    0,    0,  359,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  359
  ];

  private static $yydefault = [
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,  669,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,  319,  600,32767,32767,32767,32767,  386,32767,
    32767,32767,32767,32767,32767,32767,  454,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,  261,  263,  599,  262,  297,  298,  299,  300,  301,
      302,  303,  304,  305,  306,  307,  308,  309,  310,  311,
      295,  485,  364,  365,  366,  367,  368,  369,  370,  371,
      372,  373,  374,  375,  376,  377,  378,  362,  600,  264,
      124,  487,  155,  607,32767,  486,  165,   72,  171,  168,
      174,  176,32767,  265,  432,  433,  434,  435,  436,  437,
      438,  439,  440,  441,  442,  443,  444,  445,  446,  430,
      266,  157,  129,32767,32767,32767,32767,32767,  669,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,  284,  351,  320,  317,  387,  384,
      316,  383,  455,  420,  452,  451,32767,32767,32767,  282,
      349,  283,  350,  418,  281,  348,  419,  275,  342,  417,
      276,  343,  411,32767,32767,32767,32767,32767,32767,  274,
      341,  412,  410,  287,  288,  289,  279,  280,  278,  277,
      354,  355,  356,  346,  347,  344,  345,  423,  424,  415,
      416,  413,  414,  182,32767,32767,   54,   54,   54,   54,
       54,   55,   55,   55,  285,  286,  352,  353,  421,  422,
       54,   54,   54,   54,  267,  268,  273,  334,  335,  340,
      403,  404,  409,   55,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,  269,  270,  271,  272,  336,  337,  338,
      339,  405,  406,  407,  408,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,  669,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,  183,32767,
      497,  497,32767,32767,32767,32767,32767,32767,32767,  322,
      321,  323,  325,  326,  324,  329,  389,  388,  390,  392,
      393,  391,  396,32767,  669,32767,  457,  456,  458,  460,
      461,  459,  464,32767,32767,32767,32767,  669,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,  195,32767,
    32767,  196,32767,32767,32767,32767,32767,32767,  296,  363,
      125,  431,  130,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,  123,32767,   50,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,  128,32767,32767,   41,32767,  166,
    32767,32767,32767,  172,32767,  236,  221,  471,  226,  472,
    32767,32767,32767,32767,  327,  668,32767,  668,  394,32767,
      668,  668,32767,32767,32767,32767,  237,   75,   77,  668,
    32767,  222,  462,32767,  668,   82,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,  491,  497,32767,32767,
    32767,32767,32767,   53,32767,32767,32767,32767,32767,32767,
    32767,   39,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,  500,32767,32767,  497,32767,32767,32767,
    32767,32767,32767,32767,32767,  144,32767,32767,  243,32767,
    32767,   71,32767,32767,  143,32767,32767,32767,   81,32767,
       78,  175,32767,32767,   87,   83,32767,32767,32767,32767,
    32767,32767,32767,32767,  495
  ];

  private static $yygoto = [
       33,   81,   62,   98,   62,   81,   35,   37,  662,   40,
       41,   43,   44,   45,   50,   51,   62,   32,  479,  480,
      481,  482,  483,  484,   36,   31,   38,  486,  487,  488,
      489,  490,  491,   63,   39,   64,   65,   66,   67,   68,
       69,   70,   71,   72,   73,   74,   75,   76,   77,   78,
       79,   80,  334,  349,  351,  354,  357,  360,  369,  373,
      374,  375,  376,  377,  378,  379,  404,  405,  414,  415,
      416,  433,  434,  435,  436,   42,   82,   83,   84,   85,
       86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
       96,   97,  335,  336,  350,  352,  355,  358,  361,  370,
      380,  381,  382,  383,  384,  385,  386,  406,  407,  417,
      418,  419,  437,  438,  439,  440,  587,   46,  827, 1163,
      700,  827,  721,  729,   99,  100,  337,   47,  101,  338,
      102,  103,  339,   48,   49, 1027, 1027, 1027, 1027, 1027,
     1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027,  831,  831,
      831,  831,  831,  831,  944, 1027, 1027, 1027, 1027, 1027,
     1027, 1027, 1027, 1027, 1027, 1027,  561,  561,  561,  561,
      561,  561,  609,  580,   52,   53,   10,   54,   55,  340,
      105,  106,  341,  342,  703,  703, 1301,  730,   56,   57,
      107,  108,  109,   58, 1293,  110,  111,   59,   60,  627,
      627,  627,  627,  627,  627,  627,  627,  627,  627,  627,
      627,  627, 1303, 1303, 1205, 1205, 1205, 1205, 1205,  771,
      775,  830,  830,  830,  830,  830,  830,  652, 1028, 1028,
     1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028,
     1028,  687,  689,  690,  686,  632,  664, 1162, 1028, 1028,
     1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1179,
     1163, 1163, 1163, 1163, 1163, 1163,  744,  857,  744, 1304,
     1304,  649,  790,  790,  790,  790,  790, 1163, 1163, 1163,
     1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163,
     1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163,
     1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163,
     1163, 1163, 1163, 1163, 1163, 1163,  543,    3, 1163, 1283,
      731,  581,    3, 1299,  660, 1282, 1163, 1163, 1163, 1163,
      492,  502,  673,  559, 1284,  656, 1163,  677, 1286,  656,
      833,  833,  833,  833,  833,  833,  548,  469,  549,  550,
      551,  552,  532,  635,  586,  904,  888,  920,  923,  886,
      883,  884,  885,  887,  786,  828,  828,  828,  828,  828,
      828,  985,  986,  987, 1052, 1053, 1054, 1120, 1121, 1122,
      808,  829,  829,  829,  829,  829,  829,  569, 1162, 1162,
     1162, 1162, 1162, 1162,  781,  674,  733,  403,  817,  503,
      822, 1285,  937,  940,  683, 1162, 1162, 1162, 1162, 1162,
     1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162,
     1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162,
     1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162,
     1162, 1162, 1162, 1162,  765,  893, 1162,  925,  934,  843,
      919,  542, 1007,  845, 1162, 1162, 1162, 1162,  594,  598,
      612,    0,  752,    0, 1162,  544,    0,    0,  752,  752,
      752,  553,  554,  555,  556,    0,   21,    0,   22,  639,
        0, 1172, 1172, 1172,    0,    0,    0,    0,  663,  847,
      752,    0,    0,    0,    0, 1142,   24,    0, 1172,    0,
     1172, 1172, 1172, 1172, 1142, 1142, 1142, 1142, 1142, 1142,
     1142, 1142, 1142, 1142, 1142, 1142, 1142, 1142, 1142, 1142,
     1142, 1142, 1142, 1142,    0,  896,  849,    0,  849,  851,
      851,  889,  926,    0,    0,    0,    0,    0,    0,  797,
      799,  796,  794,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  451,  451,  451,  451,  451,
        0,    0,    0,  470,    0,    0,    0,    0,    0,  530,
      561,  530,  531,    0, 1013,    0,    0,  538,    0,    0,
        0,    0,  897,    0,    0,    0,    0,    0,    0,  930,
        0,    0,  470,    0,  471,    0,    0,    0,    0,    0,
      562,  562,  574,  929,  927,    0,    0,    0,    0,  928,
      789,  789,  789,  789,  789,    0,    0, 1148,    0,    0,
        0,    0,    0,    0,    0,  804, 1148, 1148, 1148, 1148,
     1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148,
     1148, 1148, 1148, 1148, 1148, 1148,    0,    0,    0,  395,
     1281,    0,    0,    0,  641,  641,    0,    0,    0,    0,
        0,    0,  599,  613,    0,  637,  638,  579,  583,    0,
        0,    0,  641,  562,  668,  671,  574,    0,  395,    0,
        0,  401,  401,  401,  401,  401,    0,    0,    0,    0,
        0,    0,  577,  641,  562,  423,    0,  423,  423,    0,
        0,    0,    0,  574,  668,  577,  671, 1026, 1193,  636,
     1093, 1194,  547,  607,  570,  608,  661, 1161,  873,  746,
      875,  874,  872,  939,  619,  620,  876,  688,  692,  584,
      693,    0,    0,    0, 1142, 1142, 1142,    0,    0,    0,
        0,    0,    0,    0, 1142,    0,    0, 1142,    0,    0,
     1142,    0,    0, 1142,  787,  787,  787,  787,  787,    0,
        0,    0, 1142, 1142,    0,    0,    0,    0,    0,  802,
      788,  788,  788,  788,  788,    0,    0,    0, 1142, 1142,
     1142, 1142, 1142, 1142,    0,  803,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  596,    0,    0,    0, 1142,
     1142,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1142, 1142, 1142,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1142, 1142, 1142, 1142,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 1148, 1148, 1148,    0,
      666,  669,    0,    0,    0,    0, 1148,    0,    0, 1148,
        0,    0, 1148,    0,    0, 1148, 1168,    0,    0,    0,
        0,    0,    0, 1168, 1148, 1148,    0, 1142, 1142, 1142,
     1142, 1142, 1142, 1168,    0,    0,    0,    0,    0,    0,
     1148, 1148, 1148, 1148, 1148, 1148,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1148, 1148,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1148, 1148, 1148,    0,    0,    0, 1168,
     1168, 1168, 1168, 1168,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1148, 1148, 1148, 1148,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1142,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1025,  496,
      497,  498,  499,  500,  501, 1092,    0,  681,    0, 1148,
     1148, 1148, 1148, 1148, 1148, 1160,  104,  114,  115,  116,
      117,  118,  119,  120,  121,  122,  123,  124,  125,  126,
      127,  128,  129,  343,  353,  356,  359,  362,  371,  372,
      387,  388,  389,  390,  391,  392,  408,  409,  420,  421,
      422,  441,  442,  443,  444,  653,    0,  130,    0,    0,
        0,    0,    0,    0,    0,  589,  131,  132,  344,    0,
        0,    0,    0,    0,    0,  345,    0,    0,    0,    0,
        0,    0,    0,    0,  653,    0,  653,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1148,    0,    0,    0,    0, 1023,    0,    0,
        0, 1090,    0,    0,    0,  653,  653,  653,  653,  653,
      653,  653,  653,  653,    0, 1158,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  684,  633,  533,
      568,  536,    0,  633,  633,  633,    0,    0,  633,  678,
      633,  678,  678,  684,    0,    0,  472
  ];

  private static $yygcheck = [
       25,   25,   25,   25,   25,   25,   25,   25,   24,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   23,  109,
        4,   23,   23,   23,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,   20,   20,
       20,   20,   20,   20,  102,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,   36,   36,   36,   36,
       36,   36,   34,   34,   25,   25,   63,   25,   25,   25,
       25,   25,   25,   25,    7,    7,  123,    7,   25,   25,
       25,   25,   25,   25,  120,   25,   25,   25,   25,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   44,
       44,   18,   18,   18,   18,   18,   18,   26,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,   43,   43,   43,   26,  106,  106,  107,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  112,
      109,  109,  109,  109,  109,  109,   35,   72,   35,   87,
       87,   36,   11,   11,   11,   11,   11,  109,  109,  109,
      109,  109,  109,  109,  109,  109,  109,  109,  109,  109,
      109,  109,  109,  109,  109,  109,  109,  109,  109,  109,
      109,  109,  109,  109,  109,  109,  109,  109,  109,  109,
      109,  109,  109,  109,  109,  109,   53,    6,  109,  114,
       29,   83,    6,   29,   29,  113,  109,  109,  109,  109,
       59,   59,   29,   83,  115,   22,  109,   29,  116,   22,
       21,   21,   21,   21,   21,   21,   59,   73,   59,   59,
       59,   59,   33,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   50,   16,   16,   16,   16,   16,
       16,   76,   76,   76,   76,   76,   76,   76,   76,   76,
       56,   17,   17,   17,   17,   17,   17,   57,  107,  107,
      107,  107,  107,  107,   48,   60,   30,   37,   58,   53,
       61,  109,   99,  100,   31,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,   40,   85,  107,   95,   97,   68,
       93,   53,   75,   70,  107,  107,  107,  107,  106,  106,
      106,   -1,   38,   -1,  107,   53,   -1,   -1,   38,   38,
       38,   53,   53,   53,   53,   -1,   77,   -1,   77,   77,
       -1,  107,  107,  107,   -1,   -1,   -1,   -1,   77,   54,
       38,   -1,   -1,   -1,   -1,   75,   77,   -1,  107,   -1,
      107,  107,  107,  107,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   -1,   54,   54,   -1,   54,   54,
       54,   54,   54,   -1,   -1,   -1,   -1,   -1,   -1,   54,
       54,   54,   54,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   36,   36,   36,   36,   36,
       -1,   -1,   -1,   22,   -1,   -1,   -1,   -1,   -1,   36,
       36,   36,   36,   -1,  105,   -1,   -1,   54,   -1,   -1,
       -1,   -1,   54,   -1,   -1,   -1,   -1,   -1,   -1,   54,
       -1,   -1,   22,   -1,   22,   -1,   -1,   -1,   -1,   -1,
       22,   22,   22,   54,   54,   -1,   -1,   -1,   -1,   54,
       18,   18,   18,   18,   18,   -1,   -1,  105,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   18,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  105,   -1,   -1,   -1,   37,
       87,   -1,   -1,   -1,   22,   22,   -1,   -1,   -1,   -1,
       -1,   -1,   22,   22,   -1,   22,   22,   22,   22,   -1,
       -1,   -1,   22,   22,   22,   22,   22,   -1,   37,   -1,
       -1,   37,   37,   37,   37,   37,   -1,   -1,   -1,   -1,
       -1,   -1,   22,   22,   22,   37,   -1,   37,   37,   -1,
       -1,   -1,   -1,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   -1,   -1,   -1,   75,   75,   75,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   75,   -1,   -1,   75,   -1,   -1,
       75,   -1,   -1,   75,   16,   16,   16,   16,   16,   -1,
       -1,   -1,   75,   75,   -1,   -1,   -1,   -1,   -1,   16,
       17,   17,   17,   17,   17,   -1,   -1,   -1,   75,   75,
       75,   75,   75,   75,   -1,   17,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   87,   -1,   -1,   -1,   75,
       75,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   75,   75,   75,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   75,   75,   75,   75,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,  105,  105,  105,   -1,
       87,   87,   -1,   -1,   -1,   -1,  105,   -1,   -1,  105,
       -1,   -1,  105,   -1,   -1,  105,   75,   -1,   -1,   -1,
       -1,   -1,   -1,   75,  105,  105,   -1,   75,   75,   75,
       75,   75,   75,   75,   -1,   -1,   -1,   -1,   -1,   -1,
      105,  105,  105,  105,  105,  105,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,  105,  105,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,  105,  105,  105,   -1,   -1,   -1,   75,
       75,   75,   75,   75,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,  105,  105,  105,  105,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       75,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  105,   62,
       62,   62,   62,   62,   62,  105,   -1,   75,   -1,  105,
      105,  105,  105,  105,  105,  105,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,    5,   -1,   62,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   62,   62,   62,   62,   -1,
       -1,   -1,   -1,   -1,   -1,   62,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,    5,   -1,    5,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,  105,   -1,   -1,   -1,   -1,  105,   -1,   -1,
       -1,  105,   -1,   -1,   -1,    5,    5,    5,    5,    5,
        5,    5,    5,    5,   -1,  105,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,    5,    5,    5,
        5,    5,   -1,    5,    5,    5,   -1,   -1,    5,    5,
        5,    5,    5,    5,   -1,   -1,    5
  ];

  private static $yygbase = [
        0,    0,    0,    0,  115,  691,  317,  181,    0,    0,
        0, -124,    0,    0,    0,    0,  358,  374,  214,    0,
      141,  333,  199,  111,    6, -135, -229,    0,    0, -277,
      -98, -102,    0,  -95, -281, -191,  159,  285,   67,    0,
      -63,    0,    0, -156, -241,    0,    0,    0,  -68,    0,
      -36,    0,    0, -148,  -14,    0,  -32,  -87,  -97,  -17,
      -82, -104,  746,  167,    0,    0,    0,    0,  -93,    0,
      -91,    0, -126,  -48,    0,  391,  -53, -114,    0,    0,
        0,    0,    0,  182,    0,  -96,    0,  256,    0,    0,
        0,    0,    0, -161,    0,  -94,    0, -158,    0, -103,
     -134,    0,  146,    0,    0,  513,  112,  135,  228,    7,
        0,    0,  119,  -69,  -75,  -60,  -56,    0,    0,    0,
       56,    0,    0,  172,    0
  ];

  private static $yygdefault = [
    -32768,  625,  697,  698,  699,  626,    4,  702,  704,  705,
      707,  708,  709,  710,  711,  712,  713,  714,  715,  716,
      719,  720, 1192,  826,  647,   34,  560,  832,  597, 1291,
      732,  670,  737,  564,  601,  743,  445,  402,  751,  614,
      764,  615,  582,  679,  774,  578,  680,  685,  780,  400,
      785,  791,  792,  540,  880,  410,  809,  563,  816,  485,
      665,  821,  113,    7,  565,  566,  840, 1096,  844, 1164,
      846,  572,  856,  468,  573, 1074,  879, 1189,  588,  882,
      535,  137,  139,  575,  541,  892,  605, 1188,  478,  910,
      912,  913,  611,  918,  922,  924,  606,  933,  576,  936,
      941,    8,  943,  558,   61, 1080, 1196, 1094, 1097, 1095,
     1165,  571, 1178, 1183, 1184, 1185, 1187,  628,  630,  595,
     1292,  644,  600, 1300,  645
  ];

  private static $yylhs = [
        0,    1,    1,    2,    2,    3,    4,    6,    6,    7,
        7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
        7,    7,    7,    7,    7,    7,   20,    8,    8,   24,
       24,   19,   19,   10,   27,   15,   26,   28,   28,   30,
       30,   31,   31,   31,    9,    9,    9,    9,   34,   34,
       35,   35,   35,   33,   36,   36,   37,   37,   38,   38,
       38,   38,   38,   38,   38,   38,   38,   38,   11,   39,
       39,   40,   40,   12,   12,   41,   41,   45,   45,   46,
       46,   44,   42,   42,   42,   47,   47,   48,   43,   43,
       49,   49,   50,   50,   50,   50,   50,   50,   50,   50,
       50,   50,   50,   50,   50,   50,   50,   52,   52,   52,
       51,   51,   51,   55,   55,   56,   56,   13,   13,   14,
       14,   57,   57,   58,   58,   58,   60,   60,   61,   61,
       61,   63,   63,   23,   23,   23,   23,   23,   23,   23,
       23,   17,   18,   64,   65,   16,   16,   16,   67,   67,
       69,   69,   66,   66,   68,   68,   70,   70,   53,   53,
       53,   71,   71,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   74,   74,   73,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   82,   81,   81,
       81,   78,   78,   92,   92,   93,   79,   79,   94,   84,
       84,   95,   95,   95,   95,   85,   86,   86,   96,   96,
       97,   98,   98,   99,   99,   88,   88,  100,  101,  101,
      102,  102,   54,   54,   54,   89,   89,   90,   90,   91,
       91,  103,  103,   83,   83,   80,   80,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,  108,  110,   59,   59,   59,   59,   59,   77,   77,
      105,  105,  105,  111,  111,  112,  112,  112,  107,  107,
      107,  107,  107,  107,  107,  117,  114,    5,    5,    5,
       76,   76,  106,  106,  106,  106,  106,   22,   22,   22,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  116,
      116,  116,  116,  116,  116,  116,  116,  116,  116,  116,
      116,  116,   87,  113,  113,  113,   32,   32,   32,   32,
       32,   32,  115,  115,  115,  115,  118,  119,  119,  120,
      120,  109,  109,  109,  121,  122,  122,  123,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,   29,   29
  ];

  private static $yylen = [
        1,    0,    1,    1,    1,    4,    1,    1,    2,    1,
        1,    3,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    2,    1,    1,    1,    3,    5,    4,    0,
        1,    3,    4,    4,    4,    4,    2,    1,    3,    1,
        4,    1,    3,    4,    3,    5,    7,    6,    1,    3,
        1,    3,    4,    1,    0,    1,    1,    2,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    6,    1,
        3,    1,    3,    8,    6,    0,    2,    0,    2,    1,
        3,    1,    0,    2,    2,    1,    3,    1,    0,    1,
        1,    2,    1,    1,    1,    1,    1,    1,    4,    4,
        4,    4,    4,    6,    4,    6,    4,    4,    4,    4,
        3,    5,    5,    1,    2,    3,    6,    6,    4,    7,
        5,    1,    3,    1,    3,    3,    1,    3,    1,    3,
        3,    1,    2,    1,    1,    1,    1,    1,    1,    3,
        2,    4,    3,    3,    2,    5,    5,    4,    4,    3,
        4,    3,    1,    3,    1,    2,    1,    2,    2,    3,
        3,    1,    3,    1,    2,    3,    2,    3,    4,    2,
        3,    4,    3,    4,    5,    3,    5,    3,    2,    3,
        3,    4,    0,    1,    1,    1,    5,    5,    7,    7,
        7,    6,    7,    5,    2,    2,    3,    3,    4,    5,
        3,    2,    3,    2,    3,    2,    3,    3,    3,    3,
        3,    5,    5,    3,    2,    1,    2,    1,    1,    2,
        2,    0,    1,    1,    2,    3,    0,    1,    2,    1,
        2,    2,    5,    7,    5,    2,    0,    1,    1,    2,
        3,    1,    3,    1,    3,    1,    2,    2,    1,    2,
        3,    2,    2,    3,    3,    2,    1,    2,    1,    2,
        1,    1,    3,    1,    3,    1,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    2,    2,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    2,    5,    4,    4,    5,    4,    2,    2,
        4,    2,    2,    2,    2,    2,    2,    2,    3,    2,
        3,    2,    1,    1,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        2,    2,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    2,
        5,    4,    4,    5,    4,    2,    2,    4,    2,    2,
        2,    2,    2,    2,    2,    3,    2,    3,    2,    1,
        1,    1,    1,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    2,    2,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    2,    5,    4,
        4,    5,    4,    2,    2,    4,    2,    2,    2,    2,
        2,    2,    2,    3,    2,    3,    2,    1,    1,    1,
        1,    4,    4,    2,    5,    4,    4,    1,    3,    3,
        2,    3,    3,    1,    3,    1,    3,    2,    1,    1,
        1,    1,    1,    1,    1,    0,    3,    1,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    2,    9,    3,    3,    2,    1,    3,    2,
        1,    2,    3,    3,    2,    1,    3,    3,    1,    1,
        3,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    0,    1
  ];
  
    
  private $yyval;
  private $yyastk;
  private $yysstk;
  private $yysp;
  private $yystate;
  private $yyloc; // current location
  
  private $lex;
  private $invalid = false;
  
  // current directory and filename
  private $cdir, $cfile;
  
  /**
   * returns the current location (last scanned token)
   * 
   * @return Location
   */
  public function loc()
  {
    if (!$this->yyloc)
      return new Location('<unknown>', new Position(0, 0));
    
    return $this->yyloc;
  }
  
  /**
   * consumes semicolons to avoid unnecessary empty-expressions 
   * 
   * @void
   */
  private function eat_semis()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_SEMI) {
      do {
        $this->lex->skip();
        $peek = $this->lex->peek();
      } while ($peek->type === T_SEMI);

    }
  }
  
  /**
   * consumes a T_END token
   * 
   * @void
   */
  private function eat_end()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_END) {
      $this->lex->skip();
    }
  }
  
  /**
   * parse function
   * 
   * @param  Lexer  $lex
   * @return Node
   */
  public function parse(Lexer $lex) 
  {
    $tokid = self::TOKEN_NONE;
    
    // lexer
    $this->lex = $lex;
    
    $file = $this->lex->get_info()['file'];
    $this->cdir = dirname($file);
    $this->cfile = $file;
    
    
    // stacks
    $this->yysstk = [ 0 ]; 
    $this->yyastk = [];
    
    // current state
    $yystate = 0;
    
    // error flag
    $yyerrflag = 0;

    // stack position
    $this->yysp = 0;
    
    // location stack
    $yylstk = [];
    
    // ignore semicolons at the beginning
    $this->eat_semis();
    
    for (;;) {
      if (self::$yybase[$yystate] == 0)
        $yyn = self::$yydefault[$yystate];
      else {
        if ($tokid === self::TOKEN_NONE) {
          // Fetch the next token id from the lexer
          $token = $this->lex->next();
                    
          // invalid token (regexp-scan failed)
          if ($token->type === T_INVL) {
            Logger::error_at($token->loc, 'invalid source/regexp-literal');
            return null;
          }
          
          // map the lexer token id to the internally used token id's
          if ($token->type >= 0 && $token->type < self::TOKEN_MAP_SIZE)
            $tokid = self::$translate[$token->type];
          else {
            Logger::error_at($token->loc, 'invalid token %d -> %s', $token->type, $token->value);
            return null;
          }        
          
          $this->yyloc = $token->loc;
          
          // store location
          $yylstk[$this->yysp] = $this->yyloc;
          
        } 

        if ((($yyn = self::$yybase[$yystate] + $tokid) >= 0
          && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid
          || ($yystate < self::YY2TBLSTATE
            && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + $tokid) >= 0
            && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid))
          && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT
        ) {
          /*
           * >= YYNLSTATE: shift and reduce
           * > 0: shift
           * = 0: accept
           * < 0: reduce
           * = -YYUNEXPECTED: error
           */
          if ($yyn > 0) {
            /* shift */
            
            $this->yysp++;
            
            $this->yysstk[$this->yysp] = $yystate = $yyn;
            $this->yyastk[$this->yysp] = $token;
            
            // store location
            $yylstk[$this->yysp] = $this->yyloc;
            
            $tokid = self::TOKEN_NONE;
            
            if ($yyerrflag > 0)
              $yyerrflag--;
            
            if ($yyn < self::YYNLSTATES)
              continue;

            /* $yyn >= YYNLSTATES means shift-and-reduce */
            $yyn -= self::YYNLSTATES;
          } else
            $yyn = -$yyn;
        } else
          $yyn = self::$yydefault[$yystate];
      }
      
      for (;;) {
        /* reduce/error */
        if ($yyn == 0) {
          /* accept */
          return $this->yyval;
        } elseif ($yyn != self::YYUNEXPECTED) {
          /* reduce */

          $this->{'yyn' . $yyn}();
          
          /* Goto - shift nonterminal */
          $yylen = self::$yylen[$yyn];
          $yyloc = $yylstk[$this->yysp - $yylen];
          
          $this->yysp -= $yylen;
          
          $yyn = self::$yylhs[$yyn];
          
          if (($yyp = self::$yygbase[$yyn] + $this->yysstk[$this->yysp]) >= 0
            && $yyp < self::YYGLAST && self::$yygcheck[$yyp] == $yyn)
            $yystate = self::$yygoto[$yyp];
          else
            $yystate = self::$yygdefault[$yyn];
          
          $this->yysp++;
          
          $this->yysstk[$this->yysp] = $yystate;
          $this->yyastk[$this->yysp] = $this->yyval;
          
          // set location if a real node was produced by $yyn
          if ($this->yyval instanceof Node)
            $this->yyval->loc = $yyloc;
          
          // store position
          $yylstk[$this->yysp] = $this->yyloc;
          
        } else {
          /* error */
          $this->invalid = true;
                    
          switch ($yyerrflag) {
            case 0:
              // let the lexer know
              $this->lex->sync = true;
              
              $expa = [];
              $expn = 0;
              $base = self::$yybase[$yystate];
              
              for ($i = 0; $i < self::TOKEN_MAP_SIZE; ++$i) {
                $n = $base + $i;
                if ($n >= 0 && $n < self::YYLAST && self::$yycheck[$n] == $i
                  || $yystate < self::YY2TBLSTATE
                  && ($n = self::$yybase[$yystate + self::YYNLSTATES] + $i)
                  && $n < self::YYLAST && ($n < 0 || self::$yycheck[$n] == $i)
                ) {
                  if ($n >= 0 && self::$yyaction[$n] != self::YYUNEXPECTED) {
                    if ($expn === 4) {
                      /* Too many expected tokens */
                      $expa = null;
                      $expn = 0;
                      break;
                    }

                    $expa[] = self::$terminals[$i];
                    $expn++;
                  }
                }
              }

              $exps = 'unexpected ' . self::$terminals[$tokid];
              
              if ($expn > 0) {
                $last = array_pop($expa);
                $exps .= ', expected ';
                
                if ($expn > 1)
                  $exps .= implode(', ', $expa) . ' or ';
                
                $exps .= $last;
                unset ($expa, $last);
              }
              
              Logger::error_at($this->yyloc, $exps);              
            case 1:
            case 2:
              $yyerrflag = 3;  
              
              while (!(($yyn = self::$yybase[$yystate] + self::YYINTERRTOK) >= 0
                && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK
                || ($yystate < self::YY2TBLSTATE
                  && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + self::YYINTERRTOK) >= 0
                  && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK))
              ) {  
                if ($this->yysp <= 0) 
                  return null;
                
                $yystate = $this->yysstk[--$this->yysp];              
              }
              
              $yyn = self::$yyaction[$yyn];
              $this->yysstk[++$this->yysp] = $yystate = $yyn;
              break;
            
            case 3:
              if ($tokid === 0) 
                return null;
              
              $tokid = -1;
              break;
          }
        }

        if ($yystate < self::YYNLSTATES)
          break;
        
        /* >= YYNLSTATES means shift-and-reduce */
        $yyn = $yystate - self::YYNLSTATES;
      }
    }
  }


  private function yyn0() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn1() 
  {
     $this->yyval = null; 
  }


  private function yyn2() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn3() 
  {
     
      $this->yyval = new Unit($this->yyastk[$this->yysp-(1-1)]); 
      $this->eat_end(); 
    
  }


  private function yyn4() 
  {
     
      $this->yyval = new Unit($this->yyastk[$this->yysp-(1-1)]); 
      $this->eat_end(); 
    
  }


  private function yyn5() 
  {
     $this->yyval = new Module($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn6() 
  {
     $this->yyval = new Program($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn7() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn8() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn9() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn10() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn11() 
  {
     $this->yyval = null; 
  }


  private function yyn12() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn13() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn14() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn15() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn16() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn17() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn18() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn19() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn20() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn21() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn22() 
  {
     $this->yyval = null; 
  }


  private function yyn23() 
  {
     $this->yyval = null; 
  }


  private function yyn24() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn25() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn26() 
  {
     $this->yyval = new LabelDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn27() 
  {
     
      $this->yyval = new Module($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn28() 
  {
     
      $this->yyval = new Module(null, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn29() 
  {
     $this->yyval = null; 
  }


  private function yyn30() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn31() 
  {
     
      $this->yyval = new RequireDecl(false, $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn32() 
  {
     
      $this->yyval = new RequireDecl(true, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn33() 
  {
     
      $this->yyval = new AttrDecl($this->yyastk[$this->yysp-(4-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn34() 
  {
     $this->yyval = new CompAttr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn35() 
  {
     $this->yyval = new TopexAttr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn36() 
  {
     $this->yyval = new AttrDef($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn37() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn38() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn39() 
  {
     $this->yyval = new AttrItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn40() 
  {
     $this->yyval = new AttrItem($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn41() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn42() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn43() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn44() 
  {
     
      $this->yyval = new UseDecl($this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn45() 
  {
     
      $this->yyval = new UseDecl(new UseAlias($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)])); 
      $this->eat_semis(); 
    
  }


  private function yyn46() 
  {
     
      $this->yyval = new UseDecl(new UseUnpack($this->yyastk[$this->yysp-(7-2)], $this->yyastk[$this->yysp-(7-4)])); 
      $this->eat_semis(); 
    
  }


  private function yyn47() 
  {
    
      $this->yyval = new UseDecl(new UseUnpack(null, $this->yyastk[$this->yysp-(6-3)]));
      $this->eat_semis();
    
  }


  private function yyn48() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn49() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn50() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn51() 
  {
     $this->yyval = new UseAlias($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn52() 
  {
     $this->yyval = new UseUnpack($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn53() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn54() 
  {
     $this->yyval = null; 
  }


  private function yyn55() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn56() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn57() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn58() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn59() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn60() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn61() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn62() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn63() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn64() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn65() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn66() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn67() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn68() 
  {
     
      $this->yyval = new EnumDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn69() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn70() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn71() 
  {
     $this->yyval = new EnumVar($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn72() 
  {
     $this->yyval = new EnumVar($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn73() 
  {
     
      $this->yyval = new ClassDecl($this->yyastk[$this->yysp-(8-1)], $this->yyastk[$this->yysp-(8-3)], $this->yyastk[$this->yysp-(8-4)], $this->yyastk[$this->yysp-(8-5)], $this->yyastk[$this->yysp-(8-7)]); 
      $this->eat_semis(); 
    
  }


  private function yyn74() 
  {
     
      $this->yyval = new ClassDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-5)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn75() 
  {
     $this->yyval = null; 
  }


  private function yyn76() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn77() 
  {
     $this->yyval = null; 
  }


  private function yyn78() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn79() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn80() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn81() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn82() 
  {
     $this->yyval = null; 
  }


  private function yyn83() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn84() 
  {
     $this->yyval = null; 
  }


  private function yyn85() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn86() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn87() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn88() 
  {
     $this->yyval = []; 
  }


  private function yyn89() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn90() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn91() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn92() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn93() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn94() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn95() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn96() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn97() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn98() 
  {
     
      $this->yyval = new CtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn99() 
  {
     $this->yyval = new CtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn100() 
  {
     
      $this->yyval = new DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn101() 
  {
     $this->yyval = new DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn102() 
  {
     $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn103() 
  {
     
      $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn104() 
  {
     $this->yyval = new SetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn105() 
  {
     
      $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn106() 
  {
     $this->yyval = new NestedMods($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn107() 
  {
     $this->yyval = new MemberAttr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn108() 
  {
     $this->yyval = new MemberAttr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn109() 
  {
     $this->yyval = new MemberAttr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn110() 
  {
     
      $this->yyval = new TraitUse($this->yyastk[$this->yysp-(3-2)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn111() 
  {
     
      $this->yyval = new TraitUse($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn112() 
  {
     $this->yyval = new TraitUse($this->yyastk[$this->yysp-(5-2)], null, $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn113() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn114() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn115() 
  {
     
      $this->yyval = new TraitItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn116() 
  {
     
      $this->yyval = new TraitItem($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-6)]); 
      $this->eat_semis(); 
    
  }


  private function yyn117() 
  {
     
      $this->yyval = new TraitDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn118() 
  {
     
      $this->yyval = new TraitDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn119() 
  {
     
      $this->yyval = new IfaceDecl($this->yyastk[$this->yysp-(7-1)], $this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-6)]); 
      $this->eat_semis(); 
    
  }


  private function yyn120() 
  {
     
      $this->yyval = new IfaceDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn121() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn122() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn123() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn124() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn125() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], true); 
  }


  private function yyn126() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn127() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn128() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn129() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn130() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], true); 
  }


  private function yyn131() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn132() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn133() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn134() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn135() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn136() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn137() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn138() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn139() 
  {
     $this->yyval = null; 
  }


  private function yyn140() 
  {
     $this->yyval = null; 
  }


  private function yyn141() 
  {
     
      $this->yyval = new LetDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn142() 
  {
     
      $this->yyval = new VarDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn143() 
  {
     $this->yyval = new LetDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn144() 
  {
     $this->yyval = new VarDecl($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn145() 
  {
     $this->yyval = new FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn146() 
  {
     
      $this->yyval = new FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn147() 
  {
     
      $this->yyval = new FnDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn148() 
  {
     $this->yyval = new FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn149() 
  {
     $this->yyval = new FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn150() 
  {
     $this->yyval = new FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn151() 
  {
     $this->yyval = new FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn152() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn153() 
  {
     
      /* FIXME */
      $this->yyval = new Block([ new ReturnStmt($this->yyastk[$this->yysp-(3-2)]) ]); 
      $this->eat_semis(); 
    
  }


  private function yyn154() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn155() 
  {
     
      /* FIXME */
      $this->yyval = new Block([ new ReturnStmt($this->yyastk[$this->yysp-(2-2)]) ]); 
    
  }


  private function yyn156() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn157() 
  {
     
      /* FIXME */
      $this->yyval = new Block([ new ReturnStmt($this->yyastk[$this->yysp-(2-2)]) ]); 
    
  }


  private function yyn158() 
  {
     $this->yyval = null; 
  }


  private function yyn159() 
  {
     $this->yyval = null; 
  }


  private function yyn160() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn161() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn162() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn163() 
  {
     $this->yyval = new Param(false, null, null, $this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn164() 
  {
     $this->yyval = new Param(false, null, null, $this->yyastk[$this->yysp-(2-1)], null, true); 
  }


  private function yyn165() 
  {
     $this->yyval = new Param(false, null, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn166() 
  {
     $this->yyval = new Param(false, null, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn167() 
  {
     $this->yyval = new Param(false, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn168() 
  {
     $this->yyval = new Param(false, null, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn169() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(2-1)], null, $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn170() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(3-1)], null, $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn171() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn172() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn173() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null, true); 
  }


  private function yyn174() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], false); 
  }


  private function yyn175() 
  {
     $this->yyval = new ThisParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn176() 
  {
     $this->yyval = new ThisParam($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn177() 
  {
     $this->yyval = new RestParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn178() 
  {
     $this->yyval = new Param(true, null, null, $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn179() 
  {
     $this->yyval = new Param(true, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn180() 
  {
     $this->yyval = new Param(true, $this->yyastk[$this->yysp-(3-1)], null, $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn181() 
  {
     $this->yyval = new Param(true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], null, false); 
  }


  private function yyn182() 
  {
     $this->yyval = null; 
  }


  private function yyn183() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn184() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn185() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn186() 
  {
     $this->yyval = new DoStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn187() 
  {
     $this->yyval = new IfStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn188() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn189() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn190() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn191() 
  {
     $this->yyval = new ForStmt($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], null, $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn192() 
  {
     $this->yyval = new ForStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn193() 
  {
     $this->yyval = null; 
  }


  private function yyn194() 
  {
     $this->yyval = new ForStmt(null, null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn195() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(2-2)], null, null); 
  }


  private function yyn196() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn197() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(3-2)], null, $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn198() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn199() 
  {
     $this->yyval = new PhpStmt($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn200() 
  {
     $this->yyval = new GotoStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn201() 
  {
     $this->yyval = new TestStmt(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn202() 
  {
     $this->yyval = new TestStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn203() 
  {
     $this->yyval = new BreakStmt(null); 
  }


  private function yyn204() 
  {
     $this->yyval = new BreakStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn205() 
  {
     $this->yyval = new ContinueStmt(null); 
  }


  private function yyn206() 
  {
     $this->yyval = new ContinueStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn207() 
  {
     $this->yyval = new PrintStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn208() 
  {
     $this->yyval = new ThrowStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn209() 
  {
     $this->yyval = new WhileStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn210() 
  {
     $this->yyval = new AssertStmt($this->yyastk[$this->yysp-(3-2)], null); 
  }


  private function yyn211() 
  {
     $this->yyval = new AssertStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn212() 
  {
     $this->yyval = new SwitchStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn213() 
  {
     $this->yyval = new ReturnStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn214() 
  {
     $this->yyval = new ReturnStmt(null); 
  }


  private function yyn215() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn216() 
  {
     $this->yyval = null; 
  }


  private function yyn217() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn218() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn219() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn220() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn221() 
  {
     $this->yyval = null; 
  }


  private function yyn222() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn223() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn224() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn225() 
  {
     $this->yyval = new ElsifItem($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn226() 
  {
     $this->yyval = null; 
  }


  private function yyn227() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn228() 
  {
     $this->yyval = new ElseItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn229() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn230() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn231() 
  {
     $this->yyval = new CatchItem(null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn232() 
  {
     $this->yyval = new CatchItem($this->yyastk[$this->yysp-(5-3)], null, $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn233() 
  {
     $this->yyval = new CatchItem($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn234() 
  {
     $this->yyval = null; 
  }


  private function yyn235() 
  {
     $this->yyval = new FinallyItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn236() 
  {
     $this->yyval = null; 
  }


  private function yyn237() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn238() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn239() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn240() 
  {
     $this->yyval = new PhpUse($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn241() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn242() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn243() 
  {
     $this->yyval = new PhpUseItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn244() 
  {
     $this->yyval = new PhpUseItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn245() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn246() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn247() 
  {
     $this->yyval = new CaseItem($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn248() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn249() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn250() 
  {
     $this->yyval = new CaseLabel($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn251() 
  {
     $this->yyval = new CaseLabel(null); 
  }


  private function yyn252() 
  {
     $this->yyval = new Block(null); 
  }


  private function yyn253() 
  {
     $this->yyval = new Block($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn254() 
  {
     $this->yyval = null; 
  }


  private function yyn255() 
  {
     
      $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
      $this->eat_semis(); 
    
  }


  private function yyn256() 
  {
     
      $this->yyval = new ExprStmt(null); 
      $this->eat_semis(); 
    
  }


  private function yyn257() 
  {
     $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn258() 
  {
     $this->yyval = new ExprStmt(null); 
  }


  private function yyn259() 
  {
     $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn260() 
  {
     $this->yyval = new ExprStmt(null); 
  }


  private function yyn261() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn262() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn263() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn264() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn265() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn266() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn267() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn268() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn269() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn270() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn271() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn272() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn273() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn274() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn275() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn276() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn277() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn278() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn279() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn280() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn281() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn282() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn283() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn284() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn285() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn286() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn287() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn288() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn289() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn290() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn291() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn292() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn293() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn294() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn295() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn296() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn297() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn298() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn299() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn300() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn301() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn302() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn303() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn304() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn305() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn306() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn307() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn308() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn309() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn310() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn311() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn312() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn313() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn314() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn315() 
  {
     $this->yyval = null; 
  }


  private function yyn316() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn317() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn318() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn319() 
  {
     $this->yyval = new YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn320() 
  {
     $this->yyval = new YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn321() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn322() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn323() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn324() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn325() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn326() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn327() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn328() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn329() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn330() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn331() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn332() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn333() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn334() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn335() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn336() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn337() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn338() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn339() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn340() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn341() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn342() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn343() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn344() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn345() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn346() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn347() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn348() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn349() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn350() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn351() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn352() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn353() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn354() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn355() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn356() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn357() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn358() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn359() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn360() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn361() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn362() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn363() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn364() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn365() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn366() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn367() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn368() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn369() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn370() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn371() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn372() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn373() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn374() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn375() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn376() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn377() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn378() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn379() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn380() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn381() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn382() 
  {
     $this->yyval = null; 
  }


  private function yyn383() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn384() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn385() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn386() 
  {
     $this->yyval = new YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn387() 
  {
     $this->yyval = new YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn388() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn389() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn390() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn391() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn392() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn393() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn394() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn395() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn396() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn397() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn398() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn399() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn400() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn401() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn402() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn403() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn404() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn405() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn406() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn407() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn408() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn409() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn410() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn411() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn412() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn413() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn414() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn415() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn416() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn417() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn418() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn419() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn420() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn421() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn422() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn423() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn424() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn425() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn426() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn427() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn428() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn429() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn430() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn431() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn432() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn433() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn434() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn435() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn436() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn437() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn438() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn439() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn440() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn441() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn442() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn443() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn444() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn445() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn446() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn447() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn448() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn449() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn450() 
  {
     $this->yyval = null; 
  }


  private function yyn451() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn452() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn453() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn454() 
  {
     $this->yyval = new YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn455() 
  {
     $this->yyval = new YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn456() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn457() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn458() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn459() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn460() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn461() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn462() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn463() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn464() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn465() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn466() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn467() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn468() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn469() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn470() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn471() 
  {
     
      $this->yyval = new CastExpr($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-2)]); 
      $this->error_at($this->yyastk[$this->yysp-(4-1)]->loc, ERR_WARN, 'legacy cast, use `expr as type` instead'); 
    
  }


  private function yyn472() 
  {
     
      $this->yyval = new CastExpr($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-2)]); 
      $this->error_at($this->yyastk[$this->yysp-(4-1)]->loc, ERR_WARN, 'legacy cast, use `expr as type` instead'); 
    
  }


  private function yyn473() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn474() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn475() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn476() 
  {
     $this->yyval = null; 
  }


  private function yyn477() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn478() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn479() 
  {
     $this->yyval = null; 
  }


  private function yyn480() 
  {
     $this->yyval = null; 
  }


  private function yyn481() 
  {
     $this->yyval = null; 
  }


  private function yyn482() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn483() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn484() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn485() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn486() 
  {
     $this->yyval = new NamedArg($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn487() 
  {
     $this->yyval = new RestArg($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn488() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn489() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn490() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn491() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn492() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn493() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn494() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn495() 
  {
     $this->lex->scan_regexp($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn496() 
  {
     $this->yyval = new RegexpLit($this->yyastk[$this->yysp-(3-3)]->value); 
  }


  private function yyn497() 
  {
     $this->yyval = new Name($this->yyastk[$this->yysp-(1-1)], false); 
  }


  private function yyn498() 
  {
     $this->yyval = new Name($this->yyastk[$this->yysp-(2-2)], true); 
  }


  private function yyn499() 
  {
     $this->yyastk[$this->yysp-(3-1)]->add($this->yyastk[$this->yysp-(3-3)]); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn500() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn501() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn502() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn503() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn504() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn505() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn506() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn507() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn508() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn509() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn510() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn511() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn512() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn513() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn514() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn515() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn516() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn517() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn518() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn519() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn520() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn521() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn522() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn523() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn524() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn525() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn526() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn527() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn528() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn529() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn530() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn531() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn532() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn533() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn534() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn535() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn536() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn537() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn538() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn539() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn540() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn541() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn542() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn543() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn544() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn545() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn546() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn547() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn548() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn549() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn550() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn551() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn552() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn553() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn554() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn555() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn556() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn557() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn558() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn559() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn560() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn561() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn562() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn563() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn564() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn565() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn566() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn567() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn568() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn569() 
  {
     $this->yyval = new ThisExpr; 
  }


  private function yyn570() 
  {
     $this->yyval = new SuperExpr; 
  }


  private function yyn571() 
  {
     $this->yyval = new NullLit; 
  }


  private function yyn572() 
  {
     $this->yyval = new TrueLit; 
  }


  private function yyn573() 
  {
     $this->yyval = new FalseLit; 
  }


  private function yyn574() 
  {
     $this->yyval = new StrLit($this->cdir, 'c'); 
  }


  private function yyn575() 
  {
     $this->yyval = new StrLit($this->cfile, 'c'); 
  }


  private function yyn576() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->line, 'c'); 
  }


  private function yyn577() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->coln, 'c'); 
  }


  private function yyn578() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn579() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn580() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn581() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn582() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->flag); 
  }


  private function yyn583() 
  {
     $this->yyval = new LNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn584() 
  {
     $this->yyval = new DNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn585() 
  {
     $this->yyval = new SNumLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->suffix); 
  }


  private function yyn586() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn587() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn588() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn589() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn590() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn591() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn592() 
  {
     $this->yyval = new ArrLit(null); 
  }


  private function yyn593() 
  {
     $this->yyval = new ArrGen($this->yyastk[$this->yysp-(9-2)], $this->yyastk[$this->yysp-(9-5)], $this->yyastk[$this->yysp-(9-7)]); 
  }


  private function yyn594() 
  {
     $this->yyval = new ArrLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn595() 
  {
     $this->yyval = null; 
  }


  private function yyn596() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn597() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn598() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn599() 
  {
     $this->yyval = new SpreadExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn600() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn601() 
  {
     $this->yyval = new ObjLit(null); 
  }


  private function yyn602() 
  {
     $this->yyval = new ObjLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn603() 
  {
     $this->yyval = null; 
  }


  private function yyn604() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn605() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn606() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn607() 
  {
     $this->yyval = new ObjPair($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn608() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn609() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn610() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn611() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn612() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn613() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn614() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn615() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn616() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn617() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn618() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn619() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn620() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn621() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn622() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn623() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn624() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn625() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn626() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn627() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn628() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn629() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn630() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn631() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn632() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn633() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn634() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn635() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn636() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn637() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn638() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn639() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn640() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn641() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn642() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn643() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn644() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn645() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn646() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn647() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn648() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn649() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn650() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn651() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn652() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn653() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn654() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn655() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn656() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn657() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn658() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn659() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn660() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn661() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn662() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn663() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn664() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn665() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn666() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn667() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn668() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn669() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }

}

