<?php

/* this parser-skeleton is based on the awesome 
   work of nikic (https://github.com/nikic) 
   with some extensions (error-recovery and location-tracking) */

/**
 * This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *   the grammar file gen/parser.y
 *   the parser skeleton gen/kymacc.php.parser
 *
 * The skeleton for this parser was written by Moriyoshi Koizumi and is based on
 * the work by Masato Bito and is in the PUBLIC DOMAIN.
 */

namespace phs\front;


const YYERRTOK = 256;
const T_ARR = 257;
const T_YIELD = 258;
const T_APLUS = 259;
const T_AMINUS = 260;
const T_AMUL = 261;
const T_ADIV = 262;
const T_AMOD = 263;
const T_APOW = 264;
const T_ACONCAT = 265;
const T_ABIT_OR = 266;
const T_ABIT_AND = 267;
const T_ABIT_XOR = 268;
const T_ABOOL_OR = 269;
const T_ABOOL_AND = 270;
const T_ABOOL_XOR = 271;
const T_ASHIFT_L = 272;
const T_ASHIFT_R = 273;
const T_AREF = 274;
const T_RANGE = 275;
const T_BOOL_OR = 276;
const T_BOOL_XOR = 277;
const T_BOOL_AND = 278;
const T_EQ = 279;
const T_NEQ = 280;
const T_IN = 281;
const T_IS = 282;
const T_ISNT = 283;
const T_GTE = 284;
const T_LTE = 285;
const T_SL = 286;
const T_SR = 287;
const T_POW = 288;
const T_AS = 289;
const T_REST = 290;
const T_DEL = 291;
const T_INC = 292;
const T_DEC = 293;
const T_NEW = 294;
const T_DDDOT = 295;
const T_FN = 296;
const T_LET = 297;
const T_USE = 298;
const T_ENUM = 299;
const T_CLASS = 300;
const T_TRAIT = 301;
const T_IFACE = 302;
const T_MODULE = 303;
const T_REQUIRE = 304;
const T_IDENT = 305;
const T_LNUM = 306;
const T_DNUM = 307;
const T_SNUM = 308;
const T_STRING = 309;
const T_REGEXP = 310;
const T_TRUE = 311;
const T_FALSE = 312;
const T_NULL = 313;
const T_THIS = 314;
const T_SUPER = 315;
const T_GET = 316;
const T_SET = 317;
const T_DO = 318;
const T_IF = 319;
const T_ELSIF = 320;
const T_ELSE = 321;
const T_FOR = 322;
const T_TRY = 323;
const T_GOTO = 324;
const T_BREAK = 325;
const T_CONTINUE = 326;
const T_PRINT = 327;
const T_THROW = 328;
const T_CATCH = 329;
const T_FINALLY = 330;
const T_WHILE = 331;
const T_ASSERT = 332;
const T_SWITCH = 333;
const T_CASE = 334;
const T_DEFAULT = 335;
const T_RETURN = 336;
const T_CONST = 337;
const T_FINAL = 338;
const T_GLOBAL = 339;
const T_STATIC = 340;
const T_EXTERN = 341;
const T_PUBLIC = 342;
const T_PRIVATE = 343;
const T_PROTECTED = 344;
const T_SEALED = 345;
const T_INLINE = 346;
const T_PHP = 347;
const T_TEST = 348;
const T_CDIR = 349;
const T_CFILE = 350;
const T_CLINE = 351;
const T_CCOLN = 352;
const T_CFN = 353;
const T_CCLASS = 354;
const T_CMETHOD = 355;
const T_CMODULE = 356;
const T_NL = 357;
const T_TINT = 358;
const T_TBOOL = 359;
const T_TFLOAT = 360;
const T_TSTRING = 361;
const T_TREGEXP = 362;
const T_INVL = 363;
const T_END = 364;
const T_SYNC = 365;

require_once 'ast.php';
require_once 'lexer.php';

use phs\Logger;

use phs\front\ast\Node;
use phs\front\ast\Decl;
use phs\front\ast\Stmt;
use phs\front\ast\Expr;
use phs\front\ast\Unit;
use phs\front\ast\Module;
use phs\front\ast\Program;
use phs\front\ast\LabelDecl;
use phs\front\ast\RequireDecl;
use phs\front\ast\AttrDecl;
use phs\front\ast\CompAttr;
use phs\front\ast\TopexAttr;
use phs\front\ast\AttrDef;
use phs\front\ast\AttrVal;
use phs\front\ast\UseDecl;
use phs\front\ast\UseAlias;
use phs\front\ast\UseUnpack;
use phs\front\ast\EnumDecl;
use phs\front\ast\VarItem;
use phs\front\ast\ArrDestr;
use phs\front\ast\ObjDestr;
use phs\front\ast\ClassDecl;
use phs\front\ast\CtorDecl;
use phs\front\ast\DtorDecl;
use phs\front\ast\GetterDecl;
use phs\front\ast\SetterDecl;
use phs\front\ast\NestedMods;
use phs\front\ast\TraitUse;
use phs\front\ast\TraitItem;
use phs\front\ast\TraitDecl;
use phs\front\ast\IfaceDecl;
use phs\front\ast\LetDecl;
use phs\front\ast\VarDecl;
use phs\front\ast\FnDecl;
use phs\front\ast\FnExpr;
use phs\front\ast\Block;
use phs\front\ast\ReturnStmt;
use phs\front\ast\Param;
use phs\front\ast\ThisParam;
use phs\front\ast\RestParam;
use phs\front\ast\DoStmt;
use phs\front\ast\IfStmt;
use phs\front\ast\ForInStmt;
use phs\front\ast\ForStmt;
use phs\front\ast\TryStmt;
use phs\front\ast\PhpStmt;
use phs\front\ast\GotoStmt;
use phs\front\ast\TestStmt;
use phs\front\ast\BreakStmt;
use phs\front\ast\ContinueStmt;
use phs\front\ast\PrintStmt;
use phs\front\ast\ThrowStmt;
use phs\front\ast\WhileStmt;
use phs\front\ast\AssertStmt;
use phs\front\ast\SwitchStmt;
use phs\front\ast\ElsifItem;
use phs\front\ast\ElseItem;
use phs\front\ast\CatchItem;
use phs\front\ast\FinallyItem;
use phs\front\ast\PhpUse;
use phs\front\ast\PhpUseItem;
use phs\front\ast\CaseItem;
use phs\front\ast\CaseLabel;
use phs\front\ast\ExprStmt;
use phs\front\ast\BinExpr;
use phs\front\ast\CheckExpr;
use phs\front\ast\CastExpr;
use phs\front\ast\UpdateExpr;
use phs\front\ast\AssignExpr;
use phs\front\ast\MemberExpr;
use phs\front\ast\CondExpr;
use phs\front\ast\CallExpr;
use phs\front\ast\YieldExpr;
use phs\front\ast\UnaryExpr;
use phs\front\ast\NewExpr;
use phs\front\ast\DelExpr;
use phs\front\ast\NamedArg;
use phs\front\ast\RestArg;
use phs\front\ast\RegexpLit;
use phs\front\ast\Name;
use phs\front\ast\TypeId;
use phs\front\ast\Ident;
use phs\front\ast\ThisExpr;
use phs\front\ast\SuperExpr;
use phs\front\ast\NullLit;
use phs\front\ast\TrueLit;
use phs\front\ast\FalseLit;
use phs\front\ast\StrLit;
use phs\front\ast\EngineConst;
use phs\front\ast\LNumLit;
use phs\front\ast\DNumLit;
use phs\front\ast\SNumLit;
use phs\front\ast\ArrLit;
use phs\front\ast\ArrGen;
use phs\front\ast\SpreadExpr;
use phs\front\ast\ObjLit;
use phs\front\ast\ObjPair;


class Parser
{
  const TOKEN_NONE    = -1;
  const TOKEN_INVALID = 135;

  const TOKEN_MAP_SIZE = 366;

  const YYLAST       = 1568;
  const YY2TBLSTATE  = 616;
  const YYGLAST      = 1339;
  const YYNLSTATES   = 697;
  const YYINTERRTOK  = 1;
  const YYUNEXPECTED = 32767;
  const YYDEFAULT    = -32766;

  /* @var array Map of token ids to their respective names */
  private static $terminals = [
    "EOF",
    "error",
    "','",
    "T_ARR",
    "T_YIELD",
    "T_APLUS",
    "T_AMINUS",
    "T_AMUL",
    "T_ADIV",
    "T_AMOD",
    "T_APOW",
    "T_ACONCAT",
    "T_ABIT_OR",
    "T_ABIT_AND",
    "T_ABIT_XOR",
    "T_ABOOL_OR",
    "T_ABOOL_AND",
    "T_ABOOL_XOR",
    "T_ASHIFT_L",
    "T_ASHIFT_R",
    "T_AREF",
    "'='",
    "T_RANGE",
    "'?'",
    "':'",
    "T_BOOL_OR",
    "T_BOOL_XOR",
    "T_BOOL_AND",
    "'|'",
    "'^'",
    "'&'",
    "T_EQ",
    "T_NEQ",
    "T_IN",
    "T_IS",
    "T_ISNT",
    "T_GTE",
    "T_LTE",
    "'>'",
    "'<'",
    "T_SL",
    "T_SR",
    "'+'",
    "'-'",
    "'~'",
    "'*'",
    "'/'",
    "'%'",
    "T_POW",
    "T_AS",
    "T_REST",
    "T_DEL",
    "T_INC",
    "T_DEC",
    "'!'",
    "T_NEW",
    "'.'",
    "'['",
    "']'",
    "'('",
    "')'",
    "T_DDDOT",
    "T_FN",
    "T_LET",
    "T_USE",
    "T_ENUM",
    "T_CLASS",
    "T_TRAIT",
    "T_IFACE",
    "T_MODULE",
    "T_REQUIRE",
    "T_IDENT",
    "T_LNUM",
    "T_DNUM",
    "T_SNUM",
    "T_STRING",
    "T_REGEXP",
    "T_TRUE",
    "T_FALSE",
    "T_NULL",
    "T_THIS",
    "T_SUPER",
    "T_GET",
    "T_SET",
    "T_DO",
    "T_IF",
    "T_ELSIF",
    "T_ELSE",
    "T_FOR",
    "T_TRY",
    "T_GOTO",
    "T_BREAK",
    "T_CONTINUE",
    "T_PRINT",
    "T_THROW",
    "T_CATCH",
    "T_FINALLY",
    "T_WHILE",
    "T_ASSERT",
    "T_SWITCH",
    "T_CASE",
    "T_DEFAULT",
    "T_RETURN",
    "T_CONST",
    "T_FINAL",
    "T_GLOBAL",
    "T_STATIC",
    "T_EXTERN",
    "T_PUBLIC",
    "T_PRIVATE",
    "T_PROTECTED",
    "T_SEALED",
    "T_INLINE",
    "T_PHP",
    "T_TEST",
    "T_CDIR",
    "T_CFILE",
    "T_CLINE",
    "T_CCOLN",
    "T_CFN",
    "T_CCLASS",
    "T_CMETHOD",
    "T_CMODULE",
    "T_NL",
    "T_TINT",
    "T_TBOOL",
    "T_TFLOAT",
    "T_TSTRING",
    "T_TREGEXP",
    "T_END",
    "T_SYNC",
    "';'",
    "'@'",
    "'{'",
    "'}'"
    , "???"
  ];

  /* @var array Map which translates lexer tokens to internal tokens */
  private static $translate = [
        0,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,   54,  135,  135,  135,   47,   30,  135,
       59,   60,   45,   42,    2,   43,   56,   46,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,   24,  131,
       39,   21,   38,   23,  132,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,   57,  135,   58,   29,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  133,   28,  134,   44,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,    1,    3,    4,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   20,   22,   25,   26,   27,   31,
       32,   33,   34,   35,   36,   37,   40,   41,   48,   49,
       50,   51,   52,   53,   55,   61,   62,   63,   64,   65,
       66,   67,   68,   69,   70,   71,   72,   73,   74,   75,
       76,   77,   78,   79,   80,   81,   82,   83,   84,   85,
       86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
       96,   97,   98,   99,  100,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
      116,  117,  118,  119,  120,  121,  122,  123,  124,  125,
      126,  127,  128,  135,  129,  130
  ];

  private static $yyaction = [
     1349,    0,  211,  212,  213,  214,  215,  216,  217,  218,
      219,  220,  221,  222,  223,  224,  225,  365,  226,  227,
      146,  447,  229,  230,  231,  232,  233,  234,  235,  236,
      237,  426,  427,  238,  239,  240,  241,  242,  243,  244,
      245,  246,  247,  248,  249,  250,  428,  308,  431, 1058,
     1059, 1126, 1127,   16,  147,  643,  136,-32766, 1309, 1310,
     1324, 1337, 1327, 1328, 1329, 1325, 1348, 1205,-32766,-32766,
      654, 1280, 1250, 1314, 1315, 1316, 1330, 1346, 1206, 1207,
     1342, 1317, 1318, 1319, 1340, 1320, 1347, 1343, 1344,  661,
     1321, 1322, 1323, 1341, 1313, 1338, 1339,  448, 1345, 1332,
     1333, 1350, 1331, 1326, 1334, 1335, 1336, 1356, 1357, 1311,
     1312, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,  634,
     1351, 1352, 1353, 1354, 1355,-32766,-32766,-32766,-32766,  210,
     1209, 1210, 1224, 1237, 1227, 1228, 1229, 1225, 1249, 1205,
       18,  150,  646,  136,  170, 1214, 1215, 1216, 1230, 1247,
     1206, 1207, 1243, 1217, 1218, 1219, 1241, 1220, 1248, 1244,
     1245,  464, 1221, 1222, 1223, 1242, 1213, 1238, 1239, 1240,
     1246, 1232, 1233, 1251, 1231, 1226, 1234, 1235, 1236, 1257,
     1258, 1211, 1212, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
     1266,  509, 1252, 1253, 1254, 1255, 1256,   -6,  559,  324,
      310,  152,  292,  293,  294,  295,  657,  429,  430,  296,
      297,  298,  299,  300,  301,  302,  303,  304,  305,  306,
      307,  308,  431,    6,  608, 1126, 1127,   14,  506,   18,
      150,  653,  136,-32766,-32766,-32766,-32766,-32766,-32766,  153,
      154,  155, 1200, 1201, 1202, 1203, 1204,  634,  508,  156,
      157,  158,  346,  683, 1200, 1201, 1202, 1203, 1204,  -51,
      -51,  453,  -51,  -51,  510,  511,  456,  141,  309,  517,
       -1,  559,  447,  953,  152, 1299,  305,  306,  307,  308,
      431,   20,  594, 1126, 1127,  547,  595,  512,  473,  474,
      151,  159,  632,  746,  596,  160,  597,  658,  918,  142,
      752,  753,  754,  755,  761,  756,  757,  758,  759,  760,
      627,  541,  153,  154,  155,  149,  520,  288,  289,  290,
      291,  508,  156,  157,  158,  346,  720,  844,  954,  468,
        9,  908,  -51,  -51,  453,  -51,  -51,  510,  511,  455,
      141,  168,  528,  662,  559,  447,  263,  152,  396, 1290,
      138,  738,  472,  460,   20,  594, 1178,  938,  547,  595,
      512,  473,  474,  151,  159,  320,  917,  596,  160,  597,
      529,  530,  142,  752,  753,  754,  755,  761,  756,  757,
      758,  759,  760,  627,  541,  153,  154,  155,  311,  289,
      290,  291,  290,  291,  508,  156,  157,  158,  346,  720,
      461,  954,  468,    9, -170,  -51,  -51,  453,  -51,  -51,
      510,  511,  456,  141,-32766,-32766,-32766,  559, 1205,  312,
      152,  448, -103,  326,  818,  868,  411,   20,  594, 1206,
     1207,  547,  595,  512,  473,  474,  151,  159,  684,  509,
      596,  160,  597,  525, -164,  142,  752,  753,  754,  755,
      761,  756,  757,  758,  759,  760,  627,  541,  153,  154,
      155,  394, -170,  316,  412,  862,  509,  508,  156,  157,
      158,  346,  720,  619,  954,  468,    9,  -30,  -51,  -51,
      453,  -51,  -51,  510,  511,  456,  141,  838,  366,  260,
      559,  952,  330,  152,  871,  327,  466,  865,  509,  507,
       20,  594, -164,  531,  547,  595,  512,  473,  474,  151,
      159,  459,  450,  596,  160,  597,  796,  957,  142,  752,
      753,  754,  755,  761,  756,  757,  758,  759,  760,  627,
      541,  153,  154,  155,  828,  786,  401,  402,    1,  625,
      508,  156,  157,  158,  346,  720,  823,  954,  468,    9,
      -29,  -51,  -51,  453,  -51,  -51,  510,  511,  456,  141,
    -32766,-32766,-32766,-32766,  451,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,   20,  594,  265,  509,  547,  595,  512,
      473,  474,  151,  159,  393,  467,  596,  160,  597,-32766,
    -32766,  142,  752,  753,  754,  755,  761,  756,  757,  758,
      759,  760,  627,  541,  235,  236,  237,  426,  427,  238,
      239,  240,  241,  242,  243,  140,  259,  826,  720,  400,
      954,  468,    9,  171,  172,  173,  174,  175,  176,  177,
      178,  179,  180,  181,  182,  183,  184,  185,  363,  186,
      187,  144,  858,  188,  189,  190,  191,  192,  193,  194,
      195,  196,  423,  424,  197,  198,  199,  200,  201,  202,
      203,  204,  205,  206,  207,  208,  209,  425,  454,  571,
      991,  992,  152, 1180,   15,  145,  271,  272,  273,  274,
      275,  276,  277,  278,  279,  280,  281,  282,  283,  284,
      285,  367,  286,  287,  149,  449,  288,  289,  290,  291,
        5,  622,    2,  463,  328,  623,  368,  321,   16,  147,
      153,  154,  155,   17,  148,  645,-32766,-32766,  332,  508,
      156,  157,  158,  346,  515,  445,  645,  516,  548,  607,
      -51,  -51,  333,  244,  245,  246,  247,  248,  249,  250,
      428,  325,  571, 1058, 1059,  152,  331,   16,  147,  291,
      136,  264,   20,  594,  313,  673,  547,  595,  512,  473,
      474,  151,  159,  228,  314,  596,  160,  597, -248, -248,
      142,  752,  753,  754,  755,  761,  756,  757,  758,  759,
      760,  627,  541,  153,  154,  155,  317,  318,  266,   11,
      948,  329,  508,  156,  157,  158,  346,  261,  315,  954,
      470,    9, -248,  -51,  -51,-32767,-32767,-32767,-32767,-32767,
    -32767,-32767,  242,  243,  267,  571,  322,  949,  152,  524,
    -32766,  462,  465,  452,  527,   20,  594,  526, 1292,  547,
      595,  512,  473,  474,  151,  159,  263,  168,  596,  160,
      597,  313,  673,  142,  752,  753,  754,  755,  761,  756,
      757,  758,  759,  760,  627,  541,  153,  154,  155,  519,
       19, 1173,   28,  779, 1080,  508,  156,  157,  158,  346,
     1291, 1148,  954,  470,    9, 1293,  -51,  -51,  237,  426,
      427,  238,  239,  240,  241,  242,  243,  364,  536,-32766,
      509,  152, 1012, 1147, 1174, 1079, 1013,  481,   20,  594,
    -32766,-32766,  547,  595,  512,  473,  474,  151,  159,  143,
    -32767,  596,  160,  597,  270,  112,  142,  752,  753,  754,
      755,  761,  756,  757,  758,  759,  760,  627,  541,  153,
      154,  155,  457,  497,  446,   29,  694, 1176,  508,  156,
      157,  158,  346,   27,  251,  954,  470,    9,  951,  -51,
      -51,   23,  820, 1200, 1201, 1202, 1203, 1204,   26,   30,
      626,  571, 1177, 1179,  152,  734,  737,  624,  857,  319,
     1280,   20,  594,  509,  514,  547,  595,  512,  473,  474,
      151,  159,  613,  606,  596,  160,  597, 1194,   25,  142,
      752,  753,  754,  755,  761,  756,  757,  758,  759,  760,
      627,  541,  153,  154,  155,  649,  169,    0,   12,  838,
      719,  508,  156,  157,  158,  346,  780,  708,  954,  470,
        9,  950,  -51,  -51,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,  730,  837,   20,  594,  912,  161,  547,  595,
      512,  473,  474,  151,  159,  816,  814,  596,  160,  597,
      851,  729,  142,  752,  753,  754,  755,  761,  756,  757,
      758,  759,  760,  627,  541,  911,  903,  523,  901,  906,
      728,  740,  741,  955,  811,  162,  163,  164,  809,  696,
      819,  954,  470,    9,  513,  165,  166,  167,  347, 1205,
      135,  840,  133,  839,  509,  469,  914,  898,  509,  902,
     1206, 1207,  845,  909, 1205, 1281, 1282, 1283, 1280,  884,
     1270, 1271, 1269, 1267, 1268, 1206, 1207,  637,  739,  956,
      152,  752,  753,  754,  755,  761,  756,  757,  758,  759,
      760,  651,  824,  905,  252,-32766,-32766,-32766,-32766,  904,
    -32767,-32767,-32767,-32767,-32767,-32767,  589,  539, 1272, 1273,
     1274, 1275, 1276, 1277, 1278, 1279,  444,    9,  153,  154,
      155, 1200, 1201, 1202, 1203, 1204,   13,  508,  156,  157,
      158,  346,  253,  254,  255,  323,  269,  268,-32766,  262,
        2,  518,  256,  257,  258,  348,  910, 1308, 1011,  134,
     1078, 1172,  471,  -51, 1146,  785,  817,  827,  762,  897,
       20,  594,  724,  825,  547,  595,  512,  473,  474,  151,
      159,  725, 1300,  596,  160,  597, 1301,  686,  142,  679,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  627,
      541,    0,    0,  752,  753,  754,  755,  761,  756,  757,
      758,  759,  760,    0,    0,    0,    0,  954,    0,    9,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  958,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,    0,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,    0,-32766,-32766,-32766,
    -32766,  271,  272,  273,  274,  275,  276,  277,  278,  279,
      280,  281,  282,  283,  284,  285,  367,  286,  287,  149,
        0,  288,  289,  290,  291,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,    0,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,    0,  472,    0,    0,    0,    0,    0,    0,-32766,
        0,    0,    0,-32766,    0,-32766,-32766,-32766,    0,    0,
      521,  522,  472,    0,-32766,-32766,-32766,-32766,-32766,-32766,
      660,    0,  143,    0,    0,-32766,  252,-32766,-32766,-32766,
      521,  522,    0,    0,    0,    0,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,    0,-32766,-32766,    0,  519,
    -32766,-32766,-32766,-32766,-32766,    0,-32766,    0,  143,    0,
        0,-32766, -103,    0,  253,  254,  255,-32766,-32766, -183,
        0,    0,    0,  518,  256,  257,  258,  348,    0,  856,
      509,  134, -104,    0,  471,    0,    0, 1200, 1201, 1202,
     1203, 1204,    0,    0,    0,    0,-32766,    0,    0, -183,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,-32766,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1200, 1201, 1202, 1203, 1204
  ];

  private static $yycheck = [
        4,    0,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   20,   21,   22,
       23,   57,   25,   26,   27,   28,   29,   30,   31,   32,
       33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
       43,   44,   45,   46,   47,   48,   49,   48,   49,   52,
       53,   52,   53,   56,   57,    1,   59,   71,   62,   63,
       64,   65,   66,   67,   68,   69,   70,   71,   82,   83,
        1,   75,    4,   77,   78,   79,   80,   81,   82,   83,
       84,   85,   86,   87,   88,   89,   90,   91,   92,    1,
       94,   95,   96,   97,   98,   99,  100,  133,  102,  103,
      104,  105,  106,  107,  108,  109,  110,  111,  112,  113,
      114,  115,  116,  117,  118,  119,  120,  121,  122,    1,
      124,  125,  126,  127,  128,   29,   30,   31,   32,  133,
       62,   63,   64,   65,   66,   67,   68,   69,   70,   71,
       56,   57,    1,   59,    2,   77,   78,   79,   80,   81,
       82,   83,   84,   85,   86,   87,   88,   89,   90,   91,
       92,    2,   94,   95,   96,   97,   98,   99,  100,  101,
      102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,  113,  114,  115,  116,  117,  118,  119,  120,  121,
      122,   61,  124,  125,  126,  127,  128,    0,    1,    3,
       33,    4,   29,   30,   31,   32,    1,   34,   35,   36,
       37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
       47,   48,   49,  123,   24,   52,   53,    2,    2,   56,
       57,  131,   59,   42,   43,   44,   45,   46,   47,   42,
       43,   44,  124,  125,  126,  127,  128,    1,   51,   52,
       53,   54,   55,    1,  124,  125,  126,  127,  128,   62,
       63,   64,   65,   66,   67,   68,   69,   70,   33,   49,
        0,    1,   57,  131,    4,  134,   45,   46,   47,   48,
       49,   84,   85,   52,   53,   88,   89,   90,   91,   92,
       93,   94,    1,  134,   97,   98,   99,    1,  131,  102,
      103,  104,  105,  106,  107,  108,  109,  110,  111,  112,
      113,  114,   42,   43,   44,   23,   49,   25,   26,   27,
       28,   51,   52,   53,   54,   55,  129,  131,  131,  132,
      133,  131,   62,   63,   64,   65,   66,   67,   68,   69,
       70,   50,   49,    1,    1,   57,   50,    4,  133,   58,
        2,  131,   64,  133,   84,   85,   60,  131,   88,   89,
       90,   91,   92,   93,   94,    3,  131,   97,   98,   99,
       82,   83,  102,  103,  104,  105,  106,  107,  108,  109,
      110,  111,  112,  113,  114,   42,   43,   44,    2,   26,
       27,   28,   27,   28,   51,   52,   53,   54,   55,  129,
      133,  131,  132,  133,    2,   62,   63,   64,   65,   66,
       67,   68,   69,   70,   42,   43,   44,    1,   71,   33,
        4,  133,  134,   21,  131,   23,  133,   84,   85,   82,
       83,   88,   89,   90,   91,   92,   93,   94,    1,   61,
       97,   98,   99,   50,    2,  102,  103,  104,  105,  106,
      107,  108,  109,  110,  111,  112,  113,  114,   42,   43,
       44,   21,   60,   21,   49,   23,   61,   51,   52,   53,
       54,   55,  129,   80,  131,  132,  133,  134,   62,   63,
       64,   65,   66,   67,   68,   69,   70,  130,   20,   21,
        1,  134,   21,    4,   23,   21,    2,   23,   61,   59,
       84,   85,   60,   24,   88,   89,   90,   91,   92,   93,
       94,  133,    2,   97,   98,   99,    1,  131,  102,  103,
      104,  105,  106,  107,  108,  109,  110,  111,  112,  113,
      114,   42,   43,   44,  131,  131,  133,  133,  133,   60,
       51,   52,   53,   54,   55,  129,  131,  131,  132,  133,
      134,   62,   63,   64,   65,   66,   67,   68,   69,   70,
       29,   30,   31,   32,    2,   34,   35,   36,   37,   38,
       39,   40,   41,   84,   85,    3,   61,   88,   89,   90,
       91,   92,   93,   94,    2,    2,   97,   98,   99,   29,
       30,  102,  103,  104,  105,  106,  107,  108,  109,  110,
      111,  112,  113,  114,   31,   32,   33,   34,   35,   36,
       37,   38,   39,   40,   41,    2,    2,  131,  129,  133,
      131,  132,  133,    5,    6,    7,    8,    9,   10,   11,
       12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
       22,   23,   60,   25,   26,   27,   28,   29,   30,   31,
       32,   33,   34,   35,   36,   37,   38,   39,   40,   41,
       42,   43,   44,   45,   46,   47,   48,   49,    2,    1,
       52,   53,    4,   60,   56,   57,    5,    6,    7,    8,
        9,   10,   11,   12,   13,   14,   15,   16,   17,   18,
       19,   20,   21,   22,   23,    2,   25,   26,   27,   28,
      131,   51,  133,    2,   33,   55,   20,   21,   56,   57,
       42,   43,   44,   56,   57,   65,   56,   57,    3,   51,
       52,   53,   54,   55,   62,   63,   65,   66,   95,   96,
       62,   63,    3,   42,   43,   44,   45,   46,   47,   48,
       49,   21,    1,   52,   53,    4,   21,   56,   57,   28,
       59,   24,   84,   85,  100,  101,   88,   89,   90,   91,
       92,   93,   94,   24,   24,   97,   98,   99,  100,  101,
      102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,  113,  114,   42,   43,   44,   24,   24,   24,   24,
       24,   24,   51,   52,   53,   54,   55,   24,   24,  131,
      132,  133,  134,   62,   63,   33,   34,   35,   36,   37,
       38,   39,   40,   41,   24,    1,   24,   24,    4,   30,
       29,   39,   39,   44,   30,   84,   85,   49,   58,   88,
       89,   90,   91,   92,   93,   94,   50,   50,   97,   98,
       99,  100,  101,  102,  103,  104,  105,  106,  107,  108,
      109,  110,  111,  112,  113,  114,   42,   43,   44,   30,
       56,   58,   60,   58,   58,   51,   52,   53,   54,   55,
       58,   58,  131,  132,  133,   58,   62,   63,   33,   34,
       35,   36,   37,   38,   39,   40,   41,   59,    1,   71,
       61,    4,   58,   58,   58,   58,   58,   64,   84,   85,
       82,   83,   88,   89,   90,   91,   92,   93,   94,   59,
       59,   97,   98,   99,   59,   59,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,   42,
       43,   44,   59,   59,   63,   60,   60,   60,   51,   52,
       53,   54,   55,   60,   60,  131,  132,  133,  134,   62,
       63,   60,  134,  124,  125,  126,  127,  128,   60,   60,
       60,    1,   60,   60,    4,   60,   60,   60,   60,   60,
       75,   84,   85,   61,   61,   88,   89,   90,   91,   92,
       93,   94,   86,   97,   97,   98,   99,   76,   87,  102,
      103,  104,  105,  106,  107,  108,  109,  110,  111,  112,
      113,  114,   42,   43,   44,   88,  113,   -1,  123,  130,
      130,   51,   52,   53,   54,   55,  134,  123,  131,  132,
      133,  134,   62,   63,    5,    6,    7,    8,    9,   10,
       11,   12,   13,   14,   15,   16,   17,   18,   19,   20,
       21,   22,  123,  123,   84,   85,  131,    4,   88,   89,
       90,   91,   92,   93,   94,  131,  131,   97,   98,   99,
      131,  131,  102,  103,  104,  105,  106,  107,  108,  109,
      110,  111,  112,  113,  114,  131,  131,   30,  131,  131,
      131,  131,  131,  131,  131,   42,   43,   44,  131,   46,
      131,  131,  132,  133,   51,   52,   53,   54,   55,   71,
       57,  131,   59,  131,   61,   62,  131,  131,   61,  131,
       82,   83,  131,  131,   71,   72,   73,   74,   75,  131,
       77,   78,   79,   80,   81,   82,   83,    1,  131,  131,
        4,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,    1,  131,  131,    4,   29,   30,   31,   32,  131,
       34,   35,   36,   37,   38,   39,  133,  133,  115,  116,
      117,  118,  119,  120,  121,  122,  133,  133,   42,   43,
       44,  124,  125,  126,  127,  128,  133,   51,   52,   53,
       54,   55,   42,   43,   44,  133,  133,  133,   62,  133,
      133,   51,   52,   53,   54,   55,  134,  134,  134,   59,
      134,  134,   62,   63,  134,  134,  134,  134,  134,  134,
       84,   85,  134,  134,   88,   89,   90,   91,   92,   93,
       94,  134,  134,   97,   98,   99,  134,  134,  102,  134,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  113,
      114,   -1,   -1,  103,  104,  105,  106,  107,  108,  109,
      110,  111,  112,   -1,   -1,   -1,   -1,  131,   -1,  133,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,  131,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   20,   21,   22,
       23,   -1,   25,   26,   27,   28,   29,    5,    6,    7,
        8,    9,   10,   11,   12,   13,   14,   15,   16,   17,
       18,   19,   20,   21,   22,   23,   -1,   25,   26,   27,
       28,    5,    6,    7,    8,    9,   10,   11,   12,   13,
       14,   15,   16,   17,   18,   19,   20,   21,   22,   23,
       -1,   25,   26,   27,   28,    5,    6,    7,    8,    9,
       10,   11,   12,   13,   14,   15,   16,   17,   18,   19,
       20,   21,   22,   23,   -1,   25,   26,   27,    5,    6,
        7,    8,    9,   10,   11,   12,   13,   14,   15,   16,
       17,   18,   19,   20,   21,   22,   23,    4,   25,   26,
        5,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   20,   21,   22,   23,    4,
       25,   -1,   64,   -1,   -1,   -1,   -1,   -1,   -1,   71,
       -1,   -1,   -1,    4,   -1,   42,   43,   44,   -1,   -1,
       82,   83,   64,   -1,   51,   52,   53,   54,   55,   71,
        1,   -1,   59,   -1,   -1,   62,    4,   42,   43,   44,
       82,   83,   -1,   -1,   -1,   -1,   51,   52,   53,   54,
       55,   42,   43,   44,   59,   -1,   61,   62,   -1,   30,
       51,   52,   53,   54,   55,   -1,   71,   -1,   59,   -1,
       -1,   62,  134,   -1,   42,   43,   44,   82,   83,   50,
       -1,   -1,   -1,   51,   52,   53,   54,   55,   -1,   60,
       61,   59,  134,   -1,   62,   -1,   -1,  124,  125,  126,
      127,  128,   -1,   -1,   -1,   -1,  133,   -1,   -1,   80,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,  133,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,  124,  125,  126,  127,  128
  ];

  private static $yybase = [
      270,  416,  416,  197,  343,  489,  489,  668,  741,  887,
      814,  960,  960,  141,   -4, 1056, 1054, 1053, 1052,   68,
     1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126,
     1126,  200,  739,  917,  877,  949,  948,  944,  727,  930,
      740,  834, 1063,  762,  837,  803,  763, 1064, 1066, 1067,
      767,  835,  883,  802,  875,  766, 1070,  929,  876,  925,
      924,  618,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,  671,   -3,   -3,   -3,   -3,   -3,
       -3,   -3, 1140, 1316, 1316, 1316, 1316, 1316, 1316, 1316,
     1316, 1316, 1316, 1316, 1316, 1316, 1316, 1316, 1316, 1316,
     1316, 1316, 1316,  118,  118,  291,  296,  998,  787,  898,
      786,  893,  915,  246,  773,  205,  790,   88,  342,  792,
      252, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1442, 1442, 1442, 1442, 1442, 1442, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1442, 1442, 1442, 1442, 1442, 1442, 1442, 1442, 1442, 1442,
     1442, 1442, 1442, 1442, 1442, 1442, 1442, 1442, 1442, 1442,
     1442, 1442, 1442, 1442, 1442, 1442, 1442, 1442, 1442, 1442,
     1442, 1442, 1442, 1442, 1442, 1442, 1442, 1442, 1442, 1043,
     1043, 1442, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1442,
     1442, 1442, 1442, 1043, 1043, 1043, 1043, 1043, 1043, 1442,
     1043, 1043, 1043, 1043, 1019, 1019, 1019, 1019, 1019, 1019,
     1019, 1019, 1019,  292,  292,  292, 1383, 1383, 1383, 1385,
     1385, 1363, 1363,  363, 1340, 1340,  365, 1292, 1292,  721,
     1267, 1267,  173, 1419, 1439, 1419, 1419, 1419, 1419,  573,
      573,  791,  560,  845,  845,  772,  772,  772,  772,  772,
      845,  845,  772,  772,  772,  772,  772,   96,   96, 1116,
     1116, 1116, 1116,  829, 1405, 1047,  288,  -36,  -36,  215,
     1348, 1348, 1348, 1368,  691,  691,  691,  691,  531,  531,
      818,  -14,  -14,  372,  372,  372,  372,  372,  372,  231,
      231,  231,  -14,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  191,  191,  191,  191,  191,  191,  191,  191,
       -1,   -1,   -1,   -1,  -36,  -36,  -36,  -36,  -36,  -36,
      -36,  -36,  515,  378,  -36,  405,  405,  437,  650,  912,
      912,  912,  912,  912,  912,  912,  912,  912,   54,  828,
       69,  828,  912,  947,  945,  789,  794,  661,  442,  402,
      293,  347, 1062,  652,  652,  652,  652,  652,  652,  657,
      652,  652,  652,  652,  652,  652,  657,  347,   84,   84,
       84,   84,   84,   84,  657,  196,  347,  347,  347,  347,
      347,  347,  347,  347,  347,  347,  347,  347,  347,  347,
      347,  347,  347,  347,  347,  347,  347,  347,  347,  347,
      347,  347,  347,  347,  220,  569,  357,  386,  479,  654,
      633,  895,  572,  633,  572,  362,  362,  856,  873,  981,
      657,  657,  657,  657,  715,  729,  953,  957,  657,  880,
      142,  486, 1012,  100,  662,  970,  468,  267,  403,  235,
      167,  879, 1057,  972,  805,  882,  613,  582,  393,  686,
      952,  226,  440,  474,  159,  899,  404,  471,  415,  833,
      896,  851,  901,  851,  850, 1034,  850,  850,  660,  348,
      782, 1034,  660,  828,  225,  701,  850, 1034,  895,  895,
      833,  783,  701,  850,  896,  660,  828,  562,  779,  804,
      828,  828,  828,  828, 1034, 1034, 1034, 1023,    1,  913,
      765,  911,  817,  770,  902,  884,  913,  975,  886,  976,
      978, 1018, 1024,  894,  874, 1033, 1092, 1088,  764,  855,
     1087,  891,  871,  919,  920,  885,  913,  838,  903,  774,
      908,  806,  836, 1095,  997, 1079,  913,  494, 1078,  988,
      909,  510,  982,  793,  778, 1075,  905, 1074,  720,  951,
     1093, 1073,  510,  813,  907,  725,  950, 1072,  906,  913,
      583,  959,  900, 1071,  812, 1011,    0, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
       -4,    0,   68,   68,   68,   68,    0, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   84,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  173,    0,    0,    0,    0,    0,    0,    0, 1043,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1043, 1043, 1043, 1043, 1043, 1043,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043,    0,    0, 1043,    0,
        0,    0,    0,    0,    0,    0, 1043, 1043, 1043, 1043,
        0,    0,    0,    0,    0,    0, 1043,    0,    0,    0,
        0,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
      173,  173,  173, 1043, 1043, 1043,   -3,   -3,   -3,   -3,
      173,   -3,   -3,  173,   -3,   -3,  173,   -3,   -3,    0,
     1043, 1028, 1043, 1043, 1043, 1043,  691,  691,  173,  173,
      691,  691,  691,  691,  691,  691,  691,  691,  691,  691,
      691,  691,  691,  691,  173,  173,  173,  173,  173,  173,
     1028, 1043, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028,
     1028,    0,    0,    0,    0,  173,  173, 1028, 1028, 1028,
      691,  691,  691,  691,  691,  691,   84,   84,   84, 1028,
      347,  347,  347,  347,  347,  347,  347,  347,  347,  691,
      691,  691,  691,  691,  691,  691,  691,   84,   84,   84,
       84,  347,  347,  347,  347,  347,  347,  347,  347,  347,
      347,  347,  347,  347,  347,  662,  347,  347,  347,  347,
      347,  347,  347,  347,  347,  347,  347,  347,  347,  347,
      347,  347,  347,  347,  662,    0,    0,  913,    0,  654,
       84,   84,   84,   84,   84,   84,   84,   84,   84,   84,
       84,   84,   84,   84,    0,    0,    0,    0,    0,    0,
        0,   84, 1034,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  913,  975,    0,  913,    0,    0, 1034, 1034,
        0, 1034, 1034, 1034, 1034, 1034,  828,    0,    0,    0,
        0, 1034, 1034, 1034, 1034,    0,  975,    0,    0,  614,
        0,    0,  693,    0,    0,    0,    0,    0,  975,  913,
      693,  666,  666,    0,    0,    0,    0,  614,    0,    0,
        0,    0,  614,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   84,    0,    0,    0,   84,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   84
  ];

  private static $yydefault = [
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,  670,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,  320,  601,32767,32767,32767,32767,  387,32767,
    32767,32767,32767,32767,32767,32767,  455,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,  262,  264,  600,  263,  298,  299,  300,  301,  302,
      303,  304,  305,  306,  307,  308,  309,  310,  311,  312,
      296,  486,  365,  366,  367,  368,  369,  370,  371,  372,
      373,  374,  375,  376,  377,  378,  379,  363,  601,  265,
       71,  488,  156,  608,32767,  487,  166,   81,  172,  169,
      175,  177,32767,  266,  433,  434,  435,  436,  437,  438,
      439,  440,  441,  442,  443,  444,  445,  446,  447,  431,
      267,  158,   76,32767,32767,32767,32767,32767,  670,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,  285,  352,  321,  318,  388,  385,
      317,  384,  456,  421,  453,  452,32767,32767,32767,  283,
      350,  284,  351,  419,  282,  349,  420,  276,  343,  418,
      277,  344,  412,32767,32767,32767,32767,32767,32767,  275,
      342,  413,  411,  288,  289,  290,  280,  281,  279,  278,
      355,  356,  357,  347,  348,  345,  346,  424,  425,  416,
      417,  414,  415,  183,32767,32767,   51,   52,   52,   52,
       51,   51,   51,   51,  286,  287,  353,  354,  422,  423,
       51,   51,   51,  268,  269,  274,  335,  336,  341,  404,
      405,  410,   52,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,  270,  271,  272,  273,  337,  338,  339,  340,
      406,  407,  408,  409,   66,32767,32767,32767,32767,32767,
    32767,  670,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,  670,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,  184,32767,32767,  498,  498,
    32767,32767,32767,  323,  322,  324,  326,  327,  325,  330,
      390,  389,  391,  393,  394,  392,  397,32767,  458,  457,
      459,  461,  462,  460,  465,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  509,
      510,32767,32767,32767,32767,32767,32767,32767,32767,32767,
      196,32767,32767,  197,32767,32767,32767,32767,32767,32767,
      297,  364,   72,  432,32767,32767,32767,32767,   77,32767,
    32767,32767,32767,32767,32767,32767,   70,   47,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,   75,
    32767,32767,   38,  167,32767,32767,32767,  173,32767,  237,
      222,  472,  227,  473,32767,32767,32767,32767,  328,  669,
       92,32767,  395,32767,  669,  669,32767,32767,32767,32767,
      238,   90,  669,32767,  223,  463,32767,  669,   97,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  492,
      498,32767,32767,32767,32767,32767,   50,32767,32767,32767,
    32767,32767,32767,32767,   36,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,  501,32767,32767,  498,
    32767,32767,32767,32767,32767,32767,   96,   93,32767,32767,
    32767,  145,32767,32767,  244,32767,32767,32767,   80,32767,
    32767,32767,  144,32767,32767,  176,32767,32767,32767,  102,
       98,32767,32767,32767,32767,32767,  496
  ];

  private static $yygoto = [
       33,   81,   62,   98,   62,   81,   35,   37,  668,   40,
       41,   43,   44,   45,   50,   51,   62,   32,  483,  484,
      485,  486,  487,  488,   36,   31,   38,  490,  491,  492,
      493,  494,  495,   63,   39,   64,   65,   66,   67,   68,
       69,   70,   71,   72,   73,   74,   75,   76,   77,   78,
       79,   80,  334,  349,  351,  354,  357,  360,  369,  373,
      374,  375,  376,  377,  378,  379,  404,  405,  413,  414,
      415,  432,  433,  434,  435,   42,   82,   83,   84,   85,
       86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
       96,   97,  335,  336,  350,  352,  355,  358,  361,  370,
      380,  381,  382,  383,  384,  385,  386,  406,  407,  416,
      417,  418,  436,  437,  438,  439,  591,   46,  781, 1166,
      579,  665,  681,  693,   99,  100,  337,   47,  101,  338,
      102,  103,  339,   48,   49, 1030, 1030, 1030, 1030, 1030,
     1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030,  833,  833,
      833,  833,  833,  833,  702, 1030, 1030, 1030, 1030, 1030,
     1030, 1030, 1030, 1030, 1030, 1030,  678,  947,  579,  781,
      781,   10,  579,  678,   52,   53,  782,   54,   55,  340,
      105,  106,  341,  342,  635,  670,  612,  584,   56,   57,
      107,  108,  109,   58, 1304,  110,  111,   59,   60,  630,
      630,  630,  630,  630,  630,  630,  630,  630,  630,  630,
      630,  630, 1306, 1306, 1208, 1208, 1208, 1208, 1208,  988,
      989,  990, 1055, 1056, 1057, 1123, 1124, 1125, 1031, 1031,
     1031, 1031, 1031, 1031, 1031, 1031, 1031, 1031, 1031, 1031,
     1031,  832,  832,  832,  832,  832,  832, 1165, 1031, 1031,
     1031, 1031, 1031, 1031, 1031, 1031, 1031, 1031, 1031, 1296,
     1166, 1166, 1166, 1166, 1166, 1166,  831,  831,  831,  831,
      831,  831, 1182, 1307, 1307,  860,  398, 1166, 1166, 1166,
     1166, 1166, 1166, 1166, 1166, 1166, 1166, 1166, 1166, 1166,
     1166, 1166, 1166, 1166, 1166, 1166, 1166, 1166, 1166, 1166,
     1166, 1166, 1166, 1166, 1166, 1166, 1166, 1166, 1166, 1166,
     1166, 1166, 1166, 1166, 1166, 1166,  545, 1285, 1166,  834,
      834,  834,  834,  834,  834,  585, 1166, 1166, 1166, 1166,
      496,  504,  743,  743, 1289,  659, 1166,  562, 1286,  659,
      836,  836,  836,  836,  836,  836,  550,    3,  551,  552,
      553,  558,    3,  638,  590,  907,  891,  923,  926,  889,
      886,  887,  888,  890,  705,  705,   21,  732,   22,  642,
     1287,  564,  564,  564,  564,  564,  564,  751,  669,  751,
      751,  751,  788,  792,  476,   24,  821,  803, 1165, 1165,
     1165, 1165, 1165, 1165,  505,  573,  574,  598,  602,  615,
      682, 1288,  766,  776,  751, 1165, 1165, 1165, 1165, 1165,
     1165, 1165, 1165, 1165, 1165, 1165, 1165, 1165, 1165, 1165,
     1165, 1165, 1165, 1165, 1165, 1165, 1165, 1165, 1165, 1165,
     1165, 1165, 1165, 1165, 1165, 1165, 1165, 1165, 1165, 1165,
     1165, 1165, 1165, 1165,  771,  534, 1165,  798,  544,  655,
     1302,  663, 1010,  940, 1165, 1165, 1165, 1165,  680,  943,
      846,  546,  688,  764, 1165,  554,  555,  556,  557,  896,
      928,  848,  937,  807,  922,    0,  652,  807,  807,  807,
      807, 1175, 1175, 1175,  830,    0,    0,  830,  723,  731,
        0,    0,    0,    0,    0, 1145,    0,    0, 1175,    0,
     1175, 1175, 1175, 1175, 1145, 1145, 1145, 1145, 1145, 1145,
     1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145,
     1145, 1145, 1145, 1145,  656,    0,    0,    0,  395,    0,
        0,    0,    0,    0,    0,    0,    0,  806,    0,    0,
        0,  806,  806,  806,  806,    0,    0,    0,    0,    0,
        0,    0,    0,  656,    0,  656,    0,  395,    0,    0,
      399,    0,    0,  478,  399,  399,  399,  399,    0,    0,
        0,    0,    0,    0,  422,  422,  422,    0,    0,    0,
        0,    0,    0,  656,  656,  656,  656,  656,  656,  656,
      656,  656,  478,    0,  479,  783,  783,  783,  783,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  689,  636,    0,  535,  572,  538,    0,  636,
      636,  636,  666,  636,  636,  666,  666,  689,    0,    0,
      805,    0,  480,    0,  805,  805,  805,  805,    0,    0,
        0,    0,    0,  783,  783,  783,  783,  783,  783,  783,
      783,    0,  850,  783, 1284,  804,    0,    0,    0,  804,
      804,  804,  804,    0,    0,    0,    0,  644,  603,  644,
      616,    0,  640,  641,  583,  587,    0,    0,    0,    0,
      674,    0,    0,    0,    0,    0,    0,    0,  899,  852,
        0,  852,  854,  854,  892,  929,  582,    0,    0,    0,
        0,  813,  815,  812,  810,  674,  582, 1029, 1196,  561,
      600,  639, 1096, 1197,  549,  611,  664, 1164,  876,  745,
      620,  621,  878,  877,  875,  942,  879,  691,  620,  621,
      692,  588,  695,    0, 1145, 1145, 1145,    0,    0,    0,
        0,    0,  540,    0, 1145,    0,    0, 1145,  900,    0,
     1145,    0,    0, 1145,  933,    0,    0,    0,    0,    0,
      458,    0, 1145, 1145,  458,  458,  458,  458,    0,    0,
        0,  932,  930,  931,  532,  532,  533,    0, 1145, 1145,
     1145, 1145, 1145, 1145, 1016,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 1145,
     1145,  601,    0,    0,    0,    0,    0,    0,    0,    0,
     1145, 1145, 1145,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 1151,    0,    0,
        0, 1145, 1145, 1145, 1145,    0, 1151, 1151, 1151, 1151,
     1151, 1151, 1151, 1151, 1151, 1151, 1151, 1151, 1151, 1151,
     1151, 1151, 1151, 1151, 1151, 1151,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  672,  675,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1171,    0,    0,    0,    0,    0,    0, 1171,    0, 1145,
     1145, 1145, 1145, 1145, 1145, 1171,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1171, 1171, 1171, 1171,    0,    0,    0,    0, 1171,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1145,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  498,  499,  500,  501,  502,  503,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      685,  104,  114,  115,  116,  117,  118,  119,  120,  121,
      122,  123,  124,  125,  126,  127,  128,  129,  343,  353,
      356,  359,  362,  371,  372,  387,  388,  389,  390,  391,
      392,  408,  409,  419,  420,  421,  440,  441,  442,  443,
        0,    0,  130,    0,    0,    0,    0,    0,    0,    0,
      593,  131,  132,  344,    0,    0, 1151, 1151, 1151,    0,
      345,    0,    0,    0,    0,    0, 1151,    0,    0, 1151,
        0,    0, 1151,    0,    0, 1151,    0,    0,    0,    0,
        0,    0,    0,    0, 1151, 1151,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1151, 1151, 1151, 1151, 1151, 1151,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1151, 1151,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1151, 1151, 1151,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1151, 1151, 1151, 1151,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1028,    0,    0,    0,    0,    0,    0, 1095,
        0, 1151, 1151, 1151, 1151, 1151, 1151, 1163,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 1151,    0,    0,    0,
        0, 1026,    0,    0,    0, 1093,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1161
  ];

  private static $yygcheck = [
       25,   25,   25,   25,   25,   25,   25,   25,   24,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   41,  110,
       41,   51,   51,   51,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,   18,   18,
       18,   18,   18,   18,    4,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,   41,  103,   41,   41,
       41,   64,   41,   41,   25,   25,   41,   25,   25,   25,
       25,   25,   25,   25,  107,  107,   31,   31,   25,   25,
       25,   25,   25,   25,  124,   25,   25,   25,   25,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   77,
       77,   77,   77,   77,   77,   77,   77,   77,  109,  109,
      109,  109,  109,  109,  109,  109,  109,  109,  109,  109,
      109,   17,   17,   17,   17,   17,   17,  108,  109,  109,
      109,  109,  109,  109,  109,  109,  109,  109,  109,  121,
      110,  110,  110,  110,  110,  110,   16,   16,   16,   16,
       16,   16,  113,   88,   88,   73,   35,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,   60,  114,  110,   20,
       20,   20,   20,   20,   20,   84,  110,  110,  110,  110,
       42,   42,   33,   33,  117,   22,  110,   84,  115,   22,
       21,   21,   21,   21,   21,   21,   42,    6,   42,   42,
       42,   42,    6,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,    7,    7,   78,    7,   78,   78,
      116,   34,   34,   34,   34,   34,   34,   36,   78,   36,
       36,   36,   52,   52,   74,   78,   63,   58,  108,  108,
      108,  108,  108,  108,   60,   39,   48,  107,  107,  107,
       43,  110,   40,   46,   36,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,   44,   30,  108,   56,   60,   26,
       32,   32,   76,  100,  108,  108,  108,  108,   32,  101,
       69,   60,   28,   32,  108,   60,   60,   60,   60,   86,
       96,   71,   98,   11,   94,   -1,   34,   11,   11,   11,
       11,  108,  108,  108,   23,   -1,   -1,   23,   23,   23,
       -1,   -1,   -1,   -1,   -1,   76,   -1,   -1,  108,   -1,
      108,  108,  108,  108,   76,   76,   76,   76,   76,   76,
       76,   76,   76,   76,   76,   76,   76,   76,   76,   76,
       76,   76,   76,   76,    5,   -1,   -1,   -1,   35,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   18,   -1,   -1,
       -1,   18,   18,   18,   18,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,    5,   -1,    5,   -1,   35,   -1,   -1,
       35,   -1,   -1,   22,   35,   35,   35,   35,   -1,   -1,
       -1,   -1,   -1,   -1,   35,   35,   35,   -1,   -1,   -1,
       -1,   -1,   -1,    5,    5,    5,    5,    5,    5,    5,
        5,    5,   22,   -1,   22,   22,   22,   22,   22,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,    5,    5,   -1,    5,    5,    5,   -1,    5,
        5,    5,    5,    5,    5,    5,    5,    5,   -1,   -1,
       17,   -1,    5,   -1,   17,   17,   17,   17,   -1,   -1,
       -1,   -1,   -1,   22,   22,   22,   22,   22,   22,   22,
       22,   -1,   61,   22,   88,   16,   -1,   -1,   -1,   16,
       16,   16,   16,   -1,   -1,   -1,   -1,   22,   22,   22,
       22,   -1,   22,   22,   22,   22,   -1,   -1,   -1,   -1,
       22,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   61,   61,
       -1,   61,   61,   61,   61,   61,   22,   -1,   -1,   -1,
       -1,   61,   61,   61,   61,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   -1,   76,   76,   76,   -1,   -1,   -1,
       -1,   -1,   61,   -1,   76,   -1,   -1,   76,   61,   -1,
       76,   -1,   -1,   76,   61,   -1,   -1,   -1,   -1,   -1,
       34,   -1,   76,   76,   34,   34,   34,   34,   -1,   -1,
       -1,   61,   61,   61,   34,   34,   34,   -1,   76,   76,
       76,   76,   76,   76,  106,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   76,
       76,   88,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       76,   76,   76,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,  106,   -1,   -1,
       -1,   76,   76,   76,   76,   -1,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   88,   88,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       76,   -1,   -1,   -1,   -1,   -1,   -1,   76,   -1,   76,
       76,   76,   76,   76,   76,   76,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   76,   76,   76,   76,   -1,   -1,   -1,   -1,   76,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   76,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   45,   45,   45,   45,   45,   45,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       76,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       -1,   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       45,   45,   45,   45,   -1,   -1,  106,  106,  106,   -1,
       45,   -1,   -1,   -1,   -1,   -1,  106,   -1,   -1,  106,
       -1,   -1,  106,   -1,   -1,  106,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,  106,  106,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
      106,  106,  106,  106,  106,  106,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,  106,  106,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,  106,  106,  106,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,  106,  106,  106,  106,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,  106,   -1,   -1,   -1,   -1,   -1,   -1,  106,
       -1,  106,  106,  106,  106,  106,  106,  106,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,  106,   -1,   -1,   -1,
       -1,  106,   -1,   -1,   -1,  106,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  106
  ];

  private static $yygbase = [
        0,    0,    0,    0,  149,  160,  347,  361,    0,    0,
        0,   77,    0,    0,    0,    0,  259,  234,  141,    0,
      312,  333,  199,  477,    6, -135,  -21,    0,  -45,    0,
       -8, -274, -154, -131,  364,  164,  -18,    0,    0,  -50,
      -47, -278,  -17,  -46,   -6,  741,  -48,    0,  -51,    0,
        0, -279,  -83,    0,    0,    0,  -20,    0,  -16,    0,
     -155,  147,    0,  -25,  162,    0,    0,    0,    0,  -84,
        0,  -75,    0, -118,  -11,    0,  391, -204, -228,    0,
        0,    0,    0,    0,  186,    0,  -74,    0,  260,    0,
        0,    0,    0,    0, -140,    0,  -73,    0, -138,    0,
      -53,  -80,    0,  159,    0,    0,  723,   51,  135,  228,
        7,    0,    0,  132,  -77,  -56,  -24,  -60,    0,    0,
        0,  121,    0,    0,  180,    0
  ];

  private static $yygdefault = [
    -32768,  628,  699,  700,  701,  629,    4,  704,  706,  707,
      709,  710,  711,  712,  713,  714,  715,  716,  717,  718,
      721,  722, 1195,  829,  650,   34,  563,  835,  676,  736,
      567,  605, 1294,  742,  477,  397,  750,  677,  617,  565,
      765,  566,  489,  671,  770,  113,  775,  784,  575,  618,
      586,  687,  791,  568,  667,  690,  797,  403,  802,  808,
      542,  883,  410,  822,    7,  569,  570,  843, 1099,  847,
     1167,  849,  577,  859,  475,  578, 1077,  882, 1192,  592,
      885,  537,  137,  139,  580,  543,  895,  609, 1191,  482,
      913,  915,  916,  614,  921,  925,  927,  610,  936,  581,
      939,  944,    8,  946,  560,   61, 1083, 1199, 1097, 1100,
     1098, 1168,  576, 1181, 1186, 1187, 1188, 1190,  631,  633,
      599, 1295,  647,  604, 1303,  648
  ];

  private static $yylhs = [
        0,    1,    1,    2,    2,    3,    4,    6,    6,    7,
        7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
        7,    7,    7,    7,    7,    7,   20,    8,    8,   24,
       24,   19,   19,   10,   27,   15,   26,   26,   28,   28,
       28,    9,    9,    9,    9,   31,   31,   33,   33,   33,
       30,   34,   34,   35,   35,   36,   36,   36,   36,   36,
       36,   36,   36,   36,   36,   11,   37,   37,   39,   39,
       40,   40,   40,   43,   43,   44,   44,   44,   38,   38,
       46,   46,   47,   47,   48,   48,   41,   41,   12,   12,
       49,   49,   53,   53,   54,   54,   52,   50,   50,   50,
       55,   55,   56,   51,   51,   57,   57,   58,   58,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
       58,   59,   59,   59,   62,   62,   63,   63,   13,   13,
       14,   14,   64,   64,   23,   23,   23,   23,   23,   23,
       23,   23,   17,   18,   65,   66,   16,   16,   16,   68,
       68,   70,   70,   67,   67,   69,   69,   71,   71,   60,
       60,   60,   72,   72,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   75,   75,   74,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   83,   82,
       82,   82,   79,   79,   93,   93,   94,   80,   80,   95,
       85,   85,   96,   96,   96,   96,   86,   87,   87,   97,
       97,   98,   99,   99,  100,  100,   89,   89,  101,  102,
      102,  103,  103,   61,   61,   61,   90,   90,   91,   91,
       92,   92,  104,  104,   84,   84,   81,   81,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,  109,  111,   42,   42,   42,   42,   42,   78,
       78,  106,  106,  106,  112,  112,  113,  113,  113,  108,
      108,  108,  108,  108,  108,  108,  118,  115,    5,    5,
        5,   77,   77,  107,  107,  107,  107,  107,   22,   22,
       22,   76,   76,   76,   76,   76,   76,   76,   76,   76,
       76,   76,   76,   76,   76,   76,   76,   76,   76,   76,
       76,   76,   76,   76,   76,   76,   76,   76,   76,   76,
       76,   76,   76,   76,   76,   76,   76,   76,   76,   76,
       76,   76,   76,   76,   76,   76,   76,   76,   76,   76,
       76,   76,   76,   76,   76,   76,   76,   76,   76,   76,
      117,  117,  117,  117,  117,  117,  117,  117,  117,  117,
      117,  117,  117,   88,  114,  114,  114,   29,   29,   29,
       29,   29,   29,  116,  116,  116,  116,  119,  120,  120,
      121,  121,  110,  110,  110,  122,  123,  123,  124,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,   32,
       32
  ];

  private static $yylen = [
        1,    0,    1,    1,    1,    4,    1,    1,    2,    1,
        1,    3,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    2,    1,    1,    1,    3,    5,    4,    0,
        1,    3,    4,    4,    4,    4,    1,    4,    1,    3,
        4,    3,    5,    7,    6,    1,    3,    1,    3,    4,
        1,    0,    1,    1,    2,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    5,    0,    2,    1,    3,
        1,    3,    3,    1,    3,    1,    3,    3,    1,    3,
        1,    3,    3,    3,    1,    3,    1,    1,    8,    6,
        0,    2,    0,    2,    1,    3,    1,    0,    2,    2,
        1,    3,    1,    0,    1,    1,    2,    1,    1,    1,
        1,    1,    4,    4,    4,    4,    4,    6,    4,    6,
        4,    3,    5,    5,    1,    2,    3,    6,    5,    3,
        6,    4,    1,    2,    1,    1,    1,    1,    1,    1,
        3,    2,    4,    3,    3,    2,    5,    5,    4,    4,
        3,    4,    3,    1,    3,    1,    2,    1,    2,    2,
        3,    3,    1,    3,    1,    2,    3,    2,    3,    4,
        2,    3,    4,    3,    4,    5,    3,    5,    3,    2,
        3,    3,    4,    0,    1,    1,    1,    5,    5,    7,
        7,    7,    6,    7,    5,    2,    2,    3,    3,    4,
        5,    3,    2,    3,    2,    3,    2,    3,    3,    3,
        3,    3,    5,    5,    3,    2,    1,    2,    1,    1,
        2,    2,    0,    1,    1,    2,    3,    0,    1,    2,
        1,    2,    2,    5,    7,    5,    2,    0,    1,    1,
        2,    3,    1,    3,    1,    3,    1,    2,    2,    1,
        2,    3,    2,    2,    3,    3,    2,    1,    2,    1,
        2,    1,    1,    3,    1,    3,    1,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    2,    2,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    2,    5,    4,    4,    5,    4,    2,
        2,    4,    2,    2,    2,    2,    2,    2,    2,    3,
        2,    3,    2,    1,    1,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    2,    2,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        2,    5,    4,    4,    5,    4,    2,    2,    4,    2,
        2,    2,    2,    2,    2,    2,    3,    2,    3,    2,
        1,    1,    1,    1,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    2,
        2,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    2,    5,
        4,    4,    5,    4,    2,    2,    4,    2,    2,    2,
        2,    2,    2,    2,    3,    2,    3,    2,    1,    1,
        1,    1,    4,    4,    2,    5,    4,    4,    1,    3,
        3,    2,    3,    3,    1,    3,    1,    3,    2,    1,
        1,    1,    1,    1,    1,    1,    0,    3,    1,    2,
        3,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    2,    9,    3,    3,    2,    1,    3,
        2,    1,    2,    3,    3,    2,    1,    3,    3,    1,
        1,    3,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    0,
        1
  ];
  
  private static $yyproduction = [
    "start : start",
    "start : /* empty */",
    "start : unit",
    "unit : module",
    "unit : program",
    "module : T_MODULE name ';' program",
    "program : toplvl",
    "toplvl : topex",
    "toplvl : toplvl topex",
    "topex : module_nst",
    "topex : use_decl",
    "topex : '@' error T_NL",
    "topex : attr_decl",
    "topex : enum_decl",
    "topex : class_decl",
    "topex : trait_decl",
    "topex : iface_decl",
    "topex : topex_attr",
    "topex : fn_decl",
    "topex : let_decl",
    "topex : var_decl",
    "topex : require",
    "topex : error T_SYNC",
    "topex : T_END",
    "topex : label_decl",
    "topex : stmt",
    "label_decl : ident ':' comp",
    "module_nst : T_MODULE name '{' module_body '}'",
    "module_nst : T_MODULE '{' module_body '}'",
    "module_body : /* empty */",
    "module_body : toplvl",
    "require : T_REQUIRE rxpr ';'",
    "require : T_REQUIRE T_PHP rxpr ';'",
    "attr_decl : '@' attr_def ';' T_NL",
    "comp_attr : '@' attr_def T_NL comp",
    "topex_attr : '@' attr_def T_NL topex",
    "attr_def : ident",
    "attr_def : ident '(' attr_val ')'",
    "attr_val : ident",
    "attr_val : ident '=' lit",
    "attr_val : ident '(' attr_val ')'",
    "use_decl : T_USE use_name ';'",
    "use_decl : T_USE use_name T_AS ident ';'",
    "use_decl : T_USE use_name '{' use_items comma_opt '}' ';'",
    "use_decl : T_USE '{' use_items comma_opt '}' ';'",
    "use_items : use_item",
    "use_items : use_items ',' use_item",
    "use_item : use_name",
    "use_item : use_name T_AS ident",
    "use_item : use_name '{' use_items '}'",
    "use_name : name",
    "mods_opt : /* empty */",
    "mods_opt : mods",
    "mods : mod",
    "mods : mods mod",
    "mod : T_CONST",
    "mod : T_FINAL",
    "mod : T_GLOBAL",
    "mod : T_STATIC",
    "mod : T_PUBLIC",
    "mod : T_PRIVATE",
    "mod : T_PROTECTED",
    "mod : T_SEALED",
    "mod : T_INLINE",
    "mod : T_EXTERN",
    "enum_decl : mods_opt T_ENUM '{' enum_vars '}'",
    "enum_vars : /* empty */",
    "enum_vars : vars_noref comma_opt",
    "vars : var",
    "vars : vars ',' var",
    "var : destr_item",
    "var : destr_item '=' rxpr",
    "var : destr_item T_AREF nxpr",
    "vars_noin : var_noin",
    "vars_noin : vars_noin ',' var_noin",
    "var_noin : destr_item",
    "var_noin : destr_item '=' rxpr_noin",
    "var_noin : destr_item T_AREF nxpr",
    "vars_noref : var_noref",
    "vars_noref : vars_noref ',' var_noref",
    "var_noref : destr_item",
    "var_noref : destr_item '=' rxpr",
    "destr : '[' destr_items ']'",
    "destr : '{' destr_items '}'",
    "destr_items : destr_item",
    "destr_items : destr_items ',' destr_item",
    "destr_item : ident",
    "destr_item : destr",
    "class_decl : mods_opt T_CLASS ident ext_opt impl_opt '{' members_opt '}'",
    "class_decl : mods_opt T_CLASS ident ext_opt impl_opt ';'",
    "ext_opt : /* empty */",
    "ext_opt : '<' ext",
    "exts_opt : /* empty */",
    "exts_opt : '<' exts",
    "exts : ext",
    "exts : exts ',' ext",
    "ext : name",
    "impl_opt : /* empty */",
    "impl_opt : '~' impls",
    "impl_opt : '~' error",
    "impls : impl",
    "impls : impls ',' impl",
    "impl : name",
    "members_opt : /* empty */",
    "members_opt : members",
    "members : member",
    "members : members member",
    "member : fn_decl",
    "member : let_decl",
    "member : var_decl",
    "member : enum_decl",
    "member : trait_usage",
    "member : mods_opt T_NEW pparams ';'",
    "member : mods_opt T_NEW pparams block",
    "member : mods_opt T_DEL pparams ';'",
    "member : mods_opt T_DEL pparams block",
    "member : T_GET ident pparams block",
    "member : T_GET ident pparams T_ARR rxpr ';'",
    "member : T_SET ident pparams block",
    "member : T_SET ident pparams T_ARR rxpr ';'",
    "member : mods '{' members_opt '}'",
    "trait_usage : T_USE name ';'",
    "trait_usage : T_USE name T_AS ident ';'",
    "trait_usage : T_USE name '{' trait_usage_items '}'",
    "trait_usage_items : trait_usage_item",
    "trait_usage_items : trait_usage_items trait_usage_item",
    "trait_usage_item : mods_opt ident ';'",
    "trait_usage_item : mods_opt ident T_AS mods_opt ident ';'",
    "trait_decl : T_TRAIT ident '{' members_opt '}'",
    "trait_decl : T_TRAIT ident ';'",
    "iface_decl : T_IFACE ident exts_opt '{' members_opt '}'",
    "iface_decl : T_IFACE ident exts_opt ';'",
    "inner : comp",
    "inner : inner comp",
    "comp : fn_decl",
    "comp : let_decl",
    "comp : var_decl",
    "comp : label_decl",
    "comp : comp_attr",
    "comp : stmt",
    "comp : '@' error T_NL",
    "comp : error T_SYNC",
    "let_decl : mods_opt T_LET vars ';'",
    "var_decl : mods vars ';'",
    "let_decl_noin_nosemi : mods_opt T_LET vars_noin",
    "var_decl_noin_nosemi : mods vars_noin",
    "fn_decl : mods_opt T_FN ident pparams fn_decl_body",
    "fn_decl : mods_opt T_FN ident pparams ';'",
    "fn_decl : mods_opt T_FN ident ';'",
    "fn_expr : T_FN ident pparams fn_expr_body",
    "fn_expr : T_FN pparams fn_expr_body",
    "fn_expr_noin : T_FN ident pparams fn_expr_body_noin",
    "fn_expr_noin : T_FN pparams fn_expr_body_noin",
    "fn_decl_body : block",
    "fn_decl_body : T_ARR rxpr ';'",
    "fn_expr_body : block",
    "fn_expr_body : T_ARR rxpr",
    "fn_expr_body_noin : block",
    "fn_expr_body_noin : T_ARR rxpr_noin",
    "pparams : '(' ')'",
    "pparams : '(' error ')'",
    "pparams : '(' params ')'",
    "params : param",
    "params : params ',' param",
    "param : ident",
    "param : ident '?'",
    "param : ident '=' rxpr",
    "param : hint ident",
    "param : hint ident '?'",
    "param : hint ident '=' rxpr",
    "param : mods ident",
    "param : mods ident '?'",
    "param : mods ident '=' rxpr",
    "param : mods hint ident",
    "param : mods hint ident '?'",
    "param : mods hint ident '=' rxpr",
    "param : hint_opt T_THIS dot_ident",
    "param : hint_opt T_THIS dot_ident '=' rxpr",
    "param : hint_opt T_REST ident",
    "param : '&' ident",
    "param : hint '&' ident",
    "param : mods '&' ident",
    "param : mods hint '&' ident",
    "hint_opt : /* empty */",
    "hint_opt : hint",
    "hint : type_name",
    "stmt : block",
    "stmt : T_DO stmt T_WHILE pxpr ';'",
    "stmt : T_IF pxpr stmt elsifs_opt else_opt",
    "stmt : T_FOR '(' let_decl_noin_nosemi T_IN rxpr ')' stmt",
    "stmt : T_FOR '(' var_decl_noin_nosemi T_IN rxpr ')' stmt",
    "stmt : T_FOR '(' rseq_noin T_IN rxpr ')' stmt",
    "stmt : T_FOR '(' for_expr_noin for_expr ')' stmt",
    "stmt : T_FOR '(' for_expr_noin for_expr rseq ')' stmt",
    "stmt : T_FOR '(' error ')' stmt",
    "stmt : T_FOR block",
    "stmt : T_TRY block",
    "stmt : T_TRY block catches",
    "stmt : T_TRY block finally",
    "stmt : T_TRY block catches finally",
    "stmt : T_PHP '{' php_usage_opt str '}'",
    "stmt : T_GOTO ident ';'",
    "stmt : T_TEST block",
    "stmt : T_TEST str block",
    "stmt : T_BREAK ';'",
    "stmt : T_BREAK ident ';'",
    "stmt : T_CONTINUE ';'",
    "stmt : T_CONTINUE ident ';'",
    "stmt : T_PRINT rseq ';'",
    "stmt : T_THROW rxpr ';'",
    "stmt : T_WHILE pxpr stmt",
    "stmt : T_ASSERT rxpr ';'",
    "stmt : T_ASSERT rxpr ':' str ';'",
    "stmt : T_SWITCH pxpr '{' cases '}'",
    "stmt : T_RETURN rxpr ';'",
    "stmt : T_RETURN ';'",
    "stmt : lxpr_stmt",
    "stmt : error ';'",
    "for_expr : rxpr_stmt",
    "for_expr_noin : rxpr_stmt_noin",
    "for_expr_noin : let_decl_noin_nosemi ';'",
    "for_expr_noin : var_decl_noin_nosemi ';'",
    "elsifs_opt : /* empty */",
    "elsifs_opt : elsifs",
    "elsifs : elsif",
    "elsifs : elsifs elsif",
    "elsif : T_ELSIF pxpr stmt",
    "else_opt : /* empty */",
    "else_opt : else",
    "else : T_ELSE stmt",
    "catches : catch",
    "catches : catches catch",
    "catch : T_CATCH block",
    "catch : T_CATCH '(' name ')' block",
    "catch : T_CATCH '(' name ':' ident ')' block",
    "catch : T_CATCH '(' error ')' block",
    "finally : T_FINALLY block",
    "php_usage_opt : /* empty */",
    "php_usage_opt : php_usage",
    "php_usage : php_use",
    "php_usage : php_usage php_use",
    "php_use : T_USE php_use_items ';'",
    "php_use_items : php_use_item",
    "php_use_items : php_use_items ',' php_use_item",
    "php_use_item : ident",
    "php_use_item : ident T_AS ident",
    "cases : case",
    "cases : cases case",
    "case : casels inner",
    "casels : casel",
    "casels : casels casel",
    "casel : T_CASE rxpr ':'",
    "casel : T_DEFAULT ':'",
    "block : '{' '}'",
    "block : '{' inner '}'",
    "block : '{' error '}'",
    "lxpr_stmt : lseq ';'",
    "lxpr_stmt : ';'",
    "rxpr_stmt : rseq ';'",
    "rxpr_stmt : ';'",
    "rxpr_stmt_noin : rseq_noin ';'",
    "rxpr_stmt_noin : ';'",
    "lseq : lxpr",
    "lseq : lseq ',' rxpr",
    "rseq : rxpr",
    "rseq : rseq ',' rxpr",
    "rseq_noin : rxpr_noin",
    "rseq_noin : rseq_noin ',' rxpr_noin",
    "lxpr : lxpr '+' rxpr",
    "lxpr : lxpr '-' rxpr",
    "lxpr : lxpr '*' rxpr",
    "lxpr : lxpr '/' rxpr",
    "lxpr : lxpr '%' rxpr",
    "lxpr : lxpr T_POW rxpr",
    "lxpr : lxpr '~' rxpr",
    "lxpr : lxpr '&' rxpr",
    "lxpr : lxpr '|' rxpr",
    "lxpr : lxpr '^' rxpr",
    "lxpr : lxpr '<' rxpr",
    "lxpr : lxpr '>' rxpr",
    "lxpr : lxpr T_GTE rxpr",
    "lxpr : lxpr T_LTE rxpr",
    "lxpr : lxpr T_BOOL_AND rxpr",
    "lxpr : lxpr T_BOOL_OR rxpr",
    "lxpr : lxpr T_BOOL_XOR rxpr",
    "lxpr : lxpr T_RANGE rxpr",
    "lxpr : lxpr T_SL rxpr",
    "lxpr : lxpr T_SR rxpr",
    "lxpr : lxpr T_EQ rxpr",
    "lxpr : lxpr T_NEQ rxpr",
    "lxpr : lxpr T_IN rxpr",
    "lxpr : lxpr T_IS type_name",
    "lxpr : lxpr T_ISNT type_name",
    "lxpr : lxpr T_AS type_name",
    "lxpr : lxpr T_INC",
    "lxpr : lxpr T_DEC",
    "lxpr : lxpr '=' rxpr",
    "lxpr : lxpr T_AREF nxpr",
    "lxpr : lxpr T_APLUS rxpr",
    "lxpr : lxpr T_AMINUS rxpr",
    "lxpr : lxpr T_AMUL rxpr",
    "lxpr : lxpr T_ADIV rxpr",
    "lxpr : lxpr T_AMOD rxpr",
    "lxpr : lxpr T_APOW rxpr",
    "lxpr : lxpr T_ACONCAT rxpr",
    "lxpr : lxpr T_ABIT_OR rxpr",
    "lxpr : lxpr T_ABIT_AND rxpr",
    "lxpr : lxpr T_ABIT_XOR rxpr",
    "lxpr : lxpr T_ABOOL_OR rxpr",
    "lxpr : lxpr T_ABOOL_AND rxpr",
    "lxpr : lxpr T_ABOOL_XOR rxpr",
    "lxpr : lxpr T_ASHIFT_L rxpr",
    "lxpr : lxpr T_ASHIFT_R rxpr",
    "lxpr : lxpr dot_ident",
    "lxpr : lxpr '.' '{' rxpr '}'",
    "lxpr : lxpr '[' rxpr ']'",
    "lxpr : lxpr '[' error ']'",
    "lxpr : lxpr '?' rxpr ':' rxpr",
    "lxpr : lxpr '?' ':' rxpr",
    "lxpr : lxpr pargs",
    "lxpr : T_YIELD rxpr",
    "lxpr : T_YIELD rxpr ':' rxpr",
    "lxpr : '-' rxpr",
    "lxpr : '+' rxpr",
    "lxpr : '~' rxpr",
    "lxpr : '!' rxpr",
    "lxpr : T_INC rxpr",
    "lxpr : T_DEC rxpr",
    "lxpr : T_NEW type_id",
    "lxpr : T_NEW type_id pargs",
    "lxpr : T_NEW nxpr",
    "lxpr : T_NEW nxpr pargs",
    "lxpr : T_DEL ident",
    "lxpr : atom",
    "lxpr : legacy_cast",
    "rxpr : rxpr '+' rxpr",
    "rxpr : rxpr '-' rxpr",
    "rxpr : rxpr '*' rxpr",
    "rxpr : rxpr '/' rxpr",
    "rxpr : rxpr '%' rxpr",
    "rxpr : rxpr T_POW rxpr",
    "rxpr : rxpr '~' rxpr",
    "rxpr : rxpr '&' rxpr",
    "rxpr : rxpr '|' rxpr",
    "rxpr : rxpr '^' rxpr",
    "rxpr : rxpr '>' rxpr",
    "rxpr : rxpr '<' rxpr",
    "rxpr : rxpr T_GTE rxpr",
    "rxpr : rxpr T_LTE rxpr",
    "rxpr : rxpr T_BOOL_AND rxpr",
    "rxpr : rxpr T_BOOL_OR rxpr",
    "rxpr : rxpr T_BOOL_XOR rxpr",
    "rxpr : rxpr T_RANGE rxpr",
    "rxpr : rxpr T_SL rxpr",
    "rxpr : rxpr T_SR rxpr",
    "rxpr : rxpr T_EQ rxpr",
    "rxpr : rxpr T_NEQ rxpr",
    "rxpr : rxpr T_IN rxpr",
    "rxpr : rxpr T_IS type_name",
    "rxpr : rxpr T_ISNT type_name",
    "rxpr : rxpr T_AS type_name",
    "rxpr : rxpr T_INC",
    "rxpr : rxpr T_DEC",
    "rxpr : rxpr '=' rxpr",
    "rxpr : rxpr T_AREF nxpr",
    "rxpr : rxpr T_APLUS rxpr",
    "rxpr : rxpr T_AMINUS rxpr",
    "rxpr : rxpr T_AMUL rxpr",
    "rxpr : rxpr T_ADIV rxpr",
    "rxpr : rxpr T_AMOD rxpr",
    "rxpr : rxpr T_APOW rxpr",
    "rxpr : rxpr T_ACONCAT rxpr",
    "rxpr : rxpr T_ABIT_OR rxpr",
    "rxpr : rxpr T_ABIT_AND rxpr",
    "rxpr : rxpr T_ABIT_XOR rxpr",
    "rxpr : rxpr T_ABOOL_OR rxpr",
    "rxpr : rxpr T_ABOOL_AND rxpr",
    "rxpr : rxpr T_ABOOL_XOR rxpr",
    "rxpr : rxpr T_ASHIFT_L rxpr",
    "rxpr : rxpr T_ASHIFT_R rxpr",
    "rxpr : rxpr dot_ident",
    "rxpr : rxpr '.' '{' rxpr '}'",
    "rxpr : rxpr '[' rxpr ']'",
    "rxpr : rxpr '[' error ']'",
    "rxpr : rxpr '?' rxpr ':' rxpr",
    "rxpr : rxpr '?' ':' rxpr",
    "rxpr : rxpr pargs",
    "rxpr : T_YIELD rxpr",
    "rxpr : T_YIELD rxpr ':' rxpr",
    "rxpr : '-' rxpr",
    "rxpr : '+' rxpr",
    "rxpr : '~' rxpr",
    "rxpr : '!' rxpr",
    "rxpr : T_INC rxpr",
    "rxpr : T_DEC rxpr",
    "rxpr : T_NEW type_id",
    "rxpr : T_NEW type_id pargs",
    "rxpr : T_NEW nxpr",
    "rxpr : T_NEW nxpr pargs",
    "rxpr : T_DEL ident",
    "rxpr : atom",
    "rxpr : obj",
    "rxpr : fn_expr",
    "rxpr : legacy_cast",
    "rxpr_noin : rxpr_noin '+' rxpr_noin",
    "rxpr_noin : rxpr_noin '-' rxpr_noin",
    "rxpr_noin : rxpr_noin '*' rxpr_noin",
    "rxpr_noin : rxpr_noin '/' rxpr_noin",
    "rxpr_noin : rxpr_noin '%' rxpr_noin",
    "rxpr_noin : rxpr_noin T_POW rxpr_noin",
    "rxpr_noin : rxpr_noin '~' rxpr_noin",
    "rxpr_noin : rxpr_noin '&' rxpr_noin",
    "rxpr_noin : rxpr_noin '|' rxpr_noin",
    "rxpr_noin : rxpr_noin '^' rxpr_noin",
    "rxpr_noin : rxpr_noin '>' rxpr_noin",
    "rxpr_noin : rxpr_noin '<' rxpr_noin",
    "rxpr_noin : rxpr_noin T_GTE rxpr_noin",
    "rxpr_noin : rxpr_noin T_LTE rxpr_noin",
    "rxpr_noin : rxpr_noin T_BOOL_AND rxpr_noin",
    "rxpr_noin : rxpr_noin T_BOOL_OR rxpr_noin",
    "rxpr_noin : rxpr_noin T_BOOL_XOR rxpr_noin",
    "rxpr_noin : rxpr_noin T_RANGE rxpr_noin",
    "rxpr_noin : rxpr_noin T_SL rxpr_noin",
    "rxpr_noin : rxpr_noin T_SR rxpr_noin",
    "rxpr_noin : rxpr_noin T_EQ rxpr_noin",
    "rxpr_noin : rxpr_noin T_NEQ rxpr_noin",
    "rxpr_noin : rxpr_noin T_IS type_name",
    "rxpr_noin : rxpr_noin T_ISNT type_name",
    "rxpr_noin : rxpr_noin T_AS type_name",
    "rxpr_noin : rxpr_noin T_INC",
    "rxpr_noin : rxpr_noin T_DEC",
    "rxpr_noin : rxpr_noin '=' rxpr_noin",
    "rxpr_noin : rxpr_noin T_AREF nxpr",
    "rxpr_noin : rxpr_noin T_APLUS rxpr_noin",
    "rxpr_noin : rxpr_noin T_AMINUS rxpr_noin",
    "rxpr_noin : rxpr_noin T_AMUL rxpr_noin",
    "rxpr_noin : rxpr_noin T_ADIV rxpr_noin",
    "rxpr_noin : rxpr_noin T_AMOD rxpr_noin",
    "rxpr_noin : rxpr_noin T_APOW rxpr_noin",
    "rxpr_noin : rxpr_noin T_ACONCAT rxpr_noin",
    "rxpr_noin : rxpr_noin T_ABIT_OR rxpr_noin",
    "rxpr_noin : rxpr_noin T_ABIT_AND rxpr_noin",
    "rxpr_noin : rxpr_noin T_ABIT_XOR rxpr_noin",
    "rxpr_noin : rxpr_noin T_ABOOL_OR rxpr_noin",
    "rxpr_noin : rxpr_noin T_ABOOL_AND rxpr_noin",
    "rxpr_noin : rxpr_noin T_ABOOL_XOR rxpr_noin",
    "rxpr_noin : rxpr_noin T_ASHIFT_L rxpr_noin",
    "rxpr_noin : rxpr_noin T_ASHIFT_R rxpr_noin",
    "rxpr_noin : rxpr_noin dot_ident",
    "rxpr_noin : rxpr_noin '.' '{' rxpr '}'",
    "rxpr_noin : rxpr_noin '[' rxpr ']'",
    "rxpr_noin : rxpr_noin '[' error ']'",
    "rxpr_noin : rxpr_noin '?' rxpr ':' rxpr_noin",
    "rxpr_noin : rxpr_noin '?' ':' rxpr_noin",
    "rxpr_noin : rxpr_noin pargs",
    "rxpr_noin : T_YIELD rxpr",
    "rxpr_noin : T_YIELD rxpr ':' rxpr",
    "rxpr_noin : '-' rxpr_noin",
    "rxpr_noin : '+' rxpr_noin",
    "rxpr_noin : '~' rxpr_noin",
    "rxpr_noin : '!' rxpr_noin",
    "rxpr_noin : T_INC rxpr_noin",
    "rxpr_noin : T_DEC rxpr_noin",
    "rxpr_noin : T_NEW type_id",
    "rxpr_noin : T_NEW type_id pargs",
    "rxpr_noin : T_NEW nxpr",
    "rxpr_noin : T_NEW nxpr pargs",
    "rxpr_noin : T_DEL ident",
    "rxpr_noin : atom",
    "rxpr_noin : obj",
    "rxpr_noin : fn_expr_noin",
    "rxpr_noin : legacy_cast_noin",
    "legacy_cast : '(' type_id ')' rxpr",
    "legacy_cast_noin : '(' type_id ')' rxpr_noin",
    "nxpr : nxpr dot_ident",
    "nxpr : nxpr '.' '{' rxpr '}'",
    "nxpr : nxpr '[' rxpr ']'",
    "nxpr : nxpr '[' error ']'",
    "nxpr : atom",
    "pxpr : '(' rxpr ')'",
    "pxpr : '(' error ')'",
    "pargs : '(' ')'",
    "pargs : '(' error ')'",
    "pargs : '(' args ')'",
    "args : arg",
    "args : args ',' arg",
    "arg : rxpr",
    "arg : ident ':' rxpr",
    "arg : T_REST rxpr",
    "atom : num",
    "atom : reg",
    "atom : arr",
    "atom : name",
    "atom : kwc",
    "atom : str",
    "atom : pxpr",
    "@1 : /* empty */",
    "reg : '/' @1 T_REGEXP",
    "name : ident",
    "name : T_DDDOT ident",
    "name : name T_DDDOT ident",
    "type_name : name",
    "type_name : type_id",
    "type_id : T_TINT",
    "type_id : T_TBOOL",
    "type_id : T_TFLOAT",
    "type_id : T_TSTRING",
    "type_id : T_TREGEXP",
    "ident : T_IDENT",
    "ident : T_GET",
    "ident : T_SET",
    "dot_ident : '.' ident",
    "dot_ident : '.' T_FN",
    "dot_ident : '.' T_LET",
    "dot_ident : '.' T_PHP",
    "dot_ident : '.' T_TEST",
    "dot_ident : '.' T_ASSERT",
    "dot_ident : '.' T_TRUE",
    "dot_ident : '.' T_FALSE",
    "dot_ident : '.' T_NULL",
    "dot_ident : '.' T_IF",
    "dot_ident : '.' T_ELSIF",
    "dot_ident : '.' T_ELSE",
    "dot_ident : '.' T_TRY",
    "dot_ident : '.' T_THROW",
    "dot_ident : '.' T_CATCH",
    "dot_ident : '.' T_FINALLY",
    "dot_ident : '.' T_USE",
    "dot_ident : '.' T_MODULE",
    "dot_ident : '.' T_EXTERN",
    "dot_ident : '.' T_CLASS",
    "dot_ident : '.' T_TRAIT",
    "dot_ident : '.' T_IFACE",
    "dot_ident : '.' T_THIS",
    "dot_ident : '.' T_STATIC",
    "dot_ident : '.' T_CONST",
    "dot_ident : '.' T_FINAL",
    "dot_ident : '.' T_PUBLIC",
    "dot_ident : '.' T_PRIVATE",
    "dot_ident : '.' T_PROTECTED",
    "dot_ident : '.' T_ENUM",
    "dot_ident : '.' T_SWITCH",
    "dot_ident : '.' T_CASE",
    "dot_ident : '.' T_DEFAULT",
    "dot_ident : '.' T_FOR",
    "dot_ident : '.' T_WHILE",
    "dot_ident : '.' T_DO",
    "dot_ident : '.' T_BREAK",
    "dot_ident : '.' T_CONTINUE",
    "dot_ident : '.' T_RETURN",
    "dot_ident : '.' T_SUPER",
    "dot_ident : '.' T_GOTO",
    "dot_ident : '.' T_REQUIRE",
    "dot_ident : '.' T_YIELD",
    "dot_ident : '.' T_GLOBAL",
    "dot_ident : '.' T_TINT",
    "dot_ident : '.' T_TBOOL",
    "dot_ident : '.' T_TFLOAT",
    "dot_ident : '.' T_TSTRING",
    "dot_ident : '.' T_TREGEXP",
    "dot_ident : '.' T_SEALED",
    "dot_ident : '.' T_INLINE",
    "dot_ident : '.' T_CDIR",
    "dot_ident : '.' T_CFILE",
    "dot_ident : '.' T_CLINE",
    "dot_ident : '.' T_CCOLN",
    "dot_ident : '.' T_CFN",
    "dot_ident : '.' T_CCLASS",
    "dot_ident : '.' T_CMETHOD",
    "dot_ident : '.' T_CMODULE",
    "kwc : T_THIS",
    "kwc : T_SUPER",
    "kwc : T_NULL",
    "kwc : T_TRUE",
    "kwc : T_FALSE",
    "kwc : T_CDIR",
    "kwc : T_CFILE",
    "kwc : T_CLINE",
    "kwc : T_CCOLN",
    "kwc : T_CFN",
    "kwc : T_CCLASS",
    "kwc : T_CMETHOD",
    "kwc : T_CMODULE",
    "str : T_STRING",
    "num : T_LNUM",
    "num : T_DNUM",
    "num : T_SNUM",
    "lit : str",
    "lit : num",
    "lit : reg",
    "lit : arr",
    "lit : obj",
    "lit : kwc",
    "arr : '[' ']'",
    "arr : '[' rxpr T_FOR '(' rxpr_noin T_IN rxpr ')' ']'",
    "arr : '[' arr_vals ']'",
    "arr : '[' error ']'",
    "arr_vals : arr_vals_cs comma_opt",
    "arr_vals_cs : arr_val",
    "arr_vals_cs : arr_vals_cs ',' arr_val",
    "arr_val : T_REST rxpr",
    "arr_val : rxpr",
    "obj : '{' '}'",
    "obj : '{' obj_pairs '}'",
    "obj : '{' error '}'",
    "obj_pairs : obj_pairs_cs comma_opt",
    "obj_pairs_cs : obj_pair",
    "obj_pairs_cs : obj_pairs_cs ',' obj_pair",
    "obj_pair : obj_key ':' rxpr",
    "obj_key : ident",
    "obj_key : str",
    "obj_key : '{' rxpr '}'",
    "obj_key : T_FN",
    "obj_key : T_LET",
    "obj_key : T_PHP",
    "obj_key : T_TEST",
    "obj_key : T_ASSERT",
    "obj_key : T_TRUE",
    "obj_key : T_FALSE",
    "obj_key : T_NULL",
    "obj_key : T_IF",
    "obj_key : T_ELSIF",
    "obj_key : T_ELSE",
    "obj_key : T_TRY",
    "obj_key : T_THROW",
    "obj_key : T_CATCH",
    "obj_key : T_FINALLY",
    "obj_key : T_USE",
    "obj_key : T_MODULE",
    "obj_key : T_EXTERN",
    "obj_key : T_CLASS",
    "obj_key : T_TRAIT",
    "obj_key : T_IFACE",
    "obj_key : T_THIS",
    "obj_key : T_STATIC",
    "obj_key : T_CONST",
    "obj_key : T_FINAL",
    "obj_key : T_PUBLIC",
    "obj_key : T_PRIVATE",
    "obj_key : T_PROTECTED",
    "obj_key : T_ENUM",
    "obj_key : T_SWITCH",
    "obj_key : T_CASE",
    "obj_key : T_FOR",
    "obj_key : T_WHILE",
    "obj_key : T_DO",
    "obj_key : T_BREAK",
    "obj_key : T_CONTINUE",
    "obj_key : T_RETURN",
    "obj_key : T_SUPER",
    "obj_key : T_GOTO",
    "obj_key : T_REQUIRE",
    "obj_key : T_YIELD",
    "obj_key : T_GLOBAL",
    "obj_key : T_TINT",
    "obj_key : T_TBOOL",
    "obj_key : T_TFLOAT",
    "obj_key : T_TSTRING",
    "obj_key : T_TREGEXP",
    "obj_key : T_SEALED",
    "obj_key : T_INLINE",
    "obj_key : T_CDIR",
    "obj_key : T_CFILE",
    "obj_key : T_CLINE",
    "obj_key : T_CCOLN",
    "obj_key : T_CFN",
    "obj_key : T_CCLASS",
    "obj_key : T_CMETHOD",
    "obj_key : T_CMODULE",
    "comma_opt : /* empty */",
    "comma_opt : ','"
  ];
    
  private $yyval;
  private $yyastk;
  private $yysstk;
  private $yysp;
  private $yystate;
  private $yyloc; // current location
  
  private $lex;
  private $invalid = false;
  
  // current directory and filename
  private $cdir, $cfile;
  
  /**
   * returns the current location (last scanned token)
   * 
   * @return Location
   */
  public function loc()
  {
    if (!$this->yyloc)
      return new Location('<unknown>', new Position(0, 0));
    
    return $this->yyloc;
  }
  
  /**
   * consumes semicolons to avoid unnecessary empty-expressions 
   * 
   * @void
   */
  private function eat_semis()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_SEMI) {
      $num = 0;
      do {
        ++$num;
        $this->lex->skip();
        $peek = $this->lex->peek();
      } while ($peek->type === T_SEMI);

      Logger::debug('%% Consumed %d semicolon(s)', $n);
    }
  }
  
  /**
   * consumes a T_END token
   * 
   * @void
   */
  private function eat_end()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_END) {
      $this->lex->skip();
      Logger::debug('%% Consumed T_END');
    }
  }
  
  /**
   * parse function
   * 
   * @param  Lexer  $lex
   * @return Node
   */
  public function parse(Lexer $lex) 
  {
    $tokid = self::TOKEN_NONE;
    
    // lexer
    $this->lex = $lex;
    
    $file = $this->lex->get_info()['file'];
    $this->cdir = dirname($file);
    $this->cfile = $file;
    
    Logger::debug('%% Parse %s', $file);
    
    // stacks
    $this->yysstk = [ 0 ]; 
    $this->yyastk = [];
    
    // current state
    $yystate = 0;
    
    // error flag
    $yyerrflag = 0;

    // stack position
    $this->yysp = 0;
    
    // location stack
    $yylstk = [];
    
    // ignore semicolons at the beginning
    $this->eat_semis();
    
    for (;;) {
      Logger::debug('%% State %d, Lookahead \\', $yystate);
      
      if ($tokid === self::TOKEN_NONE)
        Logger::debug('--none--');
      else
        Logger::debug(self::$terminals[$tokid]);
      if (self::$yybase[$yystate] == 0)
        $yyn = self::$yydefault[$yystate];
      else {
        if ($tokid === self::TOKEN_NONE) {
          // Fetch the next token id from the lexer
          $token = $this->lex->next();
                    
          // invalid token (regexp-scan failed)
          if ($token->type === T_INVL) {
            Logger::error_at($token->loc, 'invalid source/regexp-literal');
            return null;
          }
          
          // map the lexer token id to the internally used token id's
          if ($token->type >= 0 && $token->type < self::TOKEN_MAP_SIZE)
            $tokid = self::$translate[$token->type];
          else {
            Logger::error_at($token->loc, 'invalid token %d -> %s', $token->type, $token->value);
            return null;
          }        
          
          $this->yyloc = $token->loc;
          
          // store location
          $yylstk[$this->yysp] = $this->yyloc;
          
          Logger::debug('%% Reading %s', self::$terminals[$tokid]);
        } 

        if ((($yyn = self::$yybase[$yystate] + $tokid) >= 0
          && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid
          || ($yystate < self::YY2TBLSTATE
            && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + $tokid) >= 0
            && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid))
          && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT
        ) {
          /*
           * >= YYNLSTATE: shift and reduce
           * > 0: shift
           * = 0: accept
           * < 0: reduce
           * = -YYUNEXPECTED: error
           */
          if ($yyn > 0) {
            /* shift */
            Logger::debug('%% Shift %s', self::$terminals[$tokid]);
            
            $this->yysp++;
            
            $this->yysstk[$this->yysp] = $yystate = $yyn;
            $this->yyastk[$this->yysp] = $token;
            
            // store location
            $yylstk[$this->yysp] = $this->yyloc;
            
            $tokid = self::TOKEN_NONE;
            
            if ($yyerrflag > 0)
              $yyerrflag--;
            
            if ($yyn < self::YYNLSTATES)
              continue;

            /* $yyn >= YYNLSTATES means shift-and-reduce */
            $yyn -= self::YYNLSTATES;
          } else
            $yyn = -$yyn;
        } else
          $yyn = self::$yydefault[$yystate];
      }
      
      for (;;) {
        /* reduce/error */
        if ($yyn == 0) {
          /* accept */
          Logger::debug('%% Accepted.');
          return $this->yyval;
        } elseif ($yyn != self::YYUNEXPECTED) {
          /* reduce */
          Logger::debug('%% Reduce by (%d) %s', $yyn, self::$yyproduction[$yyn]);

          $this->{'yyn' . $yyn}();
          
          /* Goto - shift nonterminal */
          $yylen = self::$yylen[$yyn];
          $yyloc = $yylstk[$this->yysp - $yylen];
          
          $this->yysp -= $yylen;
          
          $yyn = self::$yylhs[$yyn];
          
          if (($yyp = self::$yygbase[$yyn] + $this->yysstk[$this->yysp]) >= 0
            && $yyp < self::YYGLAST && self::$yygcheck[$yyp] == $yyn)
            $yystate = self::$yygoto[$yyp];
          else
            $yystate = self::$yygdefault[$yyn];
          
          $this->yysp++;
          
          $this->yysstk[$this->yysp] = $yystate;
          $this->yyastk[$this->yysp] = $this->yyval;
          
          // set location if a real node was produced by $yyn
          if ($this->yyval instanceof Node)
            $this->yyval->loc = $yyloc;
          
          // store position
          $yylstk[$this->yysp] = $this->yyloc;
          
        } else {
          /* error */
          $this->invalid = true;
                    
          switch ($yyerrflag) {
            case 0:
              // let the lexer know
              $this->lex->sync = true;
              
              $expa = [];
              $expn = 0;
              $base = self::$yybase[$yystate];
              
              for ($i = 0; $i < self::TOKEN_MAP_SIZE; ++$i) {
                $n = $base + $i;
                if ($n >= 0 && $n < self::YYLAST && self::$yycheck[$n] == $i
                  || $yystate < self::YY2TBLSTATE
                  && ($n = self::$yybase[$yystate + self::YYNLSTATES] + $i)
                  && $n < self::YYLAST && ($n < 0 || self::$yycheck[$n] == $i)
                ) {
                  if ($n >= 0 && self::$yyaction[$n] != self::YYUNEXPECTED) {
                    if ($expn === 4) {
                      /* Too many expected tokens */
                      $expa = null;
                      $expn = 0;
                      break;
                    }

                    $expa[] = self::$terminals[$i];
                    $expn++;
                  }
                }
              }

              $exps = 'unexpected ' . self::$terminals[$tokid];
              
              if ($expn > 0) {
                $last = array_pop($expa);
                $exps .= ', expected ';
                
                if ($expn > 1)
                  $exps .= implode(', ', $expa) . ' or ';
                
                $exps .= $last;
                unset ($expa, $last);
              }
              
              Logger::error_at($this->yyloc, $exps);              
            case 1:
            case 2:
              $yyerrflag = 3;  
              
              while (!(($yyn = self::$yybase[$yystate] + self::YYINTERRTOK) >= 0
                && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK
                || ($yystate < self::YY2TBLSTATE
                  && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + self::YYINTERRTOK) >= 0
                  && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK))
              ) {  
                if ($this->yysp <= 0) 
                  return null;
                
                $yystate = $this->yysstk[--$this->yysp];              
                Logger::debug('%% Recovering, uncovers state %d', $yystate);
              }
              
              $yyn = self::$yyaction[$yyn];
              Logger::debug('%% Shift %s', self::$terminals[self::YYINTERRTOK]);
              $this->yysstk[++$this->yysp] = $yystate = $yyn;
              break;
            
            case 3:
              Logger::debug('%% Discard %s', self::$terminals[$tokid]);
              if ($tokid === 0) 
                return null;
              
              $tokid = -1;
              break;
          }
        }

        if ($yystate < self::YYNLSTATES)
          break;
        
        /* >= YYNLSTATES means shift-and-reduce */
        $yyn = $yystate - self::YYNLSTATES;
      }
    }
  }


  private function yyn0() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn1() 
  {
     $this->yyval = null; 
  }


  private function yyn2() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn3() 
  {
     
      $this->yyval = new Unit($this->yyastk[$this->yysp-(1-1)]); 
      $this->eat_end(); 
    
  }


  private function yyn4() 
  {
     
      $this->yyval = new Unit($this->yyastk[$this->yysp-(1-1)]); 
      $this->eat_end(); 
    
  }


  private function yyn5() 
  {
     $this->yyval = new Module($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn6() 
  {
     $this->yyval = new Program($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn7() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn8() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn9() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn10() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn11() 
  {
     $this->yyval = null; 
  }


  private function yyn12() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn13() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn14() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn15() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn16() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn17() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn18() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn19() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn20() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn21() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn22() 
  {
     $this->yyval = null; 
  }


  private function yyn23() 
  {
     $this->yyval = null; 
  }


  private function yyn24() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn25() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn26() 
  {
     $this->yyval = new LabelDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn27() 
  {
     
      $this->yyval = new Module($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn28() 
  {
     
      $this->yyval = new Module(null, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn29() 
  {
     $this->yyval = null; 
  }


  private function yyn30() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn31() 
  {
     
      $this->yyval = new RequireDecl(false, $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn32() 
  {
     
      $this->yyval = new RequireDecl(true, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn33() 
  {
     
      $this->yyval = new AttrDecl($this->yyastk[$this->yysp-(4-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn34() 
  {
     $this->yyval = new CompAttr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn35() 
  {
     $this->yyval = new TopexAttr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn36() 
  {
     $this->yyval = new AttrDef($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn37() 
  {
     $this->yyval = new AttrDef($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn38() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn39() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn40() 
  {
     $this->yyval = new AttrVal($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn41() 
  {
     
      $this->yyval = new UseDecl($this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn42() 
  {
     
      $this->yyval = new UseDecl(new UseAlias($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)])); 
      $this->eat_semis(); 
    
  }


  private function yyn43() 
  {
     
      $this->yyval = new UseDecl(new UseUnpack($this->yyastk[$this->yysp-(7-2)], $this->yyastk[$this->yysp-(7-4)])); 
      $this->eat_semis(); 
    
  }


  private function yyn44() 
  {
    
      $this->yyval = new UseDecl(new UseUnpack(null, $this->yyastk[$this->yysp-(6-3)]));
      $this->eat_semis();
    
  }


  private function yyn45() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn46() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn47() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn48() 
  {
     $this->yyval = new UseAlias($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn49() 
  {
     $this->yyval = new UseUnpack($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn50() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn51() 
  {
     $this->yyval = null; 
  }


  private function yyn52() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn53() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn54() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn55() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn56() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn57() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn58() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn59() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn60() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn61() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn62() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn63() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn64() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn65() 
  {
     
      $this->yyval = new EnumDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn66() 
  {
     $this->yyval = null; 
  }


  private function yyn67() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn68() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn69() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn70() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn71() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn72() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], true); 
  }


  private function yyn73() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn74() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn75() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn76() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn77() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], true); 
  }


  private function yyn78() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn79() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn80() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn81() 
  {
     $this->yyval = new VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn82() 
  {
     $this->yyval = new ArrDestr($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn83() 
  {
     $this->yyval = new ObjDestr($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn84() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn85() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn86() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn87() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn88() 
  {
     
      $this->yyval = new ClassDecl($this->yyastk[$this->yysp-(8-1)], $this->yyastk[$this->yysp-(8-3)], $this->yyastk[$this->yysp-(8-4)], $this->yyastk[$this->yysp-(8-5)], $this->yyastk[$this->yysp-(8-7)]); 
      $this->eat_semis(); 
    
  }


  private function yyn89() 
  {
     
      $this->yyval = new ClassDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-5)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn90() 
  {
     $this->yyval = null; 
  }


  private function yyn91() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn92() 
  {
     $this->yyval = null; 
  }


  private function yyn93() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn94() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn95() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn96() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn97() 
  {
     $this->yyval = null; 
  }


  private function yyn98() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn99() 
  {
     $this->yyval = null; 
  }


  private function yyn100() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn101() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn102() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn103() 
  {
     $this->yyval = []; 
  }


  private function yyn104() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn105() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn106() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn107() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn108() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn109() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn110() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn111() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn112() 
  {
     
      $this->yyval = new CtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn113() 
  {
     $this->yyval = new CtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn114() 
  {
     
      $this->yyval = new DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn115() 
  {
     $this->yyval = new DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn116() 
  {
     $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn117() 
  {
     
      $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn118() 
  {
     $this->yyval = new SetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn119() 
  {
     
      $this->yyval = new GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn120() 
  {
     $this->yyval = new NestedMods($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn121() 
  {
     
      $this->yyval = new TraitUse($this->yyastk[$this->yysp-(3-2)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn122() 
  {
     
      $this->yyval = new TraitUse($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn123() 
  {
     $this->yyval = new TraitUse($this->yyastk[$this->yysp-(5-2)], null, $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn124() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn125() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn126() 
  {
     
      $this->yyval = new TraitItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn127() 
  {
     
      $this->yyval = new TraitItem($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-6)]); 
      $this->eat_semis(); 
    
  }


  private function yyn128() 
  {
     
      $this->yyval = new TraitDecl($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn129() 
  {
     
      $this->yyval = new TraitDecl($this->yyastk[$this->yysp-(3-2)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn130() 
  {
     
      $this->yyval = new IfaceDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn131() 
  {
     
      $this->yyval = new IfaceDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn132() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn133() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn134() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn135() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn136() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn137() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn138() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn139() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn140() 
  {
     $this->yyval = null; 
  }


  private function yyn141() 
  {
     $this->yyval = null; 
  }


  private function yyn142() 
  {
     
      $this->yyval = new LetDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn143() 
  {
     
      $this->yyval = new VarDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn144() 
  {
     $this->yyval = new LetDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn145() 
  {
     $this->yyval = new VarDecl($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn146() 
  {
     $this->yyval = new FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn147() 
  {
     
      $this->yyval = new FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn148() 
  {
     
      $this->yyval = new FnDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn149() 
  {
     $this->yyval = new FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn150() 
  {
     $this->yyval = new FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn151() 
  {
     $this->yyval = new FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn152() 
  {
     $this->yyval = new FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn153() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn154() 
  {
     
      /* FIXME */
      $this->yyval = new Block([ new ReturnStmt($this->yyastk[$this->yysp-(3-2)]) ]); 
      $this->eat_semis(); 
    
  }


  private function yyn155() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn156() 
  {
     
      /* FIXME */
      $this->yyval = new Block([ new ReturnStmt($this->yyastk[$this->yysp-(2-2)]) ]); 
    
  }


  private function yyn157() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn158() 
  {
     
      /* FIXME */
      $this->yyval = new Block([ new ReturnStmt($this->yyastk[$this->yysp-(2-2)]) ]); 
    
  }


  private function yyn159() 
  {
     $this->yyval = null; 
  }


  private function yyn160() 
  {
     $this->yyval = null; 
  }


  private function yyn161() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn162() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn163() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn164() 
  {
     $this->yyval = new Param(false, null, null, $this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn165() 
  {
     $this->yyval = new Param(false, null, null, $this->yyastk[$this->yysp-(2-1)], null, true); 
  }


  private function yyn166() 
  {
     $this->yyval = new Param(false, null, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn167() 
  {
     $this->yyval = new Param(false, null, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn168() 
  {
     $this->yyval = new Param(false, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn169() 
  {
     $this->yyval = new Param(false, null, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn170() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(2-1)], null, $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn171() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(3-1)], null, $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn172() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn173() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn174() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null, true); 
  }


  private function yyn175() 
  {
     $this->yyval = new Param(false, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], false); 
  }


  private function yyn176() 
  {
     $this->yyval = new ThisParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn177() 
  {
     $this->yyval = new ThisParam($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn178() 
  {
     $this->yyval = new RestParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn179() 
  {
     $this->yyval = new Param(true, null, null, $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn180() 
  {
     $this->yyval = new Param(true, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn181() 
  {
     $this->yyval = new Param(true, $this->yyastk[$this->yysp-(3-1)], null, $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn182() 
  {
     $this->yyval = new Param(true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], null, false); 
  }


  private function yyn183() 
  {
     $this->yyval = null; 
  }


  private function yyn184() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn185() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn186() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn187() 
  {
     $this->yyval = new DoStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn188() 
  {
     $this->yyval = new IfStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn189() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn190() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn191() 
  {
     $this->yyval = new ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn192() 
  {
     $this->yyval = new ForStmt($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], null, $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn193() 
  {
     $this->yyval = new ForStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn194() 
  {
     $this->yyval = null; 
  }


  private function yyn195() 
  {
     $this->yyval = new ForStmt(null, null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn196() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(2-2)], null, null); 
  }


  private function yyn197() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn198() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(3-2)], null, $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn199() 
  {
     $this->yyval = new TryStmt($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn200() 
  {
     $this->yyval = new PhpStmt($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn201() 
  {
     $this->yyval = new GotoStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn202() 
  {
     $this->yyval = new TestStmt(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn203() 
  {
     $this->yyval = new TestStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn204() 
  {
     $this->yyval = new BreakStmt(null); 
  }


  private function yyn205() 
  {
     $this->yyval = new BreakStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn206() 
  {
     $this->yyval = new ContinueStmt(null); 
  }


  private function yyn207() 
  {
     $this->yyval = new ContinueStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn208() 
  {
     $this->yyval = new PrintStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn209() 
  {
     $this->yyval = new ThrowStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn210() 
  {
     $this->yyval = new WhileStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn211() 
  {
     $this->yyval = new AssertStmt($this->yyastk[$this->yysp-(3-2)], null); 
  }


  private function yyn212() 
  {
     $this->yyval = new AssertStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn213() 
  {
     $this->yyval = new SwitchStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn214() 
  {
     $this->yyval = new ReturnStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn215() 
  {
     $this->yyval = new ReturnStmt(null); 
  }


  private function yyn216() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn217() 
  {
     $this->yyval = null; 
  }


  private function yyn218() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn219() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn220() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn221() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn222() 
  {
     $this->yyval = null; 
  }


  private function yyn223() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn224() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn225() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn226() 
  {
     $this->yyval = new ElsifItem($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn227() 
  {
     $this->yyval = null; 
  }


  private function yyn228() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn229() 
  {
     $this->yyval = new ElseItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn230() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn231() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn232() 
  {
     $this->yyval = new CatchItem(null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn233() 
  {
     $this->yyval = new CatchItem($this->yyastk[$this->yysp-(5-3)], null, $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn234() 
  {
     $this->yyval = new CatchItem($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn235() 
  {
     $this->yyval = null; 
  }


  private function yyn236() 
  {
     $this->yyval = new FinallyItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn237() 
  {
     $this->yyval = null; 
  }


  private function yyn238() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn239() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn240() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn241() 
  {
     $this->yyval = new PhpUse($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn242() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn243() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn244() 
  {
     $this->yyval = new PhpUseItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn245() 
  {
     $this->yyval = new PhpUseItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn246() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn247() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn248() 
  {
     $this->yyval = new CaseItem($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn249() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn250() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn251() 
  {
     $this->yyval = new CaseLabel($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn252() 
  {
     $this->yyval = new CaseLabel(null); 
  }


  private function yyn253() 
  {
     $this->yyval = new Block(null); 
  }


  private function yyn254() 
  {
     $this->yyval = new Block($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn255() 
  {
     $this->yyval = null; 
  }


  private function yyn256() 
  {
     
      $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
      $this->eat_semis(); 
    
  }


  private function yyn257() 
  {
     
      $this->yyval = new ExprStmt(null); 
      $this->eat_semis(); 
    
  }


  private function yyn258() 
  {
     $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn259() 
  {
     $this->yyval = new ExprStmt(null); 
  }


  private function yyn260() 
  {
     $this->yyval = new ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn261() 
  {
     $this->yyval = new ExprStmt(null); 
  }


  private function yyn262() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn263() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn264() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn265() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn266() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn267() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn268() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn269() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn270() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn271() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn272() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn273() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn274() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn275() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn276() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn277() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn278() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn279() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn280() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn281() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn282() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn283() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn284() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn285() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn286() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn287() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn288() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn289() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn290() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn291() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn292() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn293() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn294() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn295() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn296() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn297() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn298() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn299() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn300() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn301() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn302() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn303() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn304() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn305() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn306() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn307() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn308() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn309() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn310() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn311() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn312() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn313() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn314() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn315() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn316() 
  {
     $this->yyval = null; 
  }


  private function yyn317() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn318() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn319() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn320() 
  {
     $this->yyval = new YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn321() 
  {
     $this->yyval = new YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn322() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn323() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn324() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn325() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn326() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn327() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn328() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn329() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn330() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn331() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn332() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn333() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn334() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn335() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn336() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn337() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn338() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn339() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn340() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn341() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn342() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn343() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn344() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn345() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn346() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn347() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn348() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn349() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn350() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn351() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn352() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn353() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn354() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn355() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn356() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn357() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn358() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn359() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn360() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn361() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn362() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn363() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn364() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn365() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn366() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn367() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn368() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn369() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn370() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn371() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn372() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn373() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn374() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn375() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn376() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn377() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn378() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn379() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn380() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn381() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn382() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn383() 
  {
     $this->yyval = null; 
  }


  private function yyn384() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn385() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn386() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn387() 
  {
     $this->yyval = new YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn388() 
  {
     $this->yyval = new YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn389() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn390() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn391() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn392() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn393() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn394() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn395() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn396() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn397() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn398() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn399() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn400() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn401() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn402() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn403() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn404() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn405() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn406() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn407() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn408() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn409() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn410() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn411() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn412() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn413() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn414() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn415() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn416() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn417() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn418() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn419() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn420() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn421() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn422() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn423() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn424() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn425() 
  {
     $this->yyval = new BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn426() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn427() 
  {
     $this->yyval = new CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn428() 
  {
     $this->yyval = new CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn429() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn430() 
  {
     $this->yyval = new UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn431() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn432() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn433() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn434() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn435() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn436() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn437() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn438() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn439() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn440() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn441() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn442() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn443() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn444() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn445() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn446() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn447() 
  {
     $this->yyval = new AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn448() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn449() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn450() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn451() 
  {
     $this->yyval = null; 
  }


  private function yyn452() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn453() 
  {
     $this->yyval = new CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn454() 
  {
     $this->yyval = new CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn455() 
  {
     $this->yyval = new YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn456() 
  {
     $this->yyval = new YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn457() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn458() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn459() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn460() 
  {
     $this->yyval = new UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn461() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn462() 
  {
     $this->yyval = new UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn463() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn464() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn465() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn466() 
  {
     $this->yyval = new NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn467() 
  {
     $this->yyval = new DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn468() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn469() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn470() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn471() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn472() 
  {
     
      $this->yyval = new CastExpr($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-2)]); 
      $this->error_at($this->yyastk[$this->yysp-(4-1)]->loc, ERR_WARN, 'legacy cast, use `expr as type` instead'); 
    
  }


  private function yyn473() 
  {
     
      $this->yyval = new CastExpr($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-2)]); 
      $this->error_at($this->yyastk[$this->yysp-(4-1)]->loc, ERR_WARN, 'legacy cast, use `expr as type` instead'); 
    
  }


  private function yyn474() 
  {
     $this->yyval = new MemberExpr(true, false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn475() 
  {
     $this->yyval = new MemberExpr(true, true, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn476() 
  {
     $this->yyval = new MemberExpr(false, true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn477() 
  {
     $this->yyval = null; 
  }


  private function yyn478() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn479() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn480() 
  {
     $this->yyval = null; 
  }


  private function yyn481() 
  {
     $this->yyval = null; 
  }


  private function yyn482() 
  {
     $this->yyval = null; 
  }


  private function yyn483() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn484() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn485() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn486() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn487() 
  {
     $this->yyval = new NamedArg($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn488() 
  {
     $this->yyval = new RestArg($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn489() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn490() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn491() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn492() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn493() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn494() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn495() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn496() 
  {
     $this->lex->scan_regexp($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn497() 
  {
     $this->yyval = new RegexpLit($this->yyastk[$this->yysp-(3-3)]->value); 
  }


  private function yyn498() 
  {
     $this->yyval = new Name($this->yyastk[$this->yysp-(1-1)], false); 
  }


  private function yyn499() 
  {
     $this->yyval = new Name($this->yyastk[$this->yysp-(2-2)], true); 
  }


  private function yyn500() 
  {
     $this->yyastk[$this->yysp-(3-1)]->add($this->yyastk[$this->yysp-(3-3)]); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn501() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn502() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn503() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn504() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn505() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn506() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn507() 
  {
     $this->yyval = new TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn508() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn509() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn510() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn511() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn512() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn513() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn514() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn515() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn516() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn517() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn518() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn519() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn520() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn521() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn522() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn523() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn524() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn525() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn526() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn527() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn528() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn529() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn530() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn531() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn532() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn533() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn534() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn535() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn536() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn537() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn538() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn539() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn540() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn541() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn542() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn543() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn544() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn545() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn546() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn547() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn548() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn549() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn550() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn551() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn552() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn553() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn554() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn555() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn556() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn557() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn558() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn559() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn560() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn561() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn562() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn563() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn564() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn565() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn566() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn567() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn568() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn569() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(2-2)]->value); 
  }


  private function yyn570() 
  {
     $this->yyval = new ThisExpr; 
  }


  private function yyn571() 
  {
     $this->yyval = new SuperExpr; 
  }


  private function yyn572() 
  {
     $this->yyval = new NullLit; 
  }


  private function yyn573() 
  {
     $this->yyval = new TrueLit; 
  }


  private function yyn574() 
  {
     $this->yyval = new FalseLit; 
  }


  private function yyn575() 
  {
     $this->yyval = new StrLit($this->cdir, 'c'); 
  }


  private function yyn576() 
  {
     $this->yyval = new StrLit($this->cfile, 'c'); 
  }


  private function yyn577() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->line, 'c'); 
  }


  private function yyn578() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->coln, 'c'); 
  }


  private function yyn579() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn580() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn581() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn582() 
  {
     $this->yyval = new EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn583() 
  {
     $this->yyval = new StrLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->flag); 
  }


  private function yyn584() 
  {
     $this->yyval = new LNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn585() 
  {
     $this->yyval = new DNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn586() 
  {
     $this->yyval = new SNumLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->suffix); 
  }


  private function yyn587() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn588() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn589() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn590() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn591() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn592() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn593() 
  {
     $this->yyval = new ArrLit(null); 
  }


  private function yyn594() 
  {
     $this->yyval = new ArrGen($this->yyastk[$this->yysp-(9-2)], $this->yyastk[$this->yysp-(9-5)], $this->yyastk[$this->yysp-(9-7)]); 
  }


  private function yyn595() 
  {
     $this->yyval = new ArrLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn596() 
  {
     $this->yyval = null; 
  }


  private function yyn597() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn598() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn599() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn600() 
  {
     $this->yyval = new SpreadExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn601() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn602() 
  {
     $this->yyval = new ObjLit(null); 
  }


  private function yyn603() 
  {
     $this->yyval = new ObjLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn604() 
  {
     $this->yyval = null; 
  }


  private function yyn605() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn606() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn607() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn608() 
  {
     $this->yyval = new ObjPair($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn609() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn610() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn611() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn612() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn613() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn614() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn615() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn616() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn617() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn618() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn619() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn620() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn621() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn622() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn623() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn624() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn625() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn626() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn627() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn628() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn629() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn630() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn631() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn632() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn633() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn634() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn635() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn636() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn637() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn638() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn639() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn640() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn641() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn642() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn643() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn644() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn645() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn646() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn647() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn648() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn649() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn650() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn651() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn652() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn653() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn654() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn655() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn656() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn657() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn658() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn659() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn660() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn661() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn662() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn663() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn664() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn665() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn666() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn667() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn668() 
  {
     $this->yyval = new Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn669() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn670() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }

}

