<?php

/* this parser-skeleton is based on the awesome 
   work of nikic (https://github.com/nikic) 
   with some extensions (error-recovery and location-tracking) */

/**
 * This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *   the grammar file gen/parser.y
 *   the parser skeleton gen/kymacc.php.parser
 *
 * The skeleton for this parser was written by Moriyoshi Koizumi and is based on
 * the work by Masato Bito and is in the PUBLIC DOMAIN.
 */

namespace phs\front;


const YYERRTOK = 256;
const T_ARR = 257;
const T_YIELD = 258;
const T_APLUS = 259;
const T_AMINUS = 260;
const T_AMUL = 261;
const T_ADIV = 262;
const T_AMOD = 263;
const T_APOW = 264;
const T_ACONCAT = 265;
const T_ABIT_OR = 266;
const T_ABIT_AND = 267;
const T_ABIT_XOR = 268;
const T_ABOOL_OR = 269;
const T_ABOOL_AND = 270;
const T_ABOOL_XOR = 271;
const T_ASHIFT_L = 272;
const T_ASHIFT_R = 273;
const T_AREF = 274;
const T_RANGE = 275;
const T_BOOL_OR = 276;
const T_BOOL_XOR = 277;
const T_BOOL_AND = 278;
const T_EQ = 279;
const T_NEQ = 280;
const T_IN = 281;
const T_NIN = 282;
const T_IS = 283;
const T_NIS = 284;
const T_GTE = 285;
const T_LTE = 286;
const T_SL = 287;
const T_SR = 288;
const T_AS = 289;
const T_REST = 290;
const T_DEL = 291;
const T_INC = 292;
const T_DEC = 293;
const T_POW = 294;
const T_NEW = 295;
const T_DDDOT = 296;
const T_FN = 297;
const T_LET = 298;
const T_USE = 299;
const T_ENUM = 300;
const T_CLASS = 301;
const T_TRAIT = 302;
const T_IFACE = 303;
const T_MODULE = 304;
const T_REQUIRE = 305;
const T_IDENT = 306;
const T_LNUM = 307;
const T_DNUM = 308;
const T_SNUM = 309;
const T_STRING = 310;
const T_REGEXP = 311;
const T_TRUE = 312;
const T_FALSE = 313;
const T_NULL = 314;
const T_THIS = 315;
const T_SUPER = 316;
const T_SELF = 317;
const T_GET = 318;
const T_SET = 319;
const T_DO = 320;
const T_IF = 321;
const T_ELSIF = 322;
const T_ELSE = 323;
const T_FOR = 324;
const T_TRY = 325;
const T_GOTO = 326;
const T_BREAK = 327;
const T_CONTINUE = 328;
const T_PRINT = 329;
const T_THROW = 330;
const T_CATCH = 331;
const T_FINALLY = 332;
const T_WHILE = 333;
const T_ASSERT = 334;
const T_SWITCH = 335;
const T_CASE = 336;
const T_DEFAULT = 337;
const T_RETURN = 338;
const T_CONST = 339;
const T_FINAL = 340;
const T_GLOBAL = 341;
const T_STATIC = 342;
const T_EXTERN = 343;
const T_PUBLIC = 344;
const T_PRIVATE = 345;
const T_PROTECTED = 346;
const T_SEALED = 347;
const T_INLINE = 348;
const T_PHP = 349;
const T_TEST = 350;
const T_NL = 351;
const T_SUBST = 352;
const T_TINT = 353;
const T_TBOOL = 354;
const T_TFLOAT = 355;
const T_TSTRING = 356;
const T_TREGEXP = 357;
const T_CDIR = 358;
const T_CFILE = 359;
const T_CLINE = 360;
const T_CCOLN = 361;
const T_CFN = 362;
const T_CCLASS = 363;
const T_CTRAIT = 364;
const T_CMETHOD = 365;
const T_CMODULE = 366;
const T_INVL = 367;
const T_END = 368;

require_once 'ast.php';
require_once 'lexer.php';

use phs\Logger;
use phs\Source;
use phs\Session;

use phs\front\ast;
use phs\front\ast\Node;

class Parser
{
  const TOKEN_NONE    = -1;
  const TOKEN_INVALID = 136;

  const TOKEN_MAP_SIZE = 369;

  const YYLAST       = 1835;
  const YY2TBLSTATE  = 603;
  const YYGLAST      = 923;
  const YYNLSTATES   = 682;
  const YYINTERRTOK  = 1;
  const YYUNEXPECTED = 32767;
  const YYDEFAULT    = -32766;
  
  // @var Session
  private $sess;

  /* @var array Map of token ids to their respective names */
  private static $terminals = [
    "EOF",
    "error",
    "','",
    "T_ARR",
    "T_YIELD",
    "T_APLUS",
    "T_AMINUS",
    "T_AMUL",
    "T_ADIV",
    "T_AMOD",
    "T_APOW",
    "T_ACONCAT",
    "T_ABIT_OR",
    "T_ABIT_AND",
    "T_ABIT_XOR",
    "T_ABOOL_OR",
    "T_ABOOL_AND",
    "T_ABOOL_XOR",
    "T_ASHIFT_L",
    "T_ASHIFT_R",
    "T_AREF",
    "'='",
    "T_RANGE",
    "'?'",
    "':'",
    "T_BOOL_OR",
    "T_BOOL_XOR",
    "T_BOOL_AND",
    "'|'",
    "'^'",
    "'&'",
    "T_EQ",
    "T_NEQ",
    "T_IN",
    "T_NIN",
    "T_IS",
    "T_NIS",
    "T_GTE",
    "T_LTE",
    "'>'",
    "'<'",
    "T_SL",
    "T_SR",
    "'+'",
    "'-'",
    "'~'",
    "'*'",
    "'/'",
    "'%'",
    "T_AS",
    "T_REST",
    "T_DEL",
    "T_INC",
    "T_DEC",
    "'!'",
    "T_POW",
    "T_NEW",
    "'.'",
    "'['",
    "']'",
    "'('",
    "')'",
    "T_DDDOT",
    "T_FN",
    "T_LET",
    "T_USE",
    "T_ENUM",
    "T_CLASS",
    "T_TRAIT",
    "T_IFACE",
    "T_MODULE",
    "T_REQUIRE",
    "T_IDENT",
    "T_LNUM",
    "T_DNUM",
    "T_SNUM",
    "T_STRING",
    "T_REGEXP",
    "T_TRUE",
    "T_FALSE",
    "T_NULL",
    "T_THIS",
    "T_SUPER",
    "T_SELF",
    "T_GET",
    "T_SET",
    "T_DO",
    "T_IF",
    "T_ELSIF",
    "T_ELSE",
    "T_FOR",
    "T_TRY",
    "T_GOTO",
    "T_BREAK",
    "T_CONTINUE",
    "T_PRINT",
    "T_THROW",
    "T_CATCH",
    "T_FINALLY",
    "T_WHILE",
    "T_ASSERT",
    "T_SWITCH",
    "T_CASE",
    "T_DEFAULT",
    "T_RETURN",
    "T_CONST",
    "T_FINAL",
    "T_GLOBAL",
    "T_STATIC",
    "T_EXTERN",
    "T_PUBLIC",
    "T_PRIVATE",
    "T_PROTECTED",
    "T_SEALED",
    "T_INLINE",
    "T_PHP",
    "T_TEST",
    "T_SUBST",
    "T_TINT",
    "T_TBOOL",
    "T_TFLOAT",
    "T_TSTRING",
    "T_TREGEXP",
    "T_CDIR",
    "T_CFILE",
    "T_CLINE",
    "T_CCOLN",
    "T_CFN",
    "T_CCLASS",
    "T_CTRAIT",
    "T_CMETHOD",
    "T_CMODULE",
    "T_END",
    "';'",
    "'{'",
    "'}'"
    , "???"
  ];

  /* @var array Map which translates lexer tokens to internal tokens */
  private static $translate = [
        0,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,   54,  136,  136,  136,   48,   30,  136,
       60,   61,   46,   43,    2,   44,   57,   47,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,   24,  133,
       40,   21,   39,   23,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,   58,  136,   59,   29,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  134,   28,  135,   45,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,    1,    3,    4,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   20,   22,   25,   26,   27,   31,
       32,   33,   34,   35,   36,   37,   38,   41,   42,   49,
       50,   51,   52,   53,   55,   56,   62,   63,   64,   65,
       66,   67,   68,   69,   70,   71,   72,   73,   74,   75,
       76,   77,   78,   79,   80,   81,   82,   83,   84,   85,
       86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
       96,   97,   98,   99,  100,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
      116,  136,  117,  118,  119,  120,  121,  122,  123,  124,
      125,  126,  127,  128,  129,  130,  131,  136,  132
  ];

  private static $yyaction = [
     1265,-32766,-32766,    0,  293,  294,  295,  296,  665,  209,
      419,  420,  297,  298,  299,  300,  301,  302,  303,  304,
      305,  306,  307,  308,  421, 1190,  654, 1091, 1092, 1270,
      309, 1269,    9,  146,  168,  131,  520,  247,  248,  249,
      418,  361,  252, 1023, 1024, 1268,  250, 1267,    8,  143,
      761,  131, 1266,  145,  136,  289,  290,  291,  292, 1219,
     1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1172,-32766,
    -32766,-32766,-32766,  608, 1228, 1229, 1230, 1231, 1232, 1233,
     1173, 1174, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
     1242, 1252, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
     1251, 1253, 1254, 1262, 1255, 1256, 1257, 1258, 1259, 1260,
     1261, 1263, 1264, 1143, 1271, 1272, 1273, 1274, 1275, 1276,
     1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284,   -6,  614,
      421,  390,  148, 1091, 1092,  250,  309,    8,  143,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,  149,-32766,
    -32766,-32766,-32766,-32766,-32766,  916, -139, -145,  290,  291,
      292,  150,  151,  152,  635,  506,  507,  508,  649,  357,
      153,  154,  155,  653,  340,  315,  324,  822,  828,  643,
      818,  -36,  492,  446,  -36,  -36,  -36,  -36,  443,  137,
      236,  237,  416,  417,  238,  239,  240,  241,  242,  243,
      244,  245,  246,  500,   21,  583,  449,  452,  535,  584,
      503,  460,  461,  147,  156, -139, -145,  585,  157,  586,
      364,  319,  138,  722,  723,  724,  725,  731,  616,  727,
      728,  729,  730,  617,  529,-32767,-32767,-32767,-32767,-32767,
    -32767,-32767,-32767,  242,  243,  244,  245,  246,  291,  292,
      700,  917,   18,   -6,  210,  211,  212,  213,  214,  215,
      216,  217,  218,  219,  220,  221,  222,  223,  224,  360,
      225,  226,  142,  251,  228,  229,  230,  231,  232,  233,
      234,  235,  236,  237,  416,  417,  238,  239,  240,  241,
      242,  243,  244,  245,  246,  247,  248,  249,  418,   -4,
      614, 1023, 1024,  148,  250,  322,    8,  143,  311,  131,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,  149,
    -32766,-32766,-32766,-32766,-32766, 1172,  748,  331,  623,  709,
       11,  611,  150,  151,  152,  422,  612, 1173, 1174,  134,
      357,  153,  154,  155,    6,  340,  635,    9,  146,  510,
      131,  626,  -36,  492,  446,  -36,  -36,  -36,  -36,  442,
      137,-32766,-32766,-32766,-32766,  666,  318,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,   21,  583,  166,  451,  535,
      584,  503,  460,  461,  147,  156, 1196,   11,  585,  157,
      586,  498,  501,  138,  722,  723,  724,  725,  731,  616,
      727,  728,  729,  730,  617,  529,  614,   11,  626,  148,
      492,  306,  307,  308,  421, 1173, 1174, 1091, 1092,  760,
      309,  700,  917,   18,  595,  804,   11, 1172,  626,  920,
      521,  522,  492,  650,  445,  149,  722,  723,  724,  725,
      731,  726,  727,  728,  729,  730,  513,  626,  150,  151,
      152,  261,  521,  522,  502, -195,  357,  153,  154,  155,
      328,  340,  831, 1167, 1168, 1169, 1170, 1171,  -36,  492,
      446,  -36,  -36,  -36,  -36,  443,  137,-32766,-32766,-32766,
    -32766,  -82,  265,-32767,-32767,-32767,-32767,-32767,-32767,  401,
      625,   21,  583, 1141, 1192,  535,  584,  503,  460,  461,
      147,  156,  267,  -81,  585,  157,  586,   11,-32766,  138,
      722,  723,  724,  725,  731,  616,  727,  728,  729,  730,
      617,  529,  614,  901,  325,  148,  825,  330,  626,  244,
      245,  246,  514,  870,-32766,-32766,-32766,  700,  917,   18,
      716,-32766,-32766,-32766,  476,  144,  323,-32766,-32766,-32766,
     1157,  149,  262,-32766,-32766,-32766,-32766,-32766,-32766,  329,
    -32766,  313,  516,  662,  150,  151,  152,-32766,  519,-32766,
    -32766,  316,  357,  153,  154,  155,  314,  340,  327,    2,
      537,  594,  312,  659,  -36,  492,  446,  -36,  -36,  -36,
      -36,  443,  137,  663,    4,    3,  756,  497,  227,  670,
      780,  580,  738,  581,  782,  399,  266,   21,  583,  448,
      263,  535,  584,  503,  460,  461,  147,  156,  269,  320,
      585,  157,  586,   20,  911,  138,  722,  723,  724,  725,
      731,  616,  727,  728,  729,  730,  617,  529,-32766,  450,
      268,  912,  292,  518,  310,  326,  441,-32766,  265,  455,
       14,  517,  309,  700,  917,   18,  714,  169,  170,  171,
      172,  173,  174,  175,  176,  177,  178,  179,  180,  181,
      182,  183,  359,  184,  185,  140,  166,  186,  187,  188,
      189,  190,  191,  192,  193,  194,  195,  413,  414,  196,
      197,  198,  199,  200,  201,  202,  203,  204,  205,  206,
      207,  415,   15,  614,  955,  956,  148,  208,   16,    7,
      141,   28, 1113,  272,  273,  274,  275,  276,  277,  278,
      279,  280,  281,  282,  283,  284,  285,  286,  363,  287,
      288,  145,  149,  289,  290,  291,  292, 1045, 1197, 1198,
     1044, 1136, 1112, 1199,  977,  150,  151,  152, 1137,  976,
       12,  444,  368,  357,  153,  154,  155,  511,  340,   31,
      139,  505,  677, 1190, 1139,  -36,  492,  446,  -36,  -36,
      -36,  -36,  443,  137, 1214,  817, 1142,   24,   27, 1140,
     1156,  636, 1158,  613,   29,  607, 1160,   13,   21,  583,
      167,  453,  535,  584,  503,  460,  461,  147,  156,  447,
      494,  585,  157,  586, 1172,  253,  138,  722,  723,  724,
      725,  731,  616,  727,  728,  729,  730,  617,  529,  614,
       26,  600,  148,  551,    0,    0,  640,  593,  704,  919,
        0,  254,    0,    0,  700,  917,   18,  848,  874,    0,
      209,   18,    0,  805,  255,  256,  257,  859,  149,    0,
        0,    0,  362,  258,  259,  260, 1190,  342,    0,    0,
      777,  150,  151,  152,  458,  872,    0,    0,    0,  357,
      153,  154,  155,  775,  340,  807,  713,  873,  881,  863,
      772,  -36,  492,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,  703,-32766,   21,  583,  867,  918,  535,  584,
      503,  460,  461,  147,  156, 1205,  868,  585,  157,  586,
     -226, -226,  138,  722,  723,  724,  725,  731,  726,  727,
      728,  729,  730,  617,  529,  614,  866,  876,  148,  770,
      762,  865,  799,  800,  864,  860,  871,  712,    0,  495,
      527,  917,   18, -226,  578,  271,    3,  321,  270,  264,
        0,  757,  915, 1111,  149, 1135, 1043,  975, 1191,  778,
      737,  781,  779,  732,  715,  717, 1206,  150,  151,  152,
     1207,    0,    0,    0,    0,  357,  153,  154,  155,    0,
      340,    0,    0,    0,    0,    0,    0,  -36,  492,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,    0,    0,
       21,  583,    0,    0,  535,  584,  503,  460,  461,  147,
      156,    0,  454,  585,  157,  586,  312,  659,  138,  722,
      723,  724,  725,  731,  726,  727,  728,  729,  730,  617,
      529,  549,    0,    0,  148,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   11,    0,    0,  917,   18,    0,
        0,    0,    0,    0, 1172,    0,    0,    0,    0,    0,
      149,    0,    0,    0,    0,  626,  515,    0,    0,    0,
        0,    0,    0,  150,  151,  152,    0,    0,    0,    0,
        0,  357,  153,  154,  155,    0,  340,    0,    0,    0,
        0,    0,    0,  -36,  492,    0,    0,    0,   11,  652,
     1167, 1168, 1169, 1170, 1171,    0,    0,    0, 1172,    0,
        0,    0,    0,    0,    0,    0,   21,  583,    0,  626,
      535,  584,  503,  460,  461,  147,  156,    0,  454,  585,
      157,  586,    0,    0,  138,  722,  723,  724,  725,  731,
      726,  727,  728,  729,  730,  617,  529,  614, -162,    0,
      148,    0,    0,    0, 1167, 1168, 1169, 1170, 1171,  816,
       11,    0,    0,  917,   18,  913,    0,    0,    0,    0,
     1172,    0,    0,    0,    0,    0,  149,    0,    0, -162,
        0,  626,    0,    0,    0,    0,    0,    0,    0,  150,
      151,  152,    0,    0,    0,    0,    0,  357,  153,  154,
      155,    0,  340,    0,    0,    0,    0,    0,    0,  -36,
      492,    0,    0,    0,    0,    0, 1167, 1168, 1169, 1170,
     1171,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   21,  583,    0,    0,  535,  584,  503,  460,
      461,  147,  156,    0,    0,  585,  157,  586,    0,    0,
      138,  722,  723,  724,  725,  731,  726,  727,  728,  729,
      730,  617,  529,  614,    0,    0,  148,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  917,
       18,  914,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  149,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  150,  151,  152,    0,    0,
        0,    0,    0,  357,  153,  154,  155,    0,  340,    0,
        0,    0,    0,    0,    0,  -36,  492,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,   21,  583,
        0,    0,  535,  584,  503,  460,  461,  147,  156,  158,
        0,  585,  157,  586,    0,    0,  138,  722,  723,  724,
      725,  731,  726,  727,  728,  729,  730,  617,  529,    0,
        0,    0,    0,    0,    0,  159,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  917,   18,    0,  160,  161,
      162,    0,  681,    0,    0,    0,  358,  163,  164,  165,
        0,  341,    0,  130,    0,  132,    0,   11,  457,    0,
        0,    0,    0,    0,    0,    0,    0, 1172, 1193, 1194,
     1195, 1190,    0, 1179, 1180, 1178, 1175, 1176,  615, 1173,
     1174,    0,    0,    0,    0,    0,    0,    0,  614,    0,
        0,  148,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  644,    0,    0,  253,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  149, 1181, 1182,
     1183, 1184, 1185, 1186, 1187, 1188, 1189,    0,    0,    5,
      150,  151,  152,  254,    0,    0,    0,    0,  357,  153,
      154,  155,    0,  340,    0,    0,  255,  256,  257,    0,
    -32766,    0,    0,    0,  362,  258,  259,  260,    0,  342,
        0,    0,    0,    0,    0,    0,  458,  493,    0,    0,
        0,    0,    0,   21,  583,    0,    0,  535,  584,  503,
      460,  461,  147,  156,    0,    0,  585,  157,  586,    0,
        0,  138,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  617,  529,    0,    0,    0,    0,  722,  723,
      724,  725,  731,  726,  727,  728,  729,  730,    0,    0,
      917,   18,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  921,  272,  273,  274,
      275,  276,  277,  278,  279,  280,  281,  282,  283,  284,
      285,  286,  363,  287,  288,  145,  317,  289,  290,  291,
      292,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
        0,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
    -32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,-32766,-32766,
    -32766,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,-32766,-32766,-32766,    0,    0,    0,    0,
        0,-32766,-32766,-32766,-32766,    0,-32766,    0,    0,    0,
        0,    0,    0,-32766,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1167, 1168,
     1169, 1170, 1171,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,-32766
  ];

  private static $yycheck = [
        4,   84,   85,    0,   29,   30,   31,   32,    1,   60,
       35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
       45,   46,   47,   48,   49,   76,    1,   52,   53,   33,
       55,   35,   57,   58,    2,   60,   24,   46,   47,   48,
       49,   20,   21,   52,   53,   49,   55,   51,   57,   58,
      133,   60,   56,   23,    2,   25,   26,   27,   28,   63,
       64,   65,   66,   67,   68,   69,   70,   71,   72,   29,
       30,   31,   32,   61,   78,   79,   80,   81,   82,   83,
       84,   85,   86,   87,   88,   89,   90,   91,   92,   93,
       94,   95,   96,   97,   98,   99,  100,  101,  102,  103,
      104,  105,  106,  107,  108,  109,  110,  111,  112,  113,
      114,  115,  116,   61,  118,  119,  120,  121,  122,  123,
      124,  125,  126,  127,  128,  129,  130,  131,    0,    1,
       49,    2,    4,   52,   53,   55,   55,   57,   58,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   20,   21,   22,   23,   30,   25,
       26,   27,   28,   29,   30,  133,    2,    2,   26,   27,
       28,   43,   44,   45,   66,   67,   68,   69,    1,   51,
       52,   53,   54,    1,   56,   21,   21,   23,   23,    1,
       61,   63,   64,   65,   66,   67,   68,   69,   70,   71,
       33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
       43,   44,   45,    2,   86,   87,    2,    2,   90,   91,
       92,   93,   94,   95,   96,   61,   61,   99,  100,  101,
       20,   21,  104,  105,  106,  107,  108,  109,  110,  111,
      112,  113,  114,  115,  116,   33,   34,   35,   36,   37,
       38,   39,   40,   41,   42,   43,   44,   45,   27,   28,
      132,  133,  134,  135,    5,    6,    7,    8,    9,   10,
       11,   12,   13,   14,   15,   16,   17,   18,   19,   20,
       21,   22,   23,    2,   25,   26,   27,   28,   29,   30,
       31,   32,   33,   34,   35,   36,   37,   38,   39,   40,
       41,   42,   43,   44,   45,   46,   47,   48,   49,    0,
        1,   52,   53,    4,   55,    3,   57,   58,    2,   60,
        5,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   20,   21,   22,   23,   30,
       25,   26,   27,   28,   29,   72,    1,    3,    1,  135,
       62,   51,   43,   44,   45,   49,   56,   84,   85,    2,
       51,   52,   53,   54,    2,   56,   66,   57,   58,   49,
       60,   83,   63,   64,   65,   66,   67,   68,   69,   70,
       71,   29,   30,   31,   32,    1,    3,   35,   36,   37,
       38,   39,   40,   41,   42,   86,   87,   50,    2,   90,
       91,   92,   93,   94,   95,   96,   59,   62,   99,  100,
      101,    2,    2,  104,  105,  106,  107,  108,  109,  110,
      111,  112,  113,  114,  115,  116,    1,   62,   83,    4,
       64,   46,   47,   48,   49,   84,   85,   52,   53,  133,
       55,  132,  133,  134,   24,  133,   62,   72,   83,  133,
       84,   85,   64,    1,  134,   30,  105,  106,  107,  108,
      109,  110,  111,  112,  113,  114,   24,   83,   43,   44,
       45,    2,   84,   85,    2,   33,   51,   52,   53,   54,
       21,   56,   23,  118,  119,  120,  121,  122,   63,   64,
       65,   66,   67,   68,   69,   70,   71,   29,   30,   31,
       32,  135,   50,   35,   36,   37,   38,   39,   40,  134,
        1,   86,   87,   61,   76,   90,   91,   92,   93,   94,
       95,   96,    3,  135,   99,  100,  101,   62,    4,  104,
      105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
      115,  116,    1,  133,   21,    4,   23,    3,   83,   43,
       44,   45,   50,  133,   30,   29,   30,  132,  133,  134,
      135,   46,   47,   48,   57,   58,   21,   43,   44,   45,
       61,   30,  134,   57,   58,   51,   52,   53,   54,   21,
       56,   24,   50,   81,   43,   44,   45,   63,   50,   84,
       85,   24,   51,   52,   53,   54,   24,   56,   24,  134,
       97,   98,  102,  103,   63,   64,   65,   66,   67,   68,
       69,   70,   71,   81,  133,  134,  133,  134,   24,   81,
      133,  134,  133,  134,  133,  134,   24,   86,   87,   24,
       24,   90,   91,   92,   93,   94,   95,   96,   24,   24,
       99,  100,  101,   24,   24,  104,  105,  106,  107,  108,
      109,  110,  111,  112,  113,  114,  115,  116,  134,   24,
       24,   24,   28,   30,   33,   33,   45,   29,   50,   30,
       57,   49,   55,  132,  133,  134,  135,    5,    6,    7,
        8,    9,   10,   11,   12,   13,   14,   15,   16,   17,
       18,   19,   20,   21,   22,   23,   50,   25,   26,   27,
       28,   29,   30,   31,   32,   33,   34,   35,   36,   37,
       38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
       48,   49,   57,    1,   52,   53,    4,   55,   57,   57,
       58,   61,   59,    5,    6,    7,    8,    9,   10,   11,
       12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
       22,   23,   30,   25,   26,   27,   28,   59,   59,   59,
       59,   59,   59,   59,   59,   43,   44,   45,   59,   59,
       62,   60,   60,   51,   52,   53,   54,   60,   56,   60,
       60,   63,   61,   76,   61,   63,   64,   65,   66,   67,
       68,   69,   70,   71,   61,   61,   61,   61,   61,   61,
       61,    1,   61,   61,   61,   61,   77,   62,   86,   87,
      115,   65,   90,   91,   92,   93,   94,   95,   96,   65,
       65,   99,  100,  101,   72,    4,  104,  105,  106,  107,
      108,  109,  110,  111,  112,  113,  114,  115,  116,    1,
       89,   88,    4,  117,   -1,   -1,   90,   99,  133,  133,
       -1,   30,   -1,   -1,  132,  133,  134,  133,  133,   -1,
       60,  134,   -1,  133,   43,   44,   45,  135,   30,   -1,
       -1,   -1,   51,   52,   53,   54,   76,   56,   -1,   -1,
      133,   43,   44,   45,   63,  135,   -1,   -1,   -1,   51,
       52,   53,   54,  133,   56,  133,  133,  133,  133,  133,
      133,   63,   64,    5,    6,    7,    8,    9,   10,   11,
       12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
       22,   23,  133,   25,   86,   87,  133,  133,   90,   91,
       92,   93,   94,   95,   96,  135,  133,   99,  100,  101,
      102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
      112,  113,  114,  115,  116,    1,  133,  133,    4,  133,
      133,  133,  133,  133,  133,  133,  133,  133,   -1,  134,
      134,  133,  134,  135,  134,  134,  134,  134,  134,  134,
       -1,  135,  135,  135,   30,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,   43,   44,   45,
      135,   -1,   -1,   -1,   -1,   51,   52,   53,   54,   -1,
       56,   -1,   -1,   -1,   -1,   -1,   -1,   63,   64,    5,
        6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   20,   21,   22,   -1,   -1,   -1,
       86,   87,   -1,   -1,   90,   91,   92,   93,   94,   95,
       96,   -1,   30,   99,  100,  101,  102,  103,  104,  105,
      106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
      116,    1,   -1,   -1,    4,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   62,   -1,   -1,  133,  134,   -1,
       -1,   -1,   -1,   -1,   72,   -1,   -1,   -1,   -1,   -1,
       30,   -1,   -1,   -1,   -1,   83,   30,   -1,   -1,   -1,
       -1,   -1,   -1,   43,   44,   45,   -1,   -1,   -1,   -1,
       -1,   51,   52,   53,   54,   -1,   56,   -1,   -1,   -1,
       -1,   -1,   -1,   63,   64,   -1,   -1,   -1,   62,    1,
      118,  119,  120,  121,  122,   -1,   -1,   -1,   72,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   86,   87,   -1,   83,
       90,   91,   92,   93,   94,   95,   96,   -1,   30,   99,
      100,  101,   -1,   -1,  104,  105,  106,  107,  108,  109,
      110,  111,  112,  113,  114,  115,  116,    1,   50,   -1,
        4,   -1,   -1,   -1,  118,  119,  120,  121,  122,   61,
       62,   -1,   -1,  133,  134,  135,   -1,   -1,   -1,   -1,
       72,   -1,   -1,   -1,   -1,   -1,   30,   -1,   -1,   81,
       -1,   83,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   43,
       44,   45,   -1,   -1,   -1,   -1,   -1,   51,   52,   53,
       54,   -1,   56,   -1,   -1,   -1,   -1,   -1,   -1,   63,
       64,   -1,   -1,   -1,   -1,   -1,  118,  119,  120,  121,
      122,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   86,   87,   -1,   -1,   90,   91,   92,   93,
       94,   95,   96,   -1,   -1,   99,  100,  101,   -1,   -1,
      104,  105,  106,  107,  108,  109,  110,  111,  112,  113,
      114,  115,  116,    1,   -1,   -1,    4,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  133,
      134,  135,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   30,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   43,   44,   45,   -1,   -1,
       -1,   -1,   -1,   51,   52,   53,   54,   -1,   56,   -1,
       -1,   -1,   -1,   -1,   -1,   63,   64,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   86,   87,
       -1,   -1,   90,   91,   92,   93,   94,   95,   96,    4,
       -1,   99,  100,  101,   -1,   -1,  104,  105,  106,  107,
      108,  109,  110,  111,  112,  113,  114,  115,  116,   -1,
       -1,   -1,   -1,   -1,   -1,   30,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,  133,  134,   -1,   43,   44,
       45,   -1,   47,   -1,   -1,   -1,   51,   52,   53,   54,
       -1,   56,   -1,   58,   -1,   60,   -1,   62,   63,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   72,   73,   74,
       75,   76,   -1,   78,   79,   80,   81,   82,   83,   84,
       85,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    1,   -1,
       -1,    4,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,    1,   -1,   -1,    4,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   30,  123,  124,
      125,  126,  127,  128,  129,  130,  131,   -1,   -1,  134,
       43,   44,   45,   30,   -1,   -1,   -1,   -1,   51,   52,
       53,   54,   -1,   56,   -1,   -1,   43,   44,   45,   -1,
       63,   -1,   -1,   -1,   51,   52,   53,   54,   -1,   56,
       -1,   -1,   -1,   -1,   -1,   -1,   63,   64,   -1,   -1,
       -1,   -1,   -1,   86,   87,   -1,   -1,   90,   91,   92,
       93,   94,   95,   96,   -1,   -1,   99,  100,  101,   -1,
       -1,  104,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,  115,  116,   -1,   -1,   -1,   -1,  105,  106,
      107,  108,  109,  110,  111,  112,  113,  114,   -1,   -1,
      133,  134,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,  133,    5,    6,    7,
        8,    9,   10,   11,   12,   13,   14,   15,   16,   17,
       18,   19,   20,   21,   22,   23,   24,   25,   26,   27,
       28,    5,    6,    7,    8,    9,   10,   11,   12,   13,
       14,   15,   16,   17,   18,   19,   20,   21,   22,   23,
       -1,   25,   26,   27,   28,    5,    6,    7,    8,    9,
       10,   11,   12,   13,   14,   15,   16,   17,   18,   19,
       20,   21,   22,   23,    4,   25,   26,   27,    5,    6,
        7,    8,    9,   10,   11,   12,   13,   14,   15,   16,
       17,   18,   19,   20,   21,   22,   23,   -1,   25,   26,
       30,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   43,   44,   45,   -1,   -1,   -1,   -1,
       -1,   51,   52,   53,   54,   -1,   56,   -1,   -1,   -1,
       -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  118,  119,
      120,  121,  122,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,  134
  ];

  private static $yybase = [
      309,  128,  425,  541,  722,  800,  -51,  845,  844,  843,
      838,   -4,   -4,   -4,   -4,   -4,   -4,  954, 1070, 1186,
     1302, 1487, 1487, 1487, 1487, 1487, 1487, 1487, 1487, 1487,
      420, 1503,  594,  756,  834,  803,  764,  602,  763,  723,
      557,  710,  733,  567,  701,  702,  853,  852,  851,  850,
      574,  703,  670,  620,  848,  762,  721,  760,  747,  672,
      259,  259,  259,  259,  259,  259,  259,  259,  259,  259,
      259,  259,  259,  259,  259,  259,  259,  259,  259,  259,
      259,  259,  259,  259,  259,  259,  259,  259,  259,  259,
      259,  259,  259,  259,  259,  259,  259,  259,  259,  259,
      259,  259,  259,  259,  259,  259,  259,  259,  259, 1632,
      728,  728,  728,  728,  728,  728,  728,  728,  728,  728,
      728,  728,  728,  728,  728,  728,  728,  728,  728,  728,
      347,  452,  509,  716,  646,  737,  618,  695,  725,  188,
      606,  177,  614,  182,   25,  615,    7, 1395, 1395, 1395,
     1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395,
     1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395,
     1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395,
     1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395,
     1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395,
     1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395,
     1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395,
     1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395,
     1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395,
     1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395,
     1395, 1395, 1395,  821,  821,  821,  821,  821,  821,  821,
      821, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395,
     1395, 1395,  821,  821,  821,  821,  821,  821,  821,  821,
      821,  821,  821,  821,  821,  821,  821,  821,  821,  821,
      821,  821,  821,  821,  821,  821,  821,  821,  821,  821,
      821,  821,  821,  821,  821,  821,  821,  821,  821,  821,
     1395,  821, 1395, 1395, 1395, 1395, 1395,  821,  821,  821,
      821, 1395, 1395, 1395, 1395, 1395, 1395,  821, 1395, 1395,
     1395, 1395, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014,
     1700, 1700, 1700,  898,  898,   30,   30,   30,   30, 1703,
     1703, 1680, 1680,  142, 1656, 1656,  231,  524,  524,  524,
      524,  524,  524,  524,  524,  315,  315,  634, 1138,  134,
      134,  -25,  638,  167,  167,  212,  212,  212,  212,  212,
      212,  167,  167,  212,  212,  212,  212,  212,  212,  526,
     1022, 1076,   40,   40,  468,  468,  468,  468,  388,  388,
      388,  388,  366,  375,  752,  752,  506,  506,  506,  506,
      352,  352,  -83,  365,  365,  365,  365,  365,  365,  365,
      365,  365,  505,   -9,   -9,   -9,   -9,   -9,   -9,  385,
      385,  385,  515,  515,  515,  515,  515,  515,   81,   81,
       81,  345,  465,  465,  384,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  502,  538,  108,  712,  712,  846,
      766,  828,   80,   80,   80,   80,   80,   80,   80,   80,
       80,   80,   80,   80,   80,   80,  841,   80,  639,   80,
      617,  617,  617,  617,  617,  617,  617,  633,  617,  164,
      165,  300,  273,  273,  273,  273,  750,  273,  273,  312,
      273,  273,  273,  273,  507,  273,  273,  273,  273,  507,
      273,  273,  507,  273,  273,  273,  273,  273,  273,  273,
      273,  273,  273,  273,  481,   12,  483,  500,  503,  707,
      519,  503,  519,  383,  383,  719,  726,  711,  730,  544,
      344,  767,  826,   32,  507,   21,  829,  320,  793,  847,
      830,  438,  507,  442,  316,  842,  487,  507,   52,  129,
      532,  507,  507,  214,  507,  210,  794,  833,  410,  732,
      491,  523,  507,  743,  489,  459,  507,  306,  755,  753,
      746,  746,  751,  720,  727,  720,  720,  516,  357,  281,
      516,  712,  362,  720,  727,  707,  707,  755,  635,  605,
      720,  753,  516,  712,  472,  621,  746,  727,  727,  712,
      712,  712,  712,  727,  824,  708,  754,  840,    3,  745,
      619,  726,  729,  704,  700,  741,  708,  745,  789,  748,
      832,  831,  823,  836,  718,  835,  865,  726,  861,  636,
      717,  739,  860,  738,  736,  765,  631,  715,  745,  705,
      735,  572,  734,  698,  709,  859,  724,  211,  211,  637,
      622,  545,  613,  665,  632,  673,  744,  858,  745,  396,
      671,  745,  215,  857,  856,  558,  742,  699,  855,  854,
      827,    0, 1395, 1395, 1395, 1395, 1395,   -4,   -4,   -4,
       -4,   -4, 1395,    0,    0,    0,    0,    0,    0, 1395,
     1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395,
     1395, 1395,  259, 1395,  259,  259,  259,  259,  259,  259,
      259,  259,  259,  259,  259,  259,  259,  259,  259,  259,
      259,  259,  259,  259,  259,  259,  259,  259,  259,  259,
      259,  310,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,
      -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,
      -25,  -25, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395,
     1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1395, 1395, 1395, 1395, 1395,
     1395, 1395, 1395,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1395, 1395, 1395, 1395, 1395, 1395,
     1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395,
     1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395,
     1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395,
     1395, 1395,    0, 1395,    0,    0,    0,    0,    0, 1395,
     1395, 1395, 1395,    0,    0,    0,    0,    0,    0, 1395,
        0,    0,    0,    0,  259,  259,  259,  259,  259,  259,
      259,  259, 1395, 1395, 1395,  259,  259,  -25,  -25,  -25,
      -25,  259,  259,  259,  259,  -25,  259,  259,  -25, 1395,
     1395, 1395, 1395, 1395, 1395, 1395, 1395,  259,  259,  -25,
      351,  259,  259,    0,  -25,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,  -25,  351,  351,  -25,  -25,  -25,  -25,  -25,  -25,
      351,  351,  351,  351,  351,  351,  351,  351,   -9,   -9,
       -9,   -9,  -25,  -25,  351,  273,  273,  273,  273,  273,
      273,  273,  273,  273,  351,    0,    0,    0,    0,    0,
        0,  310,  310,  310,   -9,   -9,   -9,   -9,   -9,   -9,
      310,  310,  310,  273,  273,  273,  273,  273,  273,  273,
      273,  273,  273,  273,  273,  273,  273,  273,  718,  273,
      273,  273,  273,  273,  310,  310,  310,  310,  310,  310,
      310,  310,  310,  310,  310,  310,  310,  310,  273,  310,
      273,  310,  310,  310,  310,  310,  310,  310,  310,  273,
      310,    0,    0,  718,    0,    0,    0,    0,  500,    0,
        0,  727,    0,    0,    0,    0,  310,    0,    0,    0,
        0,  310,    0,    0,  310,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  745,  745,  745,    0,
        0,  727,  727,    0,  727,  727,  727,  727,  727,  727,
      712,  727,  727,  727,  727,    0,    0,    0,  409,    0,
      469,  824,  409,    0,    0,    0,    0,  745,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  469,  726,
        0,  726,    0,    0,    0,  469,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  310,
        0,    0,  310,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  310
  ];

  private static $yydefault = [
    32767,32767,32767,32767,32767,32767,  534,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,  299,  522,32767,32767,32767,  367,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,  240,
      242,  521,  241,  277,  278,  279,  280,  281,  282,  283,
      284,  285,  286,  287,  288,  289,  290,  291,  275,  464,
      345,  346,  347,  348,  349,  350,  351,  352,  353,  354,
      355,  356,  357,  358,  359,  343,  522,  243,  104,  466,
      131,  529,  465,  141,   54,  147,  144,  150,  152,  435,
      244,  413,  414,  415,  416,  417,  418,  419,  420,  421,
      422,  423,  424,  425,  426,  427,  411,  245,  133,  109,
    32767,32767,32767,32767,  534,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,  534,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,  263,  331,  300,  297,  368,  365,  296,  364,
    32767,32767,32767,  261,  329,  401,  436,  433,  432,  262,
      330,  260,  328,  399,  254,  322,  400,32767,32767,32767,
    32767,32767,32767,32767,32767,  255,  323,  398,32767,  253,
      321,  392,  393,  266,  267,  268,  269,  258,  259,  257,
      256,  334,  335,  336,  337,  326,  327,  324,  325,  391,
      162,32767,  404,  405,  396,  397,  394,  395,   36,   36,
       36,   36,   36,   37,   37,32767,  264,  265,  332,  333,
      402,  403,   37,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,   36,  246,  247,  252,  314,  315,  320,  384,
      385,  390,  248,  249,  250,  316,  317,  318,  386,  387,
      388,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,  304,  302,  301,  303,  306,  307,  305,  372,
      370,  369,  371,  374,  375,  373,32767,  251,  163,  319,
      440,  438,  437,  439,  442,  443,  441,32767,  389,  479,
      479,32767,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,  534,32767,  310,32767,32767,32767,32767,  378,
    32767,32767,  446,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,  173,32767,
    32767,  174,32767,32767,32767,32767,32767,32767,32767,32767,
    32767,32767,32767,32767,  312,  103,32767,   25,32767,32767,
    32767,32767,  380,  479,32767,32767,32767,  276,32767,32767,
    32767,  344,  105,32767,  448,  108,32767,32767,32767,32767,
    32767,  142,  412,32767,32767,  148,  110,32767,  215,  200,
       70,   70,  205,32767,32767,32767,32767,  308,  533,  533,
      376,32767,  533,32767,32767,32767,32767,  216,   57,   59,
    32767,  201,  444,32767,  533,   64,   71,32767,32767,32767,
    32767,32767,32767,32767,32767,  495,   44,32767,32767,  470,
      479,  472,32767,32767,32767,32767,32767,   28,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,  531,32767,32767,
    32767,32767,32767,32767,32767,32767,32767,32767,  483,32767,
    32767,  479,32767,32767,32767,32767,32767,  119,  120,32767,
      222,   53,32767,32767,32767,32767,32767,32767,   63,   60,
    32767,   69,   65,32767,32767,  151,32767,32767,32767,32767,
    32767,  477
  ];

  private static $yygoto = [
       33,   79,  641,  690,   96, 1208,   79,   34,   36,   39,
       40,   41,   43,   44,   45,   50,   51,  667,   32,  462,
      463,  464,  465,  466,  467,  468,   35,   30,   37,  469,
      470,  471,  472,  473,  474,  475,   61,   38,   62,   63,
       64,   65,   66,   67,   68,   69,   70,   71,   72,   73,
       74,   75,   76,   77,   78,  332,  343,  349,  351,  354,
      365,  369,  373,  374,  375,  376,  377,  378,  379,  380,
      406,  407,  423,  424,  425,  432,  433,  434,  477,   42,
       80,   81,   82,   83,   84,   85,   86,   87,   88,   89,
       90,   91,   92,   93,   94,   95,  333,  334,  344,  350,
      352,  355,  366,  370,  381,  382,  383,  384,  385,  386,
      387,  388,  408,  409,  426,  427,  428,  435,  436,  437,
      479,   97,   98,  769,  769,  769,  769,  769,  642,  655,
      687,   97,   46,  335,   47,   99,  336,  100,  101,  337,
       48,   49,  995,  995,  995,  995,  995, 1210,  794,  910,
      405,   19,  995,  740,  744,  637,  637,  794,  711,  995,
      995,  995,  995,  995,  995,  995,  995,  995,  995,  995,
      995,  995, 1202, 1131,  628,  647,  721,  706, 1145,  820,
       52,  487,   53,  338,  102,  103,  339,  750,  721,  721,
      721,   54,   55,  104,  105,  106,   56,  721,  107,  108,
       57,   58,  620,  620,  620,  620,  620, 1217, 1217, 1217,
     1217, 1217,  620, 1217, 1217, 1217, 1217, 1217, 1217,  620,
      620,  620,  620,  587,  590,  602,  766,  798,  674,  678,
      679,  546,  784,  553,  798,  798,  798,  798,  629,  579,
      869,  853,  886,  889,  851,  850,  852,  796,  980,  657,
      758,  789,  634,  903,  796,  796,  796,  796,  795,  634,
      634,  634,  634,  509,  512,  795,  795,  795,  795,  974,
     1042, 1110,  734, 1163, 1162, 1164,  842,  675,  843,  544,
      552,  557,  561,  562,  564,  572,  576,  952,  953,  954,
     1020, 1021, 1022, 1088, 1089, 1090,  906,  858, 1116, 1116,
     1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116,
     1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116,  891,
      109,  480,  481,  482,  483,  484,  485,  486,  808,  810,
      400,  885,  755,  651,  900,    0,    0,    0,  651,  111,
      112,  113,  114,  115,  116,  117,  118,  119,  120,  121,
      122,  123,  124,  125,  126,  345,  353,  356,  367,  371,
      372,  389,  392,  393,  394,  395,  396,  397,  410,  411,
      429,  430,  431,  438,  439,  440,  488,  533,  127,    0,
        0,  797,    0,    0,  346,  128,  129,  347,  797,  797,
      797,  797,    0,    0,  348, 1131, 1131, 1131, 1131, 1131,
     1131, 1131, 1131,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1131, 1131, 1131, 1131, 1131, 1131,
     1131, 1131, 1131, 1131, 1131, 1131, 1131, 1131, 1131, 1131,
     1131, 1131, 1131, 1131, 1131, 1131, 1131, 1131, 1131, 1131,
     1131, 1131, 1131, 1131, 1131, 1131, 1131, 1131, 1131, 1131,
     1131, 1131,  566, 1131,  573,  806,    0,  499,    0, 1131,
     1131, 1131, 1131,   23,  633,    0,  548,    0,    0, 1131,
        0,  656,    0,    0,    0,    0,    0,    0,   25,    0,
        0,    0, 1138, 1138, 1138,  861,  812,  391,  812,  814,
      814,  854,  862,  892,    0,  774,  776,  773,  771, 1138,
     1138, 1138, 1138, 1138, 1138, 1138, 1138,    0,    0,  391,
      532,    0,    0,    0,    0,    0,    0,  403,  403,  403,
      403,  403,  534,    0,    0,    0,    0,    0,  539,  540,
      541,  542,    0,    0, 1116, 1116, 1116, 1116,    0,    0,
      528,  412, 1116,    0,    0, 1116,    0,    0,    0,    0,
      896,    0,    0,    0,    0,    0, 1116,    0, 1132,    0,
     1116, 1116,    0,  895,  893,    0,    0,    0,    0,  894,
      489,    0,    0,    0,    0,    0,    0,    0, 1116,    0,
        0, 1116, 1116, 1116, 1116, 1116, 1116,    0,    0,    0,
        0,    0,  489,  490,    0,    0,    0,    0,    0, 1116,
     1116,    0,    0,    0,    0,  545,  545,  565,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1116, 1116,
     1116,    0,    0,    0,    0,    0,    0, 1116, 1116, 1116,
        0,    0,    0,    0,    0,  768,  768,  768,  768,  768,
      491,  491,  491,  491,  491,    0,  767,  767,  767,  767,
      767,    0,    0,    0,    0,    0,  838,  839,    0,  591,
      603,  577,  631,  632,  523,    0,    0,    0,    0, 1116,
     1116, 1116, 1116, 1116, 1116, 1116,    0, 1116, 1134,  536,
      571,    0,    0,    0,    0,    0,    0,    0,    0,  575,
        0,    0,    0,  993,  545,  565,  660,  661, 1061,  577,
      545, 1129,  565,  660,  661,  630,    0,  538,  598,  556,
      599,    0,  708,  664,    0,  878,  837,  840,  835,  905,
      841,  836,  676,  609,  610,  680,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  567,  569,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  991,    0,    0, 1059,
     1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132,    0,    0,
        0, 1127,    0,    0,    0,    0,    0,    0,    0, 1132,
     1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132,
     1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132,
     1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132,
     1132, 1132, 1132, 1132, 1132, 1132, 1132,  648, 1132,    0,
        0,    0,    0,    0, 1132, 1132, 1132, 1132,    0,    0,
        0,    0,    0,    0, 1132,    0,    0,    0,    0,  648,
      648,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  648,  648,  648,  648,  648,  648,  648,  648,
      648,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      671,  524,  555,  525,  627,  627,  627,  668,  627,  668,
      668,  671,  526
  ];

  private static $yygcheck = [
       24,   24,   29,    7,   24,   29,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   29,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   10,   10,   10,   10,   10,    4,    4,
        4,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   98,   98,   98,   98,   98,  113,   23,   92,
       26,   54,   98,   35,   35,   77,   77,   23,   23,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,  110,   98,   19,   19,   27,   19,  101,   62,
       24,   63,   24,   24,   24,   24,   24,   39,   27,   27,
       27,   24,   24,   24,   24,   24,   24,   27,   24,   24,
       24,   24,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   97,   97,   97,   45,   18,   34,   34,
       34,   48,   49,   22,   18,   18,   18,   18,   18,   18,
       18,   18,   18,   18,   18,   18,   18,   15,   96,   51,
       43,   52,   25,   89,   15,   15,   15,   15,   14,   25,
       25,   25,   25,   50,   50,   14,   14,   14,   14,   65,
       65,   65,   30,   65,   65,   65,   65,   65,   65,   50,
       50,   50,   50,   50,   50,   50,   50,   66,   66,   66,
       66,   66,   66,   66,   66,   66,   90,   75,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   85,
       53,   53,   53,   53,   53,   53,   53,   53,   58,   60,
       33,   83,   41,   22,   87,   -1,   -1,   -1,   22,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   46,   53,   -1,
       -1,   17,   -1,   -1,   53,   53,   53,   53,   17,   17,
       17,   17,   -1,   -1,   53,   98,   98,   98,   98,   98,
       98,   98,   98,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   73,   98,   73,   47,   -1,   46,   -1,   98,
       98,   98,   98,   67,   67,   -1,   73,   -1,   -1,   98,
       -1,   67,   -1,   -1,   -1,   -1,   -1,   -1,   67,   -1,
       -1,   -1,   98,   98,   98,   47,   47,   26,   47,   47,
       47,   47,   47,   47,   -1,   47,   47,   47,   47,   98,
       98,   98,   98,   98,   98,   98,   98,   -1,   -1,   26,
       46,   -1,   -1,   -1,   -1,   -1,   -1,   26,   26,   26,
       26,   26,   46,   -1,   -1,   -1,   -1,   -1,   46,   46,
       46,   46,   -1,   -1,   96,   96,   96,   96,   -1,   -1,
       47,   26,   96,   -1,   -1,   96,   -1,   -1,   -1,   -1,
       47,   -1,   -1,   -1,   -1,   -1,   96,   -1,   99,   -1,
       96,   96,   -1,   47,   47,   -1,   -1,   -1,   -1,   47,
       22,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   96,   -1,
       -1,   96,   96,   96,   96,   96,   96,   -1,   -1,   -1,
       -1,   -1,   22,   22,   -1,   -1,   -1,   -1,   -1,   96,
       96,   -1,   -1,   -1,   -1,   22,   22,   22,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   96,   96,
       96,   -1,   -1,   -1,   -1,   -1,   -1,   96,   96,   96,
       -1,   -1,   -1,   -1,   -1,   15,   15,   15,   15,   15,
       25,   25,   25,   25,   25,   -1,   14,   14,   14,   14,
       14,   -1,   -1,   -1,   -1,   -1,   22,   22,   -1,   22,
       22,   22,   22,   22,   25,   -1,   -1,   -1,   -1,   96,
       96,   96,   96,   96,   96,   96,   -1,   96,   22,   77,
       22,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   22,
       -1,   -1,   -1,   96,   22,   22,   22,   22,   96,   22,
       22,   96,   22,   22,   22,   22,   -1,   22,   22,   22,
       22,   -1,   22,   22,   -1,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   77,   77,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   96,   -1,   -1,   96,
       99,   99,   99,   99,   99,   99,   99,   99,   -1,   -1,
       -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   99,
       99,   99,   99,   99,   99,   99,   99,   99,   99,   99,
       99,   99,   99,   99,   99,   99,   99,   99,   99,   99,
       99,   99,   99,   99,   99,   99,   99,   99,   99,   99,
       99,   99,   99,   99,   99,   99,   99,    5,   99,   -1,
       -1,   -1,   -1,   -1,   99,   99,   99,   99,   -1,   -1,
       -1,   -1,   -1,   -1,   99,   -1,   -1,   -1,   -1,    5,
        5,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,    5,    5,    5,    5,    5,    5,    5,    5,
        5,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5
  ];

  private static $yygbase = [
        0,    0,    0,    0,  126,  469,    0,    2,    0,    0,
     -275,    0,    0,    0,  248,  237,    0,  371,  217, -272,
        0,    0,  202,  138, -130,  242,  119, -215,    0, -587,
     -230,    0,    0, -251, -171, -297,    0,    0,    0, -265,
        0, -274,    0, -247,    0, -176,  -81,  -44, -261, -266,
      -78, -244, -249,   67,  133,    0,    0,    0, -204,    0,
     -205,    0, -211, -210,    0,  262, -126, -122,    0,    0,
        0,    0,    0,  319,    0, -234,    0,  150,    0,    0,
        0,    0,    0, -270,    0, -212,    0, -263,    0, -248,
     -231,    0,  132,    0,    0,    0,  189, -117,  142,  527,
        0,   42,    0,    0,    0,    0,    0,    0,    0,    0,
       38,    0,    0,  141,    0,    0
  ];

  private static $yygdefault = [
    -32768,  618,  683,  684,  685,  619,    1,  689,  691,  692,
      693,  694,  695,  696,  697,  698,  699,  701,  702,  705,
      563,  547, 1161,  793,   60,  456,  404,  720,  604, 1200,
      733,  605,  574,  398,  673,  743,  570,  669,  672,  749,
      606,  754,  459,  759,  402,  765,  530,  847,  550,  783,
      504,  658,  788,  110,   10,  645,  803, 1065,  809, 1133,
      811,  559,  819,  478,  560, 1212,  846,   22,  582,  849,
      646,  133,  135,  589,  531,  857,  596,  621,  496,  875,
      879,  880,  601,  884,  888,  890,  597,  899,  568,  902,
      907,   17,  909,  543,  554,   59, 1048, 1166, 1063, 1064,
      558, 1144, 1149, 1150, 1151, 1153, 1155,  622,  624,  588,
     1201,  638,  592, 1209,  639, 1218
  ];

  private static $yylhs = [
        0,    1,    2,    2,    2,    3,    4,    6,    6,    7,
        7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
        7,    9,    9,   20,   20,   19,   19,   19,   21,   17,
       16,   16,    8,    8,    8,    8,   25,   25,   26,   26,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       10,   28,   28,   30,   30,   11,   11,   31,   31,   36,
       36,   37,   37,   35,   32,   32,   32,   38,   38,   39,
       33,   33,   40,   40,   41,   41,   42,   42,   43,   43,
       43,   34,   34,   44,   44,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   12,   12,   13,
       13,   48,   48,   49,   49,   49,   51,   51,   52,   52,
       52,   54,   54,   23,   23,   23,   23,   15,   15,   55,
       55,   14,   14,   14,   56,   56,   57,   57,   59,   59,
       58,   58,   60,   60,   46,   46,   46,   61,   61,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   64,   64,   63,   18,   18,   18,   18,   18,
       18,   18,   18,   18,   18,   18,   18,   18,   18,   18,
       18,   18,   18,   18,   18,   18,   18,   18,   18,   18,
       18,   18,   18,   18,   18,   70,   70,   72,   71,   71,
       68,   68,   82,   82,   83,   69,   69,   84,   74,   74,
       85,   85,   85,   85,   75,   76,   76,   86,   86,   87,
       88,   88,   89,   89,   78,   78,   90,   91,   91,   92,
       92,   47,   47,   47,   79,   79,   80,   80,   81,   81,
       93,   93,   73,   73,   94,   94,   95,   95,   95,   95,
       95,   95,   95,   95,   95,   95,   95,   95,   95,   95,
       95,   95,   95,   95,   95,   95,   95,   95,   95,   95,
       95,   95,   95,   95,   95,   95,   95,   95,   95,   95,
       95,   95,   95,   95,   95,   95,   95,   95,   95,   95,
       95,   95,   95,   95,   95,   95,   95,   95,   95,   95,
       95,   95,   95,   95,   95,   95,   95,   95,   95,   95,
       95,   95,   95,   95,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   50,   50,   50,   50,   50,   67,   67,   96,
       96,   96,  100,  100,  101,  101,  101,   98,   98,   98,
       98,   98,   98,   98,  106,  106,  106,  107,  103,    5,
        5,    5,    5,   66,   66,   97,   97,   97,   97,   97,
       22,   22,   22,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,   77,   77,
       77,  102,  102,  102,  104,  104,  104,  104,  108,  109,
      109,  110,  110,   99,   99,   99,  111,  112,  112,  113,
      114,  114,  114,   29,   29,   65,   65,  115,  115,  115,
      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115
  ];

  private static $yylen = [
        1,    1,    1,    1,    0,    4,    1,    1,    2,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    3,    4,    1,    3,    1,    3,    4,    1,    3,
        3,    4,    4,    5,    3,    4,    0,    1,    1,    2,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        6,    1,    3,    1,    3,    9,    6,    0,    2,    0,
        2,    1,    3,    1,    0,    2,    2,    1,    3,    1,
        0,    1,    1,    2,    3,    5,    1,    2,    2,    4,
        5,    0,    1,    1,    2,    1,    1,    1,    4,    4,
        4,    4,    4,    6,    4,    6,    4,    7,    4,    7,
        5,    1,    3,    1,    3,    3,    1,    3,    1,    3,
        3,    1,    2,    1,    1,    1,    1,    3,    3,    2,
        2,    5,    5,    4,    1,    3,    4,    3,    4,    3,
        1,    2,    1,    2,    2,    3,    3,    1,    3,    1,
        2,    3,    2,    3,    4,    2,    3,    4,    3,    4,
        5,    4,    6,    3,    4,    3,    2,    3,    3,    4,
        4,    5,    0,    1,    1,    1,    5,    5,    7,    6,
        7,    5,    2,    2,    3,    3,    4,    5,    3,    2,
        3,    2,    3,    2,    3,    3,    3,    3,    3,    5,
        5,    3,    2,    1,    2,    1,    3,    1,    1,    2,
        0,    1,    1,    2,    3,    0,    1,    2,    1,    2,
        2,    5,    7,    5,    2,    0,    1,    1,    2,    3,
        1,    3,    1,    3,    1,    2,    2,    1,    2,    3,
        2,    2,    3,    3,    2,    1,    2,    1,    2,    1,
        1,    3,    1,    3,    1,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    2,    2,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    5,    4,    4,    5,    4,    2,    2,
        4,    2,    2,    2,    2,    2,    2,    2,    2,    3,
        2,    3,    2,    1,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    2,    2,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    5,    4,    4,    5,    4,    2,    2,    4,    2,
        2,    2,    2,    2,    2,    2,    2,    3,    2,    3,
        2,    1,    1,    1,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    2,
        2,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    5,
        4,    4,    5,    4,    2,    2,    4,    2,    2,    2,
        2,    2,    2,    2,    2,    3,    2,    3,    2,    1,
        1,    1,    3,    5,    4,    4,    1,    3,    3,    2,
        3,    3,    1,    3,    1,    3,    2,    1,    1,    1,
        1,    1,    1,    1,    4,    2,    3,    0,    3,    1,
        3,    2,    3,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    5,
        3,    1,    1,    1,    2,    9,    3,    3,    2,    1,
        3,    2,    1,    2,    3,    3,    2,    1,    3,    3,
        1,    1,    3,    0,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1
  ];
  
    
  private static $yytokformat = [
    'T_IDENT' => 'identifier',
    'T_LNUM' => 'integer',
    'T_DNUM' => 'floating-point number',
    'T_SNUM' => 'number with suffix',
    'T_STRING' => 'string',
    'T_REGEXP' => 'regular expression',
    'T_TRUE' => '`true`',
    'T_FALSE' => '`false`',
    'T_NULL' => '`null`'
  ];
    
  private $yyval;
  private $yyastk;
  private $yysstk;
  private $yysp;
  private $yystate;
  private $yyloc; // current location
  
  private $lex;
  private $invalid = false;
  
  // current directory, filename and line
  private $cdir;
  private $cfile;
  
  /**
   * constructor
   *
   * @param Session $sess
   */
  public function __construct(Session $sess)
  {
    $this->sess = $sess;
  }
  
  /**
   * returns the current location (last scanned token)
   * 
   * @return Location
   */
  public function loc()
  {
    if (!$this->yyloc)
      return new Location('<unknown>', new Position(0, 0));
    
    return $this->yyloc;
  }
  
  /**
   * consumes semicolons to avoid unnecessary empty-expressions 
   * 
   * @void
   */
  private function eat_semis()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_SEMI) {
      do {
        $this->lex->skip();
        $peek = $this->lex->peek();
      } while ($peek->type === T_SEMI);

    }
  }
  
  /**
   * consumes a T_END token
   * 
   * @void
   */
  private function eat_end()
  {
    $peek = $this->lex->peek();
    
    if ($peek->type === T_END) {
      $this->lex->skip();
    }
  }
  
  /**
   * reports an error
   *
   * @param  Location $loc
   * @param  string   $tok  error token
   * @param  int   $num  number of expected tokens
   * @param  array   $arr expected tokens
   */
  private function report_error(Location $loc, $tok, $num, $arr) 
  {
    $fmt = 'unexpected %s';
    
    if ($num > 0) {
      // filter out T_IDENT, T_GET and T_SET
      $hid = false;
      $tmp = [];
      
      foreach ($arr as $exp) {
        if ($hid && ($exp === 'T_GET' || $exp === 'T_SET')) {
          --$num;
          continue;
        }
        
        $hid = $exp === 'T_IDENT';
        $tmp[] = $exp;
      }
      
      $arr = $tmp;
      $fmt .= ', expected ';
      
      if ($num > 1) {
        $fmt .= rtrim(str_repeat('%s, ', $num - 1), ', ');
        $fmt .= ' or ';
      }
                      
      $fmt .= '%s';
    }
    
    $var = $arr ?: [];
    array_unshift($var, $tok);
    Logger::vlog_at($loc, \phs\LOG_LEVEL_ERROR, $fmt, $var);       
  }
  
  /**
   * parse function
   * 
   * @param  mixed  $lex
   * @return Node
   */
  public function parse($lex) 
  {
    $tokid = self::TOKEN_NONE;
    
    // lexer
    if (!($lex instanceof Lexer)) {
      assert($lex instanceof Source);
      $lex = new Lexer($lex);  
    }
    
    $this->lex = $lex;
    
    $file = $this->lex->get_file();
    $this->cdir = dirname($file);
    $this->cfile = $file;
    
    
    // location
    $this->yyloc = $this->lex->loc();
    
    // stacks
    $this->yysstk = [ 0 ]; 
    $this->yyastk = [];
    
    // current state
    $yystate = 0;
    
    // error flag
    $yyerrflag = 0;

    // stack position
    $this->yysp = 0;
    
    // location stack
    $yylstk = [];
    
    // ignore semicolons at the beginning
    $this->eat_semis();
    
    for (;;) {
      if (self::$yybase[$yystate] == 0)
        $yyn = self::$yydefault[$yystate];
      else {
        if ($tokid === self::TOKEN_NONE) {
          // Fetch the next token id from the lexer
          $token = $this->lex->next();
                    
          // invalid token (regexp-scan failed)
          if ($token->type === T_INVL) {
            Logger::error_at($token->loc, 'invalid source/regexp-literal');
            return null;
          }
          
          // map the lexer token id to the internally used token id's
          if ($token->type >= 0 && $token->type < self::TOKEN_MAP_SIZE)
            $tokid = self::$translate[$token->type];
          else {
            Logger::error_at($token->loc, 'invalid token %d -> %s', $token->type, $token->value);
            return null;
          }        
          
          $this->yyloc = $token->loc;
          
          // store location
          $yylstk[$this->yysp] = $this->yyloc;
          
        } 

        if ((($yyn = self::$yybase[$yystate] + $tokid) >= 0
          && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid
          || ($yystate < self::YY2TBLSTATE
            && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + $tokid) >= 0
            && $yyn < self::YYLAST && self::$yycheck[$yyn] == $tokid))
          && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT
        ) {
          /*
           * >= YYNLSTATE: shift and reduce
           * > 0: shift
           * = 0: accept
           * < 0: reduce
           * = -YYUNEXPECTED: error
           */
          if ($yyn > 0) {
            /* shift */
            
            $this->yysp++;
            
            $this->yysstk[$this->yysp] = $yystate = $yyn;
            $this->yyastk[$this->yysp] = $token;
            
            // store location
            $yylstk[$this->yysp] = $this->yyloc;
            
            $tokid = self::TOKEN_NONE;
            
            if ($yyerrflag > 0)
              $yyerrflag--;
            
            if ($yyn < self::YYNLSTATES)
              continue;

            /* $yyn >= YYNLSTATES means shift-and-reduce */
            $yyn -= self::YYNLSTATES;
          } else
            $yyn = -$yyn;
        } else
          $yyn = self::$yydefault[$yystate];
      }
      
      for (;;) {
        /* reduce/error */
        if ($yyn == 0) {
          /* accept */
          return $this->yyval;
        } elseif ($yyn != self::YYUNEXPECTED) {
          /* reduce */

          $this->{'yyn' . $yyn}();
          
          /* Goto - shift nonterminal */
          $yylen = self::$yylen[$yyn];
          $yyloc = $yylstk[$this->yysp - $yylen];
          
          $this->yysp -= $yylen;
          
          $yyn = self::$yylhs[$yyn];
          
          if (($yyp = self::$yygbase[$yyn] + $this->yysstk[$this->yysp]) >= 0
            && $yyp < self::YYGLAST && self::$yygcheck[$yyp] == $yyn)
            $yystate = self::$yygoto[$yyp];
          else
            $yystate = self::$yygdefault[$yyn];
          
          $this->yysp++;
          
          $this->yysstk[$this->yysp] = $yystate;
          $this->yyastk[$this->yysp] = $this->yyval;
          
          // set location if a real node was produced by $yyn
          if ($this->yyval instanceof Node)
            $this->yyval->loc = $yyloc;
          
          // store position
          $yylstk[$this->yysp] = $this->yyloc;
          
        } else {
          /* error */
          $this->invalid = true;
                    
          switch ($yyerrflag) {
            case 0:              
              $expa = [];
              $expn = 0;
              $base = self::$yybase[$yystate];
              
              for ($i = 0; $i < self::TOKEN_MAP_SIZE; ++$i) {
                $n = $base + $i;
                if ($n >= 0 && $n < self::YYLAST && self::$yycheck[$n] == $i
                  || $yystate < self::YY2TBLSTATE
                  && ($n = self::$yybase[$yystate + self::YYNLSTATES] + $i)
                  && $n < self::YYLAST && ($n < 0 || self::$yycheck[$n] == $i)
                ) {
                  if ($n >= 0 && self::$yyaction[$n] != self::YYUNEXPECTED) {
                    if ($expn === 4) {
                      /* Too many expected tokens */
                      $expa = null;
                      $expn = 0;
                      break;
                    }

                    $expa[] = self::$terminals[$i];
                    $expn++;
                  }
                }
              }

              $this->report_error($this->yyloc, self::$terminals[$tokid], $expn, $expa);       
            case 1:
            case 2:
              $yyerrflag = 3;  
              
              while (!(($yyn = self::$yybase[$yystate] + self::YYINTERRTOK) >= 0
                && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK
                || ($yystate < self::YY2TBLSTATE
                  && ($yyn = self::$yybase[$yystate + self::YYNLSTATES] + self::YYINTERRTOK) >= 0
                  && $yyn < self::YYLAST && self::$yycheck[$yyn] == self::YYINTERRTOK))
              ) {  
                if ($this->yysp <= 0) 
                  return null;
                
                $yystate = $this->yysstk[--$this->yysp];              
              }
              
              $yyn = self::$yyaction[$yyn];
              $this->yysstk[++$this->yysp] = $yystate = $yyn;
              break;
            
            case 3:
              if ($tokid === 0) 
                return null;
              
              $tokid = -1;
              break;
          }
        }

        if ($yystate < self::YYNLSTATES)
          break;
        
        /* >= YYNLSTATES means shift-and-reduce */
        $yyn = $yystate - self::YYNLSTATES;
      }
    }
  }


  private function yyn0() 
  {
    $this->yyval = $this->yyastk[$this->yysp];
  }


  private function yyn1() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn2() 
  {
     
      $this->yyval = new ast\Unit($this->yyastk[$this->yysp-(1-1)]); 
      $this->eat_end(); 
    
  }


  private function yyn3() 
  {
     
      $this->yyval = new ast\Unit($this->yyastk[$this->yysp-(1-1)]); 
      $this->eat_end(); 
    
  }


  private function yyn4() 
  {
    
      $this->yyval = new ast\Unit(null);
      $this->eat_end();
    
  }


  private function yyn5() 
  {
     
      $this->yyval = new ast\Module($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
      $this->eat_semis();
    
  }


  private function yyn6() 
  {
     $this->yyval = new ast\Content($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn7() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn8() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn9() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn10() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn11() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn12() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn13() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn14() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn15() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn16() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn17() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn18() 
  {
     $this->yyval = null; 
  }


  private function yyn19() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn20() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn21() 
  {
     
      $this->yyval = new ast\UseDecl($this->yyastk[$this->yysp-(3-2)], false); 
      $this->eat_semis(); 
    
  }


  private function yyn22() 
  {
    
      $this->yyval = new ast\UseDecl($this->yyastk[$this->yysp-(4-3)], true);
      $this->eat_semis();
    
  }


  private function yyn23() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn24() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn25() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn26() 
  {
     $this->yyval = new ast\UseAlias($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn27() 
  {
     $this->yyval = new ast\UseUnpack($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn28() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn29() 
  {
     $this->yyval = new ast\LabelDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn30() 
  {
     
      $this->yyval = new ast\RequireDecl(false, $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn31() 
  {
     
      $this->yyval = new ast\RequireDecl(true, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn32() 
  {
    
      $this->yyval = new ast\Module($this->yyastk[$this->yysp-(4-2)], null);
      $this->eat_semis();
    
  }


  private function yyn33() 
  {
     
      $this->yyval = new ast\Module($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn34() 
  {
    
      $this->yyval = new ast\Module(null, null);
      $this->eat_semis();
    
  }


  private function yyn35() 
  {
     
      $this->yyval = new ast\Module(null, $this->yyastk[$this->yysp-(4-3)]); 
      $this->eat_semis(); 
    
  }


  private function yyn36() 
  {
     $this->yyval = null; 
  }


  private function yyn37() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn38() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn39() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn40() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn41() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn42() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn43() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn44() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn45() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn46() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn47() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn48() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn49() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn50() 
  {
     
      $this->yyval = new ast\EnumDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn51() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn52() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn53() 
  {
     $this->yyval = new ast\EnumVar($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn54() 
  {
     $this->yyval = new ast\EnumVar($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn55() 
  {
     
      $this->yyval = new ast\ClassDecl($this->yyastk[$this->yysp-(9-1)], $this->yyastk[$this->yysp-(9-3)], $this->yyastk[$this->yysp-(9-4)], $this->yyastk[$this->yysp-(9-5)], $this->yyastk[$this->yysp-(9-7)], $this->yyastk[$this->yysp-(9-8)]); 
      $this->eat_semis(); 
    
  }


  private function yyn56() 
  {
     
      $this->yyval = new ast\ClassDecl($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-5)], null, null, true); 
      $this->eat_semis(); 
    
  }


  private function yyn57() 
  {
     $this->yyval = null; 
  }


  private function yyn58() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn59() 
  {
     $this->yyval = null; 
  }


  private function yyn60() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn61() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn62() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn63() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn64() 
  {
     $this->yyval = null; 
  }


  private function yyn65() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn66() 
  {
     $this->yyval = null; 
  }


  private function yyn67() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn68() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn69() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn70() 
  {
     $this->yyval = null; 
  }


  private function yyn71() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn72() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn73() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn74() 
  {
     
      $this->yyval = new ast\TraitUse($this->yyastk[$this->yysp-(3-2)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn75() 
  {
     
      $this->yyval = new ast\TraitUse($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis();
    
  }


  private function yyn76() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn77() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn78() 
  {
     
      $this->yyval = new ast\TraitItem($this->yyastk[$this->yysp-(2-1)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn79() 
  {
    
      $this->yyval = new ast\TraitItem($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null);
      $this->eat_semis();
    
  }


  private function yyn80() 
  {
     
      $this->yyval = new ast\TraitItem($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)]); 
      $this->eat_semis(); 
    
  }


  private function yyn81() 
  {
     $this->yyval = []; 
  }


  private function yyn82() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn83() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn84() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn85() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn86() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn87() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn88() 
  {
     
      $this->yyval = new ast\CtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn89() 
  {
     $this->yyval = new ast\CtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn90() 
  {
     
      $this->yyval = new ast\DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn91() 
  {
     $this->yyval = new ast\DtorDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn92() 
  {
     $this->yyval = new ast\GetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn93() 
  {
     
      $this->yyval = new ast\GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn94() 
  {
     $this->yyval = new ast\SetterDecl($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn95() 
  {
     
      $this->yyval = new ast\GetterDecl($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)]); 
      $this->eat_semis(); 
    
  }


  private function yyn96() 
  {
     $this->yyval = new ast\NestedMods($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn97() 
  {
     
      $this->yyval = new ast\TraitDecl($this->yyastk[$this->yysp-(7-1)], $this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-6)]); 
      $this->eat_semis(); 
    
  }


  private function yyn98() 
  {
     
      $this->yyval = new ast\TraitDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null, null, true); 
      $this->eat_semis(); 
    
  }


  private function yyn99() 
  {
     
      $this->yyval = new ast\IfaceDecl($this->yyastk[$this->yysp-(7-1)], $this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-6)]); 
      $this->eat_semis(); 
    
  }


  private function yyn100() 
  {
     
      $this->yyval = new ast\IfaceDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], null, true); 
      $this->eat_semis(); 
    
  }


  private function yyn101() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn102() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn103() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn104() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn105() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], true); 
  }


  private function yyn106() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn107() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn108() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn109() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn110() 
  {
     $this->yyval = new ast\VarItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], true); 
  }


  private function yyn111() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn112() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn113() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn114() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn115() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn116() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn117() 
  {
     
      $this->yyval = new ast\VarDecl(null, $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn118() 
  {
     
      $this->yyval = new ast\VarDecl($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
      $this->eat_semis(); 
    
  }


  private function yyn119() 
  {
     $this->yyval = new ast\VarDecl(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn120() 
  {
     $this->yyval = new ast\VarDecl($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn121() 
  {
    
      $this->yyval = new ast\FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
    
  }


  private function yyn122() 
  {
     
      $this->yyval = new ast\FnDecl($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], null); 
      $this->eat_semis(); 
    
  }


  private function yyn123() 
  {
     
      $this->yyval = new ast\FnDecl($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], null, null); 
      $this->eat_semis(); 
    
  }


  private function yyn124() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; $this->yyval->solitary = false; 
  }


  private function yyn125() 
  {
     
      $this->yyval = $this->yyastk[$this->yysp-(3-2)];
      $this->eat_semis(); 
    
  }


  private function yyn126() 
  {
     $this->yyval = new ast\FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn127() 
  {
     $this->yyval = new ast\FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn128() 
  {
     $this->yyval = new ast\FnExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn129() 
  {
     $this->yyval = new ast\FnExpr(null, $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn130() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn131() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn132() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn133() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
  }


  private function yyn134() 
  {
     $this->yyval = null; 
  }


  private function yyn135() 
  {
     $this->yyval = null; 
  }


  private function yyn136() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn137() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn138() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn139() 
  {
     $this->yyval = new ast\Param(false, null, null, $this->yyastk[$this->yysp-(1-1)], null, false); 
  }


  private function yyn140() 
  {
     $this->yyval = new ast\Param(false, null, null, $this->yyastk[$this->yysp-(2-1)], null, true); 
  }


  private function yyn141() 
  {
     $this->yyval = new ast\Param(false, null, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn142() 
  {
     $this->yyval = new ast\Param(false, null, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn143() 
  {
     $this->yyval = new ast\Param(false, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn144() 
  {
     $this->yyval = new ast\Param(false, null, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn145() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(2-1)], null, $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn146() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(3-1)], null, $this->yyastk[$this->yysp-(3-2)], null, true); 
  }


  private function yyn147() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], false); 
  }


  private function yyn148() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn149() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], null, true); 
  }


  private function yyn150() 
  {
     $this->yyval = new ast\Param(false, $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], false); 
  }


  private function yyn151() 
  {
     $this->yyval = new ast\ThisParam($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], null, false); 
  }


  private function yyn152() 
  {
     $this->yyval = new ast\ThisParam($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-4)], $this->yyastk[$this->yysp-(6-5)], false); 
  }


  private function yyn153() 
  {
     $this->yyval = new ast\RestParam($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], false); 
  }


  private function yyn154() 
  {
     $this->yyval = new ast\RestParam($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], true); 
  }


  private function yyn155() 
  {
     $this->yyval = new ast\RestParam(null, $this->yyastk[$this->yysp-(3-3)], true); 
  }


  private function yyn156() 
  {
     $this->yyval = new ast\Param(true, null, null, $this->yyastk[$this->yysp-(2-2)], null, false); 
  }


  private function yyn157() 
  {
     $this->yyval = new ast\Param(true, null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn158() 
  {
     $this->yyval = new ast\Param(true, $this->yyastk[$this->yysp-(3-1)], null, $this->yyastk[$this->yysp-(3-3)], null, false); 
  }


  private function yyn159() 
  {
     $this->yyval = new ast\Param(true, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)], null, false); 
  }


  private function yyn160() 
  {
     $this->yyval = new ast\ThisParam(null, $this->yyastk[$this->yysp-(4-4)], null, true); 
  }


  private function yyn161() 
  {
     $this->yyval = new ast\ThisParam($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-5)], null, true); 
  }


  private function yyn162() 
  {
     $this->yyval = null; 
  }


  private function yyn163() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn164() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn165() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn166() 
  {
     $this->yyval = new ast\DoStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn167() 
  {
     $this->yyval = new ast\IfStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn168() 
  {
     $this->yyval = new ast\ForInStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn169() 
  {
     $this->yyval = new ast\ForStmt($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-4)], null, $this->yyastk[$this->yysp-(6-6)]); 
  }


  private function yyn170() 
  {
     $this->yyval = new ast\ForStmt($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn171() 
  {
     $this->yyval = null; 
  }


  private function yyn172() 
  {
     $this->yyval = new ast\ForStmt(null, null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn173() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(2-2)], null, null); 
  }


  private function yyn174() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], null); 
  }


  private function yyn175() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(3-2)], null, $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn176() 
  {
     $this->yyval = new ast\TryStmt($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-3)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn177() 
  {
     $this->yyval = new ast\PhpStmt($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn178() 
  {
     $this->yyval = new ast\GotoStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn179() 
  {
     $this->yyval = new ast\TestStmt(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn180() 
  {
     $this->yyval = new ast\TestStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn181() 
  {
     $this->yyval = new ast\BreakStmt(null); 
  }


  private function yyn182() 
  {
     $this->yyval = new ast\BreakStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn183() 
  {
     $this->yyval = new ast\ContinueStmt(null); 
  }


  private function yyn184() 
  {
     $this->yyval = new ast\ContinueStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn185() 
  {
     $this->yyval = new ast\PrintStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn186() 
  {
     $this->yyval = new ast\ThrowStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn187() 
  {
     $this->yyval = new ast\WhileStmt($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn188() 
  {
     $this->yyval = new ast\AssertStmt($this->yyastk[$this->yysp-(3-2)], null); 
  }


  private function yyn189() 
  {
     $this->yyval = new ast\AssertStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn190() 
  {
     $this->yyval = new ast\SwitchStmt($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)]); 
  }


  private function yyn191() 
  {
     $this->yyval = new ast\ReturnStmt($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn192() 
  {
     $this->yyval = new ast\ReturnStmt(null); 
  }


  private function yyn193() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn194() 
  {
     $this->yyval = null; 
  }


  private function yyn195() 
  {
     $this->yyval = new ast\ForInPair(null, $this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn196() 
  {
     $this->yyval = new ast\ForInPair($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn197() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn198() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn199() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn200() 
  {
     $this->yyval = null; 
  }


  private function yyn201() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn202() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn203() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn204() 
  {
     $this->yyval = new ast\ElsifItem($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn205() 
  {
     $this->yyval = null; 
  }


  private function yyn206() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn207() 
  {
     $this->yyval = new ast\ElseItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn208() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn209() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn210() 
  {
     $this->yyval = new ast\CatchItem(null, null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn211() 
  {
     $this->yyval = new ast\CatchItem($this->yyastk[$this->yysp-(5-3)], null, $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn212() 
  {
     $this->yyval = new ast\CatchItem($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-7)]); 
  }


  private function yyn213() 
  {
     $this->yyval = null; 
  }


  private function yyn214() 
  {
     $this->yyval = new ast\FinallyItem($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn215() 
  {
     $this->yyval = null; 
  }


  private function yyn216() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn217() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn218() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn219() 
  {
     $this->yyval = new ast\PhpUse($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn220() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn221() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn222() 
  {
     $this->yyval = new ast\PhpUseItem($this->yyastk[$this->yysp-(1-1)], null); 
  }


  private function yyn223() 
  {
     $this->yyval = new ast\PhpUseItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn224() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn225() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn226() 
  {
     $this->yyval = new ast\CaseItem($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn227() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn228() 
  {
     $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn229() 
  {
     $this->yyval = new ast\CaseLabel($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn230() 
  {
     $this->yyval = new ast\CaseLabel(null); 
  }


  private function yyn231() 
  {
     $this->yyval = new ast\Block(null); 
  }


  private function yyn232() 
  {
     $this->yyval = new ast\Block($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn233() 
  {
     $this->yyval = null; 
  }


  private function yyn234() 
  {
     
      $this->yyval = new ast\ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
      $this->eat_semis(); 
    
  }


  private function yyn235() 
  {
     
      $this->yyval = new ast\ExprStmt(null); 
      $this->eat_semis(); 
    
  }


  private function yyn236() 
  {
     $this->yyval = new ast\ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn237() 
  {
     $this->yyval = new ast\ExprStmt(null); 
  }


  private function yyn238() 
  {
     $this->yyval = new ast\ExprStmt($this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn239() 
  {
     $this->yyval = new ast\ExprStmt(null); 
  }


  private function yyn240() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn241() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn242() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn243() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn244() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn245() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn246() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn247() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn248() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn249() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn250() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn251() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn252() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn253() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn254() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn255() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn256() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn257() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn258() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn259() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn260() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn261() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn262() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn263() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn264() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn265() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn266() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn267() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn268() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn269() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn270() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn271() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn272() 
  {
     $this->yyval = new ast\CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn273() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn274() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn275() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn276() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn277() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn278() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn279() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn280() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn281() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn282() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn283() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn284() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn285() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn286() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn287() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn288() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn289() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn290() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn291() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn292() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn293() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)], true); 
  }


  private function yyn294() 
  {
     $this->yyval = new ast\OffsetExpr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn295() 
  {
     $this->yyval = null; 
  }


  private function yyn296() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn297() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn298() 
  {
     $this->yyval = new ast\CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn299() 
  {
     $this->yyval = new ast\YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn300() 
  {
     $this->yyval = new ast\YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn301() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn302() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn303() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn304() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn305() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn306() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn307() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn308() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn309() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn310() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn311() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn312() 
  {
     $this->yyval = new ast\DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn313() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn314() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn315() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn316() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn317() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn318() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn319() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn320() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn321() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn322() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn323() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn324() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn325() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn326() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn327() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn328() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn329() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn330() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn331() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn332() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn333() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn334() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn335() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn336() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn337() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn338() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn339() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn340() 
  {
     $this->yyval = new ast\CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn341() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn342() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn343() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn344() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn345() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn346() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn347() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn348() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn349() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn350() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn351() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn352() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn353() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn354() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn355() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn356() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn357() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn358() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn359() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn360() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn361() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)], true); 
  }


  private function yyn362() 
  {
     $this->yyval = new ast\OffsetExpr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn363() 
  {
     $this->yyval = null; 
  }


  private function yyn364() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn365() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn366() 
  {
     $this->yyval = new ast\CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn367() 
  {
     $this->yyval = new ast\YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn368() 
  {
     $this->yyval = new ast\YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn369() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn370() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn371() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn372() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn373() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn374() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn375() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn376() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn377() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn378() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn379() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn380() 
  {
     $this->yyval = new ast\DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn381() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn382() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn383() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn384() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn385() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn386() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn387() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn388() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn389() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn390() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn391() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn392() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn393() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn394() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn395() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn396() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn397() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn398() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn399() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn400() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn401() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn402() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn403() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn404() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn405() 
  {
     $this->yyval = new ast\BinExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn406() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn407() 
  {
     $this->yyval = new ast\CheckExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn408() 
  {
     $this->yyval = new ast\CastExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn409() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn410() 
  {
     $this->yyval = new ast\UpdateExpr(false, $this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn411() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn412() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn413() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn414() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn415() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn416() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn417() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn418() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn419() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn420() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn421() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn422() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn423() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn424() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn425() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn426() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn427() 
  {
     $this->yyval = new ast\AssignExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn428() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn429() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)], true); 
  }


  private function yyn430() 
  {
     $this->yyval = new ast\OffsetExpr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn431() 
  {
     $this->yyval = null; 
  }


  private function yyn432() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)]); 
  }


  private function yyn433() 
  {
     $this->yyval = new ast\CondExpr($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn434() 
  {
     $this->yyval = new ast\CallExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn435() 
  {
     $this->yyval = new ast\YieldExpr(null, $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn436() 
  {
     $this->yyval = new ast\YieldExpr($this->yyastk[$this->yysp-(4-2)], $this->yyastk[$this->yysp-(4-4)]); 
  }


  private function yyn437() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn438() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn439() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn440() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn441() 
  {
     $this->yyval = new ast\UnaryExpr($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn442() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn443() 
  {
     $this->yyval = new ast\UpdateExpr(true, $this->yyastk[$this->yysp-(2-2)], $this->yyastk[$this->yysp-(2-1)]); 
  }


  private function yyn444() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn445() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn446() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(2-2)], null); 
  }


  private function yyn447() 
  {
     $this->yyval = new ast\NewExpr($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn448() 
  {
     $this->yyval = new ast\DelExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn449() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn450() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn451() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn452() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn453() 
  {
     $this->yyval = new ast\MemberExpr($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-4)], true); 
  }


  private function yyn454() 
  {
     $this->yyval = new ast\OffsetExpr($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
  }


  private function yyn455() 
  {
     $this->yyval = null; 
  }


  private function yyn456() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn457() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn458() 
  {
     $this->yyval = null; 
  }


  private function yyn459() 
  {
     $this->yyval = null; 
  }


  private function yyn460() 
  {
     $this->yyval = null; 
  }


  private function yyn461() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
  }


  private function yyn462() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn463() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn464() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn465() 
  {
     $this->yyval = new ast\NamedArg($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn466() 
  {
     $this->yyval = new ast\RestArg($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn467() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn468() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn469() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn470() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn471() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn472() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn473() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn474() 
  {
     
      if ($this->yyastk[$this->yysp-(4-2)] === null || (count($this->yyastk[$this->yysp-(4-2)]) === 1 && $this->yyastk[$this->yysp-(4-3)] === null))
        $this->yyval = new ast\ParenExpr($this->yyastk[$this->yysp-(4-2)][0]);
      else
        $this->yyval = new ast\TupleExpr($this->yyastk[$this->yysp-(4-2)]);
    
  }


  private function yyn475() 
  {
     $this->yyval = new ast\TupleExpr(null); 
  }


  private function yyn476() 
  {
     $this->yyval = null; 
  }


  private function yyn477() 
  {
     $this->lex->scan_regexp($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn478() 
  {
     $this->yyval = new ast\RegexpLit($this->yyastk[$this->yysp-(3-3)]->value); 
  }


  private function yyn479() 
  {
     $this->yyval = new ast\Name($this->yyastk[$this->yysp-(1-1)], false, false); 
  }


  private function yyn480() 
  {
     $this->yyval = new ast\Name($this->yyastk[$this->yysp-(3-3)], false, true); 
  }


  private function yyn481() 
  {
     $this->yyval = new ast\Name($this->yyastk[$this->yysp-(2-2)], true, false); 
  }


  private function yyn482() 
  {
     $this->yyastk[$this->yysp-(3-1)]->add($this->yyastk[$this->yysp-(3-3)]); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn483() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn484() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn485() 
  {
     $this->yyval = new ast\TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn486() 
  {
     $this->yyval = new ast\TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn487() 
  {
     $this->yyval = new ast\TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn488() 
  {
     $this->yyval = new ast\TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn489() 
  {
     $this->yyval = new ast\TypeId($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn490() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn491() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn492() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn493() 
  {
     $this->yyval = new ast\ThisExpr; 
  }


  private function yyn494() 
  {
     $this->yyval = new ast\SuperExpr; 
  }


  private function yyn495() 
  {
     $this->yyval = new ast\SelfExpr; 
  }


  private function yyn496() 
  {
     $this->yyval = new ast\NullLit; 
  }


  private function yyn497() 
  {
     $this->yyval = new ast\TrueLit; 
  }


  private function yyn498() 
  {
     $this->yyval = new ast\FalseLit; 
  }


  private function yyn499() 
  {
     $this->yyval = new ast\KStrLit($this->cdir); 
  }


  private function yyn500() 
  {
     $this->yyval = new ast\KStrLit($this->cfile); 
  }


  private function yyn501() 
  {
     $this->yyval = new ast\LNumLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->line); 
  }


  private function yyn502() 
  {
     $this->yyval = new ast\LNumLit($this->yyastk[$this->yysp-(1-1)]->loc->pos->coln); 
  }


  private function yyn503() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn504() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn505() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn506() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn507() 
  {
     $this->yyval = new ast\EngineConst($this->yyastk[$this->yysp-(1-1)]->type); 
  }


  private function yyn508() 
  {
     $this->yyval = new ast\StrLit($this->yyastk[$this->yysp-(1-1)]); 
  }


  private function yyn509() 
  {
     $this->yyastk[$this->yysp-(5-1)]->add($this->yyastk[$this->yysp-(5-4)]); $this->yyval = $this->yyastk[$this->yysp-(5-1)]; 
  }


  private function yyn510() 
  {
     $this->yyastk[$this->yysp-(3-1)]->add(new ast\StrLit($this->yyastk[$this->yysp-(3-3)])); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn511() 
  {
     $this->yyval = new ast\LNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn512() 
  {
     $this->yyval = new ast\DNumLit($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn513() 
  {
     $this->yyval = new ast\SNumLit($this->yyastk[$this->yysp-(1-1)]->value, $this->yyastk[$this->yysp-(1-1)]->suffix); 
  }


  private function yyn514() 
  {
     $this->yyval = new ast\ArrLit(null); 
  }


  private function yyn515() 
  {
     $this->yyval = new ast\ArrGen($this->yyastk[$this->yysp-(9-2)], $this->yyastk[$this->yysp-(9-5)], $this->yyastk[$this->yysp-(9-7)]); 
  }


  private function yyn516() 
  {
     $this->yyval = new ast\ArrLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn517() 
  {
     $this->yyval = null; 
  }


  private function yyn518() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn519() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn520() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn521() 
  {
     $this->yyval = new ast\SpreadExpr($this->yyastk[$this->yysp-(2-2)]); 
  }


  private function yyn522() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn523() 
  {
     $this->yyval = new ast\ObjLit(null); 
  }


  private function yyn524() 
  {
     $this->yyval = new ast\ObjLit($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn525() 
  {
     $this->yyval = null; 
  }


  private function yyn526() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
  }


  private function yyn527() 
  {
     $this->yyval = [ $this->yyastk[$this->yysp-(1-1)] ]; 
  }


  private function yyn528() 
  {
     $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
  }


  private function yyn529() 
  {
     $this->yyval = new ast\ObjPair($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
  }


  private function yyn530() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn531() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn532() 
  {
     $this->yyval = new ast\ObjKey($this->yyastk[$this->yysp-(3-2)]); 
  }


  private function yyn533() 
  {
     $this->yyval = null; 
  }


  private function yyn534() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn535() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn536() 
  {
     $this->yyval = new ast\Ident($this->yyastk[$this->yysp-(1-1)]->value); 
  }


  private function yyn537() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn538() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn539() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn540() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn541() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn542() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn543() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn544() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn545() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn546() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn547() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn548() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn549() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn550() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn551() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn552() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn553() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn554() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn555() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn556() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn557() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn558() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn559() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn560() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn561() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn562() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn563() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn564() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn565() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn566() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn567() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn568() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn569() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn570() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn571() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn572() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn573() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn574() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn575() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn576() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn577() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn578() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn579() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn580() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn581() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn582() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn583() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn584() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn585() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn586() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn587() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn588() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn589() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn590() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn591() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn592() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn593() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn594() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn595() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn596() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn597() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn598() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn599() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn600() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn601() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }


  private function yyn602() 
  {
     $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
  }

}

